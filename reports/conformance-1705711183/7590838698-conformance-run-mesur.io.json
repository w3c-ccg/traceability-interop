{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "767f4c67-e40b-4403-a08b-bbae6f85685d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bdf6b6eb-6e6f-40fb-a8c7-7582ff232a8b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba8e11d6-6666-4beb-b473-9be828eaeea6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85d49819-796b-4d48-9244-572889ad0a33"
                }
              }
            ]
          },
          {
            "id": "4b9c18e5-4872-4f1c-8cb9-ea0570010a4a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edd87878-0742-456d-8394-54c2ebed88fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af83ca68-8636-4159-b42a-05a81239088d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "23668085-f810-4aa8-9552-6f8efe995768",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ecfa4e6b-18c6-450b-9034-f997b4993e70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5eb70083-ee5c-4637-9dc0-150211195c40",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc694b67-87de-42c8-a7f1-34d3ce68e10f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddb776e8-f80b-4cce-a119-84d22a924fa4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7be2486-11f6-41be-b7a1-871ea4f3962b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73281247-636a-46f1-9776-24c4234eae8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "073e3528-cc22-470e-970d-768fcac5154d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f1a7266-9056-4ae1-bd46-c15d552d8157"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27629457-1884-453e-b25e-8bc7792cbcf4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "be18444d-5171-40b7-8c4d-4456ad8a9a83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c817dde-2e0a-473e-b01d-37a299244958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac2d5b70-6378-47be-ad25-83a739afc977"
            }
          }
        ]
      },
      {
        "id": "919e6b34-9585-4d06-8086-85fffffa87af",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd254c7f-19bf-433d-8959-8c76a5b04910",
            "name": "Negative Testing",
            "item": [
              {
                "id": "487af24e-4edf-4468-ba6b-06efa7bdadf2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4e3c610-e711-4972-a43d-06a3013895f8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa34adb6-ba99-4724-a451-b17552359cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f88107-2317-4d2c-9224-efe85148ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c904b7c-b791-4abc-9295-67f053a90620",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a43aa15-b418-47ff-ae00-0b1c13538cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fb1e816-257c-47b8-b11a-d6c212af818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b3978-298a-45e0-9ec1-7dead5b7376d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedce49d-3334-4dc6-a36b-309fed2c539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35a34df4-da7b-485d-a734-c2e292a21122"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d1f1967-2a90-4a66-9b95-fc7425b3a99f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "502582d0-0436-45fb-a702-f79a7d2d05b0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b035d44-4888-4c2d-beef-e3435a6d2cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4998fe53-d705-485c-98eb-aef4ecf06e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa0fce3-137a-4406-a3de-0d12467b44a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d734ba3-7acb-4be5-992b-c1c6faf5493f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9234537-161d-482a-a989-f6a29861a998",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed1e1226-7b62-4b9b-9b44-6875147ef95c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36212e7-716c-49fb-99fb-2851e07e6323",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b44f573-bc18-4226-b89b-c1f3b52fc7ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51318170-d57a-4898-97b0-c629459ec21a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69797a9b-a762-4a8f-b3a7-e6a98a80a5c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98bee6bd-bfb0-4b86-8296-4e4e0343c30c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92c783f5-dd67-4b08-bafd-3e4dbbad989c"
            }
          }
        ]
      },
      {
        "id": "bbc317a7-9a20-45df-a438-5a2b24a78272",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "336b41b6-0aa4-4497-aa18-55bed4db3c88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "594f9704-ddcf-451e-bf2d-840474ef9bf0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f94db8ab-6ad4-455f-bd43-d69e9de4cc47",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759806e0-ec9e-4d53-a325-f84ab57e3e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7446f3d8-59b0-4a3f-b03d-c4c4617c5bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4881b8-6bc1-469d-bc7a-b4584a492b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e696b3-2e5a-4999-a15a-3073155fa337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3bf498-3bc3-4029-b11d-c83d2f762e94",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76102ddb-76e7-4376-ab07-68d84874e175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bccf63-9eda-48e7-9f23-2445222ff785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca3952-1839-466b-9384-e6e5ffafa367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cae05f71-96e8-437d-9631-3037b46f8ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537a43b8-60e7-471b-b58c-a62652a97492",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698041f3-93e1-42c2-b446-3ff99c252d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac4cf4d-a61c-4ee8-8014-fafa4b75e823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446850a-21c3-4543-b12b-0d0cff1e7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da79083-29cd-44df-9042-af63fd24ce6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5e8b66-0144-42d8-9e1b-24eda177e8ae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c828bee-cfab-44a7-8ace-73fd3a3568fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c82dba7-bc1f-43c6-a844-7c00a912f7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31acf456-8758-454f-aca5-c532da1b9419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "333d9168-589c-43fc-92bf-9d1bccd5d63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe7c450-eaa2-4cb4-a71b-d75acb5b329e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343c1b71-e3cc-463d-868f-84c7ae85db29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608deec1-1659-4543-a67e-a5b682bbdcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36dfd3-04a0-4b81-960b-5e3b0029bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db00d7f9-d900-421a-a1e9-5433dddc1003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793df242-bf69-464a-93bf-c37494c00b09",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b16e49a-a931-4593-972f-81b2a557cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a87b91c-57d5-468e-bd6f-1328e94ff7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e993ee66-2835-4d64-83be-5d1038c65701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9d8bcc-e3d7-4f5d-8f5f-e2e7a1589d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c876b0-3cde-4469-9475-a93a6decaa26",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ddc8bd-6398-4f6e-8d4c-dfb15cba7ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1c1770-6485-478e-966b-39ea4cbc24d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59861345-6c51-4785-a929-701d55ab17bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05ca06e6-dc02-4d05-adf6-b70e761b243a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145be323-fc07-4021-ac0a-35eb4811fa4c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2212d195-f9a4-45df-b7d6-cafa3c8c5885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7c3e7-6a24-4a7f-8eea-f1acea1f932e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba24d536-b51a-442a-af8d-ed38a98c1500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0df216-4ab7-4b03-bf9d-65ec559bfa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ed3302-49e8-4840-b1aa-b2062faa0af9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c080cbb-c37e-4071-aae7-595091e8345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240962fc-b690-430a-b271-9637c2c66173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7aba4e-04ad-4fa4-8a03-74fe1a33f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c08d6dfc-ff55-45e6-a987-4660d6322790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582f0df2-8ea3-4872-959b-57d4c14639ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433d4f90-a3df-4003-8795-e4f18fba87f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff4edb8-bfdb-486b-b8e3-e3cc0db6ec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e43601-1071-446f-a962-4897b50eb7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41963361-36b8-4866-a301-678b9f01857b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44444cc5-98d9-4669-be38-2021cd9c7295",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c78a6-a301-4f71-85c5-5d5f3db04969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da22621-30cf-483b-8580-906e886bc07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ced080-0a08-47df-9ef5-48fc4afe6562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7146768f-8d5c-43c8-933d-26fb2a356b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e8a82d-b833-47ea-b98f-b4a1b7a18166",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bc97b6-e3f4-438d-a63c-d51800886af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3559d8-08d9-48a1-ad18-3809bde96d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5cb4d4-82dc-4e70-920e-443e06af03f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec97f11-f2f8-4ed5-99fb-b21bfda1de6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0258893a-b408-420c-b61d-350a02d8cf19",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc055082-5441-46c9-83cd-4a2a5c934a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840e25f7-6eac-4071-98ab-0e7cd92ab872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df6171e-0649-4f15-883a-532cc8a6511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4125bef7-10aa-4b88-b970-6427db7ab0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9722d255-43de-4a1e-afd2-ee296c9bcad3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5244b0a-98fb-4054-a1e9-8e6b2e35dce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d73d1ab-f911-4ff1-94e0-ba21cbe32bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ac2da-521f-410f-9fc3-3424a29f1058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c14915a-3c39-4e84-b587-e0ec212fbe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a043c717-9cc4-4da5-9920-957801e4b333",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eb4bf7-b9b0-4d48-b7c2-d893f77208d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d262344e-4a14-4cde-b5df-4493c92f2b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7c10bc-4d3c-4eec-b5bd-6c30cebb2442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3af5256-5e5f-45f4-99e4-3e9bf0f04334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db729e0f-659f-4670-9c98-17120c633302",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc63a256-8d3c-4fd6-b732-5318ee75feda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffa01e0-a837-4473-a8c4-93fd543faab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17255f7-979d-424f-9d89-eb1018d3b0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2743ffb7-5e35-432b-a7ec-e6ce1f0bb974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee708397-b865-4b9f-88a7-edec68f70db3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925870a0-acba-4586-9677-ca4ead6c947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59223125-4bc5-4500-adbf-2187bd93c693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05963035-17f7-470e-a0bf-a10e93c126b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7fd1d3-ae47-4b1b-9acf-557a159cfa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f46bb-6e96-4d14-84bc-11e8c7f15bcf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d703a76-2c78-4375-b35d-13bf908b44fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79845983-80a5-46b6-a463-2154f6e07e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c2751a-9829-4a59-8469-5c3cf3546ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a5ce6c-768c-4657-8194-310efb34ce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945551f9-bb63-49f1-9e47-e6679974b492",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfb2991-29e7-479e-99a8-841620f3c7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2497556-2b81-4e0c-8d9d-535c4cdb972d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3009872e-3b2c-4ff6-80aa-812a513f09a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "512f02b6-a63e-4ec0-82e4-fa2264d83ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e841121-da89-42de-8ba0-5bb65c94518d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fce7f98-cbfa-4d24-a710-ea06e2b13162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8867fb8-29f5-4d08-98ce-dcdd353d8247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f25b3e-62a3-43ea-8d61-0c102ce9099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bff376c-475d-42df-b714-7ff50c1ed1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab6584c-9ff7-45a1-b3b4-6bbdf600b42d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9996d-cf79-43cf-9f87-949592159302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946e955b-ea72-4a47-8800-3ae899c649a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb78e9f3-4365-40de-934f-c64a8a0034eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "667b7180-69d5-46d2-addf-c15b21ccb4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6faf136-a76d-441a-8f8a-0598c68fcba0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95eecb7-1131-4862-ae4a-433c0614ded9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3e1958-a7f9-4f31-9c0b-8456962fc213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3662124-90eb-4de2-aaaf-4851f19ab77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb61c079-ae8b-455c-8dd9-c9976a994d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a4b2a-a9ea-4dde-a59e-74fa9ac569bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34cd747-734f-48a0-b24d-8191c98adba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee9ebd1-98bb-4782-90e3-2b90e83d634d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a91afa0-f374-4a8e-b4ab-337149e4481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e014f2f-21cb-4233-8820-7d1fb3473bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b53251b-2a0a-4990-95cc-528068247f28",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546223e8-c0cb-4741-ac69-05f4e9abc881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755068a3-1de1-4451-8553-3c5527a08154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4e120-a3f5-408f-9ed5-5c7ebc0b7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a87cf5-ea67-40b3-bc0a-2d6af1d1a3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6017a5-89de-4e0c-b7be-6aba036c537d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb532a4a-fdf8-45a9-917d-ceb3eebe4bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a4cfac-2f84-4f7f-a592-ff32ce6e44d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e94f0b-10fb-4b85-bdaf-68a010d2ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d5dba1-68ce-4a3d-bfb2-85dea863c332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02d0ab-8585-4e4b-9971-ff75b0ba1c6a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83f5295-5300-4c02-83e6-5a12d1859ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c46f25-3f3a-48e0-b4e6-4b51976879de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3b02a7-dbb9-4032-ba97-22ee4d5322c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b21b2c1-de1d-44eb-a140-feceb6dab4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7d0787-1185-4549-856c-1da7d4bd721f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99a1813-68a4-4157-b6a9-5758e175b787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558f72f1-64e0-4bf0-b294-b49ef8bc5885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcc577e-51de-47c6-9d17-59162a5cee5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00082db4-cf26-4f3e-8dd7-d7ce42ab4eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6571c96e-8074-41d0-9dd2-eb12c7ded6bf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb737b3-095d-41d4-85bf-7e622cab600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29edc57e-17d2-4aff-99fe-e1fd997ab732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37db41d-0f0d-44a4-ad83-c5bea95999ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f975ab44-4dde-4ba7-a9a1-41bbd8a6ded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b558b2-6f75-4ecb-ad73-c0e7f5edabee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38c3830-0c86-43cc-a1af-71a41c6157af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30e4cbd-c94d-4483-9e8b-7396e2051f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f8a969-902d-493f-b09d-938ab7b8323a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2be938-2a0e-4e7b-b164-56bfe6ed6be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520d306a-b828-4d54-acf7-f6a65cb756bb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be51100a-635a-452c-a75b-12b1698469fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189eef86-4e18-494b-8128-74e531d20ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee70c19-49b2-42a8-a6f3-f81b5b907e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e762f31b-cafd-4ae3-96fe-7a2e48f15af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce86b696-4b4a-4e18-8506-9852e3fbb9a0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d15097-652c-4313-863f-b7f64da241ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d581d247-6c83-43a9-a6d8-f795f54b78e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9612571-eaea-4032-a630-1872017d8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2d6d21-b1c2-4f68-864b-6160093be8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2a806-af0f-4f43-bd81-6ae0c55ddff4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aedd8c-c005-4af9-8f71-716761253df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f06f57f-71d4-4880-87a2-d91707b7babb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538097d9-0ae9-4581-b87c-7e01281041be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03ca8b3-e3b1-4632-8a13-0caee755db7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbd450d-d70f-472d-a9f0-821ead929f48",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb3872-6809-41ec-a7b8-c5559e988b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d92405-15fb-46e8-9e85-e6d2fa4076bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca95014-773d-4967-84e6-a2eea4ffce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82380549-f399-45e5-93b3-077912a066be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f21150-6385-4346-9cc0-f6ee95f8a36f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0df05ec-26f1-4c53-8217-36aee0c51acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57916d4e-d963-4b62-86a7-8fe378e3f044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2c3eff-4021-476a-bf45-e345d5f46566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e86d3174-e720-4918-8c62-3f827e9f80dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6397f3-154a-4f28-b6c3-21004d8fc440",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddb5f76-0365-492f-a785-6aa90cb55706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d655353-aca5-469d-988b-828d35358cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899ea3df-872a-40d9-88d4-fbae0782e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "15ad4706-9b51-489e-aead-8d25ab8b80b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c954e67-484a-41b5-ad04-0b905e4a3fb5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73622333-e7d8-42bc-8963-0a54083091fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "834e6e71-d810-42f8-9bdc-570ffcb945bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97087da-26b7-4524-9645-78855c11e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de12027f-2b18-4b75-9f83-c62c80a2cb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a50def0-daa0-48f3-bcba-2aea09f1fe64",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c747bfd-4c3f-454e-9eda-c22e7af6ee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241d1660-bda6-4cf6-b0c3-892296ad2449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f00041-eb68-4a8d-a7bd-afa46c583cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c387ed59-5d70-4721-abb8-4275e7d04df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574a1261-cb09-41e3-9fd4-1e026a68ba2e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8181e951-02a2-4088-b1a2-17bc9ad3f67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd836f40-013c-4de5-a399-a5e896cadff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d6e71-e74e-4946-a991-16d9f76fac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2af19f9-49f2-4196-8262-305236806d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6944eb-06de-4edb-a094-7d6b2c81c095",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90a56f8-c02e-43e7-8288-2a6640623e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc0e8d6-911b-4ac4-ad6f-b209b6d2b5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9f268c-3393-489a-af02-4715c463b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "173cdbf4-db85-4627-a72f-a4250acea8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b22fc0-cc41-4fae-bcaa-5639090962a1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd033c43-49f8-4d9f-aa90-ee44f3f470de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bceb32a-a765-49ad-b2d4-cf2af6197107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23529006-b168-46b0-aed6-8cb321ea61fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "653226bc-1721-41f4-bf06-00def50a833e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ea1c3a-a8c1-478e-b31a-238dbed6b53a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85288b0-bf2f-46b0-8ddb-ff16b2ef8364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962e1bc6-9af5-48ac-9f85-7b560372409d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3d4b1c-5f9b-43ac-b87a-a128d2cdbe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b13ce8a-e53c-48a3-bc3d-b1792bed3fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cf03ba-7f6e-4960-93f5-c7663b4597d2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4deeb95b-9078-47ce-b518-ed0f94b31a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e7470-4fc3-4e29-ba9d-8771ecc2dfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a891913-32e1-4aa6-a6ef-34a9abc86d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b90198c1-cc3d-4c58-91a8-6495d16f931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d8f0f3-5757-4da7-aafd-e446f402bec8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423122b8-cc26-48f7-b13b-560f05e5333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de187d1-dd45-4c64-8d72-3a942934f20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34784a8-3c8e-40dc-a0ee-7883d4250c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf082f9-7ca7-42e9-b1df-3c924a107885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecbd5cc-6dc0-4976-88a4-33984d5cfc54",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312bc0c8-c926-4b94-b806-71af3fe4c219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bc1df0-f00a-47c6-8dc6-96552c3dc7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d28f27-8eac-4589-b90e-12225d1a8a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4f339-0fb0-493c-bebb-f85684c828fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaa4367-34ae-4eff-a0bb-7a056767bdc0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc324e5f-d78b-44d6-bfed-ae4241f7358b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dd5fc6-24e6-4b95-a2a2-3a397f831c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecacc976-50d7-437b-8b98-3b0b5c2889ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6a4480-3c65-4df5-a81f-248adcc35b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a6d07e-00c9-44b3-b5ad-90a3b6117118",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a6b4ad-1c94-4ba1-8a48-6d0a5174209b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7603de48-4484-4d2e-bd3c-d7e088d68492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c9500-8758-432f-be2d-818d0015b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7702abf3-cbd0-4c28-aaf4-e5dc5a17faec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84319114-65f2-40c8-9fc6-4ccec7fb7800",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66861468-da83-449e-9fb6-915aa492af84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70469e93-9b22-4641-af39-1b602c73114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bccbe5-671e-4c36-bab2-1a4803320c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "724041cc-2c9b-4b78-bd77-ced8ae5600cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cfb1dd-8458-4551-bde5-2bb238326772",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce29d2b-8f00-40c0-b83a-391c43493433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ab258-69b3-4db4-a4e7-acf72b6dd2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34af5fc2-4024-4f11-a0eb-8b290d3c4a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4527934e-1de3-443f-8ec2-6897efa8cd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0276299f-0990-4cbc-ab88-c094667edb9a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c83038-0239-434a-98d3-62092c93da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346b01df-a2a0-4585-98b5-9dfc3a4badfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43452a22-c974-4103-81e4-4d9b5c524d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4136b38f-c10f-4aa1-9105-155a7cdd8668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab3ef1b-a654-4be0-b995-68cb99b4880b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd0f645-20f7-477a-9347-351025d002da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e706210f-e133-4fdb-8daa-9f3ac72f82bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3989ba7-2575-4b74-a82f-62bdc5bfc224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddce9204-6433-46c0-be92-c793f1932d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efd2003-0faa-457a-9d6a-828895bc877d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c151e681-dd8a-4f10-a805-d1114c843e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077f8a28-d24a-46a3-b45a-b3b5d8fb18d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4a9038-8dfc-42b7-ac5c-ed28542ec4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea221de3-a199-4df0-890d-3a5b7542a57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7431d0b3-c13e-4dcc-b8d8-147b7ae1e982",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea15c8fa-44a3-420d-be5f-636e371cb200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efadfa0a-f2c1-4b2e-a07c-c63d0cab8dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa2374b-439a-419e-86c8-a68c985b1a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f2c4d4-df61-43cd-9537-fcb597cb5a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf766c-8145-405b-a6cc-bf6b3fa4a443",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1259488d-7fd6-4685-88c1-98c7f12d9103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dec0510-e264-4d9d-be12-a0e76e526ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b7a707-e2fd-4cad-ad6b-a1539faa2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10a6035-b1f2-46ac-98a9-c334c92b9c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a069efc7-22ed-4641-a040-dccf6af7377a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa01817-7547-4d53-8b87-55c454fd1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f666b67-cdd1-4c97-9f53-931e1bbb9289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08448bfd-4f82-4f40-b520-a94f461b6293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8272f2b0-14f5-4566-ba8c-b007d2f91681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f90167-bf1d-401d-a821-7db5b4de7391",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b427dd-b211-4c96-b1c8-7d98b1d81ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95493f18-1ab6-4339-a08a-7cc29b001ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66398d8-c6df-4aca-883c-ac42e67ad39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb568f6-5b7e-4811-b172-cf3f9c7f5742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd439f2c-df68-49d3-827b-92615661f99a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366e2183-ee9c-4232-9f5d-eae9a8d981e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c4f251-72ff-4fdc-90a8-86e4b57088ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005ce45-19ad-4ae9-8165-dce4406730e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6e08d692-565e-47ba-9734-ea41c77c6932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f437fa57-5b37-4842-88bc-030362360f4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34cd5f1-6acc-4b3d-a80d-17061c87e810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aea332d-7ff3-435d-93dd-8e3723d36e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444992b-8c9e-4b0b-93dd-b45933b019ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51f92fbc-751b-4265-9892-b204030f4208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f66de-1a39-4c4c-9793-6ee8eea4207b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b895e9-f9c2-4e07-b2fd-77e92eb7faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdb60b0-92bb-401f-9427-0595cd98b1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577ad947-6f1e-4c51-84a4-3ea91b35cacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5e4621-08ea-4a9f-807b-63f0ca34c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f40cac-5f90-4095-8b5c-4b56f7d56089",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4b2fe1-5f99-4aac-94c8-bde6b7e218dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cf3856-cbb7-4bff-a701-d112fce32cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd55355a-d152-490a-8fb4-7e9ce60ef692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "219c6f59-346a-4233-8b6c-6382bd4b84ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97001755-44e6-4a03-99d1-209a54345aeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90df855a-f25e-4219-9c37-222357de2891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8218ec72-7c2b-4641-bc85-70a7419771dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a812a4-df84-4fae-9d62-bb3cc169381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4245a4e8-c592-4260-baf2-d84d9ebaa924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d1f061-1310-4b4f-a4f6-5ba9245e3ef6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b777b4-91f9-497d-9013-ae8236fde3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e145ce1a-d583-42ee-ae0d-df5b74e955bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c3ca6-ee38-4593-ac97-f1474241672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d5f4d3-5043-4a12-b0ab-b7b828dd2c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18081bf4-a152-46c8-8e56-d87c79074840",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8c0b70-15a7-4c63-95cd-43d05684521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8533f087-355f-4755-9075-90f9638cf92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc62a38-6260-43d3-9a02-ab490aa73d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f153b57-2f54-4cad-b688-a89fe4d19150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22ddf73-22dd-45fd-8533-91843f621dd9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f3d74-a6c9-4624-87ab-7ac441116d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844ff668-9a24-42f5-92dd-d4da0e775ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ea84a-5a02-4d61-953e-e10f08090a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ec55e8-e0ea-41fa-a164-d499b5890403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b9e5aa-821f-4f82-824c-65bf2ba1cee2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f146bc31-e2a5-4deb-a92c-ff2812b1d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ffd1bd-7a1d-4774-88b9-6586d344c3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34072166-5311-4b5f-9cb7-a6f0c3691c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "162c38b0-808f-468c-99b1-0e490cadff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40644337-d0df-4b23-947f-3abb260a7d16",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968f7927-df57-47a6-81b0-3f15e91bd9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b13145-7784-4c49-b5fd-001bc4f96ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b98194b-05df-4e9e-9893-0f505da5723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd82af42-4d87-463e-8b1a-d5c5e2eeedee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3759e7b1-f2c9-4052-bfcf-0d799db667ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0d1bf-dab8-41f9-91dd-8b8996d58d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54b8c18-d6db-4515-a17f-de23f38890ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e1fd70-5c05-4393-8051-8f7f5b88a91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc56dc8-9479-443b-bbb8-5fb4b2ada833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced16f00-8f76-489b-b5ea-75da4289d7b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276a9117-1bf1-4b1d-99b9-7454f70640ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ee56f9-90bf-41e1-9398-b69756e02ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62749723-3746-43cb-a42f-6ea1f1c79038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93ba97f4-193c-4bc6-b261-7496742cebdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db72d2-abfe-449d-a9b7-db9694e3c44c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ec4eec-ef4a-46a2-878a-90546e4c759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc28b085-57f9-40ff-818c-bd37ba5c2af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3799748-5c03-48ef-b6d4-afba4f5802c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad12eca7-a059-4cae-b4ed-99ba12a20509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18619ea7-5cad-4240-8c38-7f36c5adaccc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f3fd5f-cf20-4e2b-a8b5-15784cc12873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c41154-992d-4d82-9689-36d16c324c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63395f7a-71ad-4cd2-b517-6f0cf7b1bda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b4e2ff-082e-4810-bde1-b79f6c42d1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54838873-6f44-4dee-b31d-da0fe588bada",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ca33ad-1458-4bdd-a9ff-26e2d201fcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43a41e9-f837-4731-bc72-446a31840f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19eeee5-14e1-4700-802a-679769bb22ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76ea32c-a05f-43e6-a60c-1db61c880581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74612b4-7e25-4b32-8930-03ac1dd5d7e5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ae595e-c14f-4257-b87a-45a3878048a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17b1007-53db-4c01-8b66-0e7644c25415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6d3223-66cb-4a1f-a1b9-ff77d383fd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "002136a1-e7d7-44de-ab83-2397d263b0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d1bb58-8896-4945-bf5f-5f06da5dbf30",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2a6a34-e334-464f-b887-b8330e8d9d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06287995-ac75-483d-ac77-cc4ab60ea748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef59cad2-a3a8-42e7-a58a-a7fad68cfbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af26762-5573-4f3f-a62c-a389a48b4f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd38866-67ce-4b8f-ad53-fc659fc2f35a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1099157c-6012-43f5-990c-2609135c14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eabd542-649e-496e-83f4-e95c33a60c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f9c26c-c77e-44d7-8895-4b6e05a75da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e44ac58-d247-4327-9415-e378ef0659a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c8be6d-1f06-4928-9a25-65b96b8841c6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97de74b1-1211-419a-ab32-e85ac3d4e117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b7dd3f-957d-4b6d-87ea-c061aade8713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9493db-a707-4be4-921d-63f6b34621be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db8ff37b-e330-45d9-918b-90cfe9df0f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf80db7-5433-4f0c-a476-1608c4483828",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d007285-63f5-4cca-ba46-64da6507fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5930a085-ea9f-46e9-ae4e-98c16f95764a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508557c1-930a-4bc2-bf02-80a92cb575b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc272125-a5d3-4c5e-b9c0-b12d94923332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54763376-c7f2-40b1-aaec-2834afc1a3e0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874ebfba-de60-42f0-b5ba-86abba567834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7ba4be-9044-4270-afdd-78f626d4b879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c27b28-b865-47ce-99a5-c7f6890ca575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6f91ee-aebd-47f3-9180-2747e7ec56e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aa181e-29f4-485a-aa88-e033d45c250b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1953c6-7b1c-47d9-afd9-00a81013bbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ccd580-2d67-4c0a-b4f9-743469deaee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46386f6-915b-479f-8f5e-d86972c85b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc349a7-ff57-4a18-8836-14f768ed65f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1d8d02-c92e-4e76-b771-3ad5d51dfe9d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b05c0d-0cea-48eb-8e01-229b46d383ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50973dcc-47b7-44de-91ca-30a18163ffd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0430ce22-957d-4f47-99ca-d50accbf6739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "094b42e9-7a73-42bb-8176-ee0535d11cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ed7f52-d0ca-4c21-8975-15e1119ed0fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852b5756-2f03-411e-b70c-b1b2f3fdbcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c5cbec-c267-4e9a-89ab-71781e2c08c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f8d1a0-911b-44c8-a857-206af7fb927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34420bdd-5330-4142-b1e2-e9aa052c1019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845460e1-b247-4d5e-8417-d5f8330da0cc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8a8c31-174d-4b33-b4ad-3c5a10f88e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8520943a-a499-4edf-b2be-38022ca49398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e2af3d-191c-48f1-9936-5a6d285569a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6be3e8f0-ebac-43dc-b4ed-c92820493a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1c2a21-9b16-48b8-966e-226a2b6a832e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cddb25-6ec3-48fb-9dec-ca1b58ffc78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c94647-472c-43f5-91a5-15dc56468425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b529f539-3d64-45c9-96b4-a0c459dd4d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc586da5-6823-4872-b4d1-4e6fb08aa445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a52c56b-9184-428e-ab19-595a12149e2d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0822c039-7886-4cec-8f25-1328a24a4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e9bbe6-3fc1-48f3-95dc-40fa17531dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e942126-a8c9-433f-96f0-d79b1b1ad566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53699f5a-189a-4032-9dd4-64afb097c7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b04107-1af8-49ef-b41c-b184019a8bdb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaf0b4d-63e7-4c9c-a70d-24ac2fe42833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd2e885-9d58-4346-abeb-0fa50a1b4d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a829625-21e0-4057-ba75-f401c5616989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "177542dc-3a24-4fba-9a19-bc33c7ffbe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e02f9f-6477-4f7b-a3e9-a8d6235eda11",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a682d3d-87b2-4575-aedd-565e16b10faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c07494-13ff-40b3-a841-ed8aefa26ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d7de38-1480-48b8-a77e-5ed6af0b367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82747801-d74c-46c5-96f2-ac19af0a2b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf8525d-bb48-47ed-8b85-ca7529b046a7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537fe6cb-6ab9-4dee-93fc-280f87dc060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08c0a18-c352-4f6a-9e7c-f998a0741f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7092c56-2090-4f82-9c21-16dd206b302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8987562d-ecf7-4251-841c-59a442cad99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f7ebd-14a5-4701-860a-6019803deb0d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0533fde1-f6ba-48a1-81d9-26ddc77afb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0aa5e0-1aa5-4572-bbf0-d947f176ac8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d7c562-af91-4cd8-b792-a303292b29f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "823cd95a-5452-4182-a4d6-59ff52d44d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc01936f-06ac-4ea3-af53-d2fb1c231bc9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bf854-781f-4c92-84a2-c9deaf62e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da945dcc-e261-4194-a8bb-e6f9a0b4a99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4da7d7-0b66-4007-9cde-dfcee9d9d367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10c5eac8-b4a4-4922-abf0-11deb304325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4a0231-ec22-4e97-9c66-fea9e1d6515f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4439460f-54e4-4f66-ba5c-024987f2d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8263a187-a2ea-4e19-8203-7842f469303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aaab84-196a-4e8c-b7f0-b11c9cd84b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e72945-6bf0-4651-a1d3-5fd420865946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a59b49-c1e8-4ac1-9825-5616f0de7766",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af1db96-7261-47ea-af94-ad1ed95405dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74356926-7d58-484b-a10b-9d52b39bffd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3f8f0f-e70b-46b3-9e04-6a8f7e71c739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9543f8-ceec-496c-9ef2-f6c97b33e357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d224f586-fc93-4a11-9c9b-2f5a282883a3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4ce406-28e3-41e7-a611-98cf1b7f1a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d7cbb0-466b-4d0b-83eb-3dcfbd565190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8102800-0fac-4979-8cdc-2adede1c2567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf6b7da-6c3c-478f-9863-7330952367fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64982464-17a1-42cb-b307-10a4f617b61f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc6fbaf-94ec-4ce2-a9f0-778212ec85c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9b6e1-fa0e-4011-a612-8e73385abdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678bb938-b023-4457-98ca-391b0d6bab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3293206d-11c1-4aae-b88b-9f97ad1ad78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daaadde-3f98-4366-a021-94561059c800",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee945f2-cfcc-4720-ae30-64c4aba5b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f7ae1bfd-727b-48c3-9ed7-1332fe2ef884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241d404f-b42e-4f92-ae4e-bbb555d897dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f6f318-7a0c-49f9-b435-984360e7569c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8703b34f-32d5-4e93-9bde-f88d70bd0828",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8ab44de-fdd8-4f5f-bf67-97c8143c67a4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5adcd4e-fe41-4f91-9591-d683f7533fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f1d1a4b-a5af-47d4-9e8b-cb9af9211083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525485ad-4a55-421a-b362-1a3cf4d0dbca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4158bb2-821d-4e4c-95f0-cb99526232ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6dc148f-e014-4eb1-8f78-18992c21172d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ecde9d-1f41-4891-add4-5c03d00d6793"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d802c1a4-2232-41f6-9efa-6562c42eb971",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91437504-2787-43b3-aab0-4de5ab72fb94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc7d0a7f-7260-4b8d-94d1-a96b449bd30e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a18b1283-e0e6-4d53-b01c-a9d9be8f2f98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95946aca-3980-4fbe-8047-29678ca995d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "038c743b-7eac-4126-9bfb-2b396dfa97d9"
                }
              }
            ]
          },
          {
            "id": "94a270f4-5a83-4c41-bc79-a50a0764595c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a852a89-abaf-4c12-b38b-33664778e6d7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "15b84241-1078-4b9c-a398-3d38b939c3fd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807fb28f-cf52-4c9b-a799-3e8020ad89fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "04be24f9-3121-4c4d-9618-4a95dd6bb401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5ed583-1380-4f15-98d6-2fc9b00f0c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662ab6e6-ec96-47f2-808f-8b92009c89c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc1acadf-8079-4b49-9837-ccfeb714adc3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca9d07a-2306-4edf-ab91-64e71b5a9043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c6c1fb6-886a-4756-8080-c9d330b6aa89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2c665c7-2456-43ed-8280-bea3420e8565",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd6d8ae4-ae56-4eee-b327-ebc865e62650"
                    }
                  }
                ]
              },
              {
                "id": "df4f8225-9090-4477-95d9-1456fd5569b8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "320a1170-bb4b-4ba3-b287-166c9d2da30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd0c3c59-a71c-4479-8f8d-72b9b21f67f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13816c9a-52a0-47ab-baef-a87540e42725",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f93cbfd-485f-4f93-a0f1-c8fa08e2eef6"
                    }
                  }
                ]
              },
              {
                "id": "2f04ff3c-330b-4d6f-a238-109660fabe0e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3e560b7-896b-461a-84ae-47e8960d4443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04408835-92dc-47f4-9f5e-a59d67d8ad48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b41f0e6-92d2-46b6-bb4c-4dc9953d4a50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fe9e587-3ca6-465a-a203-58cf24c6021d"
                    }
                  }
                ]
              },
              {
                "id": "44432515-7a7f-4b02-9ade-e49f41cbcf7c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b2ea2a6-d514-4709-9778-ae3d37a09356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daa3377f-277d-4c8a-b8f4-8656219befb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13af63b8-14cf-496f-80f9-9d4ee07eed1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6db9be66-07a2-496b-a69e-cfcc313343e2"
                    }
                  }
                ]
              },
              {
                "id": "a247cb3b-b3ac-49e6-990c-270d2d643b16",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33ed84c3-4a73-4f79-bc4f-5820ba026aba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5996fa16-e76b-494b-9f82-1c88edb7582f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9eaf152-51cd-425b-bbe8-2034d0dedddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66027557-60ee-442e-a71e-e2131ee4eed2"
                    }
                  }
                ]
              },
              {
                "id": "e3fab4d0-e6cf-4d30-ae0b-32a37c2cac33",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f05f949-303b-43e9-a611-5c6c3ed9d8ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42d98c23-05fc-4536-ad00-fd6fae4921d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf32300-3a59-474f-9c6d-701c745abc9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c7a5302-80d1-4506-a756-ae54fc717ef3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aed6bb33-f1df-4c27-ae1b-561a964c3db1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74738d5c-335d-42a9-b40f-8737739b5624"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddedb54e-c6da-4d74-b83e-f76d496754ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1b14f18-4ad6-4264-810d-befa13e5723d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c3a2844-7edf-4a27-a638-0b864c1a674e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "69bef161-e482-4b1e-8e2e-6a948623263a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95f2bdcc-764c-49de-8ffd-1273674a7201",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2d513b2-c1de-44f2-a83a-7a256e223d56"
            }
          }
        ]
      },
      {
        "id": "57c4fad2-0da1-4ffc-a678-97b53dc7c696",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dc1db067-262a-46aa-a189-c8364d319c8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a4a05bc-dde2-49ed-8dfb-af854d925f7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6cdd942-8997-49e0-b5c6-537425fb6c69",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc449e5-1f24-4ea9-b393-37f469ddfa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8665f5b1-d11c-47d0-9924-0dda1ca5fe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda294b-c434-45f3-82b3-b79eb11ce075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a219c7-ec24-4b45-8740-753d78458cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9794812d-ed1f-4717-b1c0-15f077057483",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344619d2-6422-41a9-afbf-1352c4f10dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3547a017-c02a-46b8-9d85-15cb7e7d503a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ecb44c-3a2b-4b19-8ddd-eb2488984d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b7ebe3-671a-43dc-a55f-47aa72992ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115b03e2-d006-4912-a308-2731f39d53a6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8009ea-ca7f-4f6c-ad25-cc5dd57f600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1772167-c83d-4d7c-b2a7-bcaa20a4f7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3ace60-2e46-4626-a141-d046d0907892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "177c923e-a3b5-4c7f-a888-1ebbb59ea6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ab3fc-7e09-4f5d-b36c-b6c4b3ef0c0a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23420d6-af54-4f00-9fa0-1295045a8f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a240ad35-436e-48d7-8568-e5257d0643e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aefbab6-2d37-4f8e-9354-94bae5aca3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdfd910-fb10-4af4-a0e2-8213d671c968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68da665-0104-456f-8bd1-fb1a6d175d98",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3287310d-17af-46ca-b236-ef052d3e97d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a72248-579c-45aa-82f6-4b27f10dbc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde9ec75-b0ce-4633-ac6a-a0c8116e0585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c713b6-c20d-4780-9140-9722d6b2be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5000b0-0f8e-4db1-9914-b46b076ede1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaeb1cc-9505-46ed-ba00-862a57f22696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7984b224-d5f6-4291-bbe9-ec13c700d971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fa939d-9df9-4b49-910e-e6ab1fa1ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "982193c4-72cf-4e35-884d-494d61ac1b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c77a38-ba13-49ec-a238-76d4ead2a19c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec48068d-80c2-4639-b8b9-755fee2f5945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f2b67f-6047-4e30-83d3-015ac4d72a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f58c28-39b5-46fa-ace4-9ab61e7f8fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af326b18-bcab-4ce2-b3bd-63d0fb4e695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c33db4-e975-4669-bd45-6a25e4c45e7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762fa687-f175-4e98-ad6a-d1fcae66e915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea56cdb9-514e-4e0c-bd57-0164146af5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0765784f-424c-40d6-b0db-6581204a67af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4737f4a-cf11-4693-97e8-4e9643abbbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f11d08-b468-4f09-b7d1-bf1c3f30911b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f735f46-f8a3-4d39-b07b-03d58de97906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a92aeb1-4e74-4801-885b-85d8e6176219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b34177-2626-488c-8188-867abe965506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "266cecae-32c2-4049-b663-890772a41161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f40cb-2b24-4e16-9cf0-60f8e0e92be6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89df215-6312-4be1-b3aa-b0cc50674e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3f766b-e1e9-494f-bb29-949bf928b859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad97bb64-c0e6-48a3-9ca5-5956a0b86736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6c4cc9-ab75-4c28-b849-a07115c1d70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e07b1a2-d676-48fd-b1a7-3e6dea08d5b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee4acf-56fa-48fe-9387-99661722ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcef8af-c0bd-4a0c-92a6-71ef169649ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a169a5ce-0390-4d28-a495-b187e9711bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a3690-a36d-496f-aa6a-86b0fa903b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672e3ee8-5bc3-49ee-834d-f818c127efa9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ffe580-a17c-49d9-b69d-8302b892db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b895a7-cc90-442e-be04-f9d6046884fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e165e31f-92aa-4dcd-a4de-0f097f9623fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11aab3aa-76b7-48d3-b0c8-be2884e7ce06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389b9fc4-32d3-47e4-a146-5e4a40726154",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee847c-29d5-4e7a-9d84-8da1e7115133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d5fee5-cd69-4bb2-936c-ebf487f47233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0080dd0-23b9-4ec4-b6cc-287300a71dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15b6082e-b519-4995-a7e9-2b19ff2836ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd270ef-e8de-4ae7-84fb-a064450b8611",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4526c0-0aee-4728-88fe-90563374e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c966369f-af81-4755-bebb-9e700c01c90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c4591d-b3b4-4632-804d-2cd8567cfeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e129c9d-5d5e-46df-a6f7-4f3432115d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287dfe68-5db4-4256-9b83-fd6d51b4c037",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858cda2e-33f6-4471-8bbd-16f995547787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efc40d6-49b5-42eb-b1cc-f0ba5eb7246f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0446b9-059d-4b1a-828c-a1b7745bf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd5b894-a361-4bbd-8d0a-991e47d436db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f592b-f25b-4495-b895-c96d4156d69a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6053ebb9-1603-4720-bfe2-85adeb222bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46bd211-2489-455f-a72d-df99e023f4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab20bf7-b0f8-42e7-a73e-45ab6d2a555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea3261b-62fb-41d9-8056-01699ce3099a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ee163-d192-4a08-805a-e2f383950220",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b6c519-85f3-4b9b-8308-ad065a86afdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e36c5c-63eb-434a-9695-86d9cfd71d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a1a2e5-acb9-4501-85b5-38a685265b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e08b32-2f5d-40f3-b07e-cbc15b9a5f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd215426-2e57-47e4-a175-9b954d53ce2f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e54ac8-a358-4f0b-8d8b-d778d153622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f771cc22-5635-4a63-b6c0-e2b2565d8ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b21649-b844-4425-82f3-14500952c6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a38158e-df02-44f8-81dc-d614e24c066f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3839a8-fffc-4af6-a144-b5fa12e96338",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1433e3bb-cbec-4426-b40a-a199090e5f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0939743b-4968-4cc9-90e5-dbd130a32486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b2e63-c821-4a3d-9dbc-2e052d4d0207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec74f62-545f-4ec2-9568-678fb4cb62fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecda7ef-19a7-406b-9faf-33f0ea5c9ea5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80824bd6-b83c-4274-9534-5fca708aaeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad4c5c0-dba6-484d-abcd-e9b72d95a748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3bcde6-6fa6-4d35-a423-394e7d0f1f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aea70d6-7fea-4741-8458-9ddc8c6f9ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e6af1b-2b2a-48c3-9b33-7f4239971709",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88112de0-a91a-493b-9391-0e8211dfe2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa92396-8b51-4959-bbe2-02f6ae727b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc4b805-abd8-4c80-acae-4a796c6402b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c02d0ee-4d50-48a4-90ea-466b16759c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07627599-cd5c-4420-929e-35a301d16906",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1efb62-13ad-420d-bb6e-a3cb8eeac773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c1feb0-9e50-4cbb-91f8-fd5945c826f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d835a296-a8f6-409f-bc21-21f2f59ee1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5f356f-21e6-48ea-aa9c-4084b1ec5d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5a1b82-0898-49c3-b49f-16381877e6ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb5c42d-b0c9-4781-be57-bdfebc8254aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27765ef-76c6-4246-8265-474feb056f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff749a4e-688b-49b3-b0da-077694456e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5565be3-6b95-47ca-b92c-5ee2f1b38bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c0064-11a8-4421-b29c-54c0189d7070",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763aa9a1-79f7-43a1-b195-adc1fc7610ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef94d689-5357-4865-968c-3a0b6440bc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08222ada-c3a3-426c-a055-72e2bbb61892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a20d0ff-50a3-4855-b7b9-d07e061b1a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a82a7a-7221-4c31-b398-f1d239dd3dbc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae665e6b-daa1-4e5a-baeb-63c891e4b07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8851a5cc-7631-4961-a79a-e28ed3df9e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe04918-be1e-4b00-9594-b7fac08acc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411ef093-f3ad-4730-8c96-ea19e8334cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26312081-c165-4f62-93ff-d4ae76eb4d1d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f870074-8235-4faf-b02a-b2eaf7f0e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e499464-efef-46c0-8875-93d41d5af974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2af0f-dea3-4ba9-bada-fac2af942fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9971a027-4c37-48e6-afa5-0623f3fa58a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e056a97b-04ff-4d1f-acf8-b67e38715127",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef17d2-3214-481d-a0d7-9aeb22085b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2910f9-8e39-4521-89af-99982fdbbeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b53638a-3ce0-400c-b6e4-f353879e19a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc40270-18a4-43f7-876d-360855c7ad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64213179-cf60-4341-8c3b-2014520e2e7e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d741062b-c0b3-4677-9aed-4420a99e51a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6187d8cc-7157-43c7-98f4-4ad37338bf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee962f85-c4e0-44e9-91d2-63392ae4f153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dda1c7-6270-4f60-887d-d7b93016aec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843c7bd-c617-463b-ac9e-09be7871ff69",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1de39e-7e71-4476-b90f-1290e9b9a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975af664-e7e8-4a2a-96c2-62469c334636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f34b5a-b731-4a4a-a10f-68d50f4be116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09161db-3d5d-4b11-b6fe-2cd7c26a7ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6844f768-20a1-4ed6-b6df-7f13e0c5ca5a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024b2a88-eaa4-405a-a456-7c29341f98ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b467c01-dcea-4494-b2c2-0071fdef189c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c340503-af78-4af3-94a3-edcd76f5cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062252ee-8344-477f-a28f-54417df575b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2257beb-f519-471b-b36a-98f398b0ee9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5619a0b-69c9-48d0-bfd5-e4ac5cd7aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86dea30-7a7b-4ebd-9c79-c8157aa18ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8832af8-c94d-4b59-a080-4af12fdc0da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ee5157-19dc-42c7-8120-2b4039ebcdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc60378-f085-406f-9892-0dd835771c67",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70800fc6-f129-4c1b-aee9-1f990b1619a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a101b9-895c-4977-bd3e-9224c922ed55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df3880b-5348-4222-9f30-2ce1329ccdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10404e0d-baf8-4442-980e-fefe1254dbc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef02821d-7f0e-4c63-98ba-3f1add515118",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32ba6901-9be3-4b01-b704-d8e84d50c76c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3a7857-c49a-4c91-8b19-31e32a904677",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a03ecc-2bf0-46df-b3f9-74d7a8c76115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596be633-e529-4364-9077-09f1c644640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44ce40e2-03d1-4133-aef1-b219983db91b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84637d44-33fb-4e14-acf1-0bfee844a8cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ab6347-c27c-429d-b045-4275d5de7684"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cade2f34-4a19-4cf2-a90a-7c5d4e21f0d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0759fa5-3812-4fe8-a08b-e68d8fe3db64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fb5a706-0c88-476d-978b-9c4ea9cd8fd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90514e0d-76f7-403e-8c8a-8b7f4c99cd6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93c07fac-b373-4e4c-8807-d7b76bd259fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7391f0e-52f7-41c8-acb8-a9a325544d7a"
            }
          }
        ]
      },
      {
        "id": "b9419f83-9296-4bf6-9959-d2c5db1a553a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f134d00a-6505-4b96-93b6-3fdc8c25c4b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dda7af4e-09f9-4fdd-ac8e-06a878fd7a09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "111b03d0-8ae1-49e7-a77c-5f11d1491f18",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae834177-d5ea-427d-8503-70384988ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e87a649-3da7-42df-8f4a-a037bbf997c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e235e62c-74c6-43ed-953c-c85ed388d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24000002-0930-4a48-ba1b-b33b0433a1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007f5d20-a551-4a7e-aa61-66ab7bc8b95e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2713e9e-dc02-452f-952e-4b059169bebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a4afad-d173-47d6-82bd-b1078cc39dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6a79b6-254b-4fcc-9f0f-85d16f516364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae56aaa-186c-4464-b406-2062c2c87409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493b81d7-48c3-466a-ad89-e0d0f7645d01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3560e2bc-1ec0-4fe4-a9d5-da065547075b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce205d94-9b74-434d-822c-c0bb903c3419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca03f94d-01e7-45af-8922-d573f2f11b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecd9c93-e89d-4cfc-9bfc-2a0645c5ee7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19117f59-81cb-4fcd-9710-983e8ffd4c68",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b4cc34-bb6a-464c-bf42-95563586117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6932b790-922a-4a02-bef8-ec0404fade2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c21fcf4-fe73-4f1f-ae0e-7ec452af04ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad4756f-7254-4f8a-9b6b-24267727c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbb97b0-6870-443a-aec9-877e6f5ab192",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd005889-2d86-4893-bce5-54f37c6c0ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b82c48-038e-47ad-893c-8ffd49451915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac1f28d-b0b4-48bc-b523-d7faaa0e845b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422580f5-d233-465b-95ed-d23c31bcf156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c4143-609c-4879-9c30-9849714078c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca434f6-6666-4bc8-9fde-8f8c6846804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d039712-becb-4c1a-bf00-b728c474b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3083635f-89f7-40ee-8107-796cc6a6fc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84bb6925-06d3-46cf-b51c-8d4d3ffb31c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b758da-fb89-4160-b118-05fa1d5d8d82",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc77a31b-f018-438d-b79b-9edce63b96d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbd25c3-e446-40b5-a984-00b4a5a69aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b599edc8-4277-4535-976f-c176f878c81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ab4515-c0a4-475f-a8c9-dbd91197b796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265b1e6-d99b-42ab-944f-fdc30ae38788",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3adfc9-f892-402f-aaa8-8fd38e91724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f4dc3b-6eab-42fb-8b92-26d053db1b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c75d359-3cc1-40a8-8704-851dcf254370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9787abd-0d38-4ff4-a609-c54b89f73709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb94c798-a5c8-414f-8a9a-92d873b1274d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b060f3e-0a9e-4d0c-9cef-aeb5c6a0139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338c5425-f30c-47c4-af65-85b4e6487287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4204d999-8411-4da9-ae0a-1787fa54d69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd12e304-8cfe-4085-af7c-ac6dc5216deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46a367d-c078-417e-9405-fca539e95b5f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93545d3e-cbfc-4ea4-9537-89ac7a90d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97e26e5-72ec-4298-a149-e0d5e2964f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a91286e-008e-41ea-9439-0fed2cac3cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ee15ad-bdde-48ee-b012-16b11f0e513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87155ac1-c94c-4fb8-8b12-ec1c8293c97b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8f119d-ddd0-40e9-b49d-a940682ee830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9d2229-dbc7-49ae-8548-7703a6189148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19169bf9-9e8d-4739-9197-bd9b9b2bcd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "32541eee-7a12-4677-83dd-cfb2d448f9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895a1797-101b-4b2d-a11e-6904d0a7d948",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0b2551-51ff-41ba-9332-e96f5b3338e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47497dd9-322d-42a0-85fb-c73eecbb3dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62432a7b-d366-47e1-bd29-39dceb4b8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "388c5ac2-45b6-44c0-8b54-0c5a4808a8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d0796b-6c9e-411e-a5b2-318ae930a40e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a59104d-e302-44e3-a34d-730f92b3eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd31cf-fddd-4e69-a05c-5687e5a8baf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88f6ee0-dd1c-4e70-aa36-9427578581dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d2b7ea-4ca6-46bb-b6fe-d827981ed10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecd662c-9579-440f-922f-2d2728afe709",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e846532c-2d3e-4337-b20a-efb44f822775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a14f6f-4310-43b4-986a-bc74add12bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea20f065-c2ba-41a9-8e9c-c3cabc96cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18b2bcb-df9a-4e47-961d-a033585d605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9af2b1-7007-4ce6-a555-c39373060758",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a107fc-41f5-419f-896c-b304ac815aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1629aec3-058c-4ec1-a022-53fa607359f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040d4f3a-e90b-4004-af84-ced94bf9af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96a821d-4805-47c4-92f8-760bbaffef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e14e18-c025-427d-bb03-42cd5e6ddbf8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eee039-6fbb-48b5-85bf-ee195aef7e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19b02ee-764c-450e-a180-c9349cb87195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b841d4aa-bee7-4362-8035-48e4d3c0839a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4bf5db-ea19-45e9-9342-03e277dafef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2042a843-7e51-4282-9cbf-85dae8c9630d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a274a-fdb2-4e1a-9684-bd96d0e7ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bd68ce-9a7d-4267-a3e5-2dd024467545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8b3f5-cf41-465a-b2d3-22538c528475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cce96cb-aa30-4bac-8f74-152a277007ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595a96b6-c488-476e-989b-ad5cc8360f28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf4c9db-c273-41f6-9d45-6f455b1ab5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ded7be-063b-4182-8003-f468597c3181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5143c51b-e394-4c05-a0b9-a358bc358d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9849b3ab-88ba-43a8-bd63-c2e0e04611d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8391f49-bf87-4a87-bad3-56782a38bd43",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57629458-314b-4b21-b3f6-a0d50dbb1c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9029a28-62ff-4e20-b637-15da9558e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449202ba-8ea5-42fb-8a68-5c6d75077cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22dffe2f-0c4a-44be-bbe0-43fe6d699d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ff627-126d-4c6a-bb5e-8c0c5789982b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a63ba-759e-4694-aa3f-b3a53318a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96ca1f8-e70a-4aee-941b-300011b3fce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa645ed4-4562-4c27-8d3a-594b73b4176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf920f9e-5c28-4799-a1d6-88064d751ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187693e6-622b-48f2-8155-4b54795be1c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146d4d0c-6871-43bc-b8e0-0254b9e81003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9694fef8-7325-4165-acfd-eef6ebe0a4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab70f6e1-a9b2-4823-b176-205693c5ef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c6e6f0-daf9-419a-b205-e08eba8d701c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe6c8db-ccad-4135-9dff-4228604daa4d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095da12c-a0da-4b05-83b4-775f45d054a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b354b2-c752-4222-94ef-2e4df7da1f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3385e84c-9622-4442-8ee9-df7df69ed9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3c60db-d75f-4199-9f5c-78d70328625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d3671e-95fc-4dfe-9295-467f72668877",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdae3ea3-9bd3-47c7-8f85-cd545d551069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c76a2d-dd29-4bba-8f82-69c5b5ae9aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028f16b-c4a6-4e73-9472-b3ce35bf372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2888e931-3773-4fd9-9543-888032e4658b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5375b9d-e3f8-4792-a563-35873bc04601",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5403510-ab89-44f2-9d56-c8a852ef2089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82da316-de77-49ce-acd6-1cca64c37da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c589fb6a-d361-4b13-acf9-d5f485b7a226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69cf0da-6628-4adc-985a-27c9563621f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f79f3b-b622-4950-abc4-dbfd86551011",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c23ba9-7724-4cf4-9dbc-ee9931a4892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cccdd9-916d-4329-93a7-b3b42d1e54b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb5afb5-f90f-46a6-9835-0b759e48cde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f497e4f-2673-4a92-8827-3ac3fbe87821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d371622-f25f-4894-b61c-646dc29f22f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d743327a-af22-47ee-b4e5-19f20506dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2442668-8ccc-46b9-a67c-4bc03719b88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82883b5-d632-4527-8e27-10fc155065bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2389d33-3c00-459f-9861-0a4c109aa296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29a50f-efb2-4aa7-b568-081b74c696d7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4ff995-54ac-4014-96ed-7f457fbe548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf52f92-92eb-4592-9d7e-615f76eab11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d4b68-bbc2-4e7e-95ef-5d63a9ed309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8272fb4f-39dd-43b6-ae36-311feddb419a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f8a156-2673-493e-bd3f-021f242d84f5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8010b0-3868-40e4-8c01-79356c2c676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc170a00-8ae9-4ead-a49a-4011afa762d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d172a60a-fd0a-468f-9f33-57fc87216558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02d3be0-1eac-484e-9344-22db15cab1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea9ddc4-d76b-4416-a898-aa371996a431",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709efdc3-3692-48a0-8b18-12db341674ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fb1cdf-bf5e-4d20-924e-dcbbddf556fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b2a93f-7e4f-4dfd-bf0d-89a8e6506da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7101e030-9b3a-4dc6-a1eb-c395f309ac0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b89a4-dda3-4dca-8005-f2b052f8138e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82634bef-469d-48a3-9ed1-4fb754ae16f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20d1388-0249-46de-a267-84f4a0961417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb79df6-3999-4671-bc4b-86971e7fd46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a5cf12-9f3b-4a26-b6e8-96523b6962d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ec03ec-b270-4705-9ecd-f73a015e71bf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cccb86d-474c-402c-a4b8-76a97c032e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06ce1ac-750b-4303-80ac-97d50c71ee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547b1dbd-45ef-4a66-9720-ee8977f24b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4823601-1c95-49e0-a373-f3ae8aa108b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201c4a5b-6687-4ac1-9299-90a4b831ddeb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b89e70-2153-4e10-a877-43b7712f8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51786c07-df32-4d35-9eb8-a275f678418b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d3d8dd-1edc-4477-9544-ad134a468e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f3ac49-07a3-477f-b9bf-002a01a5abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7fd0da-1af6-4402-ba5f-a6841d1b8e6d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cba1e78-53f6-4f86-b216-5e3c789aac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0050250f-1d3c-4cfe-b562-7a47c57a2471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332230f-c841-4843-aad3-61318fdf6457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f30fc3-0d84-466f-b64b-db06a20f6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f839e-3296-4e6d-b03e-1abbf7833459",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ece2fd-bfef-441e-a98f-adbda9eb6c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072029a6-0be1-402c-8cd4-24a4557a20c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4b23fc-a4d9-41fd-aa74-d42d5b1ea2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8661ef-8ccd-4263-a93c-8c2310c15f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1389c7f-23ba-4991-be62-2d42d3eb60d4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df51c21-32ae-411e-9b3b-9e9484d46fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba941a80-93f1-4836-b85f-e94f267f03d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7478290-13cf-49af-a229-dd058083ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14f01ef-cc01-4c59-bc72-d120888c82d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de375706-c79f-40f8-a3c4-09e387ac26f9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6df1c-83c5-4b16-ac0f-f92ba0d97de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20943797-8964-4ef8-8fbc-5c28dfb27d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77dd677-dd4d-4c1e-985c-b9233a196fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf7315a-2971-44c8-a552-0bc6beb8e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbcf2d4-6bc2-4dde-b906-ffae3aecfde1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3340a44-97c1-4cb6-a5fc-f329a0dfde49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc01c03-0efb-434f-a3ba-26ea82b577d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4482b97-3644-4f6e-bbfb-9900bfae7b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e24a7b-edfd-4130-82ed-3c6dce3b4ef4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a349be30-370b-4038-b244-5677f46a0fa5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1836c4d-7f74-4c11-b818-4bd7cb0bcab4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf9ac83-6a08-40c3-aa23-fa45c4144443",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a78b5def-cb13-4c3a-99fc-6f5e4da404e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d2539e-015d-4602-930a-2580046b92ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a41214a-a8ef-4c63-995b-29358a8b76d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fff99e1f-4b5e-49aa-be64-87754f6f0f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04c2b51a-f90c-4a55-9ae2-180e5ced13a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bf8650e-b677-4019-8969-296a36d1ac1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6026f8c-f0a6-49bb-bc09-d888ec974dd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d08628-1cfd-4696-976d-a499ec782a48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3db3ffc-f64d-4793-8c48-8948ccf1b71d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ae86774-062b-4ec1-a9fa-2773bfa0a688",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bd2d2f1-4b98-4637-9a10-81898d30c3ff"
            }
          }
        ]
      },
      {
        "id": "8cf81234-f47c-4923-bda5-02731901180c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a1ceab77-1c0e-4f45-af9f-2b55a1ff5366",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c791635b-dc16-4c4f-8cfb-6ac07ecf2be5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2f97d8a-4244-44e6-aa33-32954aeedc67",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4b5bdc-6ef8-4d31-b197-9616ec9fbc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddabbad-6308-4051-af30-1f6194dbfc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf82f6ef-c83e-4fcd-80f0-c2ff8c905ffb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9a1cc9-d100-4c17-822d-b63e2fadf78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8017a256-6f79-44bb-a168-645e5cde3e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eb97b7-4f7e-4419-b2e5-40c109d80b16",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25cd1af-1282-4935-96ad-ea107183aa06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa393b6a-b31e-420d-9c21-1c6d592141e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8739c2d1-d4dd-447c-adf4-f5ba6ab1ce91",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c2a40f-fa5f-4000-bb20-c7e0e442d22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d32f58-c734-413e-a455-cf2d48389fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4fce8-9a0a-4f5f-a644-50ccf6c1085f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7077065b-d03b-4fc0-8571-3f2ed2936155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600a3db2-9ad3-44ee-8712-af0a418cdfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a1bcbd-f855-4b66-9c83-38e856ff3512",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e66cb14-a14b-42fd-a5ec-78f12ec74f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9196c7-7f97-4e2b-ab4a-9f920af623f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82b49d2-4b0a-450b-a475-c516992375b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2d1bb-9d4e-4a99-8c77-29e1b4b65f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b65afac-1fb6-4011-8486-725a683f4e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8c49b8-cee6-406b-9fb8-c6dda64d1a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a5f21c-0200-482f-a54c-600bc2f6584c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c5bceb-718c-460a-a5e8-85ec7aeb2712",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0239514e-637b-4d32-9a8b-f3e441cc91d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30240871-c01b-4ed6-8d03-e9f84f84cd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d7dcb1-2405-497e-b3f5-8726eca7e348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec5e0b9-d85d-4d2e-9820-df4f24d8d414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df95ac10-a171-4c79-8987-e7be9d5cfcdc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de53016d-97a7-4ead-b404-0aa8b0922d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2b5b40-d4f0-49db-9c5e-841d8abbe091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1a4de8-5da3-48b8-81e6-314e1e943b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b23224-1c2d-4dec-86a4-7c642d392610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e10a14-5518-4127-9abc-2812220f0cb0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2c1ce8-64fd-4b6a-a343-7c29319d9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc02ef9e-6edc-41fa-a217-c0ccb0bd0810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcdfad3-8f7d-41d9-b582-3762f7e410f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8e71e0-5496-4a8c-9ca1-83494e7c81f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f09e171-e825-4c53-9a11-d112865179bd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c2c487-7308-42f1-aff3-83e964ec5a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f1367a-9b91-4fca-892a-cca400d778e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48e5931-fe45-4bf6-ab18-036676bc0e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c64cf81-efc8-4549-a760-6e0442e758d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c617851-ade0-4f97-bcee-63bc78c9902c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5543a6d-cc8e-49e5-b708-2ecca6495bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439d4faa-2678-4014-9e77-5e3436a118c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa2bc1e-b5cf-4cb6-a1d9-3575159300d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd54cdd-bce1-4939-b66f-47f6a0662060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa7f363-c7de-4a2e-bc04-6d1de7052946",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3ee776-234e-47d1-80a7-563bdd2b1fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02537c13-8056-4d69-8ed9-7ab3a554b0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b13dd4-68b0-4ce7-8175-dc030f01cbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ede61f3-4db4-4c6b-8103-2b93bae3e926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c1aecd-9102-482d-9ed8-cdcd78b5115d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd346480-2bcd-485c-b12f-2e1dc8ce2d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1514f767-cc29-4c0c-900a-8b9c0f1e044c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86430d15-361d-4755-9f21-d608b3ddcf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e08ac5c-23f9-400e-b933-d57f2fe7e2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a654bb-b541-42c4-bad5-7b77f0e4e8f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8625fd66-85df-4beb-9659-f3ca6724bb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05d2215-8cdf-4db5-aada-8bfacc1e6908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f04f8df-d7ff-4748-80c1-84f4a2636c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59cb14f-1b03-4066-bc81-ae1338f23d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88936db1-a20c-4918-aa7a-2a867af2b1a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b03aa-3518-44e6-aea9-ace56b4d181a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd722a5e-5c2c-463a-88ce-40966ad14ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0fb52f-17a2-469e-bb87-fae1c528d51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f0da5d-07e9-4f6f-83a9-7c4c302793d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebca5ca1-64a3-4124-8e25-9ff473d79116",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521e371b-0fb3-46f6-9257-51567d180ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50765aa7-3352-4f3a-a98b-b2ca024de2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47281773-eb67-4982-a7f4-d36af736e776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b168f37b-deb9-475d-bdd8-4e91bc07f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7155e72c-7b53-4597-8b8a-4c6d512b88a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d586caed-438a-4786-8152-56b064cb58ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3efd8c7-1b91-4396-b90a-c1197e51df0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1143e89-74aa-45e3-840c-69e81d13af20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30aea9b-190e-471c-8056-f0d462111055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fab5e4a-6483-48de-800f-01cd11f5bba1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5817f8ba-73fa-41e2-8021-7609f5c05bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3a55eb-8564-40a9-bd4b-b140a9ea9cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff40c86a-2277-47a0-bb1f-fd4d8a978f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce15be81-9f3e-428e-89e6-11a5bd720ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afe51cb-2430-45b8-a0f2-8bdf269af19d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bab21a-3a8d-4d1a-b557-9236e7f8d7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411e6834-e2f6-4737-9822-4e3afb45dcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1cd55a-c53d-47dd-b4e6-7df1c400bbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f82fd51-57c4-4d17-bd2f-fca5a6156d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4de56c-2ffb-4090-ab07-25a09ce8833e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f6b285-98c9-4c95-aca4-5bc4ae619c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c09ea7-382c-4efa-b919-0bb7e214242b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2c548e-e0d2-4197-8d9f-25a8b6daad8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f9a08e-cf11-4669-9f23-61243dd53aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f04b33-1cfd-40d2-8c12-a3561e40ddef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9520af-8f67-4107-8e48-3803f389e9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d3ab8b-604d-435a-8a07-9bd87022ca3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d0a7c7-6a40-430c-99b2-830e8f862d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6383d5-11f8-4356-83b3-f928cc1d2c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d81e79-0f1a-4615-b471-c07de2de2553",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c316265-599c-413d-b0b2-c0046c044280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4445e0-9618-4202-b030-0bcf9835d922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25aabca-e9a6-439e-8d37-37e34f405ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb37a7bb-704c-47dd-8c9e-ae2d21fdf076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae70ca74-51f1-42a5-805a-3ed5f74a0d91",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96153494-75a9-496d-99b9-79817e734e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867304c8-176b-4131-8116-2f839a4adb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fb348b-7803-4f44-9cc0-9421cb2f800d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b50fee-b467-40f6-82ca-dd7814c7ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55b2ee-91b1-49fd-b764-eb68d6d79806",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12e695-5d89-4081-a74b-d297d73640a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377b87c0-7ec3-45d8-8655-326892d890f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c87cda-88ec-48d7-8a10-f0ab6738fd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d97b535-87da-4f82-b818-060d9800f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86992721-6f0c-4b83-99b5-86839f4ff1a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089209c3-cf9f-4215-b3af-7457621f5f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25e5088-c5f1-4216-b9d7-315d82451a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f559cc95-c434-4858-a76f-ec830310ab8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93de8a8-0ca3-409b-9133-3d113fcabdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa483aa-2be6-492b-978b-921b9ca55065",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97ad1c8-1df2-4d93-b6a8-a1ee514f30f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e189dea-378f-4aa0-9f45-fa9498f952e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d056c3ae-3419-45af-8919-ddf333595b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24efa12c-fb2e-44cc-8df5-1ef9d3c4b8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4d706-c495-466a-91fa-8f493bdbf1f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c346970b-7198-466e-9b36-6688753485e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73445e1-d1c6-492f-be34-25004757e8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d1429-a56e-4a29-b859-6fd9a4fd638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c98fe2-6b00-4a07-8c18-e8977e09a4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d1204b-cf7f-4057-93f4-b22d6356a8e3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180f93ce-1708-4b23-a134-7b7aae19aa07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3b45df-31e5-4ad0-8576-ca001a3d7a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97360401-65c5-4c04-9efa-156c7f412f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf5a1c4-509b-47cf-9bf7-7e3293e08a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2b1826-4203-4033-a881-06a8683b5dd7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b038987d-d5d7-44be-82fa-c5a394f8e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7734a54c-587f-475b-826f-62f5a175731d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b9722-44c4-4d0c-b970-cfceeacd91ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4a0a2c-d166-4812-b9f8-01dd9be685c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25dbb02-8a67-4db8-b3b2-ab851d64e178",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d741081-ab8a-40ae-bbd9-0c7f2d2cd182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd95e7c-9cec-442f-83aa-a4e17ca97b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bc7de7-979d-49cb-8a6b-b47ab2db11c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e783f03a-10c8-4975-9883-ab52309d29f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a49993-cdcc-4cdc-a946-34f248f52ae6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e478a950-5695-40c1-901d-554e35d22380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe6e386-e07b-4f72-a2f5-f99670c98ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d9ad5f-8d45-465f-8305-51d315bcd64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24a0996-6f9e-4198-aefc-7b5b026cdf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac63b867-f29c-408a-be91-b47c477f5614",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92cd57-81e0-4fa8-be58-667bebd5c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff66fe22-6225-424b-a292-0fd4d8cf92c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e602ca7-4d04-4428-939d-bbb2720709c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f40aa55-f060-4871-b979-bea6ea28b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b7e1f-b332-4d19-9745-97d870c395c8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eac22e-1cf3-46a0-a242-2d1a6cfc9822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f64def2-0150-44e3-af1f-e030d2487563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c7e50-a19e-44fd-9efb-9e8fcea4120b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a6b83-9df1-4926-9c7c-da14f82b1788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93711ff-890c-418e-b52b-7c3595294494",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2289ff0-eae2-45c9-a64d-ca0949b58cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db49f48f-fca3-4925-9491-b4f11b6289e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a176ac-c4fe-4d21-94c4-98f1162b6fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84d3c84-184a-41ee-82e6-d8018a3b0748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1f22cb-f56e-4854-8610-e728fce03891",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfe8e9c-f339-449d-a888-354f281cc686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7a8d77-d3d6-4a3f-a43a-1f577c01faa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cf6b4e-b5c7-406e-a2db-cf7985124b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec95cab0-b6c2-4952-a7fb-89c80285de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faacf5b4-295d-493c-a1c3-4b02ca91c745",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6624995-76bb-48ce-83b8-a905e53c9945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd2361c-8a22-4084-88b1-9c0fcb848cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2defdf-cad9-4237-af57-c3bc2f17aa69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5d27a7-3dc7-4792-9fe8-6de426c3c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e057481-b82c-4e2b-9288-7210d079187e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d473a4d-3b06-40ea-95ad-1d1f36651813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05f9a94-768a-4b60-88ea-85bfa6e9d086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f52585a-249d-4f22-be17-2e08733e52f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad63e8d-4e2a-473d-af68-0b3e8d9db28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e1b97-4e29-43e1-83e8-a500c9a467f8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13625af-a69a-4355-ba18-d66d36371e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c69f458-e92b-439c-b8fb-c5515dce4875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c852d6ec-a9cf-4823-8d5e-02df0e3058d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbc9728-394f-4653-b7f7-3d7815d4b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ea30cf-8833-4852-b517-15631c7881f9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26f350f-3ca3-4473-a2da-a32573dcb9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7d5986-7f7d-402b-8999-43ca28455504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5f84d-b2f8-4bb5-9f05-6a4e8d434348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce20ab65-a776-4297-ad36-4e38367a3373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08863092-2a81-40f1-9cc1-b04ed347078e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282c1beb-72e9-4db0-99e5-9830d266403f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daeaacb-dc0e-40bb-87fd-144b87cdf819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdfa956-c961-4758-9388-4febcd92702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b50d3b-3e27-4174-a6ad-f76e8f6c6230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2df4e81-2e3b-448a-aca5-1f8298339c80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aed4e8a-ca36-40f4-88cf-daf6f3cc49c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac0cf87-ceb9-48b9-aa7a-d582346243c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58670cf-e228-4078-8a4b-b8de38b3cd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10466bcb-11f3-412d-bbc3-e1f43f6fe7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7383f799-f81c-4ee8-b2b0-862793f29cb1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cccbe1-5b6c-4788-b7e3-6bb73658a180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c168288-f989-43bd-b61d-ab36809fa369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6d69d-21f3-41dc-863e-d8602a20ab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86545540-5d09-4087-91a1-83874f925022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f1f45e-6819-4b5a-82f1-26b2becaf4c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdae5dff-bb85-4361-b340-f37de88a575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bfc822-9c99-48e7-8719-fec0ac7577f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f776bc61-1fd5-4e62-8996-0ad15ad1e67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f1dbc9-107d-4be8-9743-f6cfd4399541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6eed79-3ed2-4dc3-be90-5c96e1c3884f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eb1c5a-3ed5-4596-be80-359829f29f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5c3d35-78f5-4ae0-a864-fcaa84daaa17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f9082-f596-4b2e-98b5-184a4b81756e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31198d8b-7983-4e2f-a2ed-bead5f1f5cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4dd866-4710-4e2b-a66c-537fd185d6e1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d53e5a-8e2f-4dea-9bd1-db85a989986f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3663e67b-bbeb-41ad-b9b6-66a5126dc506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573bb203-f42b-4a1d-b2dc-8b663c891b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d52184-f53a-4383-8618-8dafd9499116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921da005-7f86-49f2-9153-2b613cbf3eb4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72182621-3d2f-437e-b161-c60f3e906906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac0f7ab-4fe3-4bbe-8e6a-318af3b90aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76d6d01-091f-4825-984c-798077424a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a171a77e-cadb-4af6-b8b4-643e1013a371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037909d-549a-4fdd-bb73-bf4457745bfd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81970e03-98bd-4165-9c8d-c916e6a64c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4200736f-1cf6-476b-8519-135009962aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f0287-5e3b-416f-81bf-92221d2a0bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3414bfd7-df05-427e-9bb3-6f30751f4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906478b2-45ee-4a68-9d00-9176779f4e10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9452a158-0f08-4e58-84da-5462cbcc2b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5c31c3-176a-4e6d-a46b-3e28c470d675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77ec825-396b-4102-8fa6-9c7d62a528d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781734f1-0558-4efb-90dd-3cd81a30c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73547bb-4c57-4038-b60d-3f31cc4fb782",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc568eb2-ca14-4594-b3c1-98b02d47f195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acffe5d0-ff08-447e-9332-6978f7b8a8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32225fc-8357-47e7-a2d9-3f2907fd1f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7012488-a47a-427e-8f2e-0b17aac0adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b6c929-586a-4a20-8104-2432039c22f8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e52e0-f599-4052-ac92-e245ee1b3a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a99b71-943c-472f-a85e-148c35e2ce35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a48697e-8e4f-487d-9e3e-42183e9ee76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350bae7d-fe7d-49ae-a63c-09569a8203d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52001bb2-809c-4d2f-ab8d-e76bf9a14d6d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe804c0b-a7e4-4bcc-917f-136864376960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f85bd6-9795-422e-9411-94ceb7576f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a47925-ca3a-49e5-970a-0c6f113c54e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2aa5c0-7f02-4098-a1eb-7b0d63ee70a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6830da0c-c9f6-4e94-af10-1a6809e53ced",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a0398-435c-41f7-8a0e-a181ed070c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25de3638-4af6-4edb-b4c5-c39e0bb61e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c546b3-e0c3-42ca-ae60-11eb71927fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164d15a1-68e1-4c60-935e-89c7d8147801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c842344-693d-4091-b6af-6b76e1e8e00b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3fdd78-9122-4b3b-89e2-633f750c3fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5bc5b8-50c0-451d-b23f-e4955d9dc033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078238f-b269-4024-b053-57aca63ac851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d832387a-50ee-48e8-ad17-9f67b429de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceffbf6-fc61-46a5-b693-fef1b7bd2f78",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583c5914-46c3-40e0-bfdc-5b6eef1e7324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c4a809-5cd7-4d41-9b52-1e2be9b767d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0811c27-7a22-4a94-8334-d19a46855c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b68a99-c6f9-42d9-a6a8-22d22d7d2ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcb2678-7cfb-4dea-923c-3adfdc070147",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19290709-0166-47f8-9953-9ceef4d48855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5e698-ee53-40fa-b04e-8e2dc9eb9fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfbd43b-c985-4212-9489-011c495bc61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f2d52c-5059-468b-b8c5-eef09ce7b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa7b135-77b6-4a8f-8b9b-ae353dded48f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a424a31c-1a05-4272-8fdb-6995d28b4acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c6547f-ccff-43a8-b157-6096cccb844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccac815-7316-479b-be3d-202a6d0a0747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c0c1ae-76a0-4a0b-845e-b525c55f5cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9f0b9a-3415-4531-88b7-8cfbb784dd26",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cabe6a2-ff1c-4f8e-889a-97be71e0d50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6984a37e-d7a4-441e-ba1b-e9ba03f4bbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1def473-b918-4d2d-8403-7bb2c6736d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78420bb4-e7c8-4f8f-81aa-3a87328754c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3810e-6292-4514-861c-d618899c4a1d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6569acb7-59d8-42c3-948c-59d342a5ba10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8800291a-9ebd-46ae-a47b-43e2738322b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c3393d-5e0b-49b7-bc09-6622ec6a6ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83f2fd9-ddee-4bad-90f6-2bd68552da34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe7386e-ee9c-4013-88e7-a4fa7ca59400",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c86a84-8e33-4149-8739-60aabc5c5675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b020999-bd2a-4dd3-978d-39f912d3bdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27a09e2-d2fa-41ef-baae-e34ab6b23a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b65c42-378c-4049-8f34-a479b87290cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0378aeb9-7ca5-4c48-9267-3b44640341ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc73f3d-4d79-4d75-a151-d1764af9f53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a678cb19-9a91-4040-b935-1839e81db76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dda7acb-6009-4a98-9a69-e4d6ceeeab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c5179b-6448-40f0-a3c8-8de22247e354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad17b445-ddbe-4471-a5e0-713bf5ddd4d7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29afb7a8-0ad5-4651-8c4e-d3364837f554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74daeca5-3683-427f-936c-8ae223b99f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9c8ee7-0e50-4886-903d-48cb7cec5361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8bf74a-982d-4624-9dfe-42cccdb9874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06522d25-fd60-48d2-8604-943575845705",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30c9737-b43e-4392-9f5d-d5ded6100c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f884bd-e07a-4a33-aba1-a54e6741639f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b04e1-0d14-4bd3-8baf-3f72a091ef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0d092c-d125-4584-8d32-c1a897a46fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7301f112-77ef-480d-a030-6f1fada2f1fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaaf4cc-6ea8-4955-afa5-8de2e0f3b84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e08ce3-504b-420c-bf17-8ce9aa6e95f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7efaee-81f0-46d8-98bd-37ee1154ad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439c9db2-1714-4cbd-9264-0cf32b507b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8a0599-2a39-423d-8a55-31076befd5a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0938c8a0-3e4f-4cef-91ff-61f20fb8e186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7de32d-8995-42cf-8a91-12129b9a3e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed61b4c8-e74a-4b08-82f6-11d6cdc730db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79415ab-fe4b-4a1d-bf64-79cc7ba166ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e046a09-c93f-4a2f-8268-212e000a41b0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c7e7eb-eca1-4bb5-9960-5e4cbf0fe0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d31fccd-ac3a-4b3b-a430-eae50c9170f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe1ebb-cd03-46e9-b23f-5d0eae81a48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9973c21c-57a4-49e5-ba9a-e2870ee4d29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e93dd1d-1654-46c5-aa15-4b2d31ac5766",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d1087-fb47-497b-b55c-b89a6a858a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9268c21-0657-4489-8560-008908dac164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e497b503-52f2-43ab-b7d0-976727ec807f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49981c9a-54b0-453f-98af-cb58ccad5c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b4f38-604f-4e9f-9126-04c5854a6f2c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaeae54-78d0-4d8a-83cc-4c824e0de06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb32e8ee-d6c9-44c0-bf50-29e1364dfef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2223b9a-67a3-45c2-b3fa-871822c26fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80087cb-0931-42de-b0f8-a88b93ccb030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb77ca1-1044-4417-965b-35dd3431e9d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c114d69f-7e27-4d93-98eb-0ce3a2ceb745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc57db1-2906-48f4-8bee-294f007c917a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed591bde-0fe4-4331-af15-6f29ed19fd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de3df73-a7d0-44c6-b4ea-d32282f06688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb56f5-f89a-421b-81cf-736621623c01",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9530de-7946-42b0-9cdb-69e1d207f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95be5bfa-74a5-461c-98e4-6e925ef3c804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e48cf59-8667-40bf-9c24-0b7e10a5000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec433241-3094-4651-818c-52d8b6dcc6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701e240b-78fb-4b69-bf5a-306488592a12",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751d66cf-2aea-4a3b-870d-a6a234662185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8be99a-4b65-4846-a226-a9ada63c10e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290604a9-0fdd-4ddc-8139-18d4124f7a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300b8074-6a01-4650-b0a7-f4067c390838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb3f73-96eb-4035-9961-991706e5bc3c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28097f96-2930-4fb8-9ff4-6f4aa75f8cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f897d883-da26-4809-bd7d-17af37bd097e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f6790-cb70-454c-a45b-d165416c8bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f175f6-f66d-44e4-be6b-ea1690243651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c2ca45-4bf6-496a-9abb-ccb55142ea37",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d86fb18-713b-4e22-bd9e-45eaf813b61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3dab78f-c94e-4449-b187-ffb6eafe8432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94896929-ca61-4fb7-9ff9-6d48f920faa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffca4d3-d469-4b6c-816d-284980b3c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d004a5e-d9af-497d-8789-183cfe96da3f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44600442-b73f-440f-9e23-48c13dd7f202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7dff3f-1686-4449-95ff-05e9c7c89455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d2f965-2ead-40c6-9874-0679febb2aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78c530e-9528-493b-8d6a-05918a9b0ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e774e-1924-4669-ab56-88c39ae27280",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e595193-50e4-4f2c-814f-76ff052be92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd663991-b9a4-4a00-8bda-a6b9679f5a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d3e1de-8fc2-4718-8a69-4dd15ae3fba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e52ca4-452d-49d3-8e15-2d5f0b3cd45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c4483f-dbe7-428d-99e8-ab26b57526d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c2c7f-1f3a-4198-aac7-5c8c5d5e2407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d635e119-9343-4b5d-a39e-e55dc5e0311c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1736680-4bd5-4723-ab22-d754a16ff00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5009f3-579d-44b5-927d-8961570a3d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4e4864-6e7d-4295-95b5-52ed9d346fc8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22539486-1167-4386-9863-0abc76bd2f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4745de7-a871-4811-8281-c5f5c5060620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb76cf15-b64c-45fc-9ef5-8b718143a01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3491c6ce-0c50-4f37-b4ae-987afe1b20d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eb1cc9-fd36-4798-ad36-25a925428b7b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab9717d-bedb-427e-8b62-d2d1ff99ae91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5909f398-330d-4fc0-99fe-d27b441d2d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e20453c-b264-43fa-bcee-65ecdd1a91bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ce867-e974-41b9-9387-d42881172ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df528904-cc90-435d-8dd2-622c41058b0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6738546a-c75c-4035-8e53-da242c750f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fcf3f6-0e0c-40c3-83bd-0fcb706f008c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bde3e01-64d5-492a-a59b-0be30872df14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c133f9cb-c114-4597-9f78-c79844ca1db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6018c583-f34e-4958-9844-fa44a555ecd0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dbb79e-9115-43f8-8bd9-f8ceecdf1edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a27905-7fb8-4b61-b757-a64119d7fefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c998a012-576b-48f4-be17-95852084efda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a711bde8-a8dd-46b9-82b9-9c9ab75b7c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1316a12f-7d68-4afa-8c9f-0aa8cdb066f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9974de44-2c98-4672-9e0b-088ff53b49da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec3c00b-793a-4b24-b750-a76ff5a7642b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b2e96-73de-4170-bbef-1b34e38468c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669f085f-65c4-42b7-bc98-6946e6baa1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c129bb5-6fba-41dd-a6db-13079520b91b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846b823-fb0c-41eb-a7a7-9753d2896fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910ae85e-6474-4a2b-a52a-3ac1e09836b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7401470-1c62-4a33-944b-ce61a0c5b074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2ed5d8-0d27-4eba-acc5-baceba113816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8ceeff-bbd3-4e16-a893-7d4ea137b56d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69a13f6-6af4-4945-90ab-67d4bbff71b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a94c844-657e-48c2-88fa-68f5517852d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb406e9-f058-4060-a396-599958e8388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b2c26b-e695-44b4-b8cd-f08f3e396cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a8248a-5922-49af-9fdc-4e8bf1616f84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafe27a8-bd58-4092-ba76-0af1377f3339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df128322-24fc-4b51-861a-b1c3b968e8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e808c-6924-4b8a-a271-6680638b2025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431948a4-ffbe-446c-b2aa-2e5f5aaddd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e49037-4cfe-451a-89e9-0edb699c6c90",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698ec8da-7a64-48c0-a3ac-f0e3581f161c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf2a306-5afa-4354-8841-9fc397f5ba9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32e5482-bb61-47db-b300-9a742c33b030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89f625d-7d1a-4142-b378-1e9faec8e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d497c-151d-4c1e-899b-a2c0df99bc79",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89db76e9-5fcc-4665-b7f5-259a7518a1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8423de-f8b9-49bb-964d-527b35a3d92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba2205-245f-44ec-a532-9b97f97b97b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ae9c7b-fbcd-429d-b6f3-47feb01de6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864024a3-086b-483f-bb60-22d064cfed0c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac4aaa-097d-4c19-a004-c40e5c480de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa904cb-8409-4550-9d27-b2571de0a4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb52492-6ade-4bf9-9f5b-f8a180815870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d49d993-472a-451d-bbec-ab483c91a093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2394df-46b3-4c61-863b-905287da6a41",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3466bd-0a0f-4767-80ee-053040ff95c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacc3de5-20de-4fa7-8246-4722ee9408bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3b7f24-8685-41a4-90cf-7e0dd32a6fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0896c1b3-77e8-44fe-8ed3-027aaa139574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db342131-5f6d-496d-b413-80d8fb4f1957",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020af48-e486-47b6-8e00-0ff4238cdcc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10be2e37-85cf-4a21-b774-002e53b52a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60efabe-6a1b-42d9-bed5-47b57b345e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a2acd3-b042-4e71-85e3-f5856be198f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43170e77-bbc9-4103-9b08-62cb441bdfcd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3f2e67-abf9-4bb2-a6ee-1fb99158b56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07316b57-47cf-47c2-b868-9942832c18a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8cb51-f0b5-4617-ad44-93230e66069a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34886feb-2cc8-4ee5-b878-bbb97ee697cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cf2a35-9336-44d9-b49e-67f8272f2cf7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bbcc3b-569d-4bf9-8ca6-b9d7334e7a81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f684a3c3-ccb6-4a51-aa07-4f1983bb23a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e974eb72-899e-47f1-b04d-1f5bdca4c073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae32bf7-fdd5-4334-ac7b-d99ab0b4d243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c7bd7b-7067-4113-97b1-3b0d5875d507",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed88b92-2e86-4af1-b90e-03715a0d449a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8a1b98-5ee2-4d10-a82a-b28766aa81ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4987069-21e8-4b48-8d92-5899d0c24b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c24d68b-6224-4443-bf07-f9010757a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8448880-ed0c-430f-a46a-69aee2d49063",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5abe1e-9964-408b-96c5-6df0c369b410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a973b4-a8a8-417d-8bfe-a7040e42013f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a1e44b-1b87-4394-9f59-01df2740f855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d37350-ecde-4497-91ed-221933c3c9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0aae16-8003-4513-b1b0-46ec00433557",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa58e2fc-a26f-4160-a569-c224a75b23a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00ced11-c3df-43dd-8b48-34de63057b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c76a37f-2f97-48a8-bd48-b1cfb63873fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f71dc4-ad55-4c13-8993-945c8e83484a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6fb0f7-a4b1-4421-aa20-6e4c6d59a99b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648c00e-e8ae-4ca0-a445-1f0d76df960a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d4ffbb-d143-408b-a379-3e67f49cc105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614df3b2-9f75-425a-b228-ddc320ddc685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d53a94-f952-45b1-9ab5-621fa0511d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b679f80-3856-43e1-b98a-fb86c49cb94e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8916c4a6-3c93-4231-9d2d-87b4ac952e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0325a949-4af3-46c2-8fec-78bbcd8628c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076f19e7-b3ae-410a-b2f0-ea7e30f38973",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a0737a-a7a9-4c8d-b2d5-4436d48a059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4303b420-13e8-4d6b-b3fd-358fc0fb57b6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee29549-78a2-48df-ac85-2b81a3dae011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67c9a91-cc0c-43b6-8f07-ac4ef14237c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a1fb4d-6674-40d1-acca-c0ffe75cc110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cefa29f-d975-4e40-a8e3-b6482c94ef08"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f946e2-af3a-4ef5-a5b2-d64d12a43103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ebd0dc7-b470-4e7d-8fce-8f9c4a1037bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a50bc1d-aa40-42ff-bff6-1b3e1a2177da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e281d2f-6231-4373-a4e9-2d8dc74ac69e"
                    }
                  }
                ]
              },
              {
                "id": "49bbe90d-f6e4-4aa4-a562-d1243c21ea7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2617a2e-8600-42cd-b41b-2a8db14284c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00be427-9a4d-45ba-a058-46f3dcc76825",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1dad4f5-0389-4ae3-826c-8e2e2c0e3be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1717460c-2fc8-443b-b36a-192a139dad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce4ab6a0-369d-4ee9-8e7d-64e8b70d90f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "001d86e5-cab2-4168-89de-e259e8b2f707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f824e5d-325d-496f-a7e1-2f30d1fe414d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eea7f69-3f68-4d6f-b619-83c32a39eb2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ebb3d4-c7da-4ff5-9b06-0340ba86c24d"
                    }
                  }
                ]
              },
              {
                "id": "117da80e-001e-4935-af49-6a664e4e2bfa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "019762fc-161f-4487-97db-d5ee716c5410",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202d2cd3-4273-4998-a273-f08321e4b0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1ad47b4d-1786-447c-8579-3d6059ba1f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7ed871-a019-4839-900d-2059ae04a86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92bb52d-d6b4-4432-bf3d-0eb9b0baca71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72512596-3bae-4e96-9547-967bd9f9672b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "998d5233-8269-41ae-b06b-339fc8b821c5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5dcb05b-bca8-4926-8c61-47f759f37b18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d172cf1-4769-499d-9871-66f8e45cf1da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185191e5-8398-4039-9e39-b7e81dac25be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e048796-dec0-4353-8316-46a9bb2a4821"
                    }
                  }
                ]
              },
              {
                "id": "9d607374-0ef4-4301-9466-861819338765",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a5cbd1d-bcb4-423c-97fb-3cecc4cf3221",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a307da36-22a3-4726-a64d-3cde758fa751"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f38f2482-0e7a-4a2f-8528-26757aef1582",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f13c55-75b8-4cff-b358-540db29d3e05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae3b82d8-48d6-4805-8e18-bc167f9dbf86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "227bb8d3-ea10-4a59-bd21-b7ff8bc8f014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6824cff8-e79f-4040-bbb6-bbcce8f9d0bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6440e68b-7113-4199-b0cf-fd470b43c681"
            }
          }
        ]
      },
      {
        "id": "ee54fb54-c48f-47be-953a-3949e787b783",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e1c33e5-ace9-4f70-9b9e-80034aebdc50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10a46fef-8307-40a5-816b-e08fb6ff39de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "687455ab-0ef5-4be3-a6b6-f95fb0660a67",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effeea0c-09de-42ca-a23a-22934c6cf337",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74bac751-a653-4cd2-a1c1-5c64641e2748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391136b1-1104-4a76-81f9-64b660c0d4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2760856a-1643-43bb-99f7-1aee83c52673"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26287950-a21b-46f3-baee-97dc8394f58f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d150764-d0fc-4202-95c7-2a270c8a41fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee41ffea-a6a6-46a2-8f73-5468e9a89ab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "500748af-90ac-48fa-a8e3-cd742479ac20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e57fe63-4f82-4a01-baa2-5ef414754ea5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fda11e1a-a12c-401e-8195-9ef0b816208f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0be0f6fb-ce34-4443-a6df-f60cd478a676",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c0fa4b4-c5ec-41c5-ad11-213e708771f9"
            }
          }
        ]
      },
      {
        "id": "dc103b6e-dfe6-41ba-b33e-581505110731",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9cb5540a-9519-4c37-b659-c91b5a1f8616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51060d04-8b42-46cd-af83-92a4d4d7bb83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c97514f-122b-4577-a0aa-40d769c06995",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff09d0d2-1714-4c11-aeed-7a5e4536b157",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf9b2a1-ecf8-42a9-894c-635929bbc6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c677b9-5a01-4088-b7c1-31699e2987ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3040d719-94b4-4d21-93f0-5e42ff6275da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88c0a024-bd47-410d-a999-88d6428c5249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c13981b-fc36-4c6f-bb3b-2fb3d0a0be3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40343ba6-141a-4263-8278-374f05b1d3d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f6d98c0-afaa-459b-ad96-86a83a2b23f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6c8e0d9-7390-4647-9d6b-24015efeeca3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "170c9e3f-637b-4bec-9a45-ff3bd0add0d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aa6ec99-219d-45cf-8cc4-8348f37f959b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f0f1235-4869-469b-b90e-bbb17844db1c"
            }
          }
        ]
      },
      {
        "id": "e4ebf9be-d332-4a4f-8472-1ec9b360a4a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c96eaab8-7374-4412-9fd0-d918286c3bc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d162505c-29c9-4f52-a470-5c43e9989ca2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3edb3074-e32e-4d7b-84f9-32070e934b8a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f455bad-3659-438f-9d6b-6a7cc791fb6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "740eb9f9-5bf1-48ae-88d0-aff76923e888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ec2a7-48b3-4420-b58a-4829b9bd9767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db917836-76b8-4d16-abed-afdd5752ec59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804ffc93-9820-4a56-a271-665c2a360ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc77b4df-eafe-447b-8fa9-e7e9c12f44b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8909b07e-0d3b-4701-967e-f52b6f70550c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "117651b3-59d6-4843-8770-dfe468cfb7d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ee2f5a5-296d-4af4-b3a1-af5c4eb9ccca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e072ef5b-d5e7-43f6-a955-f99aa49ce495"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "962f3dc8-ffa7-48a5-834f-d66d2c926136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "588fa0f3-1509-436a-9b90-3774357e57ec"
            }
          }
        ]
      },
      {
        "id": "36f911e7-2646-4b99-b778-cc73def08942",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f36770-e762-4318-a0e3-b4d29219b209",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47769b7f-ddf1-43a8-bb3f-40d767bcd06f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7385c43-1815-4d46-be6f-4bee1d76c765",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "293a3cfc-8abe-4310-92fa-4abd9b6716dd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd360bc2-e6a7-45ed-b5c7-279579be8a97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.92280701754387,
      "responseMin": 6,
      "responseMax": 348,
      "responseSd": 24.096028773367774,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705710959712,
      "completed": 1705710987372
    },
    "executions": [
      {
        "id": "bdf6b6eb-6e6f-40fb-a8c7-7582ff232a8b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c51ef80f-2f09-4d98-9125-328b60152112",
          "httpRequestId": "428b8720-bdf7-4d0d-a2f5-f6d08cac403b"
        },
        "item": {
          "id": "bdf6b6eb-6e6f-40fb-a8c7-7582ff232a8b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1ee55568-fbfa-476a-90a1-f5e97ea966d5",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "4b9c18e5-4872-4f1c-8cb9-ea0570010a4a",
        "cursor": {
          "ref": "e804fc62-4044-43c0-b7dc-8be3f8207f37",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b4c066b8-ba90-4070-9bb2-6c0da5627be3"
        },
        "item": {
          "id": "4b9c18e5-4872-4f1c-8cb9-ea0570010a4a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aed902ff-99cf-4dde-b0fd-5de339a3892c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5eb70083-ee5c-4637-9dc0-150211195c40",
        "cursor": {
          "ref": "bc764ea7-1381-4b15-9ea5-80830eeecacc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b67c81d6-94a3-4828-aa12-ce7df74f86ca"
        },
        "item": {
          "id": "5eb70083-ee5c-4637-9dc0-150211195c40",
          "name": "did_json"
        },
        "response": {
          "id": "baa81ed7-50c8-4e83-a8bf-b7b9a16065aa",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e3c610-e711-4972-a43d-06a3013895f8",
        "cursor": {
          "ref": "58c2741b-4ce7-4050-8922-857b4b5a20bd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27f3ac0f-a4d5-460e-8ff3-5c108f7b744d"
        },
        "item": {
          "id": "d4e3c610-e711-4972-a43d-06a3013895f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cddeaea-5205-4611-9f20-f93d3d92f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e3c610-e711-4972-a43d-06a3013895f8",
        "cursor": {
          "ref": "58c2741b-4ce7-4050-8922-857b4b5a20bd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27f3ac0f-a4d5-460e-8ff3-5c108f7b744d"
        },
        "item": {
          "id": "d4e3c610-e711-4972-a43d-06a3013895f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cddeaea-5205-4611-9f20-f93d3d92f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c904b7c-b791-4abc-9295-67f053a90620",
        "cursor": {
          "ref": "0ac7561c-5957-442c-ae44-300a106cf79a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d03b00a9-ee8e-4f51-ae57-588846775ba7"
        },
        "item": {
          "id": "3c904b7c-b791-4abc-9295-67f053a90620",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cc614e1e-250f-49af-b97b-272d37dc276d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 102,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b3978-298a-45e0-9ec1-7dead5b7376d",
        "cursor": {
          "ref": "7dac9a51-3cb8-4647-9092-cfda658ed2dd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0726510c-7b1b-4021-8aa2-b864b93fd2e6"
        },
        "item": {
          "id": "276b3978-298a-45e0-9ec1-7dead5b7376d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "be316be3-f343-4257-bcf3-a79a75292d02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502582d0-0436-45fb-a702-f79a7d2d05b0",
        "cursor": {
          "ref": "42b20d52-a21f-4a31-9874-d26bbb1aeef2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b8eeda3-0de8-4440-bb2d-8f3a292af7be"
        },
        "item": {
          "id": "502582d0-0436-45fb-a702-f79a7d2d05b0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "71eb07ea-5b6c-416f-be30-ac4729134f57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e1226-7b62-4b9b-9b44-6875147ef95c",
        "cursor": {
          "ref": "f83786b7-ecf4-47cc-848b-bc3a7f0a4a0c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7fbcfea6-1f5d-498d-acb3-dcaaadba00de"
        },
        "item": {
          "id": "ed1e1226-7b62-4b9b-9b44-6875147ef95c",
          "name": "identifiers"
        },
        "response": {
          "id": "c080218d-350c-4ee5-bf29-04a8b683f2c1",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94db8ab-6ad4-455f-bd43-d69e9de4cc47",
        "cursor": {
          "ref": "a83b070e-d2de-41ec-ac51-3acfa48ffcb8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5e1bade-7991-4673-b194-79f16416caa8"
        },
        "item": {
          "id": "f94db8ab-6ad4-455f-bd43-d69e9de4cc47",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b04572a-9508-4aef-a05e-ae805d5984d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3bf498-3bc3-4029-b11d-c83d2f762e94",
        "cursor": {
          "ref": "85324ee3-995e-421d-b492-c4e2d0559b98",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1cbac9ce-decf-4af1-8473-915ceccb3f5f"
        },
        "item": {
          "id": "4e3bf498-3bc3-4029-b11d-c83d2f762e94",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0b3a8376-2fa5-4af7-a42f-fbc6cbd301ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537a43b8-60e7-471b-b58c-a62652a97492",
        "cursor": {
          "ref": "11a79305-f23f-4e42-b128-bb4f6df3df0e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "840908dd-c4f3-4d20-a606-34c96ad7d391"
        },
        "item": {
          "id": "537a43b8-60e7-471b-b58c-a62652a97492",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "891c9bf8-e857-4075-80c6-ca9d347577a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5e8b66-0144-42d8-9e1b-24eda177e8ae",
        "cursor": {
          "ref": "d19adcac-537a-4f17-a27a-a02e853f2bb4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b3ebc2a4-ebc9-43bf-b32e-a9cc73f9fb3b"
        },
        "item": {
          "id": "dd5e8b66-0144-42d8-9e1b-24eda177e8ae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79126b61-1d10-4afe-a98e-37b70bf18dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe7c450-eaa2-4cb4-a71b-d75acb5b329e",
        "cursor": {
          "ref": "b30b7709-ed99-4f03-bf90-3b6b32a5624c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4b5a7429-07a5-4d41-aaf1-3a423b30e71c"
        },
        "item": {
          "id": "bfe7c450-eaa2-4cb4-a71b-d75acb5b329e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "de1a1067-9f3c-46a7-aaf3-3802bbd02ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793df242-bf69-464a-93bf-c37494c00b09",
        "cursor": {
          "ref": "0d418707-0147-43c0-a3b6-f8635c9c067a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "52e7c2b3-cd09-4c7e-a031-25740f8fb51d"
        },
        "item": {
          "id": "793df242-bf69-464a-93bf-c37494c00b09",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "25195332-471f-4195-aba0-931348dba370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c876b0-3cde-4469-9475-a93a6decaa26",
        "cursor": {
          "ref": "10aadd99-149b-402d-a5d9-18854d4acb55",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cf527d20-5fd1-4d13-a236-d8338a8e4675"
        },
        "item": {
          "id": "e6c876b0-3cde-4469-9475-a93a6decaa26",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6cd126d8-1973-4458-8fbe-1d0b025e953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145be323-fc07-4021-ac0a-35eb4811fa4c",
        "cursor": {
          "ref": "85b309c7-b178-4d2c-bad3-537257f3cf16",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bd51679d-5580-4e91-9b4f-b095c3e93e10"
        },
        "item": {
          "id": "145be323-fc07-4021-ac0a-35eb4811fa4c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14d62590-79e2-449f-9224-1d94917cb159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed3302-49e8-4840-b1aa-b2062faa0af9",
        "cursor": {
          "ref": "81513c9d-8629-4cd5-94e6-b9409767f70c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eeb258a3-645f-4eb7-95f5-8967187194df"
        },
        "item": {
          "id": "a3ed3302-49e8-4840-b1aa-b2062faa0af9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "146ddad8-13e9-4561-81e6-023a147de9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582f0df2-8ea3-4872-959b-57d4c14639ba",
        "cursor": {
          "ref": "e87992dc-dfc2-4143-9e10-1d8153501c21",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "09f8b464-f278-4a37-bded-71f3aa98b425"
        },
        "item": {
          "id": "582f0df2-8ea3-4872-959b-57d4c14639ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4a271dd4-96d4-49c0-90aa-60defd2a3654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44444cc5-98d9-4669-be38-2021cd9c7295",
        "cursor": {
          "ref": "acaf57bf-d3a9-498d-ad94-91107279767c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "98e25cf0-63f9-4f83-a278-cf611ba5e7ca"
        },
        "item": {
          "id": "44444cc5-98d9-4669-be38-2021cd9c7295",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e739031f-68b9-41b4-ba1e-0520b7a7c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e8a82d-b833-47ea-b98f-b4a1b7a18166",
        "cursor": {
          "ref": "5fb26043-774d-4bb6-8841-a41fb030b943",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bc04fc15-629b-45b8-ba1d-b620e413428a"
        },
        "item": {
          "id": "46e8a82d-b833-47ea-b98f-b4a1b7a18166",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "97fe8fbb-05d4-4c03-8437-79c2169a5eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0258893a-b408-420c-b61d-350a02d8cf19",
        "cursor": {
          "ref": "60c96ed8-4ef1-46e1-a45a-32876370e030",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4654b78e-e27c-4c09-8234-f4fee0aba4d1"
        },
        "item": {
          "id": "0258893a-b408-420c-b61d-350a02d8cf19",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e338fc2a-ca0a-40fd-aa34-5e73e5428f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9722d255-43de-4a1e-afd2-ee296c9bcad3",
        "cursor": {
          "ref": "13d11975-f5e4-4f60-9bd3-724040ad4f37",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "edefbe58-80b6-4037-b313-b597d6066ea1"
        },
        "item": {
          "id": "9722d255-43de-4a1e-afd2-ee296c9bcad3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b32fd569-1c2b-421f-9f19-a2e01d76e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a043c717-9cc4-4da5-9920-957801e4b333",
        "cursor": {
          "ref": "f43ac0b0-0a59-4448-ad9b-5cf83f5eb136",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "49132aaa-5638-4d8e-b8a3-013c1ab12bf3"
        },
        "item": {
          "id": "a043c717-9cc4-4da5-9920-957801e4b333",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c11e9ea4-e504-4a07-b752-34eb94c46dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db729e0f-659f-4670-9c98-17120c633302",
        "cursor": {
          "ref": "eca30cd7-c801-4566-8ea3-e20602720ead",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3c3c353f-d2fc-49f2-8260-682b92a3f947"
        },
        "item": {
          "id": "db729e0f-659f-4670-9c98-17120c633302",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "39a0b198-791f-47b2-95b4-d9ea4996d815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee708397-b865-4b9f-88a7-edec68f70db3",
        "cursor": {
          "ref": "c20dc8aa-cbc6-49c0-b193-b7aae6e88c18",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "405e35fc-fa4b-4e10-b1a5-5f833f0f3218"
        },
        "item": {
          "id": "ee708397-b865-4b9f-88a7-edec68f70db3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42dbb0ce-8686-4c5c-a245-bff272168b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f46bb-6e96-4d14-84bc-11e8c7f15bcf",
        "cursor": {
          "ref": "bb9e39f2-a16b-4244-a704-d6ecb8037b82",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ec5e88b9-eec7-4db0-b2f6-c75e5ce6b8ff"
        },
        "item": {
          "id": "8c6f46bb-6e96-4d14-84bc-11e8c7f15bcf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "def690d2-af83-485e-86f8-76ad01ee507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945551f9-bb63-49f1-9e47-e6679974b492",
        "cursor": {
          "ref": "dfa5086a-32cc-4d52-a3ce-31487b98c83d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "93773a81-2676-49af-8c07-335edb8d9e59"
        },
        "item": {
          "id": "945551f9-bb63-49f1-9e47-e6679974b492",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5c3e8c41-6e40-4dbc-8720-2c96bd531da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e841121-da89-42de-8ba0-5bb65c94518d",
        "cursor": {
          "ref": "d40e9015-bde1-432d-a6c8-a58c0778cbfa",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e7c038d-94c5-4d0a-b453-c9fafe0a943a"
        },
        "item": {
          "id": "7e841121-da89-42de-8ba0-5bb65c94518d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "79d0f105-96e4-482f-9a06-c09fe75a5d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab6584c-9ff7-45a1-b3b4-6bbdf600b42d",
        "cursor": {
          "ref": "0b5b5b06-aa40-4f92-bd4f-e7f9751a0544",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ba19bb3c-be96-4eb1-8e32-b2e68e478ded"
        },
        "item": {
          "id": "2ab6584c-9ff7-45a1-b3b4-6bbdf600b42d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d89a0b69-d232-4fe9-9338-c8c3196129fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6faf136-a76d-441a-8f8a-0598c68fcba0",
        "cursor": {
          "ref": "b9f3d251-733d-4003-8c25-a9128d329ed5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "352b9145-0696-4871-a6d7-2ec58cfd2590"
        },
        "item": {
          "id": "e6faf136-a76d-441a-8f8a-0598c68fcba0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b660b97-fc58-44d1-a852-ab4afdd2e4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a4b2a-a9ea-4dde-a59e-74fa9ac569bd",
        "cursor": {
          "ref": "1dbdf8d2-9065-4595-996d-feca4a3e4a5e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "884d26e4-1321-4e4a-a127-43b5510ea983"
        },
        "item": {
          "id": "ae1a4b2a-a9ea-4dde-a59e-74fa9ac569bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3c4c0b0a-08e8-4a6b-b92a-871f07b172c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b53251b-2a0a-4990-95cc-528068247f28",
        "cursor": {
          "ref": "632e15ac-6f07-40df-be51-6085931e3e74",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1ab7132d-b13f-4f6a-af95-84a267c0e45e"
        },
        "item": {
          "id": "8b53251b-2a0a-4990-95cc-528068247f28",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cb8be628-8765-40ff-b3c1-8968edc1a04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6017a5-89de-4e0c-b7be-6aba036c537d",
        "cursor": {
          "ref": "df6cddbd-f90b-472b-90f2-477b42eb2c56",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "47747f28-db17-4638-be65-3e57b7f71272"
        },
        "item": {
          "id": "4f6017a5-89de-4e0c-b7be-6aba036c537d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "03f64bf5-c58d-4c98-aa48-4a96a0d71b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02d0ab-8585-4e4b-9971-ff75b0ba1c6a",
        "cursor": {
          "ref": "e0461de5-1efb-468d-964f-620fbe61a53b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6f8bb7c4-726a-4234-9959-3d43db834472"
        },
        "item": {
          "id": "fb02d0ab-8585-4e4b-9971-ff75b0ba1c6a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d5f78594-a54b-4889-aaa9-762676719e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7d0787-1185-4549-856c-1da7d4bd721f",
        "cursor": {
          "ref": "85daac92-77c7-4cac-a656-be4e1e1944e7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "25c7f8df-9a2c-4f63-a9fd-e00c00aeef13"
        },
        "item": {
          "id": "2e7d0787-1185-4549-856c-1da7d4bd721f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1555e52-45da-4c56-b95d-acdaba33501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6571c96e-8074-41d0-9dd2-eb12c7ded6bf",
        "cursor": {
          "ref": "e4b8af85-9287-4321-91e3-817672f7bdb9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "87eb9478-a45c-4b44-bba2-c8869816841c"
        },
        "item": {
          "id": "6571c96e-8074-41d0-9dd2-eb12c7ded6bf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5fde9f47-eca9-4277-b4c8-b45ef2c85c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b558b2-6f75-4ecb-ad73-c0e7f5edabee",
        "cursor": {
          "ref": "8336e698-c18b-4b9f-9f4a-32d0c5d656cb",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "338f01ea-f8a5-4e59-bed0-c889fb24f179"
        },
        "item": {
          "id": "56b558b2-6f75-4ecb-ad73-c0e7f5edabee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3261d478-78ca-4da2-8619-9e34032c0816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520d306a-b828-4d54-acf7-f6a65cb756bb",
        "cursor": {
          "ref": "a9ae6aac-f26d-48e7-8f90-a5615409cf79",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5833a2d-9cfa-4b70-88e3-e1478acd667b"
        },
        "item": {
          "id": "520d306a-b828-4d54-acf7-f6a65cb756bb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "13db88b0-ca76-42ef-8b67-b5fb4a9fb643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce86b696-4b4a-4e18-8506-9852e3fbb9a0",
        "cursor": {
          "ref": "d67463cf-f9b6-42e5-a6e6-2982ed75b226",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9d04e2d8-ee05-43c7-b598-a0470843b7bd"
        },
        "item": {
          "id": "ce86b696-4b4a-4e18-8506-9852e3fbb9a0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6470b4cf-a5c6-4e56-b9d7-92c859e0da28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2a806-af0f-4f43-bd81-6ae0c55ddff4",
        "cursor": {
          "ref": "cc1d3c66-a5d0-4506-8f5b-fe765ab29577",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d2b1972f-575e-4027-9e28-62416a58272c"
        },
        "item": {
          "id": "8ba2a806-af0f-4f43-bd81-6ae0c55ddff4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9d13f55-2d73-4b81-a787-c2eab8d7ccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbd450d-d70f-472d-a9f0-821ead929f48",
        "cursor": {
          "ref": "d6851b01-e23d-42b1-a13c-5104399b854a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f270af1a-4986-4e80-a0cd-3981dda28a47"
        },
        "item": {
          "id": "bcbd450d-d70f-472d-a9f0-821ead929f48",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b908591f-85b7-4a7e-bc88-ec548a1f969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f21150-6385-4346-9cc0-f6ee95f8a36f",
        "cursor": {
          "ref": "b673b2df-7095-4fab-8b25-bfdfd8ae6bbe",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f80ae73e-9bec-4b48-8a39-884cf4367863"
        },
        "item": {
          "id": "15f21150-6385-4346-9cc0-f6ee95f8a36f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47fcac49-2643-45cd-80b0-243f56f2b593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6397f3-154a-4f28-b6c3-21004d8fc440",
        "cursor": {
          "ref": "9b8a3bed-8709-498b-9692-9c025fddbef8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e7d45855-a38a-43e4-8b75-5443513f8a44"
        },
        "item": {
          "id": "4a6397f3-154a-4f28-b6c3-21004d8fc440",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "63668163-fb5f-4242-9711-1637ed9c53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c954e67-484a-41b5-ad04-0b905e4a3fb5",
        "cursor": {
          "ref": "5a8dc712-ad78-4d72-ad25-333a0ac0b287",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "80ed5dde-ef76-47ff-af4a-487143dd452f"
        },
        "item": {
          "id": "5c954e67-484a-41b5-ad04-0b905e4a3fb5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b7c3bfc3-ab19-490d-9cbd-50bc14c05f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a50def0-daa0-48f3-bcba-2aea09f1fe64",
        "cursor": {
          "ref": "6e28e755-17a3-4c73-85d7-0707b36c7255",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c5a69e59-4843-4eab-8897-145e9ebda75c"
        },
        "item": {
          "id": "2a50def0-daa0-48f3-bcba-2aea09f1fe64",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1316dd0b-9f86-44ba-9f86-3de03f76be91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574a1261-cb09-41e3-9fd4-1e026a68ba2e",
        "cursor": {
          "ref": "022cc061-98d8-4be7-99dd-3c8ae9640a8e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f8cdb18f-d3e6-48e4-9183-01e875a147d7"
        },
        "item": {
          "id": "574a1261-cb09-41e3-9fd4-1e026a68ba2e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "140cdaa5-dada-4c8e-a2f1-3337790b34c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6944eb-06de-4edb-a094-7d6b2c81c095",
        "cursor": {
          "ref": "13525d64-9ddb-4fc3-a857-3a6d22be08da",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1c895707-5fa0-4ac9-85c0-c3cdc9b2cdac"
        },
        "item": {
          "id": "0a6944eb-06de-4edb-a094-7d6b2c81c095",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "51b148b7-900f-4105-9999-2f3cedcc40f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b22fc0-cc41-4fae-bcaa-5639090962a1",
        "cursor": {
          "ref": "6b4dceda-1eb5-463b-8c4e-fa170e36ff56",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "470f6b59-274a-452b-8932-1ef9ed3f052f"
        },
        "item": {
          "id": "c8b22fc0-cc41-4fae-bcaa-5639090962a1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fc5fb1b8-8b6a-4cb3-91d1-d2d9ee44a794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ea1c3a-a8c1-478e-b31a-238dbed6b53a",
        "cursor": {
          "ref": "57147464-780a-4e5c-a448-fc8b833b6ecc",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1e653e48-1a68-4b73-93a1-6e12dd31cf03"
        },
        "item": {
          "id": "86ea1c3a-a8c1-478e-b31a-238dbed6b53a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d6fbb086-756c-4a87-89f8-9c5baaf284c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cf03ba-7f6e-4960-93f5-c7663b4597d2",
        "cursor": {
          "ref": "ca9078f8-76a5-4d22-849a-a57484377a11",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "59b04457-66a9-4fed-8f1d-da0b3a51c71c"
        },
        "item": {
          "id": "c6cf03ba-7f6e-4960-93f5-c7663b4597d2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5f7c8bda-1fc5-4f18-80f6-cb961544f7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d8f0f3-5757-4da7-aafd-e446f402bec8",
        "cursor": {
          "ref": "cbe6743a-1beb-4aae-9216-9ad601d6d2e0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2bd0ac5-df89-4806-afa6-8ea0ef0159e7"
        },
        "item": {
          "id": "94d8f0f3-5757-4da7-aafd-e446f402bec8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "411ae9b7-027d-420e-a2a9-34ca1016fdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecbd5cc-6dc0-4976-88a4-33984d5cfc54",
        "cursor": {
          "ref": "3ff726b4-b32d-44d5-b4e8-12de12078140",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e5f587fa-2e3b-47d9-a41f-7c42d7b903b1"
        },
        "item": {
          "id": "7ecbd5cc-6dc0-4976-88a4-33984d5cfc54",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc1ced82-76ce-4a97-8cb6-b75f657a9119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaa4367-34ae-4eff-a0bb-7a056767bdc0",
        "cursor": {
          "ref": "6f8f68fc-2bc4-4a53-8f38-eabb13bd6d6c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a0a3f78d-7447-49ea-b15c-77d8a13652af"
        },
        "item": {
          "id": "cfaa4367-34ae-4eff-a0bb-7a056767bdc0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "53a5e202-cf62-4860-8991-357556719d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a6d07e-00c9-44b3-b5ad-90a3b6117118",
        "cursor": {
          "ref": "bd4ce10f-2463-4938-8e27-8f14875d1028",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b9d5de3-9567-4996-afb1-bbf1902d6763"
        },
        "item": {
          "id": "24a6d07e-00c9-44b3-b5ad-90a3b6117118",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7008674a-e9fe-42a7-96dd-e17e62b8c067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84319114-65f2-40c8-9fc6-4ccec7fb7800",
        "cursor": {
          "ref": "b18f0922-db41-47e2-b620-b2715ab27d38",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d75e4547-9f32-4518-874e-d248f9c08001"
        },
        "item": {
          "id": "84319114-65f2-40c8-9fc6-4ccec7fb7800",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff19ab0d-cef7-4cb7-997e-bf255cf23614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cfb1dd-8458-4551-bde5-2bb238326772",
        "cursor": {
          "ref": "0000c62e-adfb-4caf-a11a-6e262d3b8680",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40c28902-cb63-485e-806d-f653d0286b12"
        },
        "item": {
          "id": "a2cfb1dd-8458-4551-bde5-2bb238326772",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99633580-375f-457b-b234-892efbddb445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0276299f-0990-4cbc-ab88-c094667edb9a",
        "cursor": {
          "ref": "f228e1c3-efd6-41b6-ab89-122afd201e2a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "79b42860-8c6e-4655-97d5-920149e368e1"
        },
        "item": {
          "id": "0276299f-0990-4cbc-ab88-c094667edb9a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f8136d09-e2ec-4045-b5c1-d76bc1a52e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab3ef1b-a654-4be0-b995-68cb99b4880b",
        "cursor": {
          "ref": "73cb54bb-bc82-4b4b-993f-e39cfc5d89e9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3abb23ee-29ab-47c9-9c95-9c4278632824"
        },
        "item": {
          "id": "6ab3ef1b-a654-4be0-b995-68cb99b4880b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c79707dc-bb40-4e2b-8d08-81df210d1e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efd2003-0faa-457a-9d6a-828895bc877d",
        "cursor": {
          "ref": "6e1b793c-2036-4dd5-b097-790c2fb2a907",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4168de60-ab13-4660-84db-8ad33cc477d7"
        },
        "item": {
          "id": "1efd2003-0faa-457a-9d6a-828895bc877d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1fad6130-4821-4787-9b67-8fea85c72cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7431d0b3-c13e-4dcc-b8d8-147b7ae1e982",
        "cursor": {
          "ref": "581513c5-7cc5-4583-ac3c-97d5ee283fe9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c753ec03-af0b-4c38-8c82-d861fc0b8009"
        },
        "item": {
          "id": "7431d0b3-c13e-4dcc-b8d8-147b7ae1e982",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "82e900fc-7ee5-4642-b5a2-1fd10d71b473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf766c-8145-405b-a6cc-bf6b3fa4a443",
        "cursor": {
          "ref": "215e6891-72b2-486d-b61e-d477a70491ce",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7b5ea073-afd4-4549-acec-0bdaa693986e"
        },
        "item": {
          "id": "9aaf766c-8145-405b-a6cc-bf6b3fa4a443",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "099aabb2-6e18-4bef-91df-7402dacafcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a069efc7-22ed-4641-a040-dccf6af7377a",
        "cursor": {
          "ref": "a295d765-7f0d-41ff-a162-53fdfc82ab54",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "51f87706-0b59-41b5-b477-4050ee615898"
        },
        "item": {
          "id": "a069efc7-22ed-4641-a040-dccf6af7377a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e281d35d-c9d8-49e2-b9c9-e6d5a6694025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f90167-bf1d-401d-a821-7db5b4de7391",
        "cursor": {
          "ref": "424d67e4-ca3d-4583-a6f5-183665162c58",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2d16bc3d-2175-4a30-8b16-74258bb37e17"
        },
        "item": {
          "id": "95f90167-bf1d-401d-a821-7db5b4de7391",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "debd7ced-3cee-4f20-ae17-a0122f25a1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd439f2c-df68-49d3-827b-92615661f99a",
        "cursor": {
          "ref": "b2fdd672-3e78-4e79-854d-b610743a19a6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0c3b7469-66a7-415c-8ede-a4b9c4606a8d"
        },
        "item": {
          "id": "dd439f2c-df68-49d3-827b-92615661f99a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f12b531-7cf5-4f42-a185-0307682b5bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f437fa57-5b37-4842-88bc-030362360f4b",
        "cursor": {
          "ref": "017ab96f-d765-4603-aa23-5f408b371e77",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ed15e472-c4a3-41ce-89f0-c974802fb6ce"
        },
        "item": {
          "id": "f437fa57-5b37-4842-88bc-030362360f4b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "71303be7-01b3-4a0d-b2f0-b7e614589c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f66de-1a39-4c4c-9793-6ee8eea4207b",
        "cursor": {
          "ref": "1393a7a4-6bec-4c37-b86d-83cb0d57aefb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "756261a3-d900-4b7c-95ea-373711984683"
        },
        "item": {
          "id": "257f66de-1a39-4c4c-9793-6ee8eea4207b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "93f818f7-41e6-402d-b6b4-71c3c3be183f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f40cac-5f90-4095-8b5c-4b56f7d56089",
        "cursor": {
          "ref": "f51b43f6-d266-4d9a-8882-fb6f46b71cc0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1edfef1-1b20-468c-b523-6a182befe702"
        },
        "item": {
          "id": "11f40cac-5f90-4095-8b5c-4b56f7d56089",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e1daaad4-92a8-4315-86ca-9eb200b98472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97001755-44e6-4a03-99d1-209a54345aeb",
        "cursor": {
          "ref": "0682e7a1-1f22-457c-95e1-06d54b717960",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ce098c9c-fb4e-411b-a52d-9a6a2b9e7dee"
        },
        "item": {
          "id": "97001755-44e6-4a03-99d1-209a54345aeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "339ba70c-153c-457e-8033-4793a3c470df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d1f061-1310-4b4f-a4f6-5ba9245e3ef6",
        "cursor": {
          "ref": "80607bf4-12fe-4b71-a90d-63ef8cecd067",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dda3dc57-6425-4f86-87a6-8a28716d2e49"
        },
        "item": {
          "id": "13d1f061-1310-4b4f-a4f6-5ba9245e3ef6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "89a5af08-d6b2-44f3-bf22-7a11802ab37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18081bf4-a152-46c8-8e56-d87c79074840",
        "cursor": {
          "ref": "1dfbb860-a447-4cc8-9ae8-1d784ab576b2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b560e9c-aa95-4e1c-b1b9-be43b7f12b4a"
        },
        "item": {
          "id": "18081bf4-a152-46c8-8e56-d87c79074840",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6151b1c9-f3e2-41a5-8ed7-8eb2737449f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22ddf73-22dd-45fd-8533-91843f621dd9",
        "cursor": {
          "ref": "13216429-fe84-448a-bfdb-c27f8c39526c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "51e7e8e7-3323-426d-9d65-7da4cc8ffe94"
        },
        "item": {
          "id": "b22ddf73-22dd-45fd-8533-91843f621dd9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "968d6b4e-c4b2-4e82-88f6-1bbfad42dd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b9e5aa-821f-4f82-824c-65bf2ba1cee2",
        "cursor": {
          "ref": "a2e312dd-c3ac-4075-ac5a-11a8ee1b4624",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71c0f465-6a9c-4953-a6ad-d2805c5de5cc"
        },
        "item": {
          "id": "32b9e5aa-821f-4f82-824c-65bf2ba1cee2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6ee8aff5-24ba-4cb0-900e-4cb90766f19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40644337-d0df-4b23-947f-3abb260a7d16",
        "cursor": {
          "ref": "00b2ad28-ea81-48dd-9652-bad6557d9567",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e19705d5-0455-4647-80ef-0723b89c8e51"
        },
        "item": {
          "id": "40644337-d0df-4b23-947f-3abb260a7d16",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "394fe411-9e76-4118-b15f-bf61a1bf271f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3759e7b1-f2c9-4052-bfcf-0d799db667ca",
        "cursor": {
          "ref": "a7a9676c-cb13-4e00-9cc3-fae12211ce6f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2821a461-ca2a-4411-aef5-9d618f6fbad5"
        },
        "item": {
          "id": "3759e7b1-f2c9-4052-bfcf-0d799db667ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0bb40517-3c9c-47dc-aabe-547e3d57538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced16f00-8f76-489b-b5ea-75da4289d7b8",
        "cursor": {
          "ref": "f691770b-7993-48dd-856e-67e776a5780e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b164bdd6-cace-442a-91dc-1f09f5fc89b6"
        },
        "item": {
          "id": "ced16f00-8f76-489b-b5ea-75da4289d7b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ae69c83-f5e8-4f0c-92e0-295d05d413cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db72d2-abfe-449d-a9b7-db9694e3c44c",
        "cursor": {
          "ref": "38d7f0a3-dbbb-4956-a0b2-26fc7536dfe3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b7a07ef0-b489-4a1c-9f32-71a4744d5d05"
        },
        "item": {
          "id": "f1db72d2-abfe-449d-a9b7-db9694e3c44c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "631099b0-a845-482f-8b3d-c9c7d08cd4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18619ea7-5cad-4240-8c38-7f36c5adaccc",
        "cursor": {
          "ref": "ef0a28f8-ad78-415e-ab1b-ea951e95d913",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "06e8859b-21d6-4eab-98af-0b848c6f882b"
        },
        "item": {
          "id": "18619ea7-5cad-4240-8c38-7f36c5adaccc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4cd4751b-f4ed-46c5-bf47-8511dd234ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54838873-6f44-4dee-b31d-da0fe588bada",
        "cursor": {
          "ref": "38890ce6-9ac0-449a-88f3-324f15b31ddc",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3f18ec55-8011-4af4-910f-843d09687f4c"
        },
        "item": {
          "id": "54838873-6f44-4dee-b31d-da0fe588bada",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cbd3d94b-dada-4749-8a28-d2ff2961806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74612b4-7e25-4b32-8930-03ac1dd5d7e5",
        "cursor": {
          "ref": "9dfd9ff1-a2ce-4474-9322-1e7f8dd570ce",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3041f397-ba7f-40c3-be00-3422a9fdd716"
        },
        "item": {
          "id": "e74612b4-7e25-4b32-8930-03ac1dd5d7e5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6dd5b97-dd12-4339-bdc2-a3559e8c7ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d1bb58-8896-4945-bf5f-5f06da5dbf30",
        "cursor": {
          "ref": "3b2643ea-b1a5-46c3-b428-ce40fa42ad58",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a4ece716-4f23-419f-a941-75657df04bfe"
        },
        "item": {
          "id": "93d1bb58-8896-4945-bf5f-5f06da5dbf30",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "85db522c-4d8b-45b2-947a-bf3c8b13c5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd38866-67ce-4b8f-ad53-fc659fc2f35a",
        "cursor": {
          "ref": "45edf343-090f-4e6a-9b6e-5f0c1a07df19",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b97707b8-08eb-439e-bcd1-30ac264bcd1d"
        },
        "item": {
          "id": "fbd38866-67ce-4b8f-ad53-fc659fc2f35a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed42dfdd-d1ff-48c9-a32c-3ea61d800243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c8be6d-1f06-4928-9a25-65b96b8841c6",
        "cursor": {
          "ref": "0335fd0e-8e4f-4247-adee-509b4b6aa163",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c74ad63a-44bc-4f6b-b58a-506bca7fdb8e"
        },
        "item": {
          "id": "03c8be6d-1f06-4928-9a25-65b96b8841c6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5895fd86-1a6c-44a9-b17a-3fe0408a73b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf80db7-5433-4f0c-a476-1608c4483828",
        "cursor": {
          "ref": "a4b9034e-ce83-46dd-acb7-517af1e4a292",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7dfc0adc-fb61-4093-bd37-62b49b0eb69a"
        },
        "item": {
          "id": "cbf80db7-5433-4f0c-a476-1608c4483828",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "90d2c627-5f5a-40ca-9f68-6abc418a2126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54763376-c7f2-40b1-aaec-2834afc1a3e0",
        "cursor": {
          "ref": "5a5e70fe-1a56-4102-84ad-7d619de3e98c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f34c3907-4d95-4088-9dad-d0cd8760e238"
        },
        "item": {
          "id": "54763376-c7f2-40b1-aaec-2834afc1a3e0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d389e603-c411-49cb-af54-63f38bae4106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aa181e-29f4-485a-aa88-e033d45c250b",
        "cursor": {
          "ref": "bc959ee1-b85c-4ed7-9e96-dae0e703c7f9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "74a4290b-54b4-41c2-ae33-864d2ab89731"
        },
        "item": {
          "id": "97aa181e-29f4-485a-aa88-e033d45c250b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "60f85c58-5fd4-46a8-99be-bbc3f89f4a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1d8d02-c92e-4e76-b771-3ad5d51dfe9d",
        "cursor": {
          "ref": "9ee1d88e-a709-4f70-8378-90a0b8d58339",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "20167a77-68cb-4fb2-ba9f-0de148d44a26"
        },
        "item": {
          "id": "5b1d8d02-c92e-4e76-b771-3ad5d51dfe9d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5feea4eb-a6b6-4c9e-b7e8-1aa9910b3172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ed7f52-d0ca-4c21-8975-15e1119ed0fb",
        "cursor": {
          "ref": "76986776-2d33-49d2-8618-bb72d73295f3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "471da39f-a7d1-446d-a5e7-82677bd6c8ce"
        },
        "item": {
          "id": "d6ed7f52-d0ca-4c21-8975-15e1119ed0fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a334f86c-181b-4277-acb3-e1fc25492ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845460e1-b247-4d5e-8417-d5f8330da0cc",
        "cursor": {
          "ref": "aec613c4-d814-419e-984d-ef377139eaf5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7bb413c3-d3df-4e87-8e13-d5ad6f0f44d5"
        },
        "item": {
          "id": "845460e1-b247-4d5e-8417-d5f8330da0cc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24949b22-bdce-46a5-bbf1-dd077113834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1c2a21-9b16-48b8-966e-226a2b6a832e",
        "cursor": {
          "ref": "d4acdb98-2b2d-47c9-8aaa-45fd105a3cdd",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b53646fb-ded9-4602-aaf3-90c599e17660"
        },
        "item": {
          "id": "6e1c2a21-9b16-48b8-966e-226a2b6a832e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "01e71126-35db-4280-9563-30054a1d9af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a52c56b-9184-428e-ab19-595a12149e2d",
        "cursor": {
          "ref": "445014df-1615-46c7-b3e1-c9ab901e1db5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9fca8ab3-d4a8-440e-84d1-56768cd8233e"
        },
        "item": {
          "id": "6a52c56b-9184-428e-ab19-595a12149e2d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5cd31318-f5c6-4c6e-b967-5ce9b6c0be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b04107-1af8-49ef-b41c-b184019a8bdb",
        "cursor": {
          "ref": "310404cc-9138-49a5-8107-936e547cc8fd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "abe793ef-3ccf-4b7a-9390-7a5aaf02d2d9"
        },
        "item": {
          "id": "c8b04107-1af8-49ef-b41c-b184019a8bdb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d78933f-b7fe-4cdb-92e5-254d849f9665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e02f9f-6477-4f7b-a3e9-a8d6235eda11",
        "cursor": {
          "ref": "586bd77a-18e4-4f47-878a-272ef08e52ef",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fb08e1d0-fa0a-48f9-a477-eb1683353051"
        },
        "item": {
          "id": "80e02f9f-6477-4f7b-a3e9-a8d6235eda11",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9ef70fc1-1c84-434f-b78d-f8401cb7392b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf8525d-bb48-47ed-8b85-ca7529b046a7",
        "cursor": {
          "ref": "89f57604-94cb-4fad-a8f7-a7e60f0be2a0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09a17071-8955-493b-af32-7f1b40cf1c2e"
        },
        "item": {
          "id": "faf8525d-bb48-47ed-8b85-ca7529b046a7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "56210b1c-1a4a-4bbd-ae23-a3dc7f77b810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f7ebd-14a5-4701-860a-6019803deb0d",
        "cursor": {
          "ref": "85d58560-c04e-4de2-aef5-8b46eab0862c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "07cd60b9-c701-4938-81c9-76235ce4b7a3"
        },
        "item": {
          "id": "891f7ebd-14a5-4701-860a-6019803deb0d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90b4b922-72d1-4b22-a6df-bc9e925c57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc01936f-06ac-4ea3-af53-d2fb1c231bc9",
        "cursor": {
          "ref": "b90a9c9b-ebd4-4d49-b5e8-7405908e0a09",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6b7b16b1-05f7-4a46-b6d3-6913d7bce74c"
        },
        "item": {
          "id": "cc01936f-06ac-4ea3-af53-d2fb1c231bc9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1a7ca862-82a2-4c25-ae68-3d1dc6070e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4a0231-ec22-4e97-9c66-fea9e1d6515f",
        "cursor": {
          "ref": "76dfe77a-f770-4224-ac08-9dc3709209f5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1946c000-9b14-43d4-986e-a4de4222a132"
        },
        "item": {
          "id": "fe4a0231-ec22-4e97-9c66-fea9e1d6515f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "abd72562-1c21-452e-b558-3945ebe3fae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a59b49-c1e8-4ac1-9825-5616f0de7766",
        "cursor": {
          "ref": "40d60fb4-9e03-4bb6-9e68-2649437f19b4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7b93aa1b-52df-4f64-a0dc-a4174eb71348"
        },
        "item": {
          "id": "e7a59b49-c1e8-4ac1-9825-5616f0de7766",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7cf2f795-52fc-4259-ad51-2ba09e05555c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d224f586-fc93-4a11-9c9b-2f5a282883a3",
        "cursor": {
          "ref": "520bfcbc-f6a1-45b5-9d0d-ae085832e5f4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b034b0cc-71d9-47d1-970e-759f70d00388"
        },
        "item": {
          "id": "d224f586-fc93-4a11-9c9b-2f5a282883a3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c75090e8-9a4d-47c1-8426-479b6bd89e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64982464-17a1-42cb-b307-10a4f617b61f",
        "cursor": {
          "ref": "7ae54a9b-468b-445a-a068-090856f5503d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "83ab2a20-ca9c-4733-b12c-cf3c230ddbbd"
        },
        "item": {
          "id": "64982464-17a1-42cb-b307-10a4f617b61f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9e609cd6-f037-4d2f-ad3d-35dcb3590b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daaadde-3f98-4366-a021-94561059c800",
        "cursor": {
          "ref": "a3439fec-2f2d-44be-b194-97af0b5c746f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ead73f1d-99ed-40aa-a98b-2969f0074b27"
        },
        "item": {
          "id": "6daaadde-3f98-4366-a021-94561059c800",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1dd0fdd4-7382-42f4-a517-2cf5b1fd9307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ab44de-fdd8-4f5f-bf67-97c8143c67a4",
        "cursor": {
          "ref": "5ac0546a-2865-4c9f-9ae6-f9b8ba9473b5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "47ddf288-540a-4d64-86fa-ad897d39f3f9"
        },
        "item": {
          "id": "b8ab44de-fdd8-4f5f-bf67-97c8143c67a4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e74b8a22-4128-4a11-8ff7-aefc880d3cc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b84241-1078-4b9c-a398-3d38b939c3fd",
        "cursor": {
          "ref": "3a650d9e-17a7-4604-a49f-dc8211d1dfd0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "22310dd3-9d95-4124-ac94-a41933c6827b"
        },
        "item": {
          "id": "15b84241-1078-4b9c-a398-3d38b939c3fd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f08eaa4b-9860-4e6a-90d2-5ea05d93ba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bc1acadf-8079-4b49-9837-ccfeb714adc3",
        "cursor": {
          "ref": "151e3cea-066d-4855-b763-116888dce3cc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85d39484-eeb6-458e-8dd9-a248f5cc68bd"
        },
        "item": {
          "id": "bc1acadf-8079-4b49-9837-ccfeb714adc3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6c1b3c0-1800-482f-8d78-818d1ad8aa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "df4f8225-9090-4477-95d9-1456fd5569b8",
        "cursor": {
          "ref": "6d9ea81c-9594-433a-a185-e47bab176d7a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da30bb57-82fd-4257-aaf1-2a1090f54b97"
        },
        "item": {
          "id": "df4f8225-9090-4477-95d9-1456fd5569b8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a58e641-4fe0-4ab0-afc6-945bf73a6661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2f04ff3c-330b-4d6f-a238-109660fabe0e",
        "cursor": {
          "ref": "e32ad289-2b0f-4e5f-8355-0678ac39468c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3308478e-fde6-46ab-9ebb-4a6507bb29d3"
        },
        "item": {
          "id": "2f04ff3c-330b-4d6f-a238-109660fabe0e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0141d801-5347-425b-b614-4a1780975c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "44432515-7a7f-4b02-9ade-e49f41cbcf7c",
        "cursor": {
          "ref": "4a040a54-ba14-40da-8ca9-1780f5b51cd7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d23ed90f-c7c4-44b5-83b6-6430c6174674"
        },
        "item": {
          "id": "44432515-7a7f-4b02-9ade-e49f41cbcf7c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "93dcd892-9d00-4b2e-b8c3-164aabcb49db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a247cb3b-b3ac-49e6-990c-270d2d643b16",
        "cursor": {
          "ref": "24aea505-1097-4479-83b9-f9e0acc6bd03",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74077616-7ec3-4a54-b910-9d19a5b73489"
        },
        "item": {
          "id": "a247cb3b-b3ac-49e6-990c-270d2d643b16",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b2b4003f-01e1-46bd-b12a-2fd085f85233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e3fab4d0-e6cf-4d30-ae0b-32a37c2cac33",
        "cursor": {
          "ref": "2d21c5bc-d835-4b1d-b9b7-fe794aa7a85c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8b1fad44-47d0-4d4c-b98e-a5d8b210845a"
        },
        "item": {
          "id": "e3fab4d0-e6cf-4d30-ae0b-32a37c2cac33",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "67356413-943f-497c-b688-ba17cf9b7dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a6cdd942-8997-49e0-b5c6-537425fb6c69",
        "cursor": {
          "ref": "5a6ac400-4662-49b4-a048-65182704fdcf",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1a802a2c-89dc-4774-9d24-7490c4c07530"
        },
        "item": {
          "id": "a6cdd942-8997-49e0-b5c6-537425fb6c69",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1921da3e-3f14-4f8a-a011-2844d3c6e973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9794812d-ed1f-4717-b1c0-15f077057483",
        "cursor": {
          "ref": "5ce6a7a2-bd3c-48bc-bf4e-894e78a99509",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "84e92c54-e015-4848-ac7c-afa2c0f8a176"
        },
        "item": {
          "id": "9794812d-ed1f-4717-b1c0-15f077057483",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8544d8c-d4c2-427a-a4c1-0adbc7f1bc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115b03e2-d006-4912-a308-2731f39d53a6",
        "cursor": {
          "ref": "2e113b8d-bd3e-4119-b1ad-1a741698348a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f54d9e96-b190-4042-9509-345486ea1bb5"
        },
        "item": {
          "id": "115b03e2-d006-4912-a308-2731f39d53a6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "10bf7648-aed3-4905-ae2e-8421aac37354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ab3fc-7e09-4f5d-b36c-b6c4b3ef0c0a",
        "cursor": {
          "ref": "27048f97-0161-4a49-8b3d-61e53696a58b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ee065fa-e438-4ad0-98bc-8fbabb68da8c"
        },
        "item": {
          "id": "4d9ab3fc-7e09-4f5d-b36c-b6c4b3ef0c0a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e4ea07a-b888-4f2e-b9ab-cecad483f9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68da665-0104-456f-8bd1-fb1a6d175d98",
        "cursor": {
          "ref": "446abc3d-21a2-432a-999b-60eb08f1f32d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "94b59645-72c0-4a21-b0c3-0745c6ba83d0"
        },
        "item": {
          "id": "e68da665-0104-456f-8bd1-fb1a6d175d98",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "16cf0274-9eab-4ba7-a7dc-71a6be442ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5000b0-0f8e-4db1-9914-b46b076ede1f",
        "cursor": {
          "ref": "2add02b0-b965-4090-bd44-9bbadd925ade",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f1f55fca-4337-4390-bfa8-0439cb41c4af"
        },
        "item": {
          "id": "8e5000b0-0f8e-4db1-9914-b46b076ede1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89dfbf7c-90d6-48b0-9a2f-1be1b43572b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c77a38-ba13-49ec-a238-76d4ead2a19c",
        "cursor": {
          "ref": "cb900b6e-b189-487f-8934-9a65d9e69bd5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8835f90a-5728-4446-959b-51caa5bc3d79"
        },
        "item": {
          "id": "c3c77a38-ba13-49ec-a238-76d4ead2a19c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d2f1699-503e-44b7-9fe2-61edb8acf050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c33db4-e975-4669-bd45-6a25e4c45e7e",
        "cursor": {
          "ref": "3c5fe8be-3c1c-4b66-a9ef-9e585a0ec53f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c15c2f3f-be31-44e4-8c61-026047b52f70"
        },
        "item": {
          "id": "c1c33db4-e975-4669-bd45-6a25e4c45e7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "182b6a93-3ee9-4ad9-badb-cd219fdb8c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f11d08-b468-4f09-b7d1-bf1c3f30911b",
        "cursor": {
          "ref": "ec327a78-067a-4925-b3a0-a58ebb65768a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cb2a9ae3-ed30-45b7-8786-6f70f3308a8f"
        },
        "item": {
          "id": "02f11d08-b468-4f09-b7d1-bf1c3f30911b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "134dc110-7922-4c51-8dd7-43b725d0e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f40cb-2b24-4e16-9cf0-60f8e0e92be6",
        "cursor": {
          "ref": "a0ffc4ff-cb32-453d-8afd-3a0b3d8079a6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b1952db0-7a59-410c-9e2e-02af463c7b63"
        },
        "item": {
          "id": "346f40cb-2b24-4e16-9cf0-60f8e0e92be6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a389a335-593f-416c-8e61-5665630d842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e07b1a2-d676-48fd-b1a7-3e6dea08d5b8",
        "cursor": {
          "ref": "f8682f89-bee1-4355-a3b3-4c173ed8d326",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ec618461-ae7a-4e43-bf02-3c2a8de6c647"
        },
        "item": {
          "id": "7e07b1a2-d676-48fd-b1a7-3e6dea08d5b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "804d52f8-d895-4b05-8119-4cbbec7fab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672e3ee8-5bc3-49ee-834d-f818c127efa9",
        "cursor": {
          "ref": "91b62863-0a1a-42d4-a628-84c83a66daed",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eb21b331-9990-4d4a-ab45-32f81b093ae5"
        },
        "item": {
          "id": "672e3ee8-5bc3-49ee-834d-f818c127efa9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d977aa54-9003-44bd-978d-ab1ec98a75f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389b9fc4-32d3-47e4-a146-5e4a40726154",
        "cursor": {
          "ref": "466eb279-33c8-44ce-ab5e-792c342e6c96",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8698898e-9e1a-46df-b8b8-f35b78c97349"
        },
        "item": {
          "id": "389b9fc4-32d3-47e4-a146-5e4a40726154",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "de63d268-177d-4cf1-9d30-a2ffeb064da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd270ef-e8de-4ae7-84fb-a064450b8611",
        "cursor": {
          "ref": "6c2b3a12-26a6-46ff-8d55-62b13a9d3a32",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "536e27b9-dcde-497a-80e1-e463f9b50e27"
        },
        "item": {
          "id": "5bd270ef-e8de-4ae7-84fb-a064450b8611",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1ac54a60-de86-4f66-9f24-7d49214f7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287dfe68-5db4-4256-9b83-fd6d51b4c037",
        "cursor": {
          "ref": "577fbb66-f142-4511-97ff-4bb9d1e8e1e0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3422e7a4-d87f-42e1-b31b-50408386bc5a"
        },
        "item": {
          "id": "287dfe68-5db4-4256-9b83-fd6d51b4c037",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "621767f6-ecef-4e04-8626-6296637dafba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f592b-f25b-4495-b895-c96d4156d69a",
        "cursor": {
          "ref": "ffc8021b-1c60-4604-8f94-7c8f622d7789",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e7d9e7a3-4fa6-40f5-92fa-b5c749ce4fe1"
        },
        "item": {
          "id": "562f592b-f25b-4495-b895-c96d4156d69a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d65c627-5eb3-4733-8482-d6236eee02b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ee163-d192-4a08-805a-e2f383950220",
        "cursor": {
          "ref": "ea9d4f5e-2b90-4855-98da-219ce6e85857",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aff17387-cbca-47c4-90a7-9380a7c56d49"
        },
        "item": {
          "id": "af9ee163-d192-4a08-805a-e2f383950220",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "97a76755-98da-422f-b97e-6552acdb08d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd215426-2e57-47e4-a175-9b954d53ce2f",
        "cursor": {
          "ref": "6e1a42fd-45e7-4679-9cb4-e6d28871e70b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "897fd1a5-8cc4-46f1-87a8-a272af56debc"
        },
        "item": {
          "id": "dd215426-2e57-47e4-a175-9b954d53ce2f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "219a5fc0-2f35-4851-b16c-1ebcbe25917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3839a8-fffc-4af6-a144-b5fa12e96338",
        "cursor": {
          "ref": "a76036c2-aa23-4b74-a1f7-307c2525cb27",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00d5d335-d336-4a94-9dcd-2a8431605088"
        },
        "item": {
          "id": "fc3839a8-fffc-4af6-a144-b5fa12e96338",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "142605c9-99bb-435c-b4a9-f769b1ed3c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecda7ef-19a7-406b-9faf-33f0ea5c9ea5",
        "cursor": {
          "ref": "4ddde196-d5a9-4f01-a6a5-afdf953e3243",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0053c0cd-6ab9-4a14-84e8-444eb422a0ae"
        },
        "item": {
          "id": "8ecda7ef-19a7-406b-9faf-33f0ea5c9ea5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "40cca16e-fd17-442e-ac8a-2bda839831c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e6af1b-2b2a-48c3-9b33-7f4239971709",
        "cursor": {
          "ref": "87783e4e-fb9f-4997-b85d-ee73489155c8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f2e0d4d4-96bb-497e-a8ea-ef7c86abf066"
        },
        "item": {
          "id": "e0e6af1b-2b2a-48c3-9b33-7f4239971709",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14ae630d-ad38-463c-9bd0-9195c0ab547e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07627599-cd5c-4420-929e-35a301d16906",
        "cursor": {
          "ref": "e92ff0e4-7b1e-4631-9941-00b93f2784df",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "287c45ad-021c-45de-9dfa-6a21be72a360"
        },
        "item": {
          "id": "07627599-cd5c-4420-929e-35a301d16906",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9db5258b-5dea-4a66-b1a1-9ff639f741bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5a1b82-0898-49c3-b49f-16381877e6ba",
        "cursor": {
          "ref": "5284e5b7-900f-4715-94fb-2ca8a2c7a6e4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56f6fb11-fb85-4687-b45d-90a0d1c71ac5"
        },
        "item": {
          "id": "bb5a1b82-0898-49c3-b49f-16381877e6ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ef7e413-09da-4cbd-8e69-4fd0e099f39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c0064-11a8-4421-b29c-54c0189d7070",
        "cursor": {
          "ref": "03033455-e713-4b85-9811-12f64def3a9f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "358b289d-3472-4552-b885-adb4783c81d0"
        },
        "item": {
          "id": "a32c0064-11a8-4421-b29c-54c0189d7070",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9e70ef61-4a83-4220-a299-da1cb5d46cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a82a7a-7221-4c31-b398-f1d239dd3dbc",
        "cursor": {
          "ref": "e110e59f-c0c6-4655-8581-51733a40f6c2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4433f9b5-de82-46d0-8f8d-8864e76c50cc"
        },
        "item": {
          "id": "21a82a7a-7221-4c31-b398-f1d239dd3dbc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b7ecad6b-13c9-4f3e-a1c7-f3fce0926e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26312081-c165-4f62-93ff-d4ae76eb4d1d",
        "cursor": {
          "ref": "917d1c0e-4cce-43a3-9780-de0b96351655",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ed2f5e40-101b-4a87-96e4-d2a0a6400fdb"
        },
        "item": {
          "id": "26312081-c165-4f62-93ff-d4ae76eb4d1d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7ca828b2-7ffc-4042-b097-39089df17f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e056a97b-04ff-4d1f-acf8-b67e38715127",
        "cursor": {
          "ref": "4094de33-6c6d-4418-9551-76618fac722c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4c85e62b-5aaf-40b9-9764-a0b06f2ea131"
        },
        "item": {
          "id": "e056a97b-04ff-4d1f-acf8-b67e38715127",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0abe685b-2deb-4625-bf88-84fa73f0f862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64213179-cf60-4341-8c3b-2014520e2e7e",
        "cursor": {
          "ref": "2e3d3665-967e-404c-907c-17c75e72dc2c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "03d58e81-26f3-4837-a916-533558cbc200"
        },
        "item": {
          "id": "64213179-cf60-4341-8c3b-2014520e2e7e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6278a5e4-cff9-4742-b216-0cc6007dfbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843c7bd-c617-463b-ac9e-09be7871ff69",
        "cursor": {
          "ref": "7b9416a2-ce09-4c06-8b2d-1fb9db500efe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6690f288-3955-4833-8bc8-45b76d4ff142"
        },
        "item": {
          "id": "6843c7bd-c617-463b-ac9e-09be7871ff69",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ced5708c-3a04-4554-b78a-48e716153933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6844f768-20a1-4ed6-b6df-7f13e0c5ca5a",
        "cursor": {
          "ref": "80393ccf-8bc1-4d4f-9915-fb8544629578",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a437a603-9874-4610-abc4-353dc0609c98"
        },
        "item": {
          "id": "6844f768-20a1-4ed6-b6df-7f13e0c5ca5a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9da70bfd-1e2a-47fd-a89f-cb97b9ebab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2257beb-f519-471b-b36a-98f398b0ee9e",
        "cursor": {
          "ref": "16d6e6c7-66b7-44a9-9dc0-700f2534badf",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "63edb452-21dd-4fc8-9d86-8ecc3d336296"
        },
        "item": {
          "id": "f2257beb-f519-471b-b36a-98f398b0ee9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e22e661b-f872-4387-beb7-d15fbdd501dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc60378-f085-406f-9892-0dd835771c67",
        "cursor": {
          "ref": "5d2d9a8a-1a48-4c03-a5ed-6c765dbef373",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d0595593-1647-4da5-9134-125060102c8b"
        },
        "item": {
          "id": "ddc60378-f085-406f-9892-0dd835771c67",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2b9c0f66-7fa9-4d80-b895-4cf0fcb4e5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba6901-9be3-4b01-b704-d8e84d50c76c",
        "cursor": {
          "ref": "055657f5-a74b-4bbf-9f31-1b94b5b5b285",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9d62be0d-3519-44cd-a7e7-75e06623ae18"
        },
        "item": {
          "id": "32ba6901-9be3-4b01-b704-d8e84d50c76c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4160eec0-d2f1-4813-bcd3-2c7179342fef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111b03d0-8ae1-49e7-a77c-5f11d1491f18",
        "cursor": {
          "ref": "6d8ed6fb-8654-4472-82ec-1a42b6809d03",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "330085e1-8c45-4a98-988e-faa6ae8b81fd"
        },
        "item": {
          "id": "111b03d0-8ae1-49e7-a77c-5f11d1491f18",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d5bde80-c158-41c9-aaed-266bf4055bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007f5d20-a551-4a7e-aa61-66ab7bc8b95e",
        "cursor": {
          "ref": "3c8955c6-cb87-4f6f-9c78-75f31631c2af",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1d1acc30-5fbd-4349-956e-6506eafaf031"
        },
        "item": {
          "id": "007f5d20-a551-4a7e-aa61-66ab7bc8b95e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "faadf299-9d65-41ad-a151-7600972870de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493b81d7-48c3-466a-ad89-e0d0f7645d01",
        "cursor": {
          "ref": "10ff8664-6d91-4116-96bc-aea97edf194e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9bb94d1-a20b-46a2-aac0-9af17c80345a"
        },
        "item": {
          "id": "493b81d7-48c3-466a-ad89-e0d0f7645d01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1632fa42-2314-467c-bb63-01b4492ebc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19117f59-81cb-4fcd-9710-983e8ffd4c68",
        "cursor": {
          "ref": "6745c053-6876-49d1-afd7-cb3193533470",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ac26b377-008d-4161-a937-64416ad5a93c"
        },
        "item": {
          "id": "19117f59-81cb-4fcd-9710-983e8ffd4c68",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f9166bb7-1304-48b7-a3a6-17874ab9885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbb97b0-6870-443a-aec9-877e6f5ab192",
        "cursor": {
          "ref": "a0fedc03-e219-403d-b387-192c707ab5e1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eecfd8a8-1c50-472b-9923-0c7b26293a61"
        },
        "item": {
          "id": "bfbb97b0-6870-443a-aec9-877e6f5ab192",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb56f5ea-4204-462e-a2b9-e7da6e3a97f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c4143-609c-4879-9c30-9849714078c3",
        "cursor": {
          "ref": "a768eeee-4039-4c18-9647-b7cc364e7b16",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "78ab7e05-62ea-4551-9122-f6cdb7b72dd5"
        },
        "item": {
          "id": "a18c4143-609c-4879-9c30-9849714078c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3678b04b-58e5-48e7-8be7-fedb39c64312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b758da-fb89-4160-b118-05fa1d5d8d82",
        "cursor": {
          "ref": "b9774f73-c6fd-4bd1-85e1-62de2d13ec02",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a787935d-0da6-4593-ac64-f6873acbfc13"
        },
        "item": {
          "id": "b3b758da-fb89-4160-b118-05fa1d5d8d82",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "593770eb-37ff-4c20-aedd-75424071c18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265b1e6-d99b-42ab-944f-fdc30ae38788",
        "cursor": {
          "ref": "adbb62c7-03a6-4028-a711-a6b5cbd8cf41",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aabb94a0-bc1a-4aaa-b4e9-cac3436cc2f7"
        },
        "item": {
          "id": "7265b1e6-d99b-42ab-944f-fdc30ae38788",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea12448f-5e06-4c68-a26c-5d64a77aba31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb94c798-a5c8-414f-8a9a-92d873b1274d",
        "cursor": {
          "ref": "bcd5b493-0ebc-47c7-b0b7-e5d6f042ac51",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a10808e-9489-4c8d-b7e8-53ee8c8303f9"
        },
        "item": {
          "id": "cb94c798-a5c8-414f-8a9a-92d873b1274d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f662f859-741f-4927-acf6-1e63b5bfc771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46a367d-c078-417e-9405-fca539e95b5f",
        "cursor": {
          "ref": "6ce601f4-d81f-4e3c-82a0-c35b348cf08b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "427bb2af-bcca-4940-833e-81c9771646b9"
        },
        "item": {
          "id": "c46a367d-c078-417e-9405-fca539e95b5f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fcad2608-9912-4558-8c87-6856737afd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87155ac1-c94c-4fb8-8b12-ec1c8293c97b",
        "cursor": {
          "ref": "13bb04f9-61a8-4039-b23d-369117f8332e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8cf17287-3c33-4e91-a96a-60f9d1223c85"
        },
        "item": {
          "id": "87155ac1-c94c-4fb8-8b12-ec1c8293c97b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f8dfda8-3225-48d0-a857-92e2008602b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895a1797-101b-4b2d-a11e-6904d0a7d948",
        "cursor": {
          "ref": "09d256d2-20d3-4192-8cad-29fc9228a115",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "413f27e5-3aa0-4390-9170-9a182fe9b422"
        },
        "item": {
          "id": "895a1797-101b-4b2d-a11e-6904d0a7d948",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ffd8ca77-1590-4e6e-b032-56c3332c4712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d0796b-6c9e-411e-a5b2-318ae930a40e",
        "cursor": {
          "ref": "cee03ecd-6242-4c62-bef3-e1a0155b461d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c8aafc66-073f-4595-b632-cce22045430a"
        },
        "item": {
          "id": "86d0796b-6c9e-411e-a5b2-318ae930a40e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2106d887-e487-4cc4-b340-57c7e8c423ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecd662c-9579-440f-922f-2d2728afe709",
        "cursor": {
          "ref": "6dbba978-c4f7-4b1c-ab43-4facf040c472",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "caa71054-cd87-4fd4-a7c9-1d57e7682f06"
        },
        "item": {
          "id": "7ecd662c-9579-440f-922f-2d2728afe709",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bcc1a3fe-cef9-40ef-87dd-95c8c1e57a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9af2b1-7007-4ce6-a555-c39373060758",
        "cursor": {
          "ref": "d66679e6-9f0d-43f9-adeb-8bc22fe82b42",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "022562dc-c04f-485e-9ae4-2e4ccd2cadc2"
        },
        "item": {
          "id": "ba9af2b1-7007-4ce6-a555-c39373060758",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d0d2c52e-0ccd-4bde-a8d5-648b94bf2b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e14e18-c025-427d-bb03-42cd5e6ddbf8",
        "cursor": {
          "ref": "fe5b3488-591d-4838-885a-5edb4f9be355",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b3890819-6655-4da3-b327-f6103c4eefc3"
        },
        "item": {
          "id": "a2e14e18-c025-427d-bb03-42cd5e6ddbf8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43df4c93-339d-44c0-acda-aab0706c6cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2042a843-7e51-4282-9cbf-85dae8c9630d",
        "cursor": {
          "ref": "fbafedeb-a92c-462c-81f3-c0ec71003398",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d5923cfd-373d-42ce-a85e-d584177128f8"
        },
        "item": {
          "id": "2042a843-7e51-4282-9cbf-85dae8c9630d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ffd72a9-68bb-4858-b6dd-b4ece393ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595a96b6-c488-476e-989b-ad5cc8360f28",
        "cursor": {
          "ref": "27f57ed9-239a-4f52-9269-cb91a6c30b62",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f997dd40-c0ef-4b56-91d5-2c6dd8f36c7c"
        },
        "item": {
          "id": "595a96b6-c488-476e-989b-ad5cc8360f28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "28bf8edb-72c9-4e05-a34d-4d438d71503f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8391f49-bf87-4a87-bad3-56782a38bd43",
        "cursor": {
          "ref": "4f89c1b6-5a2d-4575-be0f-c8056b03d2a9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88feec8b-831a-4aeb-af37-0f1ce3e78808"
        },
        "item": {
          "id": "d8391f49-bf87-4a87-bad3-56782a38bd43",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "890fcdec-00d3-49cc-9459-23adbbbbac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ff627-126d-4c6a-bb5e-8c0c5789982b",
        "cursor": {
          "ref": "e5c87e87-0f67-4461-9da6-102f1b5e3599",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a363d25c-0aa5-4454-90ee-c224e9ca1fbb"
        },
        "item": {
          "id": "8d7ff627-126d-4c6a-bb5e-8c0c5789982b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1fda0d75-5c47-46ba-ab82-842534df2fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187693e6-622b-48f2-8155-4b54795be1c0",
        "cursor": {
          "ref": "27346e9b-fc96-46a1-9b48-9822f00dc39d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4b0f5d7a-ff4e-4b2c-9a66-1390ca16de6f"
        },
        "item": {
          "id": "187693e6-622b-48f2-8155-4b54795be1c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc56d979-bcc8-4b62-91e7-3a4921b4f987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe6c8db-ccad-4135-9dff-4228604daa4d",
        "cursor": {
          "ref": "dc610299-42bb-414a-abd7-71b448165fff",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5ac2c73-b522-4c34-add6-f4762e4c21ba"
        },
        "item": {
          "id": "fbe6c8db-ccad-4135-9dff-4228604daa4d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c5bf5abd-1068-49d0-a151-b8b3d1c9a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d3671e-95fc-4dfe-9295-467f72668877",
        "cursor": {
          "ref": "1f421dbf-bbce-4a6c-ac1c-b7ba9e1f2bec",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6c099a51-a3fc-41bd-9d45-530af521d4f0"
        },
        "item": {
          "id": "d5d3671e-95fc-4dfe-9295-467f72668877",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ddf9af4-3b08-49db-a3be-882136c09376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5375b9d-e3f8-4792-a563-35873bc04601",
        "cursor": {
          "ref": "e2e48770-579d-4dbf-be63-342ee7a54066",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "053fbe3a-09ca-40eb-b397-c1487ac6be6d"
        },
        "item": {
          "id": "b5375b9d-e3f8-4792-a563-35873bc04601",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "32171237-c052-4d83-a0d8-72fb8faf111b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f79f3b-b622-4950-abc4-dbfd86551011",
        "cursor": {
          "ref": "c99d8b0f-6555-449d-b0fc-25921cb3b09b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1bf50d92-b710-4af3-8c4a-63e74cbac8f8"
        },
        "item": {
          "id": "b3f79f3b-b622-4950-abc4-dbfd86551011",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "de244415-6e87-4b6e-9a5e-624143999634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d371622-f25f-4894-b61c-646dc29f22f8",
        "cursor": {
          "ref": "5fa26741-771e-4942-be0c-381fa561fcdf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fad3e341-4080-4cd8-8fb4-2830a369aaab"
        },
        "item": {
          "id": "3d371622-f25f-4894-b61c-646dc29f22f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "48a5124c-4c4c-406f-9584-5348de6723b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29a50f-efb2-4aa7-b568-081b74c696d7",
        "cursor": {
          "ref": "dbe06e08-3851-42ed-82db-453fedbb9ca1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8c8dc8d1-b3a9-42fa-b625-68c1859a4ccf"
        },
        "item": {
          "id": "db29a50f-efb2-4aa7-b568-081b74c696d7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ed8085d-6ef7-48d9-87f0-65b8825fc038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f8a156-2673-493e-bd3f-021f242d84f5",
        "cursor": {
          "ref": "d1fb14ae-bf48-4018-ad47-7f36c391dc0b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "499d3872-1fd5-4aac-828f-84790d498653"
        },
        "item": {
          "id": "56f8a156-2673-493e-bd3f-021f242d84f5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e916f700-2da9-4120-8557-8f4e0063e753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea9ddc4-d76b-4416-a898-aa371996a431",
        "cursor": {
          "ref": "27651e42-54b6-4d9c-b5d5-8ba286c35177",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "89e26f73-6610-4acb-b93c-70da5c111b8c"
        },
        "item": {
          "id": "dea9ddc4-d76b-4416-a898-aa371996a431",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ce9f8d35-55c7-410f-ba8a-d1c7d5858e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b89a4-dda3-4dca-8005-f2b052f8138e",
        "cursor": {
          "ref": "a1a02022-0436-4be4-99c5-02d157bf44a4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "176da4f9-c51b-43a4-aed6-060e16170243"
        },
        "item": {
          "id": "648b89a4-dda3-4dca-8005-f2b052f8138e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcc1e2bb-4bc2-4991-a76f-a321236aaa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ec03ec-b270-4705-9ecd-f73a015e71bf",
        "cursor": {
          "ref": "6db13917-9557-4dc7-b18d-5df58db7cecd",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "457f0f2b-9476-444e-8e81-79aebd304f30"
        },
        "item": {
          "id": "90ec03ec-b270-4705-9ecd-f73a015e71bf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fedeef5a-95a2-4334-9464-56900b6b2a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201c4a5b-6687-4ac1-9299-90a4b831ddeb",
        "cursor": {
          "ref": "70dc0a1d-14f0-495b-bcf1-b9db29518e76",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2515408a-5e13-4836-8fc4-5ad027592e38"
        },
        "item": {
          "id": "201c4a5b-6687-4ac1-9299-90a4b831ddeb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "00ce8170-51a8-43f5-8615-6a0e7b78d785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7fd0da-1af6-4402-ba5f-a6841d1b8e6d",
        "cursor": {
          "ref": "fa98f89a-ac65-42bd-b41d-7283d71eb3e1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "90040593-e9e6-45cb-8254-2580aad6dc7a"
        },
        "item": {
          "id": "3b7fd0da-1af6-4402-ba5f-a6841d1b8e6d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "740c9e80-7014-4f41-b22a-2be777eb8508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f839e-3296-4e6d-b03e-1abbf7833459",
        "cursor": {
          "ref": "1cd7c401-712b-4222-9b12-ed989459bd68",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e3f7750-4e63-4a3f-b831-236e252a41a9"
        },
        "item": {
          "id": "b44f839e-3296-4e6d-b03e-1abbf7833459",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bd554ff9-db18-4725-88b1-d6f70453d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1389c7f-23ba-4991-be62-2d42d3eb60d4",
        "cursor": {
          "ref": "ac767a00-60ec-4d54-8cd4-2bb5850c3467",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41768642-42b2-4b7a-847c-3a54151aed40"
        },
        "item": {
          "id": "f1389c7f-23ba-4991-be62-2d42d3eb60d4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fdf668db-2653-42b6-b647-5ce5ee7b49cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de375706-c79f-40f8-a3c4-09e387ac26f9",
        "cursor": {
          "ref": "d888e28d-e8fc-4c70-9ffc-74491774d5e6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e00d947d-7d05-419d-97ab-92a169819605"
        },
        "item": {
          "id": "de375706-c79f-40f8-a3c4-09e387ac26f9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "631f2932-3160-426e-8e82-ca5a4825c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbcf2d4-6bc2-4dde-b906-ffae3aecfde1",
        "cursor": {
          "ref": "84feab32-bd6d-4cde-8b55-5d618cf51f76",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c24284d0-c3e8-4a10-9d65-7474be49e598"
        },
        "item": {
          "id": "4bbcf2d4-6bc2-4dde-b906-ffae3aecfde1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1c04a076-36ea-4adc-84e3-3eb51c4b9fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1836c4d-7f74-4c11-b818-4bd7cb0bcab4",
        "cursor": {
          "ref": "f8313441-0b1d-4b50-bcb1-2e3f44ea83c9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c967e288-a846-4eb8-8f61-17ef745a2dfe"
        },
        "item": {
          "id": "b1836c4d-7f74-4c11-b818-4bd7cb0bcab4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ae134006-f431-4efd-876e-fe853408992e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f97d8a-4244-44e6-aa33-32954aeedc67",
        "cursor": {
          "ref": "d5b8fcd1-26c4-450a-a8ee-5bc4faf2b135",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1b9f93b1-3bbf-4e11-9512-aa7041819d61"
        },
        "item": {
          "id": "b2f97d8a-4244-44e6-aa33-32954aeedc67",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4468ab7-2321-48c0-abd2-07adb7761576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf82f6ef-c83e-4fcd-80f0-c2ff8c905ffb",
        "cursor": {
          "ref": "5a56cffd-11b8-4f9e-a4ec-eb1344549e41",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1c15ce6d-a49b-4832-a344-f2e50f4047b8"
        },
        "item": {
          "id": "bf82f6ef-c83e-4fcd-80f0-c2ff8c905ffb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fbb667bd-3b50-4444-8be0-5faaa63e805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb97b7-4f7e-4419-b2e5-40c109d80b16",
        "cursor": {
          "ref": "d71345db-a467-4d1f-8f4a-f753ab32c7d7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "099feec6-827b-4097-8738-125a03f78ace"
        },
        "item": {
          "id": "14eb97b7-4f7e-4419-b2e5-40c109d80b16",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "693157e1-eb76-4eb9-9db8-fbec0d87520d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8739c2d1-d4dd-447c-adf4-f5ba6ab1ce91",
        "cursor": {
          "ref": "1c976140-01a2-4402-951b-d37ba85e77ad",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "86b57a26-1584-43d3-b9bd-4c4615a03879"
        },
        "item": {
          "id": "8739c2d1-d4dd-447c-adf4-f5ba6ab1ce91",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b04bd015-3aad-469d-9050-2abf4afb45ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4fce8-9a0a-4f5f-a644-50ccf6c1085f",
        "cursor": {
          "ref": "5801583f-b60a-473b-8d63-bb04c5f8c2eb",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d8c6ec59-e388-4765-8d3c-4826d9aa603b"
        },
        "item": {
          "id": "f4f4fce8-9a0a-4f5f-a644-50ccf6c1085f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "68c96e10-de5f-4d91-be07-cef10e4b7b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a1bcbd-f855-4b66-9c83-38e856ff3512",
        "cursor": {
          "ref": "776e4fe7-db30-4761-a186-116079ee8f8d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4c2d8641-7df5-4937-9ff3-50682d05da33"
        },
        "item": {
          "id": "64a1bcbd-f855-4b66-9c83-38e856ff3512",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "984bf8e5-ee61-4094-9111-f76200d90704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82b49d2-4b0a-450b-a475-c516992375b8",
        "cursor": {
          "ref": "e965f148-d1ca-4b6e-ae24-9eaeb9c25cbd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9dd48703-aab9-4365-963f-661b8fea4612"
        },
        "item": {
          "id": "e82b49d2-4b0a-450b-a475-c516992375b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b634fc6c-6efe-415c-93ca-2e02096565e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c5bceb-718c-460a-a5e8-85ec7aeb2712",
        "cursor": {
          "ref": "5024654c-ec77-4339-a041-868f05aaa2b1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "41a800c0-eaa9-4d77-98f9-f7fc3d08de55"
        },
        "item": {
          "id": "82c5bceb-718c-460a-a5e8-85ec7aeb2712",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0f5d34ac-293b-47c0-a6a3-516fa8da27a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df95ac10-a171-4c79-8987-e7be9d5cfcdc",
        "cursor": {
          "ref": "53c44723-e494-486d-80f0-aafeed474d7e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a2d55f0-426a-438d-ae3d-5ccd7c43e26f"
        },
        "item": {
          "id": "df95ac10-a171-4c79-8987-e7be9d5cfcdc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd83dbf1-fb00-46a5-b095-8e29a129abd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e10a14-5518-4127-9abc-2812220f0cb0",
        "cursor": {
          "ref": "c924f544-7253-4aa0-bda8-930a1612c5d1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99937dce-6976-499f-bad5-286a3e434612"
        },
        "item": {
          "id": "73e10a14-5518-4127-9abc-2812220f0cb0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7f02ba37-0e10-4810-b339-24e443103839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f09e171-e825-4c53-9a11-d112865179bd",
        "cursor": {
          "ref": "cbfd8d0a-5d25-4407-88d1-706fc55b7145",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52d8738b-ec6a-479e-866c-455339ddd1f8"
        },
        "item": {
          "id": "6f09e171-e825-4c53-9a11-d112865179bd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7762027a-346c-4ad3-99e1-3f1d9c6e639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c617851-ade0-4f97-bcee-63bc78c9902c",
        "cursor": {
          "ref": "8326010a-33bd-4cef-a2af-5449934ee325",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c8704de4-3e3a-4b1f-8b02-9e96d6317d5a"
        },
        "item": {
          "id": "0c617851-ade0-4f97-bcee-63bc78c9902c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82ae93cc-e28f-4079-b22a-a7b1b7d246ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa7f363-c7de-4a2e-bc04-6d1de7052946",
        "cursor": {
          "ref": "18c8fab5-88b2-4564-9966-5c7910fbe401",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cfc3549e-20a2-4d4e-afd6-ba1a4364e849"
        },
        "item": {
          "id": "aaa7f363-c7de-4a2e-bc04-6d1de7052946",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e19c3f17-fa66-460d-8846-b4fe256bad3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c1aecd-9102-482d-9ed8-cdcd78b5115d",
        "cursor": {
          "ref": "fde2d59d-5dcc-4d06-9fb0-6e1067c4bee6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ca5ee72c-0019-437a-8b00-551881dfc7cf"
        },
        "item": {
          "id": "a5c1aecd-9102-482d-9ed8-cdcd78b5115d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4b7b5074-4bbb-4a7a-bdd2-5fd3717f9bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a654bb-b541-42c4-bad5-7b77f0e4e8f2",
        "cursor": {
          "ref": "badbf0a1-d857-4c1e-a6fd-141f40ad8e24",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9abd5244-bcba-4214-82e3-b43490754692"
        },
        "item": {
          "id": "d3a654bb-b541-42c4-bad5-7b77f0e4e8f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4e43686b-ddd6-43cc-be4c-32a66aa3b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88936db1-a20c-4918-aa7a-2a867af2b1a0",
        "cursor": {
          "ref": "661d0e67-775b-46ea-965f-fa6f37afcc56",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ed5310ba-fff0-4fb9-954f-49ff2a94d04a"
        },
        "item": {
          "id": "88936db1-a20c-4918-aa7a-2a867af2b1a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5b951d8-47a3-477b-864b-101bc6166dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebca5ca1-64a3-4124-8e25-9ff473d79116",
        "cursor": {
          "ref": "03d3d45a-c0e3-4daa-981b-e1d17a1aabfa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "abc1d07f-cc79-4fa5-b5b4-d1311e2326b4"
        },
        "item": {
          "id": "ebca5ca1-64a3-4124-8e25-9ff473d79116",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "187f865b-ccc9-49e9-90c2-2f5a9c9e2476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7155e72c-7b53-4597-8b8a-4c6d512b88a8",
        "cursor": {
          "ref": "ae240903-dd0b-430f-880d-7064d6575af1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b057487d-9d89-4eb2-90c4-449ab9a6357b"
        },
        "item": {
          "id": "7155e72c-7b53-4597-8b8a-4c6d512b88a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d475dbb2-64f3-48f1-974c-888188cac8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fab5e4a-6483-48de-800f-01cd11f5bba1",
        "cursor": {
          "ref": "96a05991-db5e-4efd-923f-97da47109444",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5db2a086-683e-4ff6-b1e7-d191149cfa50"
        },
        "item": {
          "id": "7fab5e4a-6483-48de-800f-01cd11f5bba1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1c17ef6-3217-4ff7-8676-8c2e659ea379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afe51cb-2430-45b8-a0f2-8bdf269af19d",
        "cursor": {
          "ref": "cb30e774-e94f-414f-9d73-21aa4b9c891d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6fc3ea49-df3d-4f67-a911-4829926dcb14"
        },
        "item": {
          "id": "9afe51cb-2430-45b8-a0f2-8bdf269af19d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1085a413-07c6-4d92-8675-37744078b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4de56c-2ffb-4090-ab07-25a09ce8833e",
        "cursor": {
          "ref": "02817fae-1117-46e3-bd9e-463df4a7d13a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a49ed94f-0672-4553-b16e-2fe6e53f7578"
        },
        "item": {
          "id": "ac4de56c-2ffb-4090-ab07-25a09ce8833e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "518d9ff0-f5d8-4d8e-83fe-9d1fe23787cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f04b33-1cfd-40d2-8c12-a3561e40ddef",
        "cursor": {
          "ref": "b961d631-e8ff-4817-92c6-9b3171e6af76",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e2beb7f8-d424-4f4c-aee2-6ba898696469"
        },
        "item": {
          "id": "00f04b33-1cfd-40d2-8c12-a3561e40ddef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2a8cc6b2-4f39-43bc-b1ef-d2a44805a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d81e79-0f1a-4615-b471-c07de2de2553",
        "cursor": {
          "ref": "39d7b256-7c80-4213-bf62-acc6b1ef9b43",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7a149f48-f8a1-4ca2-9226-a3e029f41f99"
        },
        "item": {
          "id": "82d81e79-0f1a-4615-b471-c07de2de2553",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bfe6c239-8263-41ee-bb7e-1fe034b04f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae70ca74-51f1-42a5-805a-3ed5f74a0d91",
        "cursor": {
          "ref": "e265b90d-4d9a-4a1b-9925-473a8f036702",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "518d315f-5678-4636-aa3a-f28e607b05c5"
        },
        "item": {
          "id": "ae70ca74-51f1-42a5-805a-3ed5f74a0d91",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03d12503-13bf-458f-aeb9-57deba9f729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55b2ee-91b1-49fd-b764-eb68d6d79806",
        "cursor": {
          "ref": "2e6c6e63-130b-4130-9a32-d02b3e4b49b7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5bd2a6a6-e827-4b6d-9db1-8d25782d3500"
        },
        "item": {
          "id": "bd55b2ee-91b1-49fd-b764-eb68d6d79806",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7828aeff-e89c-4371-b965-66d73de5e27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86992721-6f0c-4b83-99b5-86839f4ff1a5",
        "cursor": {
          "ref": "9fa752d3-4849-4289-983d-33522c02fdd2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "507ce148-071c-4fe1-a017-8ae6b9f3f07d"
        },
        "item": {
          "id": "86992721-6f0c-4b83-99b5-86839f4ff1a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18bea18f-cdc3-45c2-9ec5-fbacc4047b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa483aa-2be6-492b-978b-921b9ca55065",
        "cursor": {
          "ref": "f5bf46a1-23bf-4cbd-a1bc-649577f03390",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "efdca1e1-f955-44b9-806e-e74e164327fa"
        },
        "item": {
          "id": "9aa483aa-2be6-492b-978b-921b9ca55065",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ec957e8d-eaea-4577-b21f-0e28da494116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4d706-c495-466a-91fa-8f493bdbf1f1",
        "cursor": {
          "ref": "a537deab-b46c-489f-852a-e369fd040c8d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4764b27-be36-4072-a596-42b3f1392958"
        },
        "item": {
          "id": "60b4d706-c495-466a-91fa-8f493bdbf1f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fb3e4393-c825-4ea2-8def-654d3b28bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d1204b-cf7f-4057-93f4-b22d6356a8e3",
        "cursor": {
          "ref": "6395133c-2da0-4063-94ec-720706632530",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "922bbf88-6da6-457e-83ac-2c9ce954e73d"
        },
        "item": {
          "id": "b8d1204b-cf7f-4057-93f4-b22d6356a8e3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "94ada553-e3f1-474b-b47f-141f55f19d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2b1826-4203-4033-a881-06a8683b5dd7",
        "cursor": {
          "ref": "d86acd5f-6cd5-43e7-b53e-3f46193ef5d5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5dee6584-30c3-43be-b49b-693970fda3c6"
        },
        "item": {
          "id": "1e2b1826-4203-4033-a881-06a8683b5dd7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d87abb6-6f94-4a79-a531-f007653b390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25dbb02-8a67-4db8-b3b2-ab851d64e178",
        "cursor": {
          "ref": "e3f3cfe9-7c3f-4119-8723-ed6b8981f32e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "46db7f79-9e8a-4df8-9cd1-e9b7f098eeb4"
        },
        "item": {
          "id": "b25dbb02-8a67-4db8-b3b2-ab851d64e178",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dd69798b-ad5a-49e9-acfa-8de9d77b5597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a49993-cdcc-4cdc-a946-34f248f52ae6",
        "cursor": {
          "ref": "17b113f2-4de3-4735-9c5c-f672e22dd4cb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5e020a19-ef2b-49db-8e1e-7f604768d575"
        },
        "item": {
          "id": "a9a49993-cdcc-4cdc-a946-34f248f52ae6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "853061ac-1ed1-4858-b09f-90c9daaafdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac63b867-f29c-408a-be91-b47c477f5614",
        "cursor": {
          "ref": "12b7887c-31d1-43c6-a9ed-a55b5be9065b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e626daba-683a-4bd8-a787-d3eaf111a6fd"
        },
        "item": {
          "id": "ac63b867-f29c-408a-be91-b47c477f5614",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "852a390d-a29f-4cf5-b840-9da08d2ad112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b7e1f-b332-4d19-9745-97d870c395c8",
        "cursor": {
          "ref": "966338bf-a778-4099-b39a-5f081464d606",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a4a8b2ca-266e-42c1-810f-5a28f38638c2"
        },
        "item": {
          "id": "456b7e1f-b332-4d19-9745-97d870c395c8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c0c2c564-8a2e-4bea-ae2d-aeb3066c252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93711ff-890c-418e-b52b-7c3595294494",
        "cursor": {
          "ref": "970d3110-74ad-4570-b5d5-f641ca02d417",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7b19cf84-3ea1-4689-a2bb-6cbad129c1e5"
        },
        "item": {
          "id": "c93711ff-890c-418e-b52b-7c3595294494",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9cc855bc-82ff-45de-a69e-914844a5ff86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1f22cb-f56e-4854-8610-e728fce03891",
        "cursor": {
          "ref": "0f0e4d27-07d8-4e1e-a565-c7513cf33251",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6e72289-af68-46fb-a750-647419fc13fa"
        },
        "item": {
          "id": "5d1f22cb-f56e-4854-8610-e728fce03891",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aa59f1b7-6732-4b27-8519-37ed0a12d052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faacf5b4-295d-493c-a1c3-4b02ca91c745",
        "cursor": {
          "ref": "561e47ef-98a9-40cf-9e28-dd7ec6e3f8a3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "25c0340f-de46-47ea-897a-cb0021068121"
        },
        "item": {
          "id": "faacf5b4-295d-493c-a1c3-4b02ca91c745",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "55079832-ebf6-4248-a213-838cb7261db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e057481-b82c-4e2b-9288-7210d079187e",
        "cursor": {
          "ref": "e2f42941-261e-4570-b941-2894185faa86",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "73022b79-0f1e-46bb-9ee8-e2c1b15acc4d"
        },
        "item": {
          "id": "4e057481-b82c-4e2b-9288-7210d079187e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "82340bbe-ed27-4b51-8c17-80e50cbe1f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e1b97-4e29-43e1-83e8-a500c9a467f8",
        "cursor": {
          "ref": "863cd61b-87b5-4f11-b990-802fa71cd5c6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9939b794-7581-4978-9e6f-69a5522ff2cf"
        },
        "item": {
          "id": "3d7e1b97-4e29-43e1-83e8-a500c9a467f8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "92184930-5452-418b-88cf-144dd4010ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ea30cf-8833-4852-b517-15631c7881f9",
        "cursor": {
          "ref": "d6e6dbfb-87f8-4039-b1b0-14b37412de4b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4a8dd607-1145-41ea-b061-4f86042c2ba1"
        },
        "item": {
          "id": "f3ea30cf-8833-4852-b517-15631c7881f9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dfca648f-69f4-4a6d-8d67-2c90032018e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08863092-2a81-40f1-9cc1-b04ed347078e",
        "cursor": {
          "ref": "c8f292a1-d1da-4244-a3f0-afd66b630d84",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "32e9f476-df50-4d24-87c7-652f400a8586"
        },
        "item": {
          "id": "08863092-2a81-40f1-9cc1-b04ed347078e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a24484df-5e8b-473d-8235-43aa970b8da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2df4e81-2e3b-448a-aca5-1f8298339c80",
        "cursor": {
          "ref": "059b21c2-854a-4e0a-9ab8-95e7142ae0d9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "00aeeac5-0e31-44ad-acb8-e0e1b490e780"
        },
        "item": {
          "id": "e2df4e81-2e3b-448a-aca5-1f8298339c80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "16c24b9e-cd22-4f9e-a700-975f58cb689e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7383f799-f81c-4ee8-b2b0-862793f29cb1",
        "cursor": {
          "ref": "feb2a07c-bc41-4dae-af55-c4f9e3e6f69b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "99fed233-0ce7-4f11-a3db-0963951e1ee3"
        },
        "item": {
          "id": "7383f799-f81c-4ee8-b2b0-862793f29cb1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "de3cba0e-1a47-4790-b45a-21a139c60f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f1f45e-6819-4b5a-82f1-26b2becaf4c1",
        "cursor": {
          "ref": "ab19eddb-0a31-47e0-adc6-c8d9c78e5ea8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9354d95-a50f-48e7-8aef-4e5305acb36b"
        },
        "item": {
          "id": "39f1f45e-6819-4b5a-82f1-26b2becaf4c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd6c7ff4-02a9-4105-92bb-032d78995c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6eed79-3ed2-4dc3-be90-5c96e1c3884f",
        "cursor": {
          "ref": "e701269a-c5e3-4a98-87f0-bd5dd40e8d25",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "38cb5646-a525-45f8-b628-9b7171e1233f"
        },
        "item": {
          "id": "2f6eed79-3ed2-4dc3-be90-5c96e1c3884f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2f990af3-e827-48d4-88c3-c448a608102f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4dd866-4710-4e2b-a66c-537fd185d6e1",
        "cursor": {
          "ref": "c73abc7f-dabf-41d8-a276-370a02ce2edc",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "99fe0045-6de5-4e35-9294-219a32dcc05a"
        },
        "item": {
          "id": "7d4dd866-4710-4e2b-a66c-537fd185d6e1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b5c72757-f6aa-4923-8a6b-849b57a35b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921da005-7f86-49f2-9153-2b613cbf3eb4",
        "cursor": {
          "ref": "0a6c9c0f-00d0-4c91-b24b-e72700180e41",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbb6045f-0147-4dbb-ade8-d0bd19074d03"
        },
        "item": {
          "id": "921da005-7f86-49f2-9153-2b613cbf3eb4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5a903542-5601-4381-a9c1-6f9689e3a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037909d-549a-4fdd-bb73-bf4457745bfd",
        "cursor": {
          "ref": "66e30383-0688-49fb-9175-eb4b3d03aedb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2d698535-7f11-4514-87cf-ac4b01c7ebfa"
        },
        "item": {
          "id": "a037909d-549a-4fdd-bb73-bf4457745bfd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ccdf8005-7d77-4347-9da9-03107ec91cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906478b2-45ee-4a68-9d00-9176779f4e10",
        "cursor": {
          "ref": "3fde3e9e-c5b8-4dbd-b174-bd0dee694064",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c3b0406f-c4e2-4a7d-8f93-66d12d7de9e5"
        },
        "item": {
          "id": "906478b2-45ee-4a68-9d00-9176779f4e10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1b1ba391-5b94-4642-8e66-1e2e878f71e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73547bb-4c57-4038-b60d-3f31cc4fb782",
        "cursor": {
          "ref": "0609c330-63e9-42e5-b332-46c9b2b73929",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8a709bef-d9f2-4ea1-9414-4665acda9255"
        },
        "item": {
          "id": "f73547bb-4c57-4038-b60d-3f31cc4fb782",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a56634f0-7baf-452d-ba44-de8b83892528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b6c929-586a-4a20-8104-2432039c22f8",
        "cursor": {
          "ref": "da08500e-2b85-44bb-b3f8-fc28dae8bc65",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2c9e7658-ade3-4f75-b103-529cc37c58ac"
        },
        "item": {
          "id": "98b6c929-586a-4a20-8104-2432039c22f8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "280b2548-82c3-4dea-8964-e53a608318db",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "52001bb2-809c-4d2f-ab8d-e76bf9a14d6d",
        "cursor": {
          "ref": "bab57ef9-a943-4e7f-b176-24b5040425c5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c7184d9e-77fb-4ba0-9a6c-16438dd20038"
        },
        "item": {
          "id": "52001bb2-809c-4d2f-ab8d-e76bf9a14d6d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "05105ce5-2c5d-4dcc-9303-8f7fcf4743aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6830da0c-c9f6-4e94-af10-1a6809e53ced",
        "cursor": {
          "ref": "59d494fa-8353-4f9c-adb9-d5da89366624",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a19963cf-dc0b-4143-89ab-c2f0288d7e85"
        },
        "item": {
          "id": "6830da0c-c9f6-4e94-af10-1a6809e53ced",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2dc749a1-45c2-47c3-9f3a-f45a412daf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c842344-693d-4091-b6af-6b76e1e8e00b",
        "cursor": {
          "ref": "39cd19a3-b7d8-47dc-b5d9-c521517d79ce",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f3f8d03-0977-4be0-a2ce-1322023f90ce"
        },
        "item": {
          "id": "7c842344-693d-4091-b6af-6b76e1e8e00b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f23cdbe7-d6f3-4678-af1d-7d577680a0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceffbf6-fc61-46a5-b693-fef1b7bd2f78",
        "cursor": {
          "ref": "21063b68-8bb8-4db1-8a2b-5c5ae9e9e4a7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "89c5cf94-51d1-4559-8b8b-425e1e94bb05"
        },
        "item": {
          "id": "4ceffbf6-fc61-46a5-b693-fef1b7bd2f78",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7b05199c-4c0d-437a-85dc-f8422770228a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb2678-7cfb-4dea-923c-3adfdc070147",
        "cursor": {
          "ref": "0f13df62-bf83-4ba3-aa07-2615d879bccf",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "63a9c1a2-1ea9-4394-985f-38011260bd63"
        },
        "item": {
          "id": "6dcb2678-7cfb-4dea-923c-3adfdc070147",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d603c605-a33f-4111-81a8-6927a6ee5683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa7b135-77b6-4a8f-8b9b-ae353dded48f",
        "cursor": {
          "ref": "2ef8c0e2-7373-49e8-b724-75010bfe0667",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6091d431-7727-4f99-ad46-339e0bc0ced2"
        },
        "item": {
          "id": "9aa7b135-77b6-4a8f-8b9b-ae353dded48f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "479f859d-64de-4442-a934-7e83b56d1e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f0b9a-3415-4531-88b7-8cfbb784dd26",
        "cursor": {
          "ref": "fc890d21-4ae4-48fc-a4f3-50b897e4d86c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "696d3370-f1ac-4501-93c8-2d2a1e6f1f08"
        },
        "item": {
          "id": "0c9f0b9a-3415-4531-88b7-8cfbb784dd26",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "422d9884-304f-405b-81a4-43dfb4341a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3810e-6292-4514-861c-d618899c4a1d",
        "cursor": {
          "ref": "3e11376d-804c-4b1a-8850-27e1c0e9067a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "684f40fd-d33d-45fe-bce7-166c3b034be9"
        },
        "item": {
          "id": "2af3810e-6292-4514-861c-d618899c4a1d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fce0406c-0aef-4eef-b044-8eb0832dadf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe7386e-ee9c-4013-88e7-a4fa7ca59400",
        "cursor": {
          "ref": "9ae1cc2a-99ef-4aa7-8646-190f85d5f39a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77ed9bae-966d-4030-b78b-d8e8a4434908"
        },
        "item": {
          "id": "1fe7386e-ee9c-4013-88e7-a4fa7ca59400",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5494cac8-5b11-4ff1-83bd-da9af129e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0378aeb9-7ca5-4c48-9267-3b44640341ee",
        "cursor": {
          "ref": "0a4308f2-89a4-40f6-a446-2edab0209f9c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13804e99-4fd6-4bae-8a7a-792fa466847f"
        },
        "item": {
          "id": "0378aeb9-7ca5-4c48-9267-3b44640341ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2d03b995-9f24-4940-806b-7d395f58b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad17b445-ddbe-4471-a5e0-713bf5ddd4d7",
        "cursor": {
          "ref": "317fae69-8a06-4ec7-8af8-145a52c0b0ff",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b336aa2c-f614-480c-ba23-0d6a30a7bb0f"
        },
        "item": {
          "id": "ad17b445-ddbe-4471-a5e0-713bf5ddd4d7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4193ef38-5c40-49de-933f-0cbdc8d20783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06522d25-fd60-48d2-8604-943575845705",
        "cursor": {
          "ref": "8113b2bf-caa9-4553-bd69-c0785a7ff5e6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "09e0fa7f-a8b8-44b4-94f9-9ffae9b27745"
        },
        "item": {
          "id": "06522d25-fd60-48d2-8604-943575845705",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa116918-8f2d-4def-aa5c-43ebcaa52588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301f112-77ef-480d-a030-6f1fada2f1fc",
        "cursor": {
          "ref": "b2b37630-32ae-424a-85b1-652f34f7e2b5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4b7ec3ba-f7c1-4beb-a690-17c0078e3470"
        },
        "item": {
          "id": "7301f112-77ef-480d-a030-6f1fada2f1fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca76cc93-4b71-4f6f-8147-05c11d5ae5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8a0599-2a39-423d-8a55-31076befd5a8",
        "cursor": {
          "ref": "ca423d70-be25-4d50-95f7-9ae7e20b0918",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4e04262-cfd5-4700-9d30-e95848c3cba6"
        },
        "item": {
          "id": "8b8a0599-2a39-423d-8a55-31076befd5a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "817af0d2-ec02-4f59-aa52-12d61bb98654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e046a09-c93f-4a2f-8268-212e000a41b0",
        "cursor": {
          "ref": "c7f938ba-8bbb-4d4a-9c78-7f021b9aad38",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7f04b09d-40cf-42c1-8b62-9fd1bcd360fb"
        },
        "item": {
          "id": "6e046a09-c93f-4a2f-8268-212e000a41b0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3e4205a8-f080-4c48-b862-98b4a0d4d61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e93dd1d-1654-46c5-aa15-4b2d31ac5766",
        "cursor": {
          "ref": "533ad8b9-be11-45c7-8b3d-6da2ccc3b0f3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a5d6b63-ca03-43e4-849b-eff18b1ad64d"
        },
        "item": {
          "id": "6e93dd1d-1654-46c5-aa15-4b2d31ac5766",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cdf4fe2b-e611-45fd-911f-bf4bae11832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b4f38-604f-4e9f-9126-04c5854a6f2c",
        "cursor": {
          "ref": "9e70bfed-6138-4762-aa17-b4ffe2e483f8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9de91d54-4f75-4069-b0d5-a4e83e167839"
        },
        "item": {
          "id": "b23b4f38-604f-4e9f-9126-04c5854a6f2c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "96006eb5-cf3b-45cf-b868-08c62fafca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb77ca1-1044-4417-965b-35dd3431e9d1",
        "cursor": {
          "ref": "eed842ee-9fc1-440c-9e1b-f8175a60afd3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ffd699e8-270c-420f-abfe-55d519f738d5"
        },
        "item": {
          "id": "beb77ca1-1044-4417-965b-35dd3431e9d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "77605119-4118-4cb1-89ea-a88d433d5964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb56f5-f89a-421b-81cf-736621623c01",
        "cursor": {
          "ref": "44e9a8d8-71ab-4416-9834-636728fe73a7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b9a965b1-5b4b-45bc-9409-0fe626db735c"
        },
        "item": {
          "id": "50cb56f5-f89a-421b-81cf-736621623c01",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fc3958a7-d4b6-4292-8836-4b5d1de05726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701e240b-78fb-4b69-bf5a-306488592a12",
        "cursor": {
          "ref": "28bd1a19-fde0-41b7-bfbe-7f4de8460642",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fc2763ec-02f0-4ed0-ac6c-e26bfc27858c"
        },
        "item": {
          "id": "701e240b-78fb-4b69-bf5a-306488592a12",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "39e26ed9-bc2c-4306-bdce-4509d123c285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb3f73-96eb-4035-9961-991706e5bc3c",
        "cursor": {
          "ref": "69a0523b-32e4-4fc3-9824-bbc3a4721243",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2e442aa3-e9fb-4248-8576-f6b7882fa1cb"
        },
        "item": {
          "id": "a4bb3f73-96eb-4035-9961-991706e5bc3c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fdac8209-2728-43d8-ad27-0ccb7468dcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2ca45-4bf6-496a-9abb-ccb55142ea37",
        "cursor": {
          "ref": "253b5d74-1f8c-40c0-97f3-75c37fc3cf7d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0ce4101e-35df-4cd5-8ac7-f6c734cf84e7"
        },
        "item": {
          "id": "98c2ca45-4bf6-496a-9abb-ccb55142ea37",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ada7255f-f272-4aad-beab-8d5899f595bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d004a5e-d9af-497d-8789-183cfe96da3f",
        "cursor": {
          "ref": "ab348541-250e-4c07-84ed-769f262a6e80",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d4a8da46-d386-421d-a8ab-4e4d5e3ea874"
        },
        "item": {
          "id": "4d004a5e-d9af-497d-8789-183cfe96da3f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "51a93590-0283-4400-ab58-580cdece80d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e774e-1924-4669-ab56-88c39ae27280",
        "cursor": {
          "ref": "0025842c-18ea-4622-baa9-db92a0720e32",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5067053d-d6a3-4461-b9ad-f64d85e7b648"
        },
        "item": {
          "id": "342e774e-1924-4669-ab56-88c39ae27280",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30ab4715-6662-4594-b1c1-1d2f39076bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c4483f-dbe7-428d-99e8-ab26b57526d1",
        "cursor": {
          "ref": "cd7a4aec-570e-470a-9850-6aff11856c10",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f1980aca-8128-45c2-8174-8a1bb11000e9"
        },
        "item": {
          "id": "96c4483f-dbe7-428d-99e8-ab26b57526d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a4b8d2b4-8ed0-4887-bab3-d909fd094f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4e4864-6e7d-4295-95b5-52ed9d346fc8",
        "cursor": {
          "ref": "be0bcd18-1156-4fc1-b26b-5d098f2a9622",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "28c07a47-b4e4-4f92-b3bd-2518555ee1e8"
        },
        "item": {
          "id": "0c4e4864-6e7d-4295-95b5-52ed9d346fc8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b44a3270-29ff-4584-a3f7-58e44e31d76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eb1cc9-fd36-4798-ad36-25a925428b7b",
        "cursor": {
          "ref": "385d23b9-0c5d-435d-8b45-1e29d885185c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "35df490a-1cb6-43f7-9083-78f5186160e6"
        },
        "item": {
          "id": "d9eb1cc9-fd36-4798-ad36-25a925428b7b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "91a04eb5-1936-4d25-8145-91713fb91618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df528904-cc90-435d-8dd2-622c41058b0b",
        "cursor": {
          "ref": "409db065-dabd-4a0b-9b1d-587f9e2a32fb",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8f098219-48a3-4e69-9836-62f191dbcac6"
        },
        "item": {
          "id": "df528904-cc90-435d-8dd2-622c41058b0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3444c850-ee6c-4a6f-96ce-17344ff85ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6018c583-f34e-4958-9844-fa44a555ecd0",
        "cursor": {
          "ref": "32af11b4-01d9-44aa-a919-6833a20d1171",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "80fcdaa6-44ae-4a37-9773-f34efc42cef2"
        },
        "item": {
          "id": "6018c583-f34e-4958-9844-fa44a555ecd0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8e994400-b897-43c9-afac-f30b788d7bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1316a12f-7d68-4afa-8c9f-0aa8cdb066f8",
        "cursor": {
          "ref": "dd5af65f-20f1-4542-9402-35234b4305a8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fd32da67-900f-483f-b880-dd507583a1e1"
        },
        "item": {
          "id": "1316a12f-7d68-4afa-8c9f-0aa8cdb066f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e1e10db2-45e6-4ecc-b09e-e50d2fc3fff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c129bb5-6fba-41dd-a6db-13079520b91b",
        "cursor": {
          "ref": "ed38f511-64ef-4236-b979-a802c02eb346",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b369143-0a74-4dd1-b5fe-0a0dc9d9e2aa"
        },
        "item": {
          "id": "4c129bb5-6fba-41dd-a6db-13079520b91b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fc8b6a31-9c73-410d-b574-6c506235ad8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8ceeff-bbd3-4e16-a893-7d4ea137b56d",
        "cursor": {
          "ref": "1e9da514-d121-4ff7-8a2f-c5ac815da507",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4b813036-477a-45ae-949f-c395d526939f"
        },
        "item": {
          "id": "2e8ceeff-bbd3-4e16-a893-7d4ea137b56d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4b816efa-d1da-4870-b9b7-307feccdd90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a8248a-5922-49af-9fdc-4e8bf1616f84",
        "cursor": {
          "ref": "ea933316-761d-4e62-956b-3a3d6377a001",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fb9af55d-2976-4c2a-a99c-9b0523def8b9"
        },
        "item": {
          "id": "83a8248a-5922-49af-9fdc-4e8bf1616f84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "39d34698-f714-45d1-8ee2-9d762178bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e49037-4cfe-451a-89e9-0edb699c6c90",
        "cursor": {
          "ref": "da49089b-8d53-4819-9631-71e7fd64ee96",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "76e12cc4-a47d-416d-a198-16655a9daa2f"
        },
        "item": {
          "id": "69e49037-4cfe-451a-89e9-0edb699c6c90",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "792a2636-ca2e-4ee1-83fa-357e8c4b2de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d497c-151d-4c1e-899b-a2c0df99bc79",
        "cursor": {
          "ref": "202f1de0-fa13-45d2-a466-e5e8068d720b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6f745f6a-2ad6-4b70-85d8-14b53c695702"
        },
        "item": {
          "id": "611d497c-151d-4c1e-899b-a2c0df99bc79",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "688f81eb-2f9d-413c-b49b-98df59fbe660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864024a3-086b-483f-bb60-22d064cfed0c",
        "cursor": {
          "ref": "05533dc8-cc8a-4c38-8279-79fd1f4bc513",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "43e8ef0a-b6d7-4c13-a9aa-259894a932dc"
        },
        "item": {
          "id": "864024a3-086b-483f-bb60-22d064cfed0c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "05777c44-1607-4b7a-9027-43aa037ea97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2394df-46b3-4c61-863b-905287da6a41",
        "cursor": {
          "ref": "82fe8693-fb0a-42b5-ad70-ed75b2556192",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f7e4bf8-7514-4463-ba50-c5d455a3a189"
        },
        "item": {
          "id": "dc2394df-46b3-4c61-863b-905287da6a41",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "90f2ad24-0b32-4e64-9cfa-1dc1213b562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db342131-5f6d-496d-b413-80d8fb4f1957",
        "cursor": {
          "ref": "c04e9553-d6a4-49be-95b6-37dfaace4727",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3cb7d174-ba49-4b6a-866f-e31862a8b55f"
        },
        "item": {
          "id": "db342131-5f6d-496d-b413-80d8fb4f1957",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "46b9f4ea-97f2-477f-99b3-756a6d88e313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43170e77-bbc9-4103-9b08-62cb441bdfcd",
        "cursor": {
          "ref": "00ce4f02-701b-4e18-ac29-8db9b994e02e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7e43f09e-ed71-4578-8c1a-b89a3bc93e42"
        },
        "item": {
          "id": "43170e77-bbc9-4103-9b08-62cb441bdfcd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8ecfe65e-c959-4b8b-b559-e7fb1dffbf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cf2a35-9336-44d9-b49e-67f8272f2cf7",
        "cursor": {
          "ref": "352aae46-ec7b-4baf-9a6e-70e7cbb08539",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfbda28e-003c-4c6e-9963-6ba9c0807648"
        },
        "item": {
          "id": "d6cf2a35-9336-44d9-b49e-67f8272f2cf7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "718b9afb-6346-4f44-89b3-ac266228a528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c7bd7b-7067-4113-97b1-3b0d5875d507",
        "cursor": {
          "ref": "8ba7e218-c1ca-43e0-88fa-6ec09f2e61bd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a08d075a-cb0e-40d6-a5a5-abba929ee983"
        },
        "item": {
          "id": "78c7bd7b-7067-4113-97b1-3b0d5875d507",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2682ae85-6416-4225-9b85-0b177d7a3fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8448880-ed0c-430f-a46a-69aee2d49063",
        "cursor": {
          "ref": "684b80e4-e90f-455e-bccf-f6168e1724bc",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1dbf6fd8-719f-4b80-8e53-06274a227073"
        },
        "item": {
          "id": "a8448880-ed0c-430f-a46a-69aee2d49063",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0473e861-7e87-4ed0-9e2c-231e2a70cf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0aae16-8003-4513-b1b0-46ec00433557",
        "cursor": {
          "ref": "5228d4d1-b78d-4436-b4ef-105c89009837",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fc6e1708-91b5-4dcc-8662-8547c991f55f"
        },
        "item": {
          "id": "be0aae16-8003-4513-b1b0-46ec00433557",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "05258a81-cb6d-4589-bf77-a912134707cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6fb0f7-a4b1-4421-aa20-6e4c6d59a99b",
        "cursor": {
          "ref": "c2dd0096-5081-4f95-b786-65cace98ef5e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7b265c3d-bee8-447d-84f5-06912654c6f9"
        },
        "item": {
          "id": "ee6fb0f7-a4b1-4421-aa20-6e4c6d59a99b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "79cb7cc4-5fc0-442f-a0e7-c5ff80e70762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b679f80-3856-43e1-b98a-fb86c49cb94e",
        "cursor": {
          "ref": "5da0d69b-8e3e-42ca-8ee9-208ca5d08b1f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e8e08f2c-e3c2-4aeb-ad65-b3457ca32004"
        },
        "item": {
          "id": "5b679f80-3856-43e1-b98a-fb86c49cb94e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "74b55eff-fd89-4b35-afc6-048adbe335e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4303b420-13e8-4d6b-b3fd-358fc0fb57b6",
        "cursor": {
          "ref": "f8e015c5-93ab-4457-833d-42043e9060f0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "31748137-6377-4e9d-a702-1e1719b2180e"
        },
        "item": {
          "id": "4303b420-13e8-4d6b-b3fd-358fc0fb57b6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ebdffef2-fb13-46b1-8537-3148cb5b7abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2617a2e-8600-42cd-b41b-2a8db14284c8",
        "cursor": {
          "ref": "ac3266c6-68da-40ed-a23b-ea2783ea2921",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "65b74599-d3bc-4073-9a2f-5288944cb407"
        },
        "item": {
          "id": "a2617a2e-8600-42cd-b41b-2a8db14284c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "157ff9dc-dd79-46c2-8c49-6a92652e20c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019762fc-161f-4487-97db-d5ee716c5410",
        "cursor": {
          "ref": "2027e502-4243-405c-bd6d-99f6441c1a8e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2c150b30-9f12-4fb3-b7b7-37a9eb994cd1"
        },
        "item": {
          "id": "019762fc-161f-4487-97db-d5ee716c5410",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "288a648e-bc33-4f2e-b384-3ac39656ad42",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "998d5233-8269-41ae-b06b-339fc8b821c5",
        "cursor": {
          "ref": "d3876308-507e-4b6c-9df0-86095a108d10",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7bc2e570-894d-4aa2-80b3-43b7945aff54"
        },
        "item": {
          "id": "998d5233-8269-41ae-b06b-339fc8b821c5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d7e8b2b-900f-4669-85ee-32dcc92aebb7",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d607374-0ef4-4301-9466-861819338765",
        "cursor": {
          "ref": "72626466-597a-4140-9f29-f51af980b725",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e0a58f1c-7619-4d71-a1df-cd84525296ca"
        },
        "item": {
          "id": "9d607374-0ef4-4301-9466-861819338765",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "09aceb4c-90a2-4121-883b-aab0cfadcb07",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "687455ab-0ef5-4be3-a6b6-f95fb0660a67",
        "cursor": {
          "ref": "8a084ee4-3449-407b-ae68-02bb1d0dc3b0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2ee9132f-ac40-4cad-a078-7e8cbede2299"
        },
        "item": {
          "id": "687455ab-0ef5-4be3-a6b6-f95fb0660a67",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63bb6ec0-847d-42b0-8102-3cfc5c5dd036",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687455ab-0ef5-4be3-a6b6-f95fb0660a67",
        "cursor": {
          "ref": "8a084ee4-3449-407b-ae68-02bb1d0dc3b0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2ee9132f-ac40-4cad-a078-7e8cbede2299"
        },
        "item": {
          "id": "687455ab-0ef5-4be3-a6b6-f95fb0660a67",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63bb6ec0-847d-42b0-8102-3cfc5c5dd036",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c97514f-122b-4577-a0aa-40d769c06995",
        "cursor": {
          "ref": "58555407-4c7c-40bf-a987-0680761a1b49",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07fae1a2-0a83-4d91-a980-5984872d082b"
        },
        "item": {
          "id": "8c97514f-122b-4577-a0aa-40d769c06995",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e2acc4a-d048-40b6-a954-36be3cc8b52a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edb3074-e32e-4d7b-84f9-32070e934b8a",
        "cursor": {
          "ref": "b2a581d3-aa35-4555-83bc-f36e509a60df",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bf6addb1-4f71-49af-83c9-0dd62ef99b9d"
        },
        "item": {
          "id": "3edb3074-e32e-4d7b-84f9-32070e934b8a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "906dc4ed-d4d1-44e4-9557-dbd363fff142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}