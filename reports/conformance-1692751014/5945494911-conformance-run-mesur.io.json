{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a61fa4ec-c401-4595-a104-aaf37089db94",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ce5123ae-f244-4459-a041-19331dbd4672",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc46164a-a097-4e15-a540-be9818c1ef34",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "60e3d316-ec51-4ad2-8c57-6dbe472badc9"
                }
              }
            ]
          },
          {
            "id": "434a8609-ef3e-424a-97b0-8ae0c4cdd790",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d81e0bcf-d079-4366-986b-56491886f4bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "253e413e-9a2e-4bff-a28e-0e4b79fd25d8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1392ac07-bc2e-4b7d-9b36-17a7be99d07f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5d5b07ff-a3b9-4778-912f-fbc3e1c81a8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f636b938-0c75-4345-ae0f-40467b1198f0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23da7730-500e-4823-85f0-2bb29cd7a8ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db95f0ed-fe92-4b76-9795-2f25b5d9cb71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e5a6c4e-5768-410a-951b-1f8c39cd8af8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc954042-644a-4c39-801d-ae9de511897d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a93427d-aaef-4ccb-a1af-73a9db325dc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca784107-0230-4b0b-89df-6754b9449735"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d36d19ab-d593-45a9-ac7c-83124dd84053",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "89074169-ed95-4909-8310-2b0ab65eb934"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fedda54b-4a35-411d-91ad-8a72edcd20ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8c52435-25dd-4ee4-b946-1624052a3ccb"
            }
          }
        ]
      },
      {
        "id": "c842d099-25ec-4bdb-b50b-f46947320902",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "77ace0e0-e77d-4e19-b9e8-5175a0c1b8a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcc31bda-ee50-4761-b592-6618a50985ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c8c2855-16c0-4a6b-8390-31a1207cc4ef",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98507260-2765-4bac-8ffe-06e35613b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e9a6c89-561a-4b6c-bc88-d2d4512e0110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a3db42-0560-42d2-bf18-8867ea129900",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e6e5a1-753f-4ff8-97f7-ea190b1cceb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "820062af-bb41-4768-ae68-6c4668478601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14e8442-1985-4041-9626-9ff13aa90cd3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c800ea00-4530-4ded-bc76-a10eb3df252e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa8489d7-7655-487b-bbb2-6a06c1423929"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31dfa2e8-be4f-4c5b-8704-d4a12ee6884e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f80e4255-4976-4e32-a6d9-ba8e0cbc2511",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b4f5af-f048-4987-8c1f-c353a728aab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b1e439-6e40-42a2-939e-018175acf318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00353703-46d1-4795-93fe-4a134abd80ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fb1d34-c0bc-4cd5-8620-a20c90314b26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f39491be-2cec-4f9e-bf8e-c2b3958e3919",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acb5661b-e28d-4dcd-bc43-5a40a273ee42",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5147a2b7-3594-4de6-9670-17561338b06c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "85f3b34e-88dd-4662-b147-ee5257566947"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a66758b-1de3-4eaa-a4f3-b9b589c5a590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "37c082f2-7ca6-4f0b-b15b-74eafaf5bc38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f916d0bd-0dc5-4843-8867-e4514d736697",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "930b8684-6e4b-4f78-a8d6-8b832ea93a56"
            }
          }
        ]
      },
      {
        "id": "c1bf8c3b-5282-44e6-8ac1-3b4b6fb7b99f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f86ca914-2053-4adf-abc8-f05a0d73bc90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10b550f5-ea9a-439b-a221-63d944109a20",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9838871b-7092-4b28-b6a0-823361e92199",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece5057-5711-4d71-8490-17bcd193ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751faa1c-ac20-4b3a-ab6c-fc5b281de15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33e6833-1cdd-4fc1-9a55-ab3baa3492a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69590591-613d-4bcf-a7cf-328926f27cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e06cebb-67f7-4cc1-988b-a5b22e40488e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0356f2-6efb-4eaf-a021-593530c84229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d7ea22-9453-42ad-91d9-0d460b977077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5630f389-dd4a-4a21-b9ea-f78ddad9cccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c61c94c2-045c-4730-8575-b086bd606167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5f70a1-b8ee-47bd-a82b-7550bc4e0a85",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee19edb-6f62-4f6c-9cb0-3574e0c11efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8edadc-a0b5-4f78-b127-480ad2f54fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dc5cd2-2950-4c16-bc24-e02aa2af2051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5124504-2c08-46cf-9697-9e3ec2035b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce80994e-d43c-44fc-84a9-6995f2568c12",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d273cf5c-f142-44b6-ac92-8432e7ce939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58eec73-c305-49d9-840a-324c627fa742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3b8037-a3ba-41c0-b8b8-38d272e8658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea3d11c7-9eda-4979-881d-fb4fd317042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a850a4-b104-4433-b7f3-17400dc11dc6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7912cf-9db2-4bd8-8cde-6ca5e06a08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8454ae1e-570e-47b4-b430-abbb0ac859f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ca482-07de-4ffd-ac2c-79f4361d8bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688c6d3c-af71-4c31-94fc-e1fde5ae5083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427c023f-a4bb-437a-9eae-17bac9ef2829",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed57c4d-968f-4816-8c74-5833d802dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ebf19d-e4bd-4417-81e3-314faef4ca22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ee5c2f-642b-4ad6-833b-e0d9744c4a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fc6bae7-87fc-4f5e-9b6f-511a0c5fb6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751e3af2-2f82-457b-a6fc-d52696560640",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef515c8-74f4-43e6-b75a-e4660e3f17f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3724e0-6548-49d7-b0c3-7a4e270f43a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833ad16b-ed15-4bb5-9214-b853329a78d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "727f8d8e-619b-47f4-b78b-b41601c09426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eb660c-53e7-4106-afb2-1c1bc9070f58",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea2b8b-6a5f-4812-8aad-fa0a072e470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949c120e-ca66-43b3-9e0c-a6eccbb25654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714905e8-0294-4f2c-b120-33bf304c22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "996402fe-e427-4935-a3b0-483c0d770a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da33808b-3c91-4896-b212-df1a9ce801f1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58900ea8-49ca-42a7-bd74-215151783a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758c3786-7389-4102-8994-ba19e6a17438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3360005a-9df4-4e6b-bf7b-6a4d9df3db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3584418b-6be3-4578-8040-e53166d7dad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e64702-eba9-4231-a385-0cfbde0de099",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cbbaeb-1725-4541-a209-0c9c21fbb967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f02f39-c6f4-446f-8ea4-a3eb54a7202e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7183eb-8f27-435a-97ff-5c988ce0c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0e86a81-3a54-41b4-a8b6-f3d0cf58018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80913a91-c830-41f8-89fc-21ad425d0e41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90ffbab-43c0-43a2-90a1-29ccde35f767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55d0e04-f951-4fd7-ad79-79037d514151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a72533-f32c-498e-b157-547be1fee009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f254a5f-a263-4868-b570-0aa835ef99ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4566562-edf5-4cec-99ef-3f24bf393d8f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5222a5-f594-43cb-bf90-dab2358c604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cfd127-1b6c-4334-8b6c-db4b3ecab460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff2837b-91fc-4190-9180-bfa2f6d4e713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd549e49-10c7-4843-ae0e-86adf20990e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb35598b-37c9-4214-b957-2c6b6a9d09b0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46beeaa-8f5e-42c6-9c7a-267cdb770937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2eb63a9-86da-410d-be8e-6dc86a70b5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce19a1d-36aa-4bd5-8215-2848a6fb599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8bbcb5b-7adb-40e0-8585-fb6c0573c403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932de1a1-628f-491f-af6f-1500f6c9f08b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d58c4-f3ee-47d6-9de9-d3e1f44a8204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccd3d4c-a2b7-4bcc-8819-c0c5410bc7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb08a61-8070-4851-9aac-4bec446da2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c62b492a-0a12-464a-a01a-7e4932622366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a359b7-df71-4593-8ca0-78291aa6bec5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b7302f-b971-4299-bf97-5f06441de7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e605bf-32a3-4de6-a2c2-f45bb7a8592c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e89b684-0edf-4d48-8f6e-b87f2a559a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63bf43e3-2e28-416c-a26f-b0f7f051cedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de745c52-68c5-43ce-a72e-36c1842de6ce",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf0fd6a-8332-4cb3-9f9f-e70d037e71ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc2b727-29a5-450f-b7f3-3332f3e8f8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c139fb-199d-4d34-b339-367f9f172682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4596fda6-bbd0-482f-b0ed-9b4fc057d7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e567ab24-0094-4dbb-91c3-2c5f16cf1119",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f31549-d1dd-4325-bb31-aa3b0833fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e0ccc5-18d7-4431-9d14-9fc80dd6d839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a543cb08-2432-421e-82e1-82d008af71e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aa9df93-3513-4ec3-9c01-681b900e0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80a71b2-4dcc-4f13-8dc6-92f1180d9e7d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb91484e-3746-4f41-8290-03a33d480bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c0fd50-8ab1-4f9d-b55c-9dc11bc072ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23550b9e-8984-4ca9-b971-f1778f9bed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3648e436-7788-41f9-abe0-af4d62f9e04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9cd5da-d695-4283-85bb-668083455e3c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edbc3c7-548e-4ee6-9855-5d3fa6b8fa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf597a9-bef0-4591-a808-eb198858b090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216f21c-7d8d-4208-a5e4-81e3535aa4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f09d22-6814-412c-be8c-d3d624d66e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bbe64d-4bf3-4c48-aca5-c3fc29cc790d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e0b242-9915-43c0-ba7e-5a87de1087d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fa98fe-9d1b-4655-b672-fd0d75c3a49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b540220-43be-4419-bc11-629ee89cc6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d298e8ef-fefb-4fc5-be05-14901619a906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371dffc6-8217-4e15-bb24-695d49fdca71",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15acc434-bc52-4187-b7ac-01b3fb32571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2687c156-88b7-40be-87a8-cebef4d2a38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93dc006-b5e6-4275-882b-b0ca2c4007e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54908e16-5ec9-42dd-88f7-05f441f05dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea7b9a9-740e-457e-be38-80f0dbe36e01",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5680b2a3-6b9b-435f-90d0-4849f6b952a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60e3146-0a10-4303-841f-abb04a2b102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f4fd4f-24d4-4730-9764-7f81d06197a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e36c75-91e5-4cf1-b66f-3dc1cce0f1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6733031-eafb-4c52-b4e8-ddb0e7386a27",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8b1384-b3de-49ca-ac5e-5912376337da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005b14fb-7755-48ae-84ce-d3ec9b820ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934b4fbc-2eb0-4901-b6bc-30548ac5ab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fab70e17-98ff-44b8-9022-16ff69908eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed48e8b-b522-48fb-b29b-98e8bcbac72b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae26f80-149a-42f4-8019-21edc4a51082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806a52bb-029e-4d97-ba4d-67bf07cece21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e50e33-e8b9-4701-b0fd-ad50fe9c7492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdba4b36-eaad-4bd6-89fc-f185b15102e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eae5b47-6a58-427e-b79c-b0e5f5132378",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a3283c-0eef-4d4f-a0fd-2392e74a0e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528c7a2-e15d-4c46-95bd-2096e2e1ff17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3722da2f-7ad8-4acc-8056-40f241d62580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6a8761-d25d-48e1-9513-3829c88147f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822a0aed-5666-40f2-a41d-40058074ab89",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d751efb6-b938-41b3-8a76-41b9ce7fc218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986fa20f-4f2e-4ae0-beaa-9e8aaa3c91d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e891ad-ed08-4996-af2d-3615ca40de65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2236d271-42c4-4b3e-955f-3bbd5f2c1815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8048830d-19c1-4a12-9087-aa6d06e54b45",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe22f5a-2b6b-422c-a336-aad34b639848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea71e4ef-d2b9-4710-b9de-3e0b4298ddb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676e96e1-fbba-4b36-9560-7f7d648521a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66443158-67f5-4b23-9df9-abf8094f8e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aedd04f-5858-4a64-bfe3-4e94cefddb8a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d608d952-ff37-4f0f-93fc-eb1d9a6c2a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242c20ce-c6d1-4e8e-9df9-b4fa6994be87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e14762-7755-41f6-be03-ee38aa6aa506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0704cb-79fa-4eaf-b298-6908a79b0d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e426ec-d1f4-45de-970c-3c823f3e02e1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba88d63d-5f55-447f-b67d-a8e568ea0873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0ceb7d-0e38-4e1f-9adf-4083544ea8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d827f0-29ca-4aae-9c7e-ae252f9f151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fdadb2-015d-44a5-a08b-d6b4fcb2c66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e1a9c2-dec6-4a97-9bc4-ac824d9e31ea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745cf7d7-5855-4e87-bfae-90609022b937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18557b50-ddd4-4b96-b55c-78960e2b52a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4400bb-ed67-4514-b426-6675834ea994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "991b621b-3af8-4c7e-9bf4-9c2d8f6ae58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f99c7c-5ffb-4e07-bbf6-980663ec9601",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e759a23-4775-42a9-920d-f111c1e0881c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671ef66c-568f-492a-a321-f9391a00dabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece71c9a-9358-4f44-9fab-f7973d590d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dc5686-b923-4752-a633-bb4498d29ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b731dc6f-1429-4758-870d-3152ee045f10",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e5de98-665c-49a6-82e1-3113d59461e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d09ce71-eeaa-41b8-921c-2e5a45bae45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2841307f-77bb-416e-8801-99cb32b8a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "854eaaf7-fa5b-414f-9711-76e837fe37b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4ff4a0-4155-40b2-bf80-7cc14def46cb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ab63bd-455b-4a6a-a194-8551cbecdcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a854d5b-2158-42bc-98b4-35941c93b665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa73559a-3fc7-446a-9bb2-7c4879392a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85340882-a0a9-4342-baf8-1b5a59cc028b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d74815-f728-4933-9dae-44b1277743e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dce05d-ea2e-4dc9-998d-0e6361de8810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c10080-9a7d-4e25-bc11-0059e94ad617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cacf942-53ce-4f18-b900-b08a6448e12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77259c61-c471-44ce-934d-185b69de206b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405b3a94-c7d0-4273-b411-1e6e97569e34",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a38ccb-20c5-4f22-8be8-f88aa96222f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3f1033-6a19-4b14-89e0-493bc6e624bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55090f3-59a8-4d97-a287-d2620e65e63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a8dd6d-a028-4a5a-af11-6011f2dbcb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74611168-d407-4620-b8f5-a6b33e0bde23",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87bd5b0-e9bf-4835-baf9-dd0b69f4faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b38ba11-83b6-4311-bbfc-e0015e3f6c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc87158c-8d9a-48be-a1d4-81a1b0b0e03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13b82aff-e0a1-4da9-aaf1-ff5d18319e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d7e42a-fe16-452f-86b3-9853193b81b2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a3a23-2666-4c69-9ccd-aeba61bc7afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c60782-f9d4-4393-985b-ebf61e55fc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c61210-b3af-4178-9aef-4718a306faf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be64f25b-a1d1-43fd-956c-2d9068d81480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14176b90-373c-4aa1-bd11-102742a0fe3c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c0282-f1ef-4a8a-898c-6fd4a08e232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f691358-6519-46dc-97ad-9549b5fcbb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac935651-2db0-4749-8201-875b48a6091a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6858f85-a8e6-4d86-a9db-a27834aad88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a4a1bf-9a61-4546-bdc8-292a63b5c138",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5137473-e406-4097-a2f0-988156be6406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27eb4fad-f4f7-46e3-8d8c-dd50a42082bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd304527-ba61-4176-aa48-38b72118ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96043679-7653-440b-b18f-c27a261f9354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ebd94-76a9-4871-b4f9-9a923890d2d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb280fa-686a-4f42-96af-d8a42611228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e5ec50-ef84-4ec2-b35a-6930eaeac1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d57b2-2b5d-46db-8845-019e9d0c500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba049ed-fc0f-43d6-966d-94eac943036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89956ea9-5eb4-4748-bcad-97df42c5fce7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1ccba0-dae7-45e6-9147-1fea8ced1030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd228d5-7201-4f35-8318-eb084deeec3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c2d8c6-42c7-4ce8-9ce0-930961da832a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda134e5-0070-41c9-af5c-550b8470ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c1482-1ddf-4ec8-8f35-1e04aa015980",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f35f002-bcca-49be-b9f8-f170b87462b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daab0705-effa-4f36-af13-77549320f013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f20aa2-ab2f-4a6b-b7af-66795e3e1f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2790f49c-305f-49a4-8c28-5750142c1e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553b3efa-efa2-43c6-b106-ea413a066b05",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c274f22-2cd4-47be-a56f-09d95be789fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ea48bf-f9fe-4b4c-beca-c491917463f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e6b334-07d2-4b50-a17c-b94d6ad6b942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7724f9af-b171-4edb-b5f1-b34bc1e7ddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cede21-7112-48ff-8b63-dd988e5eecbb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b9c11-6502-40e1-8d34-f896273b03d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e17238-8612-4b4c-b1ad-0a96562c6522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d7cefe-b59a-4a09-9858-e26e8c91a308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4233aff3-eba4-48e0-808f-af001d8d442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f7317f-6715-4b48-8acf-541f57318a8b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66356c37-bccf-40b7-9cc3-5b8f57507e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eee47d0-78eb-4e53-b2e5-e0ed0d9108d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72827b66-66c4-4812-903b-6dd59fb27513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "197ef6d0-fd88-4b33-8d33-9859cd352fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eafd511-db80-4299-a8f2-158b2b269b52",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e71a9eb-03b7-45d8-8388-7b98c1df0e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a36fb9-2f6d-4016-88d4-5a2dde147d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6f2e08-d9f9-4529-b5e1-7c6cb844b284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b943c1-da82-4a30-82db-5a0ab84210ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b6839-2fcd-49ea-93c8-365bd14070d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3716e3-7a6a-4705-a2ab-2d973dd976a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5e8892-3c1e-4e78-a8cc-6574d6445079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8489a6ff-538d-4d99-bcbe-625f44b89873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "823604db-046e-4ca9-9295-6e2dfa73af1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572d922f-0cfb-4417-9029-e852584b4c27",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4382a21-7c90-4d3b-a5c4-a9b6adb9f882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7bc59e-ece6-4166-b53b-7be66c03cb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a28d719-773d-4275-8c46-a943bf621385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3ab3b-95ca-4990-9114-feab089ad21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7c548-9754-48be-a944-5f57af4dd6c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47580169-a725-42d7-92b0-9a91391348af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b023fe-4371-4363-920c-cfd32ab6e29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994d6f82-561c-42ab-831e-f2187410b466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3caf818-e7be-41df-8583-8de371de5af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d156941-7f3d-420f-93a9-e40bf6236ccf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76033ffe-9fc6-4743-b372-d40116424444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317051b5-c416-499e-83d9-c4512d830583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b08647a-5805-47ad-8e6c-9bfd910fee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd36fe3-b8cd-478b-a378-6f325fdd5144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea63f3a7-ceb3-4258-9489-80df30f8b184",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52d3fa7-d98b-49e6-8e10-1f9024c82fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd9904a-ec2f-4115-aebd-029a445050c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ed625b-d35b-4127-b6e9-d62e312e93f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b172d70-ab33-48d9-9cce-b4fa81f22ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54485fc1-3abf-430b-81af-8ce3bb15a5a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eb47f-caac-4296-ac7f-2493b7e9f01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7d201c-f8dc-4307-9771-b2a9cf7add33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e9538-8796-4181-9b4f-2f815b16fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec64870-5246-4b59-bbc4-e0e476a885e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11533b1-b817-49a8-959c-48d1f5789aae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae34826-9610-49f0-8ee1-b2f06eaec807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11945f1f-505e-41f6-bc52-61b7fad299c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b9143e-4473-4056-aef5-d2d0512ee3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "729d6bb6-3e28-4185-8ca9-0f230e81dfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85b3a2-3077-4f2d-95bf-b9fd88c2ae61",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7efab7-d666-4381-bf57-84401fc63cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e485bd-e8c4-422f-8b75-5107fdff797d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8b732a-2d55-46c1-b8d9-198fd3e51a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f424bd75-3741-4a37-b62e-6e56270efdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c57e713-03fb-4b4c-8a4d-d8e48bbf35fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09889cb3-4d7b-468f-b357-cdf2c6bb496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889dd517-451e-408a-9660-3030adde41b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a70124-2c9e-46fe-a8fa-119c9bfea17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f22d5f-3dd0-4ac2-9ebe-2bac26c47f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd970a1-eed2-4d94-b5d6-1d6a9c1668d9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f42789e-1938-4fe3-bbfd-064e45560cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11813e0-10f9-428a-becb-711ed98ea3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5228ef44-b929-4d1d-a2a8-830fc066ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22693ef2-0954-49bc-9bbb-a50e48203ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985db85d-32b5-4f2c-965d-94cfc67806d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d52e0-a9da-4624-8c93-41d928dd9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6eda30-9be2-46c6-91c8-a1d7c4710a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80ca09-9834-4905-9821-648616a315df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80c8ab5-5e09-4f33-aa6f-72119bd704b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f09938-0523-4d90-9a22-521521b613f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53a95b3-574e-42ff-a000-99858440c0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb013496-c11b-4e8f-9aad-07282f20c906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29917e4b-95b4-49e8-a06e-8327dfbf337c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c727ea36-58a0-470a-9da9-5e5f530dabb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b3b40-ddf7-484a-9761-36dcadc4555e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a641f-a517-46ff-8327-81295b8efad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54be27d-6308-4041-81ea-db1b0a1f1d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab23aa-0831-4f28-a487-f82bf9b75fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43352d84-dd5e-473d-b4c2-a2efccf219b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b017ccf3-cbdb-47d5-99e7-5bebfa894525",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd4e38f-03e1-4e94-9c7e-49a68b1b7508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff85a8d-50ee-4a59-8c81-f34748025823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0388c6a1-201c-48a0-8f45-0f2a6a35ac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3805c868-d2a9-4a41-bb3e-7a849f90dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e03dda-c596-46bd-8d73-2afadddcedd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ace035-5b56-470e-9b69-1a165516eefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809067f3-e4c8-4db2-b916-174a79b22de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ee549-4ba2-4b41-8496-3cc0067b7d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c62c28b-c709-4d8c-bcd0-45c580452278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fd72f3-9cb8-4b3c-9ea8-1ad9c564522b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c775c6f4-63db-4e38-8da9-92c9d599695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca44400d-1ab1-4cb6-acb7-22de5f6b5bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4521b17b-44a9-4dd6-aac5-183b8700a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac91c9c7-06f0-4f15-98cc-b6722e76d21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c90df73-4056-42a9-a9a0-4d0578642890",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a17a9f-3334-47f5-989a-0799c4dc64c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76053d46-c7eb-43f9-bba5-4babd8b72bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad619b61-c03d-46a4-aee0-eb91eed62eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6692811-be04-41e4-8602-f568c79c58da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137fb49b-13e2-43b1-89f0-e4d7fb22e5af",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9828a8-b907-4fcf-9779-2baa32e7cd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99724e64-16ee-4136-b2e1-b7a6549d3bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da39407-b576-4f40-b3d1-792a467f2a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5437b81f-dd6b-4df9-823d-6907ce54de51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af4df58-d1d2-4c11-949e-5c0b005728ff",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617a7b01-c1f3-40f8-8efa-31dbdef95d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea029004-4d05-45ca-bdaa-c23284d3b326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0336243-c3b6-400e-ac5c-de53e885e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5bff27-fd8f-4a87-a7b6-29c38fb820e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b1d6fb-9d22-41da-8b60-ef3c8daa7448",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9f5ed-a064-47ab-bbef-b53c375fc21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef7276d-e197-460a-815a-c85bedf354f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47371d3-22c4-463b-b644-928d408c78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ebe105-be42-47b5-852b-a923344abc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba7be76-c77e-45f1-a9b9-268bf7282175",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a12b3b-adc6-417b-a886-86249f0c393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66372cd-0fab-429d-8434-5e5a18894700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44215d93-cc72-4614-a917-d84c98db534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8467314c-9c75-41a8-8554-f5e708134b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cba9a7e-bc50-48b2-823d-f0a1a9e603fd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198df3dc-1691-48aa-94a3-41cd0467e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f664499-a132-47c9-b55e-d0bd0fd87895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39938d60-b14c-4aee-b127-65134f3ad67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba01a49c-d762-49f3-913d-8d1a7002188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34b62a3-0edb-4ed8-9210-527e0da816fb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d450bb5-bdaa-4be7-9bd9-a8aca310bddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2815239-2a5f-4c73-bf71-4a138a0879a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d7faba-ac0a-4323-92e1-1a46b84bf576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02970f9c-85c4-4ace-b772-dc872e5f0f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bd485b-2f4e-4285-828f-6e97ddc19a66",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4396d8-6372-4969-8204-ce7e6967ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9c9b7d-6f40-490f-8d9d-e51bf14eef6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb431562-7600-4188-b1ce-fe4fc7f38b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26b8d2f-fc26-4dd6-802b-aaaa023657cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2385105-ee7a-4298-bd41-f3271f826912",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d121d2-8fca-46c9-a00f-3aafe2ff30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b92c0b6-8783-4bfa-967f-76b65e1b64b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286922ae-e17e-45d3-808c-088e9c3f6ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d0203-bc6c-4086-9494-b6f8d3255c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1eb8df-df78-4114-a909-1d8642e8a02a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd5c418-8f53-4fd9-9f42-612c64c9f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93890a77-8469-4812-bbaa-d30b7b1694ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6a486c-288c-4012-862a-88e1bd4af496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f323a9-419e-438e-b9ca-ae7f341fdf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90894a46-181c-4457-88a6-758f3e137203",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b747fe60-c713-436a-b7d2-f597b89ac587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b7a22a-ecbc-4d3d-a123-4314b120cf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcaa928-eff9-4df9-b2c2-684598c9a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f671462-c528-4a77-82aa-95a0376a52bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de454a4-c3e5-4579-b213-e39313d11190",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d99f1-8e21-4364-9340-b465edff1b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64acb614-d26e-44e5-81e4-2d5ef5b42698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205dda51-28e1-4b33-ac86-7c3e82b76bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "511de902-57a9-4ed8-828f-0f85644b74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6fe695-589d-4308-8820-8f085d9685ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7429f24-ffaa-4c21-9b11-3ce60b7cd8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7954e9b-cac1-4971-b784-88ed0611ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b619c328-81e5-46ff-8fe4-7541d659e17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "228d1239-65a7-41b4-87c3-51ab7b7ce8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadd5785-4d56-4c41-9b0c-106e98c3ade7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2148d2-b432-4b1c-a3a5-aa84c4c74347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d5532c-b817-4242-b558-ba5115bcd311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076d18ba-b000-4bc8-9fd7-546973831d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a5c4a3-5a61-43a6-9d53-9d5a2fbb74eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b667ab8f-16b9-4f0f-a692-f889d20ba87d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921dc5b6-0518-460f-981c-ad557242f0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a63d321-c4f6-4882-9fc4-0f1b35c666e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79781dc-1870-4815-be5d-dd223b9a228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8299c5-8e93-4980-baf0-118102c60076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf88aba-dc28-4884-a178-9871d91dc49a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fd623e-c1be-4893-9764-c18bd74e1b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8bd2b0-6f6f-411e-b015-97625436e6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92210a2b-f18d-430c-b299-540f9631f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89a0236-97dc-45fa-9b34-fed9b7577298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b42724-f970-4f80-980b-21a52a2e0a1b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139314d0-d96f-4f06-acad-fcaa68da4c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155cf764-980c-4255-974e-cf91ebce942e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab4ab0b-df4a-4f82-b85e-cad3d19f8f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bc0ed9-da0c-4e87-be24-8eb6752666ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f3355-aee6-47a0-b7da-4d66e02bfc16",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9979dcab-fd3c-45be-99ca-34169a322d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aa3d5b-79f8-4589-a499-ecf35ca8ec36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b0e253-df80-486d-880e-f9137483bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f67a44-8421-461c-9791-d8e514b3e240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13925964-3e34-4155-88a0-b3300e2bb960",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd5bad3-3492-47b7-8475-587a6df39461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee0a53c-aeda-43f1-bde3-93df99d3747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770d4937-749f-4a50-93b4-659704740796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23cc4cae-1980-444f-aca7-a69aa580884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a09881-1c88-4ff8-a4de-5e6245587c34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1475cb0a-1804-4397-9a7b-7a4448a9a983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d044045c-4548-40b7-9fed-86f44134d840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88584b0a-dece-41d8-86ce-ca7d1d3334c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a4dd63-0cbd-4279-b40d-d3251aef8606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c946258c-e23c-48db-ac08-4214541a82a8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d18e87-6e71-4099-8ea4-ce34ef6872d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d432ba56-6b6d-4f8d-8930-03463ea6cd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbef6d7-845f-4a0b-bdc8-67a0635440de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc14376-80b7-435a-8888-c9aa7b4b77ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ff6664-c8a2-4fe1-b3b5-aafe5a594d76",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce56fc61-d9bd-4025-a4a3-4397aff9cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc43631d-acaf-4c87-82da-3aea83362f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90707efb-5bed-4fe8-af9d-7d8f075fac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc600e07-c519-4ca9-98f5-bf767b7c76c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceb7469-8523-4f62-8c43-d35202be3fad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6185bea4-7a8e-4094-b00b-469c58a9d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fd8554-8cb8-4678-ab91-fab54dc4a6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071b4903-8559-4252-b226-862ce8a263aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab4095d-0651-44f8-b075-86a5387c3c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260507c9-e310-4a47-9236-c6800ff2e49a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc95855-9e53-4137-a493-c8eaffbb5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e66167c-c25d-4304-9679-68ad4f7592bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10068d5d-7768-4eb8-a6a9-7d85f4dbcd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbb9206-3125-4909-b06a-e568bd19b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d5a803-e380-47b3-97b5-1306299d8027",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d139fd5-e3a9-4f6b-a2f9-42ed481c1af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37c08c-b80f-446e-b14d-e50721202545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8d81f6-5dd8-4f91-8459-8acc2dabb0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0340ab-c476-4655-bb90-28f34db41b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3875dba-0126-4bee-8077-2578ba159294",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8033d60-c01c-4a2c-b3cc-57c1dcf1af49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2efa99f-89e3-4394-a4c2-e53a528f7ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229e8a4-0ee5-41fc-9803-c7564b908685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc1421c-97dc-491b-9b49-cb54e60ed692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b93c10-5ca8-46a8-b729-a3502e0d2cf8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f698d0a-4060-40e1-9119-8d80bde3b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a55d71-69e5-4018-9f77-4b23c3cf5072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938ad1b7-0fe4-4911-9d69-caaf13d63c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38c06216-b715-4632-8481-9733b0557de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c935d31-0e28-4478-acb2-131bb9a65a65",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38983c0a-9148-4a2a-901b-f7f96c8cc75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d73cd8-0747-4cf0-b184-5efb0cb1dc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e28771-e294-4e93-9738-7deb29011486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "994d2561-e6bb-4578-ad5e-1ef437228f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b4637-d116-41e7-bdb9-af2cf660293d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740006c4-fc23-4ca3-87f4-5333d172d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65aed78-18bb-49a8-b31e-de67dd564afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb338ac3-9efb-4c5f-a1ae-b55a403aee56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c3e8a3-80c0-4312-89b4-9e9288daa3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef838e8-fb33-482c-b16e-15ded15b4ec9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c901e32f-b1f5-4a56-b644-2cf5a5d83da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "154171ed-6727-46d2-9625-b5ba903be2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed899a89-2fb0-49b3-9998-3e117c2070e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b64ce1-e502-4a9a-ba61-774d96e5afb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a2a767a-6639-4dfb-9d2b-d97688d885d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66225ca1-6d78-400c-9c21-1a4a8ed3f1a8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a0e838-9dc2-4316-802f-81bbb243f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7ddb80c-331d-4c09-9256-fb12cf9bbb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3247a7c9-de28-43ce-aa45-7ebf4754912a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b1c1e6-e439-4f50-97fe-395c94994c8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fbacbf1-c924-4090-8c97-b8966380e14f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69b88bd3-9c79-42d8-9162-c15353cc9334"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "015a2252-c8b4-47b9-8f5a-7355a87677df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c6ee2d-bbca-4529-86e9-a50240cd684f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cab5274-16e0-47f5-b9f3-fc4a1be28940",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2aab513-1a6e-4470-9091-22b28c2e2479"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "caaec99a-a3f7-422e-8a67-e5f44b4c3546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23becd33-1d34-4b94-9c83-6ad6aece4550"
                }
              }
            ]
          },
          {
            "id": "d87e280a-c18d-4a56-a439-f9f21a82ebe7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b0c5d97-afb8-4f9d-9cf4-2ef1ba8cc3ea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b3008f7-149d-46b7-b0c5-e6482efc7574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49618a3f-0380-438d-b668-8aec7b72bf6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3229484a-dfda-40ea-872c-2cd6e3001c5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6743436-bf1c-4ee5-a7ef-b003f4c2ed3b"
                    }
                  }
                ]
              },
              {
                "id": "f1b0a89f-a406-4872-a8fe-8c401420d5ae",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb06f0d4-37b0-4e60-bf28-25746512fb39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61dcf3b0-3485-49ec-b8cf-cdf7cde768f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97026163-c322-4de7-9a2e-c84763fda719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f16cb24-cf23-40d9-9c48-9e7c309fe75c"
                    }
                  }
                ]
              },
              {
                "id": "4310e062-3094-44ea-9c12-4adbb8738368",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ad5d56-9ba4-4a1f-87b5-5e54f86c281e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "268ea7fb-d152-4df0-92e7-8401640c5d73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2365fad6-cd70-439b-b3e5-b8affee8209b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "767cb451-248c-4f46-9b08-d91bfd674231"
                    }
                  }
                ]
              },
              {
                "id": "cd4faa8f-5557-4240-9553-7440516d73ee",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae0a7538-0d9a-40e6-9adb-6ae3923fae44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea956b37-5b35-48a6-bdd2-bcfebab4fe44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a14a59-00f4-44f4-84a0-5accb9ea7723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "46b0df96-8f6b-4fda-b06a-c882c6104c05"
                    }
                  }
                ]
              },
              {
                "id": "91bf9511-3309-4277-b12f-f36fcb9ec96f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94477483-f32c-427c-b1ce-c7778aec3be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca1aba1c-4b32-46e6-9911-e929c073b2b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1750a10b-b1e5-4e3e-9774-f46bcb68415f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "700a11cd-95b9-4e01-8553-2d43b186e5d9"
                    }
                  }
                ]
              },
              {
                "id": "4c374903-f88f-4651-a0ca-7315482f388a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8215a9d6-ed5c-4605-bfe7-5fe9e01b10f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94c95eec-9d25-4d7c-b66c-8715a58aba2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51a47e8b-5b89-4b16-b525-258bdc1f56bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0895711-9ad7-4a84-93d9-521dc852a54c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c5c03e5-85b5-4325-9270-3f44c2ce116b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cc22b55-589b-4386-839b-dd8f02dab74f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0107539f-61ce-477c-a2ac-fe319f904748",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e34347c-6f6b-4ea0-b12f-7fc963520d83"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e05b5871-9a52-47a7-99a4-ead29953d285",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f1e2b5a5-3b28-482c-9ddf-2703bf608309"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d29ab38-3d53-4a8f-8ad0-09b69a8cbfde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31b322c2-3276-443b-97ca-e5c45e70c15c"
            }
          }
        ]
      },
      {
        "id": "ef72ee04-ad04-43bd-84df-c026d3243f85",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1c64ac8a-8c90-41e3-8ee0-9d52b6ac8607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff540157-8915-4769-a8ea-6382a65bc000",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a24393b-dd1b-4323-8b0a-d8dc709d1b85",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469edab3-4fd8-48e3-9a81-b42835ad51d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a6efbb-cd2e-4060-b3a6-713362b022d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48422256-7ebe-4ea1-95c8-b3cc10350569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c940ef1-96fa-413d-aa51-680bd0d66b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7cf593-d6fe-4a6c-8e11-50e27ad29611",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ef3f1-0765-43c1-8631-26ef2a0c1750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd079e2e-a7eb-4220-9128-30898e7a3d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b23588-53f8-407f-a124-7b9e985f5eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "812f83fa-66fc-4b3e-81d4-018ddc7c9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0a5d72-e97a-425d-95e9-7220f0491f3a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39745a3a-a20a-4296-8128-6dac959d14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ee79c5-6295-4e8e-ba18-1e2f53b1c550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc79b84-7452-4e04-aa87-c9f39405f05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "748a335a-cca5-4939-8c3f-72242003c68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfd442-8dff-4119-93db-3522fca1cc0f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffd1621-7d59-484e-84fa-a3d66d1c6e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df445fe7-55a2-4f64-8031-222265391176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50355301-dc0b-4d3e-902f-7d75506f2736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e26668-dd97-4599-8151-8addb62f7a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6794432-78c6-448c-8b07-8b599196badd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a85249-82d6-4f9b-822b-7b8a55567644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561c450e-35d8-4af1-8f6f-5d962577e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6805faf-b1cf-460b-93fa-2abac50caca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "183b783e-1444-4c20-b920-58a93e78d704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b1f98e-3c04-4639-81e2-c963d2ce4b5f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae2a8e-5e2c-4e5c-b869-43a6ae8a9e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a0e906-f37a-410a-b13c-e8ba56acdd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b0276-f766-40f0-ae59-47f9a574bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23186b11-ba19-4ade-a5a3-77dea3ea4a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7a3df3-a005-4d6a-ab05-1bd669ee155a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9414c0b5-f81e-4d11-8059-a9a4711099fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b28f4c-b79d-4a0c-904f-0f6013122889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd563a4-08a8-4a0e-b625-ce7f5e239e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c5f7f7-7f6c-4161-b598-d319e815ec32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51627d73-465c-44d8-bad8-0336a586040b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b72daa-abb9-4093-a58f-6f5cec09852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a8a623-6017-4d94-9ae5-e9e7f95f7683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed8421-d7bf-41e4-b832-e4be5040a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccb4481-4b12-4ad3-a09e-7d679c19d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3453c33-c36f-4a45-a5f9-69c22a3d79d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c636a7e-2310-4dae-8c05-0fd957bff8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a4ec47-668d-43ce-a99e-3641f76c2dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9c33e2-7e02-4eeb-9d50-eae6a2e0ac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0e25b5-2736-4e5f-83a4-a249111178e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164a90de-745b-4d66-bdd8-d716f2208da0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca76fe9d-10de-4882-91b0-a4a4cd47127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c57ef2-d031-4ad5-a289-0215540001e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bbdf89-45ac-4852-9582-3fbc20b635c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "070b9f0b-bbc2-4284-998f-40935eafceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fcaef8-361b-444c-a7df-2495c15d2725",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70dcf7-dfa3-4052-94a9-7d31ea930972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdbf0e1-7eb8-4339-9b9d-fcab505bb5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9933b9f0-2375-4c7a-afd5-8449b080b56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0dccca18-939b-452c-b4dd-df32a1f2c142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3135e021-812b-4850-8d5a-0cb5df1c809b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaf21c7-f859-41eb-8cde-f058560773ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17561ee4-52dd-47a2-8c11-7591bfd6b59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e501a5-c1a2-4af1-92cd-71e265839eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "815c985f-7215-4acb-8a1d-298d1ad8dbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d4f01b-c6ad-435a-9a82-f245d0ff319d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b08973e-7395-4c67-8254-310597eca07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b6766a-0c49-4a5b-abaf-aaf4e2225d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525d87a4-536a-4bfd-b2dd-27cbd9cbbd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e612ada4-dce3-42c2-8635-c22c5b9deab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb0ebcf-b417-43e7-b993-58b8f94d4500",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82eb80-94b3-403d-b721-6cf594ce3775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242f467d-fcb5-4f84-8bb1-2886f6169bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f7c181-87ba-4e3f-bedf-ca381c169a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c3a464-06fe-4d44-8f2b-d28c455acacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7baa05f-0ea3-4de6-8601-2223d93cb374",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c4e1e-24f8-4c9e-bb27-817db81ad1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc345bd-bc69-434b-b8b0-818b2577097c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a2a939-5470-4db8-9f1a-60696050c0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f9818c-c1da-4c56-8a3c-0092422140a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2450810-2fb5-4b15-b54b-7050572659e2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d1bdcd-1a93-4d14-bdea-d9629ad965fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeea73b-d7f4-4754-8bb2-b9bc2e9caddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c9769f-9f79-42ef-b619-1ae026e1fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "50078832-c9cf-4bcb-be72-95beafec97f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64608ba0-f41b-4c81-90d6-9dd0c62f9489",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4f28d0-22cd-4c6c-8a82-3cd3b87fa206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9aa537-3df6-4a8a-a5c4-d184a7b2807d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdfc9d0-f06f-4022-a6e8-639108886311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac24a1d-83fb-4795-94e3-6c25c7cc8230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91927c90-d6c1-4203-9fcf-612398987cad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94888ffb-bb50-4891-914c-3f8bcbdcf1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f770c5d-d67b-41f1-880d-7cf8ff66209c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d06a0c0-8067-4e6b-8e0f-f107358bf5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "834750ac-5b46-4a68-a240-a3836189b343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bc37f-c09d-4688-9dbd-ef1e2641978e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a902970-8d00-40a1-ac24-61787c1642c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88241c71-13e5-47af-9dc9-f59c4b4a5c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9954986-03b8-452b-8147-e65acd6aadc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53da4477-078c-473b-aca5-fce39f43c8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5bfaac-3bc3-4cca-bbe3-153e658eb854",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8dc926-9f19-4f5b-afea-de1e55bdfb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23712a82-be64-418d-8c0c-b519aa1c0b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b0a83a-3946-47a9-9e08-c91ab17afced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9f7574-d652-4a26-9e02-d9fe359a3d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b754035-5e83-4045-b1e1-e8577c018a60",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fda367c-f90e-48d5-b153-59d295475980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c76884-b25e-4e21-ad17-9a7426cea055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c4103b-15ae-45af-a729-dbdf1c9a8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a4a748-9c66-4074-b4b9-3972514838d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b70902-9f6b-44da-ab4a-54bda51c260d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6b8036-6354-43a1-9548-a1107d33225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d062d58c-9a07-46f8-8f73-78a958a6acfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78705190-7bc2-4bc3-b496-cb123dbdfe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7424a68-9ff4-4fa9-aa0c-71b690a99acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e17c2-501b-4b40-a378-f595c6871cac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbe59c7-2855-4103-bfc6-18730357dc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c535dc8d-8ca1-493e-ba34-9efd04d1b6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebacf49-7207-43d5-b528-aeb67c16d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0366da07-35d6-4b3e-9eb4-5012692e218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa671f44-398c-4022-9257-3b4879760a84",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea89b425-339e-43a8-9194-84a802c794ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41865095-822c-4166-9d36-da290b48e5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9ec8c5-b2da-48a3-b182-e76ecef4b87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a6590a-1da3-46bd-b71d-a1bc63c10bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9f3ad9-3096-49a9-8360-f30007acb5c7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86bee8e-4cd9-4df2-8649-38eb9b4c5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c432da-e410-49d7-8c5e-f943706ad181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bf3737-5c09-48aa-94e9-62197d980a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b67a2ee-7679-4232-9c28-009c46469820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d60efd-6571-4e86-b2a6-a2a6285a7153",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9205f73-3eaf-4248-9e95-091624836d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411be687-7869-4c53-83b9-2255e7658d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf5ef4f-7a54-441b-909b-0cedcc0ff051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c420a3-733f-46e0-a906-3cbda39ea0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c988084-7d8f-414b-acab-95484bf745d2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102673e2-8db2-413f-86b9-f31aff6c234d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c1d83-511d-495e-bf3d-7395ef3281a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc82aa-693d-4049-8d36-a3bdfa61a34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b608afa-a220-478c-8a99-209435decb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb946c-4815-496c-a1b0-67d8de64bf48",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfad56f5-fe9f-42c5-8864-0c02b663b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d038883-6a06-4bf3-b820-43c055a566de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc131dc-3911-4d20-8815-b291f0251652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df08e158-f9e0-4b1c-a421-563aceccbc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec9e250-0e56-4500-ad68-1f7e7269c053",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4e21f1-8a1d-40c7-bcfb-9a5e8ee73696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e89800-39f5-4c8f-ba14-6e7621fbfe72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27b40d-2381-49ab-9489-fa49a57c499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f805ce3d-5c50-4883-9613-ec584148afeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7059bb4-89a4-4343-a6f3-6f7339fd67fa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec79e858-32bd-40f6-99d8-7391211a566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df308952-8537-42ce-9699-a274c96453e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e6398-7505-4700-8a3e-4467a84c0580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17444a4-a92c-48cf-bbbe-a83b85f29b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efa8107-54a4-47a5-970e-e51acb93747c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910a579-8ccb-422a-9f37-4621ec7d8116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e33f926-d7e3-4af0-b878-8ba51ed0c66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbecfde4-0e7d-462e-8bd7-f871a7b2b278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a88ec5-8548-45fb-9729-dcab72955cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aa2b85-8b77-44ac-88fd-59322177eea7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899c435-1673-48ac-b419-bc15c80d7e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6fb9e4-e9fa-40e3-8a9c-5055e011822d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a81a70b-8a44-464c-a8dc-9d9e0c6f5f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ad8b19-dc44-406a-9255-550132cfc1e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72fa9ac3-ff7b-415c-aa8d-2c0d6dee6fd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "523cc8f7-427f-41b0-bb9e-4afb0c5a076c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae42fd9-b8b9-44ce-84d0-2499013c6f58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "caa7d427-8ed2-4609-9261-5ffda9c09e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7bf19e-7227-4965-9782-18acd27cd3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30372174-380a-4e79-8d31-c894bae449b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49f1b434-882a-402e-82c9-b7102809616f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36d2aa69-554f-47d8-abd2-7e35a8f17c99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97cd887a-58e6-4a48-b9fa-0cc282fa9d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42ddd031-faee-4098-9d38-92b81140cbb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "894c56cb-e7fb-430d-8697-7f8688f9d1c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "845d6c5f-6f4c-4efd-9e87-ecfd846816bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da4e0e2d-ce18-4e69-a05d-e005fe57312b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac1b65d2-fd1a-41b0-881e-a71f24296c63"
            }
          }
        ]
      },
      {
        "id": "4ee5731c-04df-46c0-83ac-eb77042f1837",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2a539de2-402b-4461-bd42-bd5e6529610a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f564f40-4d45-4c2e-9b80-7733244771af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58e2e3cb-e32a-42d5-8d02-55b50afd0098",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1257debc-7745-41c3-acc8-19840e81132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d67d9be-443f-4a70-9e7a-a6bf504f4bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433dbf1-efe0-4549-9694-974fcbc3ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "37608949-54d6-47a5-b35d-3e69c2e91bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3753192-9860-4398-b1bb-65614bdb3105",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0018e75-54e7-4363-959e-09e33f2d4056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be30378-4d0e-42e0-beac-ef8f3ccdfb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff89385-3f5c-45f6-ae67-a93942f54eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d962bc4-230e-4414-aa0e-bd3f3b72aa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9d3b20-dd80-450c-9d7e-b3548f0f745a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e1710-e3b5-4ea9-a66a-d22c9cbc025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cac699-29f9-40dc-b9d3-d75abdc8e531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29048dd0-52b1-445e-8c15-24dd2f17b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a12975-8b3d-4b0c-ba37-69cd316af38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b335c8-c040-4993-97d0-496c14813303",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bcfde9-5c4b-482a-8c3e-366155580f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7571d1-f72f-471e-90de-138c80e74f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b26fbc-9b54-43f5-b491-b9aa6ab0824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a64437-acdc-49df-9b92-c2c9c80075a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f9660b-8eba-49f4-a9d1-118e9d481eff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2771622-58fe-4798-b122-57ee5809dca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcfb277-8262-4204-a02c-4d31271a1a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4be462-0cf2-4f23-b8c4-39f295d9ac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f307c894-0231-46b9-b90f-514af44c1c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2d43e0-13b2-4689-b121-231ea5e954c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d58663-eb89-4e0e-9736-50c57e9dade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b3d5e5-7d7f-4f26-b0a2-a154b079d878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de35784-e9e3-47c5-a246-88e4de9943dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29afc463-9976-419c-ad21-1633d4b884db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e379d7-d504-4623-9154-72194f5404fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a158cc90-a026-4d19-be57-7c4d980ddb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab94f10-1581-46ed-855f-c87cbf55d497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bf03b8-ab22-485b-bd8c-05a676b30839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "95837d94-ce9f-44a2-8abb-a8d83e864e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4c4405-9ec9-415a-9381-d0ac260c949d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395d4636-8ba5-4877-a82a-ee494a6d680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7c872f-325a-4998-8dbf-01c2adcdf598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f7a321-2c82-4ffe-bebb-0bf20cc8fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de57bccc-0d99-4aa9-b262-a16ffcea5d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb15070-4789-4b8f-92d5-b87bc113a8ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ab045-36db-4be9-896e-7027068588c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c90a7d2-bb29-4567-9cf0-f7f70cec09d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2724db0b-dd39-4de7-9ce3-654975b59f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87719ae-14db-4d5c-bef3-efce76b866f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f454281f-230d-4bb8-a5c6-1bdfc7ef71f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f728dfd-1ba5-427a-a3c1-68366d02f72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c51e3f2-c6aa-463a-a600-dcbc156a50e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8572622a-a18e-40f0-880a-e711ccace73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2c80b2-bdb8-42ed-9027-cbc63b5e426f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc43262e-c3fc-481e-9511-6aabf1e12278",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91294403-7993-4270-b29f-57c988472d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c67a7f-d0fa-4108-a499-878135cde7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac2128d-5f6a-43e1-b874-97f9f6ec6811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1b8c81-f1e1-4820-9f73-35f96b932840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bdfa30-824f-4b6b-8765-060df42bb851",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5add8ac-de1e-425c-afa0-3607218ad118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c443898a-711b-4040-b74d-714ee27bfac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b2fbc3-1580-42b3-a4d9-e4337e7090df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "276caef6-e62e-4da5-ad41-0984eea2c5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fea540b-e0b9-4ade-ae8e-f93017cbe2f0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c423d02-10f5-4b86-99f6-1225a51ea81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b1956a-4e59-41bc-ab0a-790b74966c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c57d8e-254b-416b-bcb2-7c33e6ef1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7d20b9-81e4-46b8-bee6-e8d31a02822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf503b0-c6b4-4952-8777-65bbb1fcdc54",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4360ebcf-a2fb-420e-8d59-4da22c5cc410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34cb3b3-b236-4b15-b59c-84a91c454592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a9365f-e959-4e14-80fd-cb638354b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f79e28b-d502-48b8-a729-78c3d2913d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e727d3-c6e1-49d7-9406-1f5f961fa516",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a003a48-a8ba-40b6-975a-1f940a7c437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b2e15a-f816-46aa-bdec-3119237a3b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eea65b7-98a8-46a7-b83b-5a7d24943063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d774b1fc-9fd0-4af9-a456-18e6b998b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0d7a3d-4f4f-4fcd-b5d3-aed147de3910",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd169903-4452-44d0-b7a6-22d59479a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d7d26e-2232-4d70-bb31-897a6a0c115a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27bf77d-fd08-46ed-90c6-96325d991c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "246b8b77-9b3f-4f73-9e8c-0951f57eb4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9746f675-d2c1-4412-a7da-df56069dcb3a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5c061-ec24-47cd-a11b-acd9d4871972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4338a403-ae5a-4fa0-8e36-87ffaf4a2a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12cb9ee-e8ab-45a5-ab08-706749b7a27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b68ae4d-7b9b-430f-a9e4-248f4f5dc6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ff500b-5ac3-4ecf-bab4-3051bbdf484c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f41b83e-005f-4628-9c5a-ac4d5e4e9224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d989cb90-9f51-4d53-ab13-155f6c0020b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4dc7d-55b8-4db6-8e7c-c0148e3c6e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5cdd1f-7bca-46cb-b7a4-961939accb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa840d-7d8e-4c47-89d3-e91db9c52a02",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8405ec62-8b6e-4352-bba1-102123c203b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0c3f9d-0207-424e-bb4b-636d617418c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2f7d3c-4477-4fb3-aa82-4debbf6d8997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8485da4-c76b-4aae-b5e8-571ce6dea84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaf5449-d504-414a-ae75-5ba137278b70",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36cea34-d133-4eea-9f0d-9dcbeb45bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a62a9fd-c348-467b-9c04-4314e90ccdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940c87ed-08c3-456e-a294-c14673cb362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d71039-b83a-4279-8457-5b357d50688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff9cf68-8355-466b-ba40-923d3d31da16",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd7388f-d107-4aba-99e6-9b903a8e1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f687dc83-11d8-4faf-b8e7-e93b182dcaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7557492-0eb1-4330-8c3f-d6f84392c951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26b0f40-7758-4942-b5c7-101ada8e9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7817d8-0fb7-4d7f-8531-adf7c81f5f05",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86f5c2c-033f-4cba-98f8-ccce1226665f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9383aa-7177-43d2-ae8a-8d1eebcc1f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3524737-8203-46e5-a8bd-efb6e425907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754c0184-e55d-4363-a612-1a38b59eda72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fb4fc9-d57d-4b79-b71e-0ca43a3dbd14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b8398b-20a2-4901-9a13-c5121630c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdf24f3-8340-4808-a639-7e4714cfae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f59dd2a-b614-4215-93fc-cc7fa3ecf420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "775a7cf7-2e0c-46a2-baf6-2ca9ad160569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60368a0-cd4c-4833-9acb-7e4210620d43",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4a530-5f1b-41a9-8acb-3169a705893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac2aee5-a181-499c-9274-d48a17d3db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923688a5-3482-4612-be35-e6dbf85be45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf0d1de-8c46-46fc-a478-116d82ce25e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2943c6c8-a631-4e66-a6e6-e36e12b36092",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb345497-d699-47d8-9935-81ce5fd1052a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbb6b44-19a1-4b96-aa40-6af3c50bfaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237e241-8a14-4641-921b-ee0eba7c2298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1698ffeb-ee80-46db-a59f-69bb74d22788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b5949-ba63-4656-9556-5d058a2f121e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14cf668-3d9e-4e5c-9e6c-207fa6965c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3407d1-14d4-45fb-8ad4-d36ffdd86e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5958be45-3d2a-4d8f-8e38-1e0000f9d382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff33b683-8811-4ff1-9d33-74d75646e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f625c2-34f0-440d-b430-850432f28ee7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8136bb-7892-42d2-8e6a-c421fd80a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceca15a2-7d9b-4ec3-b8cc-76ae8b5d34b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f50125-e6b9-4eae-9314-c6ab7aeb7f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bdbe53-1383-45e9-b32f-b26d3f09fde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3d456f-ab35-4332-af70-4ea26f782dae",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307c1cf-ca1d-4b44-9b1b-865fc221e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ae55bb-671a-41b7-bfc6-f84eb4640ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee09cd50-0fa2-43d0-8299-5117b1a0446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43132f49-d0b0-4649-a6ac-1b1cc59c1f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7508201b-8c5a-4f91-963c-efeeb40c8d09",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730701c-23eb-415d-8852-235e01962f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8579fd54-8bf8-4864-8db4-5e4c633d2595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc109c-d22f-4868-9c28-62e7e38334fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda02688-4c5d-4615-a259-f39777e9f8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7105b4-6258-4390-9e34-e80d69d2fa1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3b5c8e-b8d3-40d1-a3ed-dbe41f3cb27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eee9888-c576-4203-b27b-1b4d5c46384e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bd9735-6c38-495e-aa45-42385ebec4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9caed1-3f23-48b5-922c-5aa0f419724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f8494a-55a2-41ec-b890-52a46471dc09",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab2b4da-976e-4471-ab0b-f34d6ef317d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1b0e29-283e-428e-a5fe-84b4c4656c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced9ecdb-d4fb-42ef-94c3-ad0ce61ceb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38aa079-a83f-48e4-844a-b80817ebc479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af4c2c-cee2-4476-b864-f26fd28ac4b2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9a73f9-d893-4161-b083-ccfeaf15aba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa65cd0-efef-4def-adc2-c06412cfe844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f722f19b-fd5b-4478-a97d-962f99e92d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482067af-49fc-4891-a7c8-1ae9d02c26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeac0cd-6448-438c-8aa6-495d28c2adc6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da31e10-41ed-4aeb-8978-906411cd2a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2599cd2-f91a-4489-8a64-e1a11f9493d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b8f574-b3ee-4152-b8ed-68bb65eb0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5387e16e-4e2d-443f-9cbd-6b41c489eb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c6ba13-7f23-48c8-87ff-8bc3af6b588a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bf845b-62a9-4c84-8c00-25b937d4148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b783927-a7ed-4e59-b242-525958845985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656050a5-9a83-4587-bd57-b873567436a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa02eb1-0bf2-4bd6-aaeb-e39e0bd99418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a96c1-f485-482c-96b3-62ecc1640493",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c664bbdd-fcad-443b-8234-c5279151f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a89189-2673-4d3e-9eb6-1dc860b28d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6921ea60-06eb-4031-8de5-a58cf39d266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aeb370-952f-4564-9b2a-ae5b141c3c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853076da-04e1-4b22-b608-fcf6e30adb36",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c634d0-2ddc-4961-99b0-7779f097c0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c19a611-2ba3-4d71-9b33-8e1b7ac5f531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c830fa14-fad0-4558-bd74-923741197f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f850c9e-06ec-456b-81ca-093c577b3022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316e323a-3b4e-4434-b951-1dd5bd0b43a6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7a4f04-9b2a-4858-8150-3a7439106694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fddd87-26a0-449c-a181-d5cf36b0b032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690f1cf9-6966-4587-8534-31c81bb49c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54528652-3284-49ad-9e94-fdfed2a03c31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba868019-117e-4e6d-9c5d-9c0be91a8bf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bc39fa0-3d54-4521-bce7-62455b8eb51e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41880985-1564-4ff0-b53e-ff1abd804b50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f08b3c37-c741-46d3-ad6f-d3db8da41c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f98322-084c-43d4-8860-48fe904f1b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f87849c5-9ed9-4ae0-ba7a-d8d5dcd51285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce325fcf-15dd-4d5e-8015-699530f73574",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f71a3cec-ea99-4940-9e42-9780aef03903"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a005689f-c44f-4db1-a71c-b719cafccc26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65120062-5d94-490e-92f4-d16c11a28a5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "163183b6-9dbc-4235-818d-50fbdae37d2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eebae9ef-95d9-4d58-ac5e-767bdda4666d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb5efcb4-9dac-4cac-b21a-457055489335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "515e7fe0-9b8a-4bdb-85f4-b2f6cb8cf84d"
            }
          }
        ]
      },
      {
        "id": "aef79104-4fc2-45dc-9c0c-8701b2f6ab4a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "05884f09-33f0-48ea-9fce-4a0267982494",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37e88d4d-4d72-4722-9c52-5edf02902c7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ef9e926-0ad6-424b-9624-6ea01f65218b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8f0269-a4cc-42b1-b17d-bae20f87705b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05478cd8-a993-43ce-8167-f32db95c4d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732a8f94-7b25-4c51-a1a3-7043e92e5bbf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91914ec6-8b06-449e-b151-cbf255fe797b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b63e88-9563-4e85-97a5-9b70a474ac54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83334ce4-2879-4240-b5cc-a736993a13b8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97612f45-575c-4854-a119-8f7872432be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ed2af2-db5f-4633-adb0-97e6143a46a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3aefba-a872-48a3-888e-50cda582d821",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509117f8-61cf-4576-8214-67d3f62d493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214a6b4e-f2e3-4460-b61d-4f7074be1a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cb530d-bc8f-4c4a-8148-6c917f957dc0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1037db-d0f5-4767-902a-63f2244b8c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0808885-acce-43e2-ad3c-720d23148942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de135e84-1990-4139-8a47-81335c2545d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699722d3-1154-4d52-ba90-7c6d2a81e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d324201-a63e-4037-99e1-d3637b86bc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a4960-8fef-4942-a536-426cdcbb2a95",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a994da5-39c8-4eb0-b819-79e785d839b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1edec52-8c15-4da2-93a8-9890f073db2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ae1c6a-aeff-4bfe-9d23-67b264ae1eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213c7d25-d366-4a8f-807d-354cd4d8f64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1963af43-0f79-43cd-ae7f-a791785bd4e5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326a0c3c-0caf-4d4c-abbf-a78995a68ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10aa4c4b-b8d9-4aa8-bd85-38cbf759ea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd7a2c4-d911-4985-b682-d9cf1031f545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3dcf98-8160-41d2-afac-d9c38f2542f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c95211-0fbc-4dcf-93a1-0a3579df5d7d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d5edf7-7de8-46cb-8ae8-531f8aae1aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54eaa6cb-ae3b-4da8-bd1f-e690fc16064d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3cf13c-6cce-4598-b448-c8e4a7d4e7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4168a18-22dc-439f-8c46-9097c7fbc9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c5c03-e424-49bf-9f50-cb7c04981cda",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95396d9-2461-4daf-8d89-ac572d1f4cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545a1223-3bd9-4d46-97d7-3a5fac28441f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d16839e-d208-4127-900f-3d1a82445a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d0d657-6f71-45f7-a2fd-01c1332b5be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db1a9a-a4d1-4151-ad6f-a5cfc53ac07f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faba33d1-22ed-4f56-9036-d6525af82832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caecb68c-df10-4484-b4c2-53dc1b50c469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2b9337-adf7-4256-a32f-7d6c57ee1130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b287d3-f95b-44dd-a135-84ff24c6b9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c93a2ec-b99b-40b6-b845-5b24e7292702",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b45556c-2142-4683-a59b-d29d0907a7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0541586f-9fdf-4fa4-a3b8-92fcede5781f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ce281-72e1-4a3d-b53c-ce104ff8742a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b17e678-063b-4b9f-92c0-e314f2e6acfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1f327b-1442-46c0-b75c-23d0307c2b87",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12debfe-0d17-4941-95e1-af2ef46710cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602591ba-5d3e-46db-8edc-515597a886a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2754ccf6-7542-4d04-acb0-5111ec1f8e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189d52a0-7a0a-41f2-8716-8cb0c054c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9184382a-8969-4fe5-9af0-45ab317b056f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dcda50-6e4f-4704-a3a7-06a0140a2db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb930d7-ee41-4b65-bdf2-8af63791e93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a1044-02ae-48e7-9d66-8f38b981d321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79465c4b-d0e3-4e7c-a42f-56f2664742cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918701e-25a8-4f38-a22b-99ccaebcbefe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec5160-915a-4b95-84e9-0b235c3421c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4019a6-316d-4b2b-8fee-0b28327108e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2daae70-ecec-41e8-b0dd-4c2facf739ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217716ad-9b1e-4334-8e57-0783f6b44a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c645f418-4df1-4d38-9cfa-486422a61d95",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5141b3-c9ab-41ac-903c-726bb4587e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1d1766-b939-44e8-8230-119c7cf88721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1dcc4d-1a7b-449d-ae36-3741c23b2e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fb9764-5739-48d1-87bd-bbf27effabba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01894663-8191-4748-aea2-9014455b7f42",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aea873-8c07-4511-ab63-2662fb90f5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3571f68-a2bc-4525-bc71-7b8babc3f6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046ec9d8-9a9d-4057-84f0-025ceea75c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84abcea7-a147-458a-9d56-cae1ef999b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d4bbc8-12ce-42be-ac87-52db2ff10d2e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676cfe9a-f4b6-4fbd-9492-daf81bceeb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd8cf5a-def2-4287-bc4f-915215c0e6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d11f2d-15db-4aab-8f4d-a84a6147c0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ca90ba-8c09-4085-9239-d9ae1529992e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff39ac3d-cedc-4804-96ed-755ecbcf4f1c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fef1bf-3661-430f-8557-0b4736cb8eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a21e018-7a3e-465e-b121-53f89e940a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f367ffcb-7d80-45e9-b7d9-8952a31b0bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee60b8ad-f68a-49c0-a0fb-1076a9a5e54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7dc62e-09bb-407b-8d4a-18aa5fd7da40",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7475e6b1-611f-4365-b5f6-bc4f6ae33ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3a9960-06d6-4278-9d85-ab67378dcac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8624d27-0cdd-47c8-b430-0eaf90102c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623a3af9-631f-4f1f-a7dc-f4a97e1f2f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fbd311-36f6-46b2-984f-6ae45fdc3569",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e33461-ef5b-485d-a97e-0d629ca0d300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd9f44a-3ee7-43bb-9a1d-4ccec7c7185d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9311437f-afb2-4c06-b54a-f379da138f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ee2cee-976c-4100-a3b0-2304436abdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1781361b-21e5-405e-bcba-1a0e94eeaccd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e44e34-0731-4709-99d0-170839f0b15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e786bf-7c35-4c21-841f-84488d66702f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a10427a-dfe7-401a-b5fa-19fd6d2fd96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b436aff-8075-4568-8511-f6a6e794d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ccdd3-327c-48a4-a1ed-f3da946ac667",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9204126-1714-4831-a4c6-f751024ac914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef4e2b3-fac8-4f1b-807d-d4fd79d2eb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a5ef6-3f7c-4580-8264-277850a2f800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7d1e24-079c-49df-a13d-5adfc33aa9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f14617-36f9-4a8d-b9ab-5383c25234a5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea27bcf-6b95-4d13-81ee-4f6d7f6da151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312a4655-1d74-4227-ba31-e6f3d56c2ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f84b9e-96fa-4aaa-835e-ee4b8db381f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f07f23-e460-4806-8e91-f626b86a256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceb456e-4741-4397-8219-96d87c4e16dc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3edca4f-f538-4a76-9c2f-324198a7b05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e51a8cc-4044-4571-8b82-6352d9bee57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46558fb-ae33-4eed-a980-afc4f2819508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b426e2d-87ca-4193-9fa4-40c404097f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fcf652-a5ab-47b2-97fd-d4fa66668352",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce4d9e9-d2c4-4b5e-a0f2-4fe4fdd72b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a06e45-ff68-48d5-b3c1-add971fd3dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f69ced-a79e-495d-8650-8eccd19b96d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b571eb46-3e75-4628-a37f-a46a50c7c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094be421-5e4a-446d-90d9-bb75968e2149",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff685e6-b43d-4694-af59-da4e169c7b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0a0965-d796-4cd6-b9d0-e45ea76a66a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd3cb3-5696-482e-b136-ee1c0371f766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016ddb7f-d028-4e06-833a-d728dadc2fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d0f829-d876-4c30-97c7-3ccafdd94b23",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05d0e9b-980f-4892-b7cc-e53da88a7d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1289211-ecef-4ba6-afe4-4082d3c30af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bae81a-cb7a-4b2b-849a-0110ac701092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794e4343-245e-4f3d-9e76-bf65491e3ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adda6bec-60ee-4802-89fb-e866ffa1c0d6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa06d80f-6d73-450d-9d0f-969daafb82dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae743ad-ea13-4eca-89b3-0f99156c8d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc0724a-319d-4c48-9144-6f2c15dc706b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4750636e-dec0-41c0-8eda-eb35eddbb37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7cd3e2-0ac3-4842-a7fc-179c3129d012",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f7be67-79fb-4d1b-84fa-ae99449420c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb36df5c-632d-45ce-836d-e497e5d015a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864063f-041d-425f-9e92-4d486e92746c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b408098-7281-4d38-8aeb-01b671a13a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3ee82c-0bc6-4005-8406-3fc638fcf4f0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9090da-ec42-40cf-bca9-fa12f5eb8bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ecd65e-b9c6-4a9b-89f3-547cca5ebdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519987a9-268c-4d8a-baa9-9d6690f8f2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a60d06c-bedf-441f-8e31-0c181dc1cebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6f9471-dca5-4dd8-bcc3-b7c8907b4137",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102f44a9-a7a5-4cd3-88ff-1e7c2283ccc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba4ee0f-ce08-40c7-b4ef-255f6b802dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4636b170-d4fc-4924-a216-2efc583bae45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d2061b-1eea-4787-aa49-e0fc177797a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e65e29-3c87-4b64-bebd-f8a046040935",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b0e453-344f-4e02-8859-9baaf86ae42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d71ab17-f41c-40ba-90a1-647d46db93e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4697d3b1-ce39-4132-9ebf-9447ac8cce0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81720f4e-a974-45ed-a6cc-24f5736d29cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11e5eeb-6233-4bf7-ac0a-f428289dc443",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cfb0b9-0f34-4cbf-b9ef-8dc717e74fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8029a847-9627-456b-bf45-9305ca9ace4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e7b36b-a8cd-43c1-b99c-b25ac19d1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0bcb1b-ef63-4917-bc0d-40ab06382738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de7115-5ffc-4c48-8b3f-4b527627f958",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a1b27-6a3b-44ae-864d-c8fd55dbd10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3394755-6ae0-4750-ba8b-dad438553156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52f3c36-563f-4b5f-af41-bfca289f484d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6645ee-cb03-4bae-bb4e-516682e79d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76991f98-8828-42b1-aeea-1a1d2c857490",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d032721a-39a1-4911-83d8-06e00099cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e4669f-a14c-4483-8280-5ab8ebac997e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60357cab-7dd8-4ac9-b054-0e2164e37251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa5926d-36e2-46c6-871a-41d1adff43d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ecfffd-669b-4b03-bac7-1791f50e561e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523d6344-db22-4384-9f6a-e721a3224696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fa0c15-7b26-4e06-8337-1c55cd15cb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ed75a-be09-4560-87b4-1ae307f36ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a47f92-1e9e-4f6d-9078-b36620496102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ac4c26-bad6-472c-a083-f0e5219c52d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf6cca-69a3-4079-ac79-3058a2c462ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2fc3f7-da31-4851-a918-1133930b6c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52832da-35f9-4d09-b458-6fe0c309c967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6078ce-594e-45c8-8ab3-cb6ead63eba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651fdd02-3cca-48cf-992b-f249da08b4af",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23affd4b-5046-44c7-9c90-4d21c44247a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5d0550-f9e0-49fd-96bd-13f76591c166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aff31eb-dba8-480b-9f1d-2eb440ebe9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2f7ae6-2833-4f42-b62e-e139442cd5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0acf6c4-b6cd-48f5-8c8e-bf5548b80998",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c78f1-0dc3-4c44-bbec-465f8117446b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0fd1f5-3f8e-4599-b9ed-618e593bfa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753384b6-b077-466e-af92-eea974e7bc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf16c9f3-95ec-4294-8dea-4e4d66a324e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9681ce-70ce-47dd-b865-6a27015897c7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c952e8b7-24a0-462f-9e79-261d9e1f2535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8850257f-ba01-4177-a879-4edab0df4e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89484c0b-b909-4b17-ae7d-a21e6aa3873a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d29e912-22f8-4c8f-ac8f-4f56d3cad280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fed146-326e-4983-86c4-9c07c2fa7e94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4253249-24cb-4557-bb97-9eb7b18716f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b420af-bd14-4c58-8776-a7f1433d71f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f5be5-95f2-4a81-9ff2-e69a3e94d16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbecf4e-2e1d-44f4-9207-9c98b133fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d616662-5a88-4e92-bd23-5d6a7e0abcae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6118b97d-3e6a-442c-a514-e12f2088ca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa01c0d-3aae-4e38-9be7-34f5f2584bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adac958-0aa1-4261-86b4-f792cecbf948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d850aa-1f21-40fa-9455-43a4bceddd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21c02d9-53e4-4cdc-a9d0-4b5909fe79d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5160cc0a-42d2-459e-906f-fe45a70a073d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7794fe-e6be-434a-a6a2-a10034f8a97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9d6c60-3412-44fe-a199-78c111758d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c47df48-728f-4eda-82b6-2521181b3f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8569b15-27c4-40a1-8ff5-f3cf82c55ef2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc185da0-efaf-4173-9927-cd3a4cb0aea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3426b8bd-861d-4a17-86d8-bbdd965a7668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe73dced-8c08-4af8-be13-9befe468bebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a539405d-04a7-45bf-a210-5ab9f3616aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eb4cd2-8b4d-45c2-ad2f-ea8a67b1e7bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fa03d7-025c-442a-803d-9d679a9b7f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683f0007-cf0a-4be2-86ca-d199e9313d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e0182f-0a09-44b6-a447-a85448020879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7909cd-f892-49c4-8f82-e59f9b63ff98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03436f3-bb18-4b7a-b7b0-c04e450dfa6d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e39d2a-f5e7-40d1-b51e-b70814ff93b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4825af-1d6b-47c2-a544-400933df1684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659cef37-8bdf-4713-9184-9c04521b088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a70cb9-0dc6-4dcf-bfd9-9027f70c5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5070c947-3eda-43c8-ad61-78727badd139",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef476e-e1b9-4826-9425-66a532d04f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb357fc-0f4e-4c0a-ab80-51c25a52408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f868d0-09f0-48db-b407-b19d439bb9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181847d8-603e-4846-b582-9b454dde9450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bce735-36f5-42ab-9bbf-6a1fed35f50c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3894544-fb19-4d8c-96dd-6d5bc2d96803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e915da7-cb60-4e60-997b-8c37127696a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69132a86-e691-4a02-8715-6ebb8ed10814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0b5ae9-ed90-4391-912b-50749701070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3ee65f-917f-40bc-b335-ce86d05fb1d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15c890b-e54b-47ce-a2f0-a4e707c6c292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e151678-df3a-4cee-8ba0-d1615e64e119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c0fad-f4eb-4af8-81e6-9125fae25491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a44bfa-1bbc-4716-965d-e13c9b9f294e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f9861e-bb3f-44c0-8d9a-0478ca7ba26e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4f14df-8c4c-4c6a-b481-3c419f6162d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226b2940-8ed7-43da-b14c-2bd74190e499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af56ad56-6399-4310-a8e5-c3c35d289e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c1d9e6-ac3d-4aed-b3fb-549e890528c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db70a3c-12b9-4db7-93a8-dd6f1efe7904",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c867281e-d14c-4e93-aa92-00bc4d1eadcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c943e9-4e18-4f19-a01a-d77de67df59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa08436-f8c3-4961-9160-97fe87868d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb91532e-d4e6-4717-84e1-bde5a8adb867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d8cf51-e1e6-4c67-8bf7-337491c37af9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887bd078-d082-4807-85b1-29d52753c521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40549b77-f269-40b5-a037-a781698aa7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c76533-e363-4810-bd91-15058b4380b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cac9b6d-e13b-4d74-b10b-7956497f9298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a82ca8-98a2-4ce0-976c-a999627a278c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179c781b-08f8-477e-bb51-ee0caa6c430c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9e3684-422e-482e-b403-4356ef20badc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076d04c2-1834-4068-b608-2743130912ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e262fa-b542-4947-bc24-92f9b7039d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad3673-bbfa-42a7-87db-7cb21937c855",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa945e7-8fe6-436e-8333-5e73b1ce7c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06aeba1-252c-49d2-b734-2c304ba0891f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721fae57-484f-4ff4-b1df-55722cfc63a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b816cdc-812b-4418-b4ba-16826a4f3c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ea551c-88a7-49a5-a0cb-12ab05ed6242",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2fcdb-d6b3-4212-b8af-d4cdf77fe1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870aaea6-2c9c-49f4-b13b-6c6885bf4188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d049933-eb65-46e2-a841-2302d776d511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5718afc9-59b4-4d2d-ab11-c16873333ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4f8b54-9134-4241-8f0e-df3e4cb3ac76",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbdfa7b-7a3b-45d8-a133-fbd7a83c2447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0f2dfd-3c65-45e6-abf6-931b4de75d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7cee86-6cd4-443a-b8cf-4a85b8fbb942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abdefb8-64fa-433b-b1e8-cfda38d3451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff1078e-3766-4d46-879c-b3c027e21db9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e507bc3f-43f6-40d6-92f6-66791bff8fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c740c029-4c36-4c98-b292-48785d4f4b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecab8ec5-8088-462a-a013-41cef8dcc956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f827d075-1359-4214-9465-0e99c1016c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc1649c-27dc-4444-85ff-c604f4190b8f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2fcc75-5a99-4564-a5d1-5ad483e1de13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b47ecbc-5dfd-466c-8eaa-01aecb8eef9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec1432-dabe-4872-a595-0e02c8e077a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ad78c7-8303-4e3c-8140-1943d02c9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bc6e10-ade8-4f65-b377-f8d575b2a0f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d957d5a6-b35c-432f-8f24-67dc846a95fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760b9e02-e612-4b28-a032-ff5d479bdebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9806845-0679-4a26-b344-5123befde428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9768dcdf-6611-4cd0-b9e3-403d492bcc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3057c912-c74e-4394-8a6e-c132c19b40e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4455b1da-be47-4150-8f1c-ee6ad76dd9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1ca66f-9d66-4b34-a848-1be4abda0d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a92093-2f8b-4151-8ee7-1138cab7bcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9564feca-f219-42db-aa73-2f82cad78bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1951743d-8d5e-47d2-8e76-547447350649",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add8675d-9e0d-49ef-bdef-a5747640936b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25fb224-6026-4ac4-9ba7-51c859195dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6986f6b-923b-4377-93a2-f55f79c43248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb93156-3053-4675-a45c-b48d3ee7190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a874660b-b33d-493a-a4c6-bdf983f26139",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f938a7-afd2-4866-bb9c-f73663ec40f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0eb9a6-2a77-4b6c-b204-b342ebcd046a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003cff61-e00a-4856-8872-d5747d5709df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb0312c-2f42-4d16-9896-09ead9d3b52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34a0d5b-00f4-42f9-b8fd-3b6e2d78f5b0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa72c06-349a-43d4-83a0-3b8cd959876b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2fe2d4-f8f9-418b-a7b0-00226de6d62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d2aaf-0f4b-4a2e-8629-0f5be2ffdf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20a22d4-5a68-4e13-a909-3fce0e79c88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed89c55-4eb3-40c4-b2fa-fdf1c96ea026",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e5c0b-26a2-4a4c-a133-485f204b27b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d012add-ac08-42ec-92be-3bbcfdb47c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e276d93b-ad15-4f11-88d9-4ada9db78782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bbb746-4b20-470c-a458-b0dac206c058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7941017-e0df-4f05-b1f8-14439d7a36d6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82623eff-6110-47db-8e89-065420d9790c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a423a81-00eb-4bef-9e6d-dbd6133a5164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db2a676-1d6c-4bf1-b61a-0faed23e87db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc560d98-5f6f-4a1b-9a7f-51baae142ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7406ad8-492c-4c4b-9b71-67952d2e3113",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd46d7c3-2710-404d-8420-b066cd635191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba192844-a055-44b8-a213-ffd248a36fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef5a16b-451c-4cc1-b9a5-4c2d6180ec3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc6a8ef-78a7-462d-8dab-2843b47e566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a888ea6d-3511-4b2f-b79c-d041142d13b9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9650ed26-a182-404a-a812-d34be555eca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff28fb3f-c21f-4b6a-9542-16eaf42c96c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e825e9ad-6d71-4d15-a43d-79e2a0c230df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a781f759-cafe-448d-a1b5-4a3452a07ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3c3fb1-9e5a-4f95-bdc7-57f1a8c93836",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144fe94c-e33b-411f-a714-437521b3b485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95b90b4-4ead-482c-a066-fea5f0966f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50c8842-5f6d-4c1c-9544-574a526ee877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f37bb4-19bb-4207-a403-a5af38234f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbc9cc6-89eb-4545-8461-f579a646ec0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3138efa0-912e-4984-a606-1c37c7f70074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fbf32b3-8976-462b-8c6e-0e623496f768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f83b1d-725f-49ab-9bc1-b16674fd697b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e733933-cbcd-4933-aa2f-9db6f7884695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5e74cc-4a21-4315-bd90-c3e6344cf544",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd157a-6669-4c14-bfdd-bbb026fa41f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d20814-109b-4259-8c9a-40c30c71bc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87e5d17-99ec-427b-b793-657dada92a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b2a569-0241-48ff-b7b2-ecdd0ba40f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c7e239-1c84-47b3-8ed4-a481dd88cd80",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60edf09-734d-43cf-b403-e43d4022919e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98940d11-1b52-4752-b6b4-4a43c92e12c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c412410b-0ffa-4c1e-a0ca-21d32f8ad269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba9d14f-ca8f-464f-b5e7-67771b87ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d54272-d1be-41cb-a2f1-d6c341a37e97",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3ad68-3bda-4eae-9740-0b9c8ad85b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0980de85-45d6-47e8-b2f7-8909b4cb8860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c769801-d530-4e9d-b6ba-892db2f71512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5af1e6b-7a37-486e-8b06-6e9f1408b60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139a4085-f60b-4c3f-b4f5-1e89f4636ee7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5846da79-ff05-4ed5-aac3-97175fb747f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f8d687-d3eb-4ee6-b3aa-9106efcbab63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82701ae-e904-4bd7-bf2a-312707868e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c66075-9f50-4fa9-b81c-2b264bb31c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baadf65a-deb4-491a-8c87-f6f396098205",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242b698-7231-4ff4-b7f9-7054f307ce9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f127fd85-d332-4385-a89c-7f687b53e851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb971078-ff6c-4678-bdad-03acc1b4d60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39acc814-69b9-45bb-bee8-ddcf84cc6cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ae59ec-7bc9-4652-b852-759fe384ceb2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15a1e02-7a51-4caa-924c-613dc500ff70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a80c881-cbc5-4132-be48-269e2fcfbbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e124f43d-dc1b-430a-bdc4-47df1185ceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92e5026-a6dc-481f-928c-22a24a88d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57679eb3-b468-45a6-a82d-8a655fca09b3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf6ba6-6e65-4c91-a6f4-46eb22a74990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65974ea3-aed5-4e04-8ba1-bf707977bc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a4b238-e6d0-4d6c-b14a-e2c270ba9fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65114474-aefc-4e50-a152-57d44428a0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7710cd70-bf9f-47c2-a1a6-6fe5278214e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26854aae-a92f-4dab-8c14-201685f96e4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa1d4b7-53c3-48f1-be89-5bd0bfec8f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4805f8-3a00-4b66-bb26-82d532220da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61af115-6129-4562-8f62-f5557456477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35fdd12-978a-491d-9c91-12f8c5692849",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfce16a-9764-4d53-8263-a3ef86475f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a315d542-0fb7-4f37-9281-789f90ea4f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1da5df-4054-4784-9775-9a1d3f88b758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a167760b-a4db-4263-9c1d-4ad05f51f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c956299-f075-41a2-9052-6ce982e115ce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a257037-e949-4f88-90cf-b1cf348f2d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a05446-771d-48f5-b378-ceaf3220b900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d105a25d-ba4d-4155-97d0-758f28d8cf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed9dbee-ce69-487c-bc84-e10cd45e0e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db191875-c7c7-4458-97ad-e9735d18cb5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ce63ae-f848-4688-8e0f-d956b70a942a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f96a89-855c-48ee-9602-e8fe605610d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4532ce26-79f5-400a-9d55-b33fdce7d82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d83523-6a91-4566-bb03-66486f7a8917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73041d2c-589d-4808-9367-4f36e887981e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a02ff9-ae36-4fde-b004-36b5d472cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19214c0-1ca4-4fad-a561-c0d5f053b11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07fa3bf-f6ca-407d-8b05-11fdd47bc318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20c6414-1657-40f0-a26e-8ee2c1cb2c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d1c00-cd0a-40e2-b999-8d149b11ff60",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a307dcb9-8600-41b1-8c1f-9f68c8693bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6218bd5a-54dd-43be-9ccb-7c02cc3efdce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6349d7-9c3f-4f18-a758-4a9330596906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0e2cdd-2b03-4513-a1ac-205bad0238c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296f8ca0-7977-4f75-94b9-98cb3f3042b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb60943c-6ca8-4f8b-9781-0989be10d08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4879823-8f15-40ce-8187-4ec10874cafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210ea536-4aac-480e-b1b9-6f23570bafdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21afe324-e111-42ca-b3b8-e4cd0d5272cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df10b4bf-f2e3-4332-b3b0-138f5de3c65f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89e6028-bc98-4c9c-99a8-2aa11d15d0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13db643e-4059-47e1-96bc-5bc42a53b7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580a83ba-e9e5-411e-a7f8-c643060991a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbd3889-ad32-4a49-afa4-8e1a881bb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0265173f-096a-40a4-af2c-8175aece5a9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b058c0c4-bbfd-4ff4-a462-30894e199661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2316867-f8ac-4fe5-83b6-3ff8b8bfb1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b600ff-ed52-4bb9-bd2d-4a23e321dcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffb22a4-d06e-4527-aee9-d97cfd5874f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20acee2a-3250-40a3-82fc-0785de3b2f75",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c3699-50f0-4811-8ca2-6d1aa7506e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da1f134-bfe6-42c1-9750-f7c7f7f00691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbdeff9-e898-4074-a18b-75984a9aa1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975e56ba-40bc-4f24-b5bb-8637aeac08ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc335ea-a94a-44de-85c9-ccd813ee904a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349cbc43-3f81-4f69-9faa-043c98ef4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f998741-7e0c-4847-a12d-2359797dbcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6e46a0-6854-48cb-affa-d2081a636f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d28b208-1f8e-4d3c-b429-de69f73051c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d797c37-17a9-40a9-b3f4-ea046e75dc50",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d7de1b-716d-4d48-ae96-83b9873a3e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650f33bf-0e32-4c60-88ee-fc11c1dcca45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0adfa-006e-4129-97ce-1aed9066af08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627b66a5-9dbb-42d8-862b-4a44de4d21c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cbcbfc-f4e2-459c-ae55-0aa326baf5ad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f41060-c38b-4d09-a8e4-c42daf9d395b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef11d4d-1739-4fa6-9e48-e37114bb61c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76443b0a-1daf-43ba-b792-6199d9d438ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b03e7b3-6b2e-4edf-9956-49a40bccf07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f3f03c-9a04-471a-8a3b-6cc8c4c9b2a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a13d43-a342-4499-b0c8-5dab1a694994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f04e0e-f79e-4ea5-b5f8-4d1ed52a0a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ece8057-5d90-45d2-b6a2-6d2a238ffb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a65ad1-42f1-4015-ab42-85abf86f787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1a6eca-998e-4fab-bd74-6df5c085b1ea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece7c36-daf4-4698-a8ba-5a3e71b96149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c10a875-d1be-495a-9b36-d3b9b1c79180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ca1ff8-df42-4316-934c-dedf7de79d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4792dcd2-11bc-47d3-b1d9-e481f7b20685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c639991-2da9-4255-b2b9-4a4000146e48",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c6647-1194-41d7-86d4-3e90835b71b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8dc6c8-437f-4b6d-a490-c9ef470e8131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9cdae-b290-4ec5-855b-8d1c3efda3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d525567b-a727-48b3-93a1-f5bd22aebe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f69f4-1e54-4d0d-8814-4e16aac66318",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4efd7-8dbb-4e33-8307-f2268b53d918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8bdccb-0dc8-4431-b839-4ace36746f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e2c154-9e82-45dd-bb17-5fc8fef0559c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9c6cde-0933-43d7-9b47-03be702ae0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e28cfe-fdaa-4a32-93e6-9c8d2ab54405",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3204be49-11dd-4b32-a953-2f8e4a0ed85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d942d4-bdd7-4d06-bd48-34c7f3a18d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0449633-7181-4776-898c-8712805cccc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c5bfc2-14a7-4bfe-b9a7-2fcbb103c7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcbfb24-7a3b-45c6-8526-6b14cd10dace",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a4ad91-8ba0-45ee-958c-5ca452463f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08078c9-7cee-4e67-9040-3334bc1de3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb880d-1e83-448a-b0de-2ea9aba4644b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b3c8a-0233-40c1-bf9b-ed840e461444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be459d94-c801-4511-8d18-78f974bf28e8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9654a55-b23d-4e44-b095-85607da88c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e4099a-ef4a-4ec5-af68-dfa4d3c6afeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d7c9d9-ab79-473e-b365-2a0569db0fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6257cb06-add7-493c-a288-7530ce01ebe8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5cbefdf-0abb-4d61-a22e-23a903d83e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6bfec0c-bf2a-42d4-a870-7675f745e1aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e62066c2-eec9-4441-a0c5-cce4856da8f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c71ab53-eb9c-45d4-9edc-4dea5dfb39db"
                    }
                  }
                ]
              },
              {
                "id": "dcede2fc-08c2-4400-af19-9e5a231a3fb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bdaeafd-d121-423a-b70e-e4f50843c525",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e4bd01-9b46-405d-8856-d44ad4585668",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "39d03900-e5a5-4bbb-8558-e87bae14aa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae27fccb-673e-4c82-88e5-b2eb3a0e0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129a00c6-02a5-4148-985a-44c100b77a3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "821ad398-73cf-4aca-afcf-f6647aa284c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "810b5687-8d96-4492-820b-fc733c49fff6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64122d32-4148-4505-9640-d706364363b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25344b11-7ee1-42cd-9d1a-30244c29446b"
                    }
                  }
                ]
              },
              {
                "id": "4292de69-f724-45fd-941b-42eff49c16f6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "919fbf57-8037-4918-a0ee-8dae28804cbd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67e2b5e-f025-468f-94f6-b410f3c99209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b417b8bc-6c23-43ae-b073-942924b164cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159dbe22-c348-4211-b0c1-4d7e0fd95817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08f35e2-a32f-4a3e-85aa-f3e9ef0d395e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3b66052-7d04-4de5-8150-eee4278fa669",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42d01eb0-3a77-4032-8ee4-275103119842",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d29d09c1-fa2d-4139-89be-3b12134bd69f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5aa1351d-c9a3-47c3-a404-9757db2fd81d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3569d179-6b40-4398-a7da-6df86f85eda0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bbf12a5-046f-4ed0-8cfa-3e0bcabca1ca"
                    }
                  }
                ]
              },
              {
                "id": "a9ce9b52-95c5-4177-8154-1559c9f0a21b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7358d7a-3eae-4e7b-bd9e-e679c4717705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ed6417f-63f1-4872-927f-b1490809849c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df4fac07-e731-4366-8617-269dfa1fd90b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d46f81d0-931f-4a0d-ad32-3dd67d836adb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daafea43-c5e6-462d-928f-1e5a7a367cba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3713a238-cebf-4424-be62-6c6934fbb313"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d407514-2212-4a85-8149-2cc5b51a6c72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f28f18c3-6d16-4a8f-9143-a6954683548a"
            }
          }
        ]
      },
      {
        "id": "46f6e9c8-1613-429b-9df5-725113c5d91b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aeeef7ae-bf4b-4103-bd09-ccd2f64f8db0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "795f0c51-ef59-4512-9130-d3e10be1da75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f118f17-b7a0-483a-ad63-6599d3a6d811",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e74820-97f0-4d56-89db-d2cdff9ac300",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f42fdf8f-f3f3-4776-97c5-736dd461be85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a13462-f4a3-4ddb-baad-96d9f1a9a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9887f041-3a9b-47a2-9538-462d73d54195"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88c155f8-1335-45f0-a642-7e3d1b63c791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce8a3974-503f-4393-b151-e579e0025103"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11f1942d-3da1-4505-9721-5f93745d6b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bdfea6-38c3-49f2-8425-eaf86a9bab6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4c3174e-480a-4769-ab28-a89a8121cb8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56090d33-de59-4a99-90da-71fee30b2803"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d9c8ed6-915a-457f-b983-def0cdaac864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d1e8234-0abd-4cc6-bf19-a146e4cc1dfd"
            }
          }
        ]
      },
      {
        "id": "146948bf-507f-4184-a392-da65d5c9e58d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "600c2ab9-7553-4181-90c5-afcd43a686d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af608e10-db33-4048-89ba-7d46348a0a11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad649bac-f597-40e2-af77-10dee0075102",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23a92b3-2e84-4459-a870-aa217c016594",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5c22d8-a2d8-4697-a7b1-8f2cffcdfc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe63293f-a8fd-4719-9acf-603cc6e46533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53c2c832-7b24-4ff1-a690-fae36523bb51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d9fef18-7bad-4eb1-a4fe-353a06e8b725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada54655-bf71-4130-bfd5-2dc8af45db54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6727281-0b15-49e7-9a77-680eabace4b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "556733cb-7545-49b6-b907-ece54570d98a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4631c690-57ff-4355-b66e-5276bd70e845",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c141c8fb-d7c9-4fc6-896f-207c90505587"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a58b8b46-7595-496b-8f5f-dc3364b1dca0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2b50fd5-aa0e-4942-bda3-c3d7f8f386e6"
            }
          }
        ]
      },
      {
        "id": "ce63c09f-d9ee-48b1-b982-46462ceca5f6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ff2c693d-ce1a-4b78-85df-4d046123731f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54d99da7-c58f-45bb-a22f-73edf7ef0c3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23bc1079-ed70-4578-8657-36a27af85c58",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a9f93f-dbef-4930-a575-3589691e0e62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1376cb98-24ca-44ab-acb2-17cee629cf74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b82301-c8c9-43b8-9082-679004a0bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c161cf99-0c2e-45cd-8675-47b4e0be3b37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af94a7bc-680d-425b-9737-58a6385a91a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db15762e-530f-4128-b1cb-b6400a4fc837"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddbd0365-1ad7-4da1-b68d-1218ceb77823",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc44f19-843a-40ea-988c-0fcf8b37693d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bb65581-b3ef-441e-97c1-e39cbabd8871",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d184bd6d-dffb-4f67-8536-aedd56dfa582"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3702d6d5-5c5e-4e06-8b5d-92ae534bcef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2110ba3c-548d-4d28-8fea-8ed64f8844e0"
            }
          }
        ]
      },
      {
        "id": "70b7bd63-74bb-4c18-86fd-bdd6bc8a4575",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83ec6355-bfb5-417c-a904-62ebc1f0f774",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd280d0e-6150-4f11-afb2-2539c24edf5d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dcccbb7a-9562-496a-a433-fa0fdb0e5dea",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d214bf34-ca9b-40b9-8796-b813f412429f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "926c4af3-1d0d-400e-81ba-da66300883db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.11619718309859,
      "responseMin": 7,
      "responseMax": 259,
      "responseSd": 16.860776790803204,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692750702592,
      "completed": 1692750717234
    },
    "executions": [
      {
        "id": "ce5123ae-f244-4459-a041-19331dbd4672",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2bd996f6-5512-4bd7-b690-3e98f5611d6e",
          "httpRequestId": "a3b577a4-6787-42d0-b6d5-557b1c9c5fc6"
        },
        "item": {
          "id": "ce5123ae-f244-4459-a041-19331dbd4672",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78b8b4f2-a85f-461c-b113-8f77e33b6b94",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "434a8609-ef3e-424a-97b0-8ae0c4cdd790",
        "cursor": {
          "ref": "3c186e8b-2714-4114-b18d-95838cf3bbb6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "28e13159-abbe-4c91-9e34-b4eae96a4a5d"
        },
        "item": {
          "id": "434a8609-ef3e-424a-97b0-8ae0c4cdd790",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc11589d-2a91-450d-8b22-d6fb6bdacd73",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f636b938-0c75-4345-ae0f-40467b1198f0",
        "cursor": {
          "ref": "d51371e6-6471-4be8-bd34-f00a75bbad8d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "47d30908-e70f-4ed9-b320-ebc869210092"
        },
        "item": {
          "id": "f636b938-0c75-4345-ae0f-40467b1198f0",
          "name": "did_json"
        },
        "response": {
          "id": "9c80cad9-0750-49ce-8a0c-f242ca7c34b7",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c2855-16c0-4a6b-8390-31a1207cc4ef",
        "cursor": {
          "ref": "4a00c670-383b-4a8b-aa73-42402bf28871",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da8494f9-ada6-4c5b-a154-03aafef9b9e0"
        },
        "item": {
          "id": "3c8c2855-16c0-4a6b-8390-31a1207cc4ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "2135ad65-c624-4e62-9e57-2cc2a6d4303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c2855-16c0-4a6b-8390-31a1207cc4ef",
        "cursor": {
          "ref": "4a00c670-383b-4a8b-aa73-42402bf28871",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da8494f9-ada6-4c5b-a154-03aafef9b9e0"
        },
        "item": {
          "id": "3c8c2855-16c0-4a6b-8390-31a1207cc4ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "2135ad65-c624-4e62-9e57-2cc2a6d4303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a3db42-0560-42d2-bf18-8867ea129900",
        "cursor": {
          "ref": "eeebed94-25a2-4a62-872e-2b278c3ecb78",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f2a6c91e-8900-4bda-937d-f22de216e870"
        },
        "item": {
          "id": "33a3db42-0560-42d2-bf18-8867ea129900",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87e86145-3183-4cdd-82a5-6b71e6e49ab7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14e8442-1985-4041-9626-9ff13aa90cd3",
        "cursor": {
          "ref": "4314ee4c-b640-4358-bd5e-2db820bcef25",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ea99be64-0995-4aae-b314-872a79228c7a"
        },
        "item": {
          "id": "b14e8442-1985-4041-9626-9ff13aa90cd3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5498b5a1-3050-4848-a454-4c82fc40e55e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80e4255-4976-4e32-a6d9-ba8e0cbc2511",
        "cursor": {
          "ref": "f896aa42-ec35-42fc-9efc-12ea6ce293ec",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a047258-e2ad-4df0-8d3e-a4a36684946c"
        },
        "item": {
          "id": "f80e4255-4976-4e32-a6d9-ba8e0cbc2511",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "80d25e60-00cd-4589-9b52-e81b53965f03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb5661b-e28d-4dcd-bc43-5a40a273ee42",
        "cursor": {
          "ref": "a2d2fee2-4e6e-4c6b-8544-7c6aa263a5bc",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b33c56c9-7f56-4816-9870-f45bceb3c005"
        },
        "item": {
          "id": "acb5661b-e28d-4dcd-bc43-5a40a273ee42",
          "name": "identifiers"
        },
        "response": {
          "id": "47ec730d-da84-48af-9725-91d2229d66a2",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9838871b-7092-4b28-b6a0-823361e92199",
        "cursor": {
          "ref": "35c8d389-1253-46c6-b53f-38e044d321e2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f04988b-0eb9-4fc0-b3d7-c167dffb6193"
        },
        "item": {
          "id": "9838871b-7092-4b28-b6a0-823361e92199",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "97b3f102-dbee-4b03-9312-ba20ba2b73f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e06cebb-67f7-4cc1-988b-a5b22e40488e",
        "cursor": {
          "ref": "b413a8eb-32a2-440f-b63b-475914270833",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aedd0645-68a2-4177-a0fc-7089711c6068"
        },
        "item": {
          "id": "8e06cebb-67f7-4cc1-988b-a5b22e40488e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9cda8db6-a769-4017-8696-da8078a2ffd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5f70a1-b8ee-47bd-a82b-7550bc4e0a85",
        "cursor": {
          "ref": "3669c210-247d-4753-8df9-653cd2b4b31a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bec1cc59-0618-4fc6-98a3-f2b63fffa607"
        },
        "item": {
          "id": "0f5f70a1-b8ee-47bd-a82b-7550bc4e0a85",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8600c458-7f8b-45fa-8f95-4be27e5e93fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce80994e-d43c-44fc-84a9-6995f2568c12",
        "cursor": {
          "ref": "0d730570-cfcd-4e70-ae3c-daec3264549e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "88e90a04-91e3-4f24-a504-3c4273ce8ea2"
        },
        "item": {
          "id": "ce80994e-d43c-44fc-84a9-6995f2568c12",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8a1bb3b9-c03f-44a5-846e-13fd7e370eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a850a4-b104-4433-b7f3-17400dc11dc6",
        "cursor": {
          "ref": "48b0ac87-9bfb-4376-8a6f-b04afa0993db",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c9de05b-444c-42fc-b4b0-49688d14b2ec"
        },
        "item": {
          "id": "10a850a4-b104-4433-b7f3-17400dc11dc6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "990a5761-b1c5-460a-bd9c-5359b150ab5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427c023f-a4bb-437a-9eae-17bac9ef2829",
        "cursor": {
          "ref": "864a8c9a-fd8b-44fe-aeb6-ed9ff32bae6c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dc8092b5-1ade-4f7b-9ff3-be95bdd0a536"
        },
        "item": {
          "id": "427c023f-a4bb-437a-9eae-17bac9ef2829",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "63819a78-bb92-4a76-b074-a4fca3c538b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751e3af2-2f82-457b-a6fc-d52696560640",
        "cursor": {
          "ref": "62253549-3e48-4035-90f7-ae2fdffeeefc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "db9c00ea-000e-4c35-9325-a71318cb9ce6"
        },
        "item": {
          "id": "751e3af2-2f82-457b-a6fc-d52696560640",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "16c2e411-d5b7-4a04-93c5-8da990a9e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eb660c-53e7-4106-afb2-1c1bc9070f58",
        "cursor": {
          "ref": "21503d2a-f4df-4e72-8d71-d24ee12a1e9d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bc3ce529-23e9-49ca-943b-7cc766deb810"
        },
        "item": {
          "id": "11eb660c-53e7-4106-afb2-1c1bc9070f58",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d303a274-7bee-46f0-8d7a-8d27813f8026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da33808b-3c91-4896-b212-df1a9ce801f1",
        "cursor": {
          "ref": "f7c673d2-7a08-4e6c-a0cf-ed0a4584ed3c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "14d9b8f7-94fc-40bd-b87c-969363170d40"
        },
        "item": {
          "id": "da33808b-3c91-4896-b212-df1a9ce801f1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8130b901-9d60-4e0d-b3f6-f313f3c11c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e64702-eba9-4231-a385-0cfbde0de099",
        "cursor": {
          "ref": "5b938597-300f-464d-9347-2b55bbc8d80f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d292535-a045-4c3c-b9b2-26c42bc46052"
        },
        "item": {
          "id": "10e64702-eba9-4231-a385-0cfbde0de099",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "84385251-b6d7-40ba-b0f9-fc861fc25c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80913a91-c830-41f8-89fc-21ad425d0e41",
        "cursor": {
          "ref": "6b5221b5-da06-4111-9ed3-f864b5f0b465",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2437fb37-6f87-4363-98a1-46745e66cda7"
        },
        "item": {
          "id": "80913a91-c830-41f8-89fc-21ad425d0e41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ebe05e8-2301-456b-84d5-0e9186cd7679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4566562-edf5-4cec-99ef-3f24bf393d8f",
        "cursor": {
          "ref": "98eb137e-cf13-4dcf-aea4-81d096910d3f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8b8c7e2f-7be7-4f41-ba32-2a6b58ebb714"
        },
        "item": {
          "id": "c4566562-edf5-4cec-99ef-3f24bf393d8f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6655e506-990e-49a7-8183-daecac02aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb35598b-37c9-4214-b957-2c6b6a9d09b0",
        "cursor": {
          "ref": "95dca38c-6d84-4595-bdae-47107284c652",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ba160b56-45fe-4818-8612-d82f06f148da"
        },
        "item": {
          "id": "fb35598b-37c9-4214-b957-2c6b6a9d09b0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "552ccaa5-8daf-4ed8-9cfa-af4315c7b230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932de1a1-628f-491f-af6f-1500f6c9f08b",
        "cursor": {
          "ref": "d174ca36-091d-4791-849c-294d8137f92f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d462d9ff-b51f-47de-ba1d-bb71280bbb37"
        },
        "item": {
          "id": "932de1a1-628f-491f-af6f-1500f6c9f08b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "268eb2da-fd6e-411c-8948-4997cb2f86d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a359b7-df71-4593-8ca0-78291aa6bec5",
        "cursor": {
          "ref": "1fd7c2e1-672c-489f-badf-555fe5163431",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a51d080-d339-494c-b607-de9e891ab6e6"
        },
        "item": {
          "id": "92a359b7-df71-4593-8ca0-78291aa6bec5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5df6bca9-6314-48e2-a622-7914afeb4e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de745c52-68c5-43ce-a72e-36c1842de6ce",
        "cursor": {
          "ref": "88b73be9-91bc-4a76-b765-242602889209",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3de977e6-dd9b-42ee-9f70-140f228e7502"
        },
        "item": {
          "id": "de745c52-68c5-43ce-a72e-36c1842de6ce",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "64ff1975-c349-40bc-89fe-077cb0fba95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e567ab24-0094-4dbb-91c3-2c5f16cf1119",
        "cursor": {
          "ref": "33a6b626-79e7-4930-b41d-f2660e12772e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "03799823-1dcd-476d-8041-73d692948cb1"
        },
        "item": {
          "id": "e567ab24-0094-4dbb-91c3-2c5f16cf1119",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ab762b34-c59a-4977-bfcf-a706bd1b13da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80a71b2-4dcc-4f13-8dc6-92f1180d9e7d",
        "cursor": {
          "ref": "321872ec-3733-49d1-b983-bbe485dc002e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7e237be-1199-44ce-9137-64eb256a89c8"
        },
        "item": {
          "id": "a80a71b2-4dcc-4f13-8dc6-92f1180d9e7d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e6455105-b2e9-4b20-90ee-fa33830ff511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9cd5da-d695-4283-85bb-668083455e3c",
        "cursor": {
          "ref": "8d73c7a5-54e2-44b9-9301-efa7a8eb69a1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14e3d270-e563-411a-941e-1839ff71cb17"
        },
        "item": {
          "id": "dc9cd5da-d695-4283-85bb-668083455e3c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9aaebf94-c859-4c32-aa5a-b759e2102841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bbe64d-4bf3-4c48-aca5-c3fc29cc790d",
        "cursor": {
          "ref": "40a86b13-3cc6-4725-9aae-f9cbb7961c65",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "55250845-0502-4d67-abec-be6fa637088e"
        },
        "item": {
          "id": "11bbe64d-4bf3-4c48-aca5-c3fc29cc790d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8182e1f-142e-4452-af2c-91bc59c56f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371dffc6-8217-4e15-bb24-695d49fdca71",
        "cursor": {
          "ref": "8114711d-bc5b-4dc1-a1b1-8ef63f206585",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "daede904-1a98-4f8e-83eb-6c1d2134176c"
        },
        "item": {
          "id": "371dffc6-8217-4e15-bb24-695d49fdca71",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "41e92e15-04f0-4b30-bd52-a0f7b54875de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea7b9a9-740e-457e-be38-80f0dbe36e01",
        "cursor": {
          "ref": "d020c6c9-7ac3-4dcf-afbd-59acd076cad9",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "66cb78c9-383a-4138-a441-e8bb4bdd9eba"
        },
        "item": {
          "id": "4ea7b9a9-740e-457e-be38-80f0dbe36e01",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "af02e92a-3c62-49b9-987d-4351cc862478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6733031-eafb-4c52-b4e8-ddb0e7386a27",
        "cursor": {
          "ref": "d1fcff5f-b51b-4f6e-b560-e2a02e0da299",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fa35e7b3-bd5d-4e92-86e3-9d47ac590601"
        },
        "item": {
          "id": "e6733031-eafb-4c52-b4e8-ddb0e7386a27",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e0dd0db1-96bb-40b5-bb79-2d95a05f0442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed48e8b-b522-48fb-b29b-98e8bcbac72b",
        "cursor": {
          "ref": "544ab3fd-56d4-4ff1-a033-18d075832a37",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b429c5b-7382-43bb-a3eb-7db6fcd5ef13"
        },
        "item": {
          "id": "9ed48e8b-b522-48fb-b29b-98e8bcbac72b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4af152f5-3f75-447b-aac1-bd2812d25ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eae5b47-6a58-427e-b79c-b0e5f5132378",
        "cursor": {
          "ref": "74f0e4ca-dff3-458d-b974-9d4f41551035",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3ae1d14b-a71a-4314-8fb5-026a4072185a"
        },
        "item": {
          "id": "1eae5b47-6a58-427e-b79c-b0e5f5132378",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "254c6241-18b5-44f6-879e-862b58ba5643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822a0aed-5666-40f2-a41d-40058074ab89",
        "cursor": {
          "ref": "dc046420-71c5-4e85-86e2-9e7a6eeb4ecd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b7cb5c6-119f-4a80-8c4f-e990849fe81e"
        },
        "item": {
          "id": "822a0aed-5666-40f2-a41d-40058074ab89",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d6c82286-9139-4e49-bef5-ef46cdcdd0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8048830d-19c1-4a12-9087-aa6d06e54b45",
        "cursor": {
          "ref": "9677506a-90d8-4f6d-a295-3589ffba6779",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "94baf6a6-5ef4-4f50-8b7a-438cf1632bc0"
        },
        "item": {
          "id": "8048830d-19c1-4a12-9087-aa6d06e54b45",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba166194-d5dd-4314-a931-03a4fbf1bfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aedd04f-5858-4a64-bfe3-4e94cefddb8a",
        "cursor": {
          "ref": "0611f19f-3d24-459d-8d2d-69ee420d8ef8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9ec1dfc-99a1-415c-a9ab-983a539c3e19"
        },
        "item": {
          "id": "0aedd04f-5858-4a64-bfe3-4e94cefddb8a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "19fc6b67-08e5-4e28-9508-67a1f5b6b515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e426ec-d1f4-45de-970c-3c823f3e02e1",
        "cursor": {
          "ref": "f184d933-d0c3-4d44-9153-0f425842c776",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "102bde26-2901-4836-b762-54541b8599fa"
        },
        "item": {
          "id": "a8e426ec-d1f4-45de-970c-3c823f3e02e1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6df51a64-4613-4d4b-a43f-3b4a5a0e8b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e1a9c2-dec6-4a97-9bc4-ac824d9e31ea",
        "cursor": {
          "ref": "99a4fd78-986d-4ea0-b6e8-588496dfe58d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7dcc579a-0624-4dae-aaf8-3647ff94c4b8"
        },
        "item": {
          "id": "30e1a9c2-dec6-4a97-9bc4-ac824d9e31ea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2911381a-9a19-488a-8282-14a22dc56c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f99c7c-5ffb-4e07-bbf6-980663ec9601",
        "cursor": {
          "ref": "70733b92-13dd-453b-8540-c5a4c54339d3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6acef803-ffbc-47ec-805d-8f55b7339c44"
        },
        "item": {
          "id": "c7f99c7c-5ffb-4e07-bbf6-980663ec9601",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dfe065e3-251a-4426-8538-58e8c2daee6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b731dc6f-1429-4758-870d-3152ee045f10",
        "cursor": {
          "ref": "16c1a401-2665-4928-bf3d-ff8117f3b100",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "278b2a6b-5db7-4d34-9417-46befa823414"
        },
        "item": {
          "id": "b731dc6f-1429-4758-870d-3152ee045f10",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e8185454-1fc9-4d2d-bc6f-29e429fae380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4ff4a0-4155-40b2-bf80-7cc14def46cb",
        "cursor": {
          "ref": "6a2f62f0-5592-46a9-9a80-e4b3557d897f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7177ab08-7414-401a-9f2d-d849cccaf480"
        },
        "item": {
          "id": "fa4ff4a0-4155-40b2-bf80-7cc14def46cb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dcacadd3-4145-43f9-94ab-29b2ef755bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d74815-f728-4933-9dae-44b1277743e4",
        "cursor": {
          "ref": "67e247a5-35cf-49c4-a1e7-b32733e43dd7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "57e700c2-126b-453d-9416-8e86b73d0208"
        },
        "item": {
          "id": "d1d74815-f728-4933-9dae-44b1277743e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8fec8513-0296-4cae-a4f4-42b128d8fdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405b3a94-c7d0-4273-b411-1e6e97569e34",
        "cursor": {
          "ref": "74fa95ef-3374-4b6d-bd66-b8a11ab10375",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fa5ed1c1-a515-4f3e-9913-7d74544924b4"
        },
        "item": {
          "id": "405b3a94-c7d0-4273-b411-1e6e97569e34",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e801d007-85ca-401e-9890-f75653ce31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74611168-d407-4620-b8f5-a6b33e0bde23",
        "cursor": {
          "ref": "ceba9c54-4f77-44e4-bf89-b622c0eaaa48",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f7b5db95-87b0-4021-b427-50503fe483ed"
        },
        "item": {
          "id": "74611168-d407-4620-b8f5-a6b33e0bde23",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "51012d82-4158-4bec-ab03-aae11a429d86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d7e42a-fe16-452f-86b3-9853193b81b2",
        "cursor": {
          "ref": "fbc40369-9c56-4d9c-a6a3-7f40b8a6fc6c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9e5a287e-97af-4025-961b-c6cfb0bd995b"
        },
        "item": {
          "id": "a7d7e42a-fe16-452f-86b3-9853193b81b2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2c129cd1-ea43-4672-8df3-6d76058469a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14176b90-373c-4aa1-bd11-102742a0fe3c",
        "cursor": {
          "ref": "5e060281-fe84-40dc-8273-fb9b6ec01377",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d721bbb-245e-45e5-8e7c-99f82f3ae776"
        },
        "item": {
          "id": "14176b90-373c-4aa1-bd11-102742a0fe3c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a964b88e-4051-4c6a-a4d9-ae844205821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a4a1bf-9a61-4546-bdc8-292a63b5c138",
        "cursor": {
          "ref": "7fab8794-fc5c-42fd-90e5-a6617648faec",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "889d0371-1730-42d9-9101-394a4b6adf00"
        },
        "item": {
          "id": "26a4a1bf-9a61-4546-bdc8-292a63b5c138",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8fbc5f0e-8847-4239-9240-fe11b87c3ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ebd94-76a9-4871-b4f9-9a923890d2d6",
        "cursor": {
          "ref": "ab1c18f9-75fd-43bc-bc97-1156d7984860",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7aed1b50-4bbe-4779-8ac9-44f0fae39dd2"
        },
        "item": {
          "id": "3d0ebd94-76a9-4871-b4f9-9a923890d2d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9f0a0811-cb17-415a-ba93-71c20bbc1d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89956ea9-5eb4-4748-bcad-97df42c5fce7",
        "cursor": {
          "ref": "cd9e246e-bd03-44c7-b4b5-7dd4870ec4af",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8cb33f66-69a8-4329-b4f2-d05ab47e861d"
        },
        "item": {
          "id": "89956ea9-5eb4-4748-bcad-97df42c5fce7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b289b6fb-96dc-44be-a7d2-f98546ee2565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c1482-1ddf-4ec8-8f35-1e04aa015980",
        "cursor": {
          "ref": "dd5bf21c-832f-4700-aaa4-ac6d8b0d7044",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cd7dcf0b-1428-47a5-b5d6-c2d215c1803f"
        },
        "item": {
          "id": "635c1482-1ddf-4ec8-8f35-1e04aa015980",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "29ed4d9a-2ab5-4a4d-ae2e-7ee6989cc54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553b3efa-efa2-43c6-b106-ea413a066b05",
        "cursor": {
          "ref": "69f5b559-6398-4f1b-86f2-2fa9ddb79bd7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1086c3ad-c010-4c13-9311-9dc5557d30a9"
        },
        "item": {
          "id": "553b3efa-efa2-43c6-b106-ea413a066b05",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cfec9d70-8694-4c16-af7d-327e2694222b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cede21-7112-48ff-8b63-dd988e5eecbb",
        "cursor": {
          "ref": "5156ebb6-4586-4f35-a24a-8aab2d0f6421",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b6cff376-7799-4a16-944a-2c69b18011e6"
        },
        "item": {
          "id": "77cede21-7112-48ff-8b63-dd988e5eecbb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a47bdefd-7424-4f00-b154-573854f5ba8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f7317f-6715-4b48-8acf-541f57318a8b",
        "cursor": {
          "ref": "5290b9a1-ba66-4d67-93fd-a6beb260139e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "13dbf74c-519b-403a-8a3b-4b46f1155d15"
        },
        "item": {
          "id": "d2f7317f-6715-4b48-8acf-541f57318a8b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0779ffd1-3bc8-43ce-8838-fad96905872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eafd511-db80-4299-a8f2-158b2b269b52",
        "cursor": {
          "ref": "b0d980be-e9b5-459f-a0dc-3ccd228b7389",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "adc74746-5c55-4207-9696-e771bcd05043"
        },
        "item": {
          "id": "0eafd511-db80-4299-a8f2-158b2b269b52",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ae463b43-ab6a-4c4b-be8c-afc824d7db17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b6839-2fcd-49ea-93c8-365bd14070d5",
        "cursor": {
          "ref": "6e70eef6-6612-4e32-9c73-53b2632114db",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2c5891d1-e083-420f-8c60-4c6474344899"
        },
        "item": {
          "id": "1b6b6839-2fcd-49ea-93c8-365bd14070d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "de970c7f-0694-4ab1-b862-8fa7c67791ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572d922f-0cfb-4417-9029-e852584b4c27",
        "cursor": {
          "ref": "eda9f34a-9d87-4832-807a-5ab462cdf374",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b0209b30-aa2b-4153-8b8a-43f7ab1be021"
        },
        "item": {
          "id": "572d922f-0cfb-4417-9029-e852584b4c27",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0dc993a7-0607-4208-b039-99be04542958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7c548-9754-48be-a944-5f57af4dd6c2",
        "cursor": {
          "ref": "a421a62d-47e5-46f8-8f24-4da963782af2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9b1e4b03-1a63-4cbb-b2e4-c80ce066fbdd"
        },
        "item": {
          "id": "8dc7c548-9754-48be-a944-5f57af4dd6c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "54ecd5ea-5e44-407e-af08-789e18469e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d156941-7f3d-420f-93a9-e40bf6236ccf",
        "cursor": {
          "ref": "2288241d-5a7c-4d85-ad11-946a0e932116",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c109be44-c0ff-40db-a05a-47218b79175b"
        },
        "item": {
          "id": "3d156941-7f3d-420f-93a9-e40bf6236ccf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f4a20003-e890-43f6-ba6f-0a1740180906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea63f3a7-ceb3-4258-9489-80df30f8b184",
        "cursor": {
          "ref": "87c99e8c-fb3e-4541-b815-ba520eb1c8c9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "edab0497-1af3-44a3-9d6d-8205e94b1410"
        },
        "item": {
          "id": "ea63f3a7-ceb3-4258-9489-80df30f8b184",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52bed4fa-731d-4787-921d-0c0cb4bc2c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54485fc1-3abf-430b-81af-8ce3bb15a5a7",
        "cursor": {
          "ref": "55faf327-e33f-4086-b4ea-604c14e12f7a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25885c4b-58e1-4d19-9995-a50aad4bbf87"
        },
        "item": {
          "id": "54485fc1-3abf-430b-81af-8ce3bb15a5a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fdafd0e5-40d4-4357-aa78-e546c4814b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11533b1-b817-49a8-959c-48d1f5789aae",
        "cursor": {
          "ref": "f1540c46-972a-4faa-ac48-c67e2dbab117",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4c6a3d74-66ad-4b2f-8266-5f51ac71f17b"
        },
        "item": {
          "id": "e11533b1-b817-49a8-959c-48d1f5789aae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "794447fd-669a-42bf-a6cd-d71e09bf4053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85b3a2-3077-4f2d-95bf-b9fd88c2ae61",
        "cursor": {
          "ref": "11c3a4d5-37eb-4489-bad3-f0f11793e258",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1904495-2239-4a98-96c4-fe5dc30a1082"
        },
        "item": {
          "id": "ef85b3a2-3077-4f2d-95bf-b9fd88c2ae61",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1c520792-ec0a-4a34-abfd-71fff460bf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c57e713-03fb-4b4c-8a4d-d8e48bbf35fe",
        "cursor": {
          "ref": "21c80d14-eed9-41b8-a6b7-3a70acc50164",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6d18adf7-6af2-469f-ab49-4680734c7b68"
        },
        "item": {
          "id": "7c57e713-03fb-4b4c-8a4d-d8e48bbf35fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1b4bb7f3-bdb6-48d0-b23c-2e6a6001cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd970a1-eed2-4d94-b5d6-1d6a9c1668d9",
        "cursor": {
          "ref": "d4bb961b-c878-40a6-9505-2eea7533516e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9cd02b2d-8c18-472e-8841-6e9af68c619a"
        },
        "item": {
          "id": "1cd970a1-eed2-4d94-b5d6-1d6a9c1668d9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e1b20e37-0df0-4406-ac4f-3e664a1a508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985db85d-32b5-4f2c-965d-94cfc67806d9",
        "cursor": {
          "ref": "6afa9463-8f03-430b-9e24-bb802244731a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "59f08d9e-fe93-4ded-8b0b-090561b9c554"
        },
        "item": {
          "id": "985db85d-32b5-4f2c-965d-94cfc67806d9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7059fb4a-6a4a-44fa-b03b-844bea142614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f09938-0523-4d90-9a22-521521b613f0",
        "cursor": {
          "ref": "ee445b47-28da-4c24-aec8-71eeb5af6d25",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3078eb8f-5907-4a95-9297-25e52fff8940"
        },
        "item": {
          "id": "84f09938-0523-4d90-9a22-521521b613f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c0dea969-c099-42a4-aa0c-ccb8e851095e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b3b40-ddf7-484a-9761-36dcadc4555e",
        "cursor": {
          "ref": "fe43e16b-ec84-4567-8282-1c6da21c65b6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0698dd6c-4fcb-4397-8d41-861cf91a4e1e"
        },
        "item": {
          "id": "ae5b3b40-ddf7-484a-9761-36dcadc4555e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dd89782d-2c7d-496b-96c7-70ad89835469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b017ccf3-cbdb-47d5-99e7-5bebfa894525",
        "cursor": {
          "ref": "33d92cc2-7bac-4a55-b591-891052698092",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e637c5ad-ec5c-4b6b-804a-c2de2ca0ffda"
        },
        "item": {
          "id": "b017ccf3-cbdb-47d5-99e7-5bebfa894525",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "afb3ec3b-85c1-46f4-823a-ad188a692fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e03dda-c596-46bd-8d73-2afadddcedd0",
        "cursor": {
          "ref": "e35686d5-49dc-43ec-b843-d58370623e4c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c28ad89c-f20e-4a66-bb1d-94ae56a0e8e2"
        },
        "item": {
          "id": "83e03dda-c596-46bd-8d73-2afadddcedd0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a04d634-9526-4f18-aa60-a8dcae8d3d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fd72f3-9cb8-4b3c-9ea8-1ad9c564522b",
        "cursor": {
          "ref": "44825035-628e-4fbf-a03e-b2524f09db84",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f69e91a9-5bfc-482c-9e11-991880d21062"
        },
        "item": {
          "id": "24fd72f3-9cb8-4b3c-9ea8-1ad9c564522b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ae0b7f2f-eb3b-409f-9c68-383620fcc9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c90df73-4056-42a9-a9a0-4d0578642890",
        "cursor": {
          "ref": "72ea153b-b39f-422f-8d89-73e9ac954eae",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9d1ce0e8-33aa-4641-89d8-07bf225d38c9"
        },
        "item": {
          "id": "6c90df73-4056-42a9-a9a0-4d0578642890",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "18a1079e-f85e-48a2-98a2-21b7eb358af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137fb49b-13e2-43b1-89f0-e4d7fb22e5af",
        "cursor": {
          "ref": "aac58184-689c-46ec-bb41-c9c0192016f2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "856b5511-4f6c-4d97-b1ab-07db79cda283"
        },
        "item": {
          "id": "137fb49b-13e2-43b1-89f0-e4d7fb22e5af",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33afdf15-2db0-4dd1-9803-5050b8755bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af4df58-d1d2-4c11-949e-5c0b005728ff",
        "cursor": {
          "ref": "1fe15eba-194b-4249-aa43-2ce84d8b5dec",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d1b5ace3-89f5-48ee-a047-7f5fe5dee154"
        },
        "item": {
          "id": "2af4df58-d1d2-4c11-949e-5c0b005728ff",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2d11a41f-744e-431b-9284-a91e60228013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b1d6fb-9d22-41da-8b60-ef3c8daa7448",
        "cursor": {
          "ref": "dd450917-c649-47c5-a959-5e3a112ef20e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c252ab25-611e-44d2-ab35-fb2ab4c93ef5"
        },
        "item": {
          "id": "d6b1d6fb-9d22-41da-8b60-ef3c8daa7448",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81a9a5f8-a5d5-40af-8acf-cef1559cb8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba7be76-c77e-45f1-a9b9-268bf7282175",
        "cursor": {
          "ref": "90633625-afcb-4d68-b7e7-c38db4977a11",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f9c63b89-e966-4f01-9796-ae13c7136ab9"
        },
        "item": {
          "id": "dba7be76-c77e-45f1-a9b9-268bf7282175",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f2d25434-f1d5-4cf9-b92a-b2e922a87273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cba9a7e-bc50-48b2-823d-f0a1a9e603fd",
        "cursor": {
          "ref": "5d5e5501-34de-4faf-a58c-973a8432056a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "094b3098-37a2-4d7c-b561-848a0de9db88"
        },
        "item": {
          "id": "7cba9a7e-bc50-48b2-823d-f0a1a9e603fd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "563a7384-d43b-4cd1-832f-b7e8d7fc7728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34b62a3-0edb-4ed8-9210-527e0da816fb",
        "cursor": {
          "ref": "edb668b7-c879-445a-8fe7-3107791f112e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "81bb2f4b-6879-4833-a19d-45051d5d375d"
        },
        "item": {
          "id": "f34b62a3-0edb-4ed8-9210-527e0da816fb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eed2f3c0-ab2a-4bfd-b722-b196ccfe7a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bd485b-2f4e-4285-828f-6e97ddc19a66",
        "cursor": {
          "ref": "524d1f57-069c-4f4d-a58a-da4220d71c86",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9b65dd32-31c9-4aa5-8060-1434a4c82615"
        },
        "item": {
          "id": "d9bd485b-2f4e-4285-828f-6e97ddc19a66",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f2040bf-0bb0-45c1-9fd8-d5e11a3a3c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2385105-ee7a-4298-bd41-f3271f826912",
        "cursor": {
          "ref": "9fb1436e-3ecc-4293-9ad7-f748046a12fd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "edba8859-d246-4383-8a78-666e562efa27"
        },
        "item": {
          "id": "e2385105-ee7a-4298-bd41-f3271f826912",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "79e05bcb-59d4-443e-93cd-1391a8957ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1eb8df-df78-4114-a909-1d8642e8a02a",
        "cursor": {
          "ref": "dc593e5b-b0f5-4143-aef2-ddb64030cf8e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd664f8a-73eb-46d5-8f3f-067b47e152a1"
        },
        "item": {
          "id": "ec1eb8df-df78-4114-a909-1d8642e8a02a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "22a45fba-793f-45b3-8a3c-77d6d063cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90894a46-181c-4457-88a6-758f3e137203",
        "cursor": {
          "ref": "a0855ad9-dd61-4988-9b18-fdb8ce25c3d3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fbe30ecb-a4c7-41af-b156-17e2d83ae994"
        },
        "item": {
          "id": "90894a46-181c-4457-88a6-758f3e137203",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a84a89bc-3d0c-4250-93de-da406c05a94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de454a4-c3e5-4579-b213-e39313d11190",
        "cursor": {
          "ref": "0003ba42-9a07-47dc-9949-865b180e75e8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "07dfdec2-9594-43a8-8279-fa44c557074c"
        },
        "item": {
          "id": "4de454a4-c3e5-4579-b213-e39313d11190",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f9ffb609-a688-4013-a949-1c937d5b8019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6fe695-589d-4308-8820-8f085d9685ca",
        "cursor": {
          "ref": "94f48940-d2c3-4688-976d-bebbc4aa8d0d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bf061212-addc-4086-8dfd-bd85ce041da1"
        },
        "item": {
          "id": "6d6fe695-589d-4308-8820-8f085d9685ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0371776c-bc60-452b-ae44-23fd97d0c5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadd5785-4d56-4c41-9b0c-106e98c3ade7",
        "cursor": {
          "ref": "f4c553dc-c56a-41ff-93c7-92efda21249f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cc3a2cc9-91cd-41c2-8d71-f0965123617c"
        },
        "item": {
          "id": "aadd5785-4d56-4c41-9b0c-106e98c3ade7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ab939654-f8c7-4285-982c-3b74777e5453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b667ab8f-16b9-4f0f-a692-f889d20ba87d",
        "cursor": {
          "ref": "33842577-2472-4264-a56a-68f27e7c527d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "893e1040-e401-4f18-86ad-0ac9125fc662"
        },
        "item": {
          "id": "b667ab8f-16b9-4f0f-a692-f889d20ba87d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5498ae83-82b1-4e54-bfff-e803e30aab98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf88aba-dc28-4884-a178-9871d91dc49a",
        "cursor": {
          "ref": "f9d2e2d2-df44-4729-a1dc-4eaf65caad42",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "202f9cc1-d3b8-49f4-93af-2416934569cd"
        },
        "item": {
          "id": "5bf88aba-dc28-4884-a178-9871d91dc49a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6f6335b-4bde-4800-9ac1-29bf4cfe1d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b42724-f970-4f80-980b-21a52a2e0a1b",
        "cursor": {
          "ref": "f7c8c7d5-3a02-4519-95ba-e6ec05143fba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e73fefda-dd49-4908-8708-846772535ba0"
        },
        "item": {
          "id": "b0b42724-f970-4f80-980b-21a52a2e0a1b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "250f9de9-e6df-44a9-b3f8-aad8d4824079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f3355-aee6-47a0-b7da-4d66e02bfc16",
        "cursor": {
          "ref": "5cb674b4-dbc6-4ab7-bf29-4f94b1e3b380",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cefdd58b-82ce-4e52-84b6-2756b56673c3"
        },
        "item": {
          "id": "112f3355-aee6-47a0-b7da-4d66e02bfc16",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0b8fefd0-63a7-494e-bae0-bf5e9de93663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13925964-3e34-4155-88a0-b3300e2bb960",
        "cursor": {
          "ref": "273947be-17e6-4178-b729-d706ac9c343e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6b8d249-d0b4-412a-8c91-bb76b2ef6f10"
        },
        "item": {
          "id": "13925964-3e34-4155-88a0-b3300e2bb960",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0801742b-80b6-46b8-83bc-b98551a5b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a09881-1c88-4ff8-a4de-5e6245587c34",
        "cursor": {
          "ref": "074702c1-a471-4554-86eb-22797041e32a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "58b000d2-d409-47cd-be10-52c9027b8f9c"
        },
        "item": {
          "id": "93a09881-1c88-4ff8-a4de-5e6245587c34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "80b230c3-2629-463f-b079-68eb793f2806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c946258c-e23c-48db-ac08-4214541a82a8",
        "cursor": {
          "ref": "b725de88-9c4e-4510-a54e-fc549e82c1d2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "94bd5189-c2d4-44f9-852d-b287da58c67e"
        },
        "item": {
          "id": "c946258c-e23c-48db-ac08-4214541a82a8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b5fae783-6562-400d-b6e3-8b2fa5b26dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ff6664-c8a2-4fe1-b3b5-aafe5a594d76",
        "cursor": {
          "ref": "df0f94fb-41c1-434d-83ad-ad74f35b84b4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "24bd2f6b-c169-4268-ad02-988727401ee1"
        },
        "item": {
          "id": "02ff6664-c8a2-4fe1-b3b5-aafe5a594d76",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f3aa4e0-655b-46ec-8a85-119f3354f498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceb7469-8523-4f62-8c43-d35202be3fad",
        "cursor": {
          "ref": "b4130b91-1cec-4fc1-a0e1-148d5dc2393a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a15d7c14-f281-4dc0-8d02-245849847a80"
        },
        "item": {
          "id": "9ceb7469-8523-4f62-8c43-d35202be3fad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "84f57da1-9fb4-4910-93c5-b6ae81a83786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260507c9-e310-4a47-9236-c6800ff2e49a",
        "cursor": {
          "ref": "27974b3a-d291-4b76-81a7-5cd714713547",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eeb284b1-0548-41f9-849c-936acb7b2ea4"
        },
        "item": {
          "id": "260507c9-e310-4a47-9236-c6800ff2e49a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3bbdfba-34ab-4959-9296-6b5d970a8cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d5a803-e380-47b3-97b5-1306299d8027",
        "cursor": {
          "ref": "b4046a09-8995-404c-b7b2-39c89e9e628d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a3e64890-104c-4e7d-82a2-fefddcfb2f83"
        },
        "item": {
          "id": "74d5a803-e380-47b3-97b5-1306299d8027",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa5f1fde-32c0-4845-9b04-bdb33509aa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3875dba-0126-4bee-8077-2578ba159294",
        "cursor": {
          "ref": "b1b6c41b-eece-4d60-9bed-890eab283d10",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a38a6ca6-dd95-47e9-ab5b-9f3f7477aab6"
        },
        "item": {
          "id": "e3875dba-0126-4bee-8077-2578ba159294",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "637e55c4-88c1-45e4-9a27-1c5c723d41f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b93c10-5ca8-46a8-b729-a3502e0d2cf8",
        "cursor": {
          "ref": "4d18840a-fe8a-410c-9315-557a72b3cb3d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b044e03-2174-42e9-b61c-ea9ac5b69324"
        },
        "item": {
          "id": "d3b93c10-5ca8-46a8-b729-a3502e0d2cf8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "399795f1-f687-42f8-9071-cfccb7f18f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c935d31-0e28-4478-acb2-131bb9a65a65",
        "cursor": {
          "ref": "57215264-433d-47af-b501-efb519f0f082",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "40d61457-b959-4d5a-be0b-4f2bb8fe1143"
        },
        "item": {
          "id": "7c935d31-0e28-4478-acb2-131bb9a65a65",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "43958375-822a-4611-bed8-1dd62f1b43ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b4637-d116-41e7-bdb9-af2cf660293d",
        "cursor": {
          "ref": "2e2cff4d-12bf-4624-aaef-f032e4c8eb3a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3dccbc1-31a8-4074-8af8-0305fdf7c970"
        },
        "item": {
          "id": "850b4637-d116-41e7-bdb9-af2cf660293d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ef82c8a4-3c5e-4e33-83d2-97172d5a7c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef838e8-fb33-482c-b16e-15ded15b4ec9",
        "cursor": {
          "ref": "84351e5e-77d3-48c5-ba97-e236569cebe4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "331c17f3-710c-4583-bb50-be49b01d3f81"
        },
        "item": {
          "id": "9ef838e8-fb33-482c-b16e-15ded15b4ec9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ed805fb7-f003-49bd-ad44-c8c50f254763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66225ca1-6d78-400c-9c21-1a4a8ed3f1a8",
        "cursor": {
          "ref": "a527bfdf-e7d6-4910-8423-08a9f67426ba",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "31d7367a-7bad-4ecc-badc-c3bd75ef3cd6"
        },
        "item": {
          "id": "66225ca1-6d78-400c-9c21-1a4a8ed3f1a8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9995712b-7745-41ca-bf1e-a8937ac68e8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0c5d97-afb8-4f9d-9cf4-2ef1ba8cc3ea",
        "cursor": {
          "ref": "941fb6dd-873f-45e3-9da6-7235733e0e3b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e85c82bf-e102-482c-9742-61f8885637fa"
        },
        "item": {
          "id": "6b0c5d97-afb8-4f9d-9cf4-2ef1ba8cc3ea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5adaaece-dc0a-4fc7-a930-040154d8c1ab",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b0a89f-a406-4872-a8fe-8c401420d5ae",
        "cursor": {
          "ref": "c4549720-2bc1-4d06-9fc7-c64f0ee8b403",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "129f42e3-0bdf-406c-9ccc-2410e73de645"
        },
        "item": {
          "id": "f1b0a89f-a406-4872-a8fe-8c401420d5ae",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "972b700d-d368-4c2c-83d1-95ff9ceb3ffa",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4310e062-3094-44ea-9c12-4adbb8738368",
        "cursor": {
          "ref": "17b2e133-ad9f-481f-86fa-400bdf059cf2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c42f2c8-b948-4afb-8d65-c40dedf2eba5"
        },
        "item": {
          "id": "4310e062-3094-44ea-9c12-4adbb8738368",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f754d841-bdc0-4a18-ab58-8c504ac9b304",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4faa8f-5557-4240-9553-7440516d73ee",
        "cursor": {
          "ref": "d3d68667-c351-4e12-bfec-cdaf7418e12d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8f4de15-c6bf-44a3-b03b-e4942fae7af2"
        },
        "item": {
          "id": "cd4faa8f-5557-4240-9553-7440516d73ee",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7fa40f33-d62e-410f-92fd-17b0e62def74",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf9511-3309-4277-b12f-f36fcb9ec96f",
        "cursor": {
          "ref": "6fba2166-1a58-47ae-86d2-e2300285abae",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7db243fc-93b4-4740-ac99-f0dfb2f5a734"
        },
        "item": {
          "id": "91bf9511-3309-4277-b12f-f36fcb9ec96f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "777bae63-f6ef-48b6-8804-dd0b43cb704c",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c374903-f88f-4651-a0ca-7315482f388a",
        "cursor": {
          "ref": "b50b043f-bb47-4732-9c22-6aaa5f62b133",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b777f388-265c-450e-964e-22492ebb1727"
        },
        "item": {
          "id": "4c374903-f88f-4651-a0ca-7315482f388a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2c16b38a-85ae-4f46-8c9c-9ddd95ad23c6",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a24393b-dd1b-4323-8b0a-d8dc709d1b85",
        "cursor": {
          "ref": "9af29703-eed8-4cbc-8fce-0afc4fcd8c4a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "825a4a58-aa58-4b4e-a4f9-67025ecccf64"
        },
        "item": {
          "id": "9a24393b-dd1b-4323-8b0a-d8dc709d1b85",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "477befd1-2c61-4d69-90de-2a7cb258f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7cf593-d6fe-4a6c-8e11-50e27ad29611",
        "cursor": {
          "ref": "825f710b-6e68-4647-bdc3-f8b5eb4225da",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6535af09-05a0-4908-8691-2b9c9acacbb5"
        },
        "item": {
          "id": "1b7cf593-d6fe-4a6c-8e11-50e27ad29611",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7b387b2f-b4af-4d7f-b0d1-0d6bcef9ce43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0a5d72-e97a-425d-95e9-7220f0491f3a",
        "cursor": {
          "ref": "265c9c07-570d-4484-ae05-f1ca49a73c74",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa5cd63a-6e67-423f-bfdb-177afe7f56f3"
        },
        "item": {
          "id": "7f0a5d72-e97a-425d-95e9-7220f0491f3a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f09200c8-4176-406f-bf9e-707dfaa0e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdfd442-8dff-4119-93db-3522fca1cc0f",
        "cursor": {
          "ref": "dd70ab80-cfaa-4be7-8eb0-8cf281be6d2f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0f1cf3cc-7392-40d6-8704-69b197997f71"
        },
        "item": {
          "id": "2fdfd442-8dff-4119-93db-3522fca1cc0f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8385b05d-1090-4db5-a4f2-1f8e453bf674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6794432-78c6-448c-8b07-8b599196badd",
        "cursor": {
          "ref": "8f3e1a17-deee-4f47-b689-8e058dceeaa6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5861d2d8-3f40-4d64-a476-f7a9328937b1"
        },
        "item": {
          "id": "c6794432-78c6-448c-8b07-8b599196badd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7788ac9c-c334-45e6-8b08-c21b559cda65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b1f98e-3c04-4639-81e2-c963d2ce4b5f",
        "cursor": {
          "ref": "4845be7d-6532-4279-9a4d-ecf7fedc5e89",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2bc6826e-8d58-44ae-a383-1f8e06883983"
        },
        "item": {
          "id": "c2b1f98e-3c04-4639-81e2-c963d2ce4b5f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "365e13e6-4192-4abc-8b20-0f0f32b52c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7a3df3-a005-4d6a-ab05-1bd669ee155a",
        "cursor": {
          "ref": "5dc7c5ac-f04b-4ec2-aef0-216bab4d382a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1a8a5950-1531-4108-b878-3e7ce87752be"
        },
        "item": {
          "id": "fb7a3df3-a005-4d6a-ab05-1bd669ee155a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "18f243b7-d9d9-4f99-9bec-3296c7f21162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51627d73-465c-44d8-bad8-0336a586040b",
        "cursor": {
          "ref": "c3738d2d-6d12-4ca2-9e37-c99ad8fa2cb7",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "921c9801-0540-421d-add3-14b60e9b056e"
        },
        "item": {
          "id": "51627d73-465c-44d8-bad8-0336a586040b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b561004b-abd0-4c3a-930f-2e36b5d12615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3453c33-c36f-4a45-a5f9-69c22a3d79d5",
        "cursor": {
          "ref": "7c54889c-3d91-4a33-91d7-2f668b3855d1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e023993d-ffee-4bac-8d2f-b42d3dcc1abc"
        },
        "item": {
          "id": "e3453c33-c36f-4a45-a5f9-69c22a3d79d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f07e9ab9-4f29-4214-83ce-83218a04b68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164a90de-745b-4d66-bdd8-d716f2208da0",
        "cursor": {
          "ref": "d7542654-5633-47b2-9b7f-84675bdb2b2b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b24dc00-bbda-45fd-b5fc-3cfe2c1e1799"
        },
        "item": {
          "id": "164a90de-745b-4d66-bdd8-d716f2208da0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "baeef407-a059-45d7-a882-2511ef94a2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fcaef8-361b-444c-a7df-2495c15d2725",
        "cursor": {
          "ref": "02dbfb74-4548-4482-8ca6-479551784626",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be121fb0-26d5-4203-81c2-87c0b4204245"
        },
        "item": {
          "id": "93fcaef8-361b-444c-a7df-2495c15d2725",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4636f53-6aa5-4b60-921a-896908d8938c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135e021-812b-4850-8d5a-0cb5df1c809b",
        "cursor": {
          "ref": "3968b2c8-9237-4205-b024-c8c999c7a1e4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8c8ccd0b-02bc-4943-8a9f-905574ac6e7a"
        },
        "item": {
          "id": "3135e021-812b-4850-8d5a-0cb5df1c809b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb44113e-9b45-4381-86ed-410941e23602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d4f01b-c6ad-435a-9a82-f245d0ff319d",
        "cursor": {
          "ref": "04b8640d-2168-40ae-ba1a-242b8cf7aeac",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1fec24b0-e5da-4326-a98d-4db1bd162233"
        },
        "item": {
          "id": "63d4f01b-c6ad-435a-9a82-f245d0ff319d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0baf8948-458e-4881-bc1d-6f95b41b7be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb0ebcf-b417-43e7-b993-58b8f94d4500",
        "cursor": {
          "ref": "604ba877-45fb-4f83-8de8-9026147c43ee",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78840f54-dffe-45a1-9042-ed9e63944e06"
        },
        "item": {
          "id": "bfb0ebcf-b417-43e7-b993-58b8f94d4500",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "76f056ef-56f9-4c05-9012-f763899ddf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7baa05f-0ea3-4de6-8601-2223d93cb374",
        "cursor": {
          "ref": "46e8c84f-533b-4c46-a009-ce590ad7fdfe",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d031d6ce-2544-4fa9-8a66-bf4586bca6dd"
        },
        "item": {
          "id": "b7baa05f-0ea3-4de6-8601-2223d93cb374",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "579f9134-9f64-47c0-9c99-67c194fb0077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2450810-2fb5-4b15-b54b-7050572659e2",
        "cursor": {
          "ref": "52afe95a-6407-4fc2-9d6f-f401cff58709",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3e600f95-806e-4d51-9db1-b61b0b5627d4"
        },
        "item": {
          "id": "c2450810-2fb5-4b15-b54b-7050572659e2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "080a28b0-7448-4759-a8fd-a12d2d5e6cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64608ba0-f41b-4c81-90d6-9dd0c62f9489",
        "cursor": {
          "ref": "703686ec-fa0a-4868-bd69-89fd4ebe7b45",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0ac541bd-d91a-49c3-ab1d-d6e0c521f623"
        },
        "item": {
          "id": "64608ba0-f41b-4c81-90d6-9dd0c62f9489",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26cd1431-364d-47f7-84f5-1b361fd3e302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91927c90-d6c1-4203-9fcf-612398987cad",
        "cursor": {
          "ref": "451c022c-c13e-49fd-99cc-114789352a9f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a0e56a8e-d9b9-49ee-b63b-10863ee13337"
        },
        "item": {
          "id": "91927c90-d6c1-4203-9fcf-612398987cad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2218ca59-6c5b-4f01-a839-35107a6c5d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bc37f-c09d-4688-9dbd-ef1e2641978e",
        "cursor": {
          "ref": "36e053ff-85c4-4f1b-93c5-bd911a54620d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6071ca65-ab48-44f1-a29a-657b6bbb8642"
        },
        "item": {
          "id": "dd3bc37f-c09d-4688-9dbd-ef1e2641978e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9dc7eb17-4dd7-4fd3-a3f3-f6b0aee34dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5bfaac-3bc3-4cca-bbe3-153e658eb854",
        "cursor": {
          "ref": "b47fa173-d5bc-401e-9c8e-37a9eaa9f86d",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ab25c021-f07b-497e-8013-3ae69fb239df"
        },
        "item": {
          "id": "ad5bfaac-3bc3-4cca-bbe3-153e658eb854",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d8613d82-2cf0-4015-ac97-f14e5b8cbf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b754035-5e83-4045-b1e1-e8577c018a60",
        "cursor": {
          "ref": "c8163eda-09a6-42b2-98b9-0f89b386aa13",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2d4eaca5-f02b-4650-97f4-2e2f42643cb0"
        },
        "item": {
          "id": "4b754035-5e83-4045-b1e1-e8577c018a60",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1f7a25d-e399-4c59-912d-3fffdd2921d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b70902-9f6b-44da-ab4a-54bda51c260d",
        "cursor": {
          "ref": "4de0169c-1a8e-4724-a392-86299ce44f35",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "36d09495-283d-4237-ba17-f65a70e08d3c"
        },
        "item": {
          "id": "b8b70902-9f6b-44da-ab4a-54bda51c260d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2050168e-fa16-43e5-b85e-d4bb54fd8d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e17c2-501b-4b40-a378-f595c6871cac",
        "cursor": {
          "ref": "9a4a48f6-83cf-4bd6-8301-77b4a03f407a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e4423c5-2d80-4c69-80d3-ea049ccf82f2"
        },
        "item": {
          "id": "342e17c2-501b-4b40-a378-f595c6871cac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "37d6e187-76d6-464e-9011-b80febe81786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa671f44-398c-4022-9257-3b4879760a84",
        "cursor": {
          "ref": "a1999c13-b218-42bc-a03c-e79977c46497",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b008ae4d-a4aa-40e1-be12-f1862e373e09"
        },
        "item": {
          "id": "aa671f44-398c-4022-9257-3b4879760a84",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f72b5b4b-80cf-49e6-be1d-ccbb1f736f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9f3ad9-3096-49a9-8360-f30007acb5c7",
        "cursor": {
          "ref": "a1d72d08-1a8f-4432-afe4-cb364bcd0c79",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "288e1c85-0d78-4005-b6c6-a3c1f04c64a4"
        },
        "item": {
          "id": "6c9f3ad9-3096-49a9-8360-f30007acb5c7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e67472d0-0fb7-473d-9e5e-b2cef36a3f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d60efd-6571-4e86-b2a6-a2a6285a7153",
        "cursor": {
          "ref": "e726fa17-2f49-4c7b-81cb-7d846ffdb939",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9133cec2-1888-4e0a-843d-fa538433c1f3"
        },
        "item": {
          "id": "d7d60efd-6571-4e86-b2a6-a2a6285a7153",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3b3e3748-8e5c-4619-9c63-d2288bff4afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c988084-7d8f-414b-acab-95484bf745d2",
        "cursor": {
          "ref": "4e8125d0-51a0-499a-8819-4caec15f75f0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b107b2ac-fa00-4525-b67f-b62e9bca9437"
        },
        "item": {
          "id": "1c988084-7d8f-414b-acab-95484bf745d2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80fd9121-a99c-4dcc-b870-0416540ac2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb946c-4815-496c-a1b0-67d8de64bf48",
        "cursor": {
          "ref": "19c9480f-9f2e-4124-b702-1b40bcaf4db3",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f226b996-fb0a-4b16-b7b5-4500d537b2a5"
        },
        "item": {
          "id": "3ffb946c-4815-496c-a1b0-67d8de64bf48",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f335b3cc-5bf1-4e23-8ff9-8f1e6aee4a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec9e250-0e56-4500-ad68-1f7e7269c053",
        "cursor": {
          "ref": "e10213a2-786d-4f7d-b7cc-f539122da54f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d6b08ede-c925-4dcc-8059-e9f091529705"
        },
        "item": {
          "id": "3ec9e250-0e56-4500-ad68-1f7e7269c053",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52e37b32-eff4-4db9-8033-159441044b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7059bb4-89a4-4343-a6f3-6f7339fd67fa",
        "cursor": {
          "ref": "3ca92ea6-db6e-4634-8e14-4498e3f641c3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e3aafb9d-551c-4171-a2f3-72a75853418e"
        },
        "item": {
          "id": "c7059bb4-89a4-4343-a6f3-6f7339fd67fa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1130b7c3-e0aa-4b06-a77c-1fd97b88329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efa8107-54a4-47a5-970e-e51acb93747c",
        "cursor": {
          "ref": "facc96fc-fce3-4d14-aea1-0ad2c0a3a8c6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "560d2055-5385-4cae-899d-499accad5ae9"
        },
        "item": {
          "id": "4efa8107-54a4-47a5-970e-e51acb93747c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e83ed953-1ec2-4dc9-b8c0-0894d61333a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aa2b85-8b77-44ac-88fd-59322177eea7",
        "cursor": {
          "ref": "61209d39-9c28-4eaf-8000-0313a364466e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "200e9c7b-eb39-4ca3-8694-7ecae43f9f9f"
        },
        "item": {
          "id": "f9aa2b85-8b77-44ac-88fd-59322177eea7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "295d6d36-7527-4024-8e44-c9094bd4f899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523cc8f7-427f-41b0-bb9e-4afb0c5a076c",
        "cursor": {
          "ref": "aee86528-8717-48df-9c23-b29591b0e290",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d19b6e63-b2b9-49da-b082-afaee3541884"
        },
        "item": {
          "id": "523cc8f7-427f-41b0-bb9e-4afb0c5a076c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ce9823cd-2028-4278-ab6d-170699514b28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2e3cb-e32a-42d5-8d02-55b50afd0098",
        "cursor": {
          "ref": "8016e049-fb75-467b-b459-166128eb8939",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6fecc0ac-cf47-40f8-a025-4823a2b25aed"
        },
        "item": {
          "id": "58e2e3cb-e32a-42d5-8d02-55b50afd0098",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4456946-642a-4aa3-846a-e30fa65a0ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3753192-9860-4398-b1bb-65614bdb3105",
        "cursor": {
          "ref": "7f1ce3e5-fbc4-437e-971c-f1b34786bf59",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e213575-602b-46ab-9568-12b66856e3f1"
        },
        "item": {
          "id": "a3753192-9860-4398-b1bb-65614bdb3105",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4238f106-a44f-4003-8ce8-9b23e57035d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9d3b20-dd80-450c-9d7e-b3548f0f745a",
        "cursor": {
          "ref": "58c76c90-2f0e-4b9e-a6cd-d6be232127c3",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "005fea81-966c-41ed-bdad-afe7d7456b0d"
        },
        "item": {
          "id": "7c9d3b20-dd80-450c-9d7e-b3548f0f745a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b08721d5-e395-483b-b361-cadff43741d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b335c8-c040-4993-97d0-496c14813303",
        "cursor": {
          "ref": "e50525b7-71b9-45ab-a8a7-97834473d040",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "118438d6-9033-4491-9944-416f05dc9839"
        },
        "item": {
          "id": "85b335c8-c040-4993-97d0-496c14813303",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a34ba03d-760f-4219-a4c1-c91ea6f5c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f9660b-8eba-49f4-a9d1-118e9d481eff",
        "cursor": {
          "ref": "0aca31a3-26ad-4a7b-ab6e-d5f05bba590e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0a895b19-0f34-476a-b5bf-c67875eda0cb"
        },
        "item": {
          "id": "29f9660b-8eba-49f4-a9d1-118e9d481eff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b5f25018-1528-4f9c-bd08-3dc4a1e2497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2d43e0-13b2-4689-b121-231ea5e954c6",
        "cursor": {
          "ref": "aa05a58e-a257-4f50-910e-eee763676f4d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "459370cc-b99e-46e9-83a4-87a42d6efa42"
        },
        "item": {
          "id": "0e2d43e0-13b2-4689-b121-231ea5e954c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "91e900ff-439a-40e8-b382-a6d2dab4b794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e379d7-d504-4623-9154-72194f5404fd",
        "cursor": {
          "ref": "702786a7-ed5b-4dd5-9240-5a7adac2f3f4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2dd6c8dd-3796-4cc7-beb0-848ad2ca22c1"
        },
        "item": {
          "id": "76e379d7-d504-4623-9154-72194f5404fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eaea2f37-bc85-49de-9b4f-507b454899c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4c4405-9ec9-415a-9381-d0ac260c949d",
        "cursor": {
          "ref": "f439ea73-426b-4dd6-a6b0-ed50720a7b83",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0f339397-a79f-4e2c-9faa-cfd42106dcbe"
        },
        "item": {
          "id": "0e4c4405-9ec9-415a-9381-d0ac260c949d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0e067da6-5a81-4333-9d8f-e8204c42ea87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb15070-4789-4b8f-92d5-b87bc113a8ea",
        "cursor": {
          "ref": "b94204b9-f220-45c9-bbfa-86db5b60fbd2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "923776fc-6589-474d-bebc-6379164a02e2"
        },
        "item": {
          "id": "fcb15070-4789-4b8f-92d5-b87bc113a8ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50548d13-d321-4ee1-8509-ba912c28e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f454281f-230d-4bb8-a5c6-1bdfc7ef71f6",
        "cursor": {
          "ref": "22fed16c-783c-4784-8340-baf4f9120712",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "78209732-a729-484d-a745-da36973468b7"
        },
        "item": {
          "id": "f454281f-230d-4bb8-a5c6-1bdfc7ef71f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc497e97-4caa-4dc3-bf60-b051109e6367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc43262e-c3fc-481e-9511-6aabf1e12278",
        "cursor": {
          "ref": "fd16031f-70c6-48eb-bff3-4e9c79ecf65e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "091a5be3-91f5-43de-b89e-cec38a049879"
        },
        "item": {
          "id": "fc43262e-c3fc-481e-9511-6aabf1e12278",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9110b31-0201-4ada-bd71-f3452aad3bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bdfa30-824f-4b6b-8765-060df42bb851",
        "cursor": {
          "ref": "1db04bdb-ecd6-4cfd-8848-94135ddfa60f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b3341b6d-504c-490f-a4d7-d1497681708a"
        },
        "item": {
          "id": "c4bdfa30-824f-4b6b-8765-060df42bb851",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4a93a70a-af0b-4837-912a-1d66bdfc05be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fea540b-e0b9-4ade-ae8e-f93017cbe2f0",
        "cursor": {
          "ref": "57c22835-f628-48b2-9761-03102dd8b465",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c97206c1-7ad3-4bc6-958e-5a028f55a9d0"
        },
        "item": {
          "id": "3fea540b-e0b9-4ade-ae8e-f93017cbe2f0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba1bfc69-95fc-4162-af16-9f67bbc2fc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf503b0-c6b4-4952-8777-65bbb1fcdc54",
        "cursor": {
          "ref": "34cd7d53-61e2-4d1d-950d-54e58864b650",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d7cf47c4-4c3f-4aa5-91e3-141e0776d1c3"
        },
        "item": {
          "id": "8cf503b0-c6b4-4952-8777-65bbb1fcdc54",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "12191f3f-1741-4898-a25e-3ecab8792d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e727d3-c6e1-49d7-9406-1f5f961fa516",
        "cursor": {
          "ref": "075f7e4b-85af-476b-9b2d-1bf8a2afbf4d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f18372be-07ef-4395-8ce9-b3c5cdbc413d"
        },
        "item": {
          "id": "c3e727d3-c6e1-49d7-9406-1f5f961fa516",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "37550c3f-f3ed-4bb3-9917-e688739aae30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d7a3d-4f4f-4fcd-b5d3-aed147de3910",
        "cursor": {
          "ref": "8c052417-ba27-47bb-b0ca-6ba66b722f7b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8508f713-e3df-4b47-b44b-928fa2f08715"
        },
        "item": {
          "id": "6a0d7a3d-4f4f-4fcd-b5d3-aed147de3910",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29526c77-ad02-46a7-a284-29a856c76449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9746f675-d2c1-4412-a7da-df56069dcb3a",
        "cursor": {
          "ref": "ff63addc-87a3-4671-86a5-8e64c64f75ef",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "23229099-945e-4767-97f5-3581e07fb26a"
        },
        "item": {
          "id": "9746f675-d2c1-4412-a7da-df56069dcb3a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8020418-256b-4df0-88cd-f3973b53ff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ff500b-5ac3-4ecf-bab4-3051bbdf484c",
        "cursor": {
          "ref": "9a206290-2720-4b2f-a351-cc0f646f0673",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f7809534-8cca-4b26-992f-fa20e458ffd3"
        },
        "item": {
          "id": "f4ff500b-5ac3-4ecf-bab4-3051bbdf484c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "648192d0-112e-4536-9c99-8e540665ff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa840d-7d8e-4c47-89d3-e91db9c52a02",
        "cursor": {
          "ref": "99abf9ed-7cbf-4fef-be54-9aa33c9f9cd9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a614b0ba-fd50-4530-911a-d5195d1e9a54"
        },
        "item": {
          "id": "7ffa840d-7d8e-4c47-89d3-e91db9c52a02",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6fc10ac0-4e98-4827-96f6-f98940897d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaf5449-d504-414a-ae75-5ba137278b70",
        "cursor": {
          "ref": "cd9dd99a-ffd8-46ee-931c-8a83f6c03156",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "44a39ae2-8753-4318-8c54-4a9bdcab58ad"
        },
        "item": {
          "id": "ccaf5449-d504-414a-ae75-5ba137278b70",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f51cd35-959a-4a75-a829-7f39eb94785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff9cf68-8355-466b-ba40-923d3d31da16",
        "cursor": {
          "ref": "7cc53f43-5c49-47a7-a757-443ebc05ec1f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "78520384-5302-4c8f-aaf8-d5a5509071be"
        },
        "item": {
          "id": "cff9cf68-8355-466b-ba40-923d3d31da16",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4938d0a4-fc22-4f2d-aafa-31252416577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7817d8-0fb7-4d7f-8531-adf7c81f5f05",
        "cursor": {
          "ref": "f2164207-705a-4c57-809d-eb7f6793203d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "67272d38-78df-4fbe-9f4a-9a3ae4e70fb9"
        },
        "item": {
          "id": "da7817d8-0fb7-4d7f-8531-adf7c81f5f05",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad335335-38f4-4230-87c8-3d15fa64aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fb4fc9-d57d-4b79-b71e-0ca43a3dbd14",
        "cursor": {
          "ref": "bb6cad79-8d72-4c3f-9ced-3e624489f26e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9ca62f77-f8b8-4347-a9e0-58c627582c45"
        },
        "item": {
          "id": "f2fb4fc9-d57d-4b79-b71e-0ca43a3dbd14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d42ed07-6799-4a83-9972-96291d47e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60368a0-cd4c-4833-9acb-7e4210620d43",
        "cursor": {
          "ref": "3212bc9a-3df6-4996-8904-5fd46a2f57a4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c70dbaa7-ca3a-47b9-82f8-b63314bbfebd"
        },
        "item": {
          "id": "e60368a0-cd4c-4833-9acb-7e4210620d43",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa5216ac-a08e-4555-80e7-aa710681e6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2943c6c8-a631-4e66-a6e6-e36e12b36092",
        "cursor": {
          "ref": "25b3c24d-1a9e-4371-9130-07f862bed9b4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "104cddc1-3959-405d-9106-0c3c16821abf"
        },
        "item": {
          "id": "2943c6c8-a631-4e66-a6e6-e36e12b36092",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7ac93ed9-a86b-46e8-ae42-ed5fa2f4cd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b5949-ba63-4656-9556-5d058a2f121e",
        "cursor": {
          "ref": "223cc4b1-9b6b-4958-8a37-8c26e508d0da",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "86d35737-5283-4299-b146-da5a97d90b77"
        },
        "item": {
          "id": "fa7b5949-ba63-4656-9556-5d058a2f121e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "324630ec-9761-496c-acf0-54b290758619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f625c2-34f0-440d-b430-850432f28ee7",
        "cursor": {
          "ref": "b67f1fe3-8f54-4695-bb6a-1987c50b6444",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1b322fd6-2144-4112-88e7-11762f020a37"
        },
        "item": {
          "id": "e0f625c2-34f0-440d-b430-850432f28ee7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55170a67-e03c-402e-b4db-c3cb5bc51391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3d456f-ab35-4332-af70-4ea26f782dae",
        "cursor": {
          "ref": "1e9c6e66-3c01-4f4d-9b87-cd4e3128529e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "38740315-64ff-4ed8-90c5-fe329af2ecab"
        },
        "item": {
          "id": "da3d456f-ab35-4332-af70-4ea26f782dae",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4eea5f1f-17d3-45e0-9f76-1e97c8fa599f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7508201b-8c5a-4f91-963c-efeeb40c8d09",
        "cursor": {
          "ref": "70218e98-3aa0-4701-b73d-a34a3d9a5fdd",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3d2bfac-9efb-4912-ad9b-5be79f07116b"
        },
        "item": {
          "id": "7508201b-8c5a-4f91-963c-efeeb40c8d09",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "852aeefe-5b6b-4bbc-9c96-9c4d3af61154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7105b4-6258-4390-9e34-e80d69d2fa1d",
        "cursor": {
          "ref": "c9849f8e-088e-4f65-9aa6-f81bcaac6db8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52e9390e-acb2-4433-bd8c-7ea1f9ebf995"
        },
        "item": {
          "id": "9c7105b4-6258-4390-9e34-e80d69d2fa1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf795921-ade9-4ea6-9046-ae4b3ef61199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f8494a-55a2-41ec-b890-52a46471dc09",
        "cursor": {
          "ref": "cdcf3d91-64bd-4df1-85af-5d7b71759712",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "05d72e50-9a80-4840-a85c-d39151d5f014"
        },
        "item": {
          "id": "84f8494a-55a2-41ec-b890-52a46471dc09",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68effb72-66b0-4620-ab98-3587f0a1b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af4c2c-cee2-4476-b864-f26fd28ac4b2",
        "cursor": {
          "ref": "c1f3b6c8-1fee-4520-951e-b87bd916c0cc",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8552772d-f2cb-46f8-ab78-43567a8f1e74"
        },
        "item": {
          "id": "14af4c2c-cee2-4476-b864-f26fd28ac4b2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "27803a3d-8d0a-49cb-9fe2-d133f6bbf13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeac0cd-6448-438c-8aa6-495d28c2adc6",
        "cursor": {
          "ref": "e1e23957-2bd1-490f-a123-a899a251787d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a73d7664-5cdc-4d46-bc25-fa6ee050ce4b"
        },
        "item": {
          "id": "aeeac0cd-6448-438c-8aa6-495d28c2adc6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "07298652-4d1c-4aa2-af37-22e33bb10161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c6ba13-7f23-48c8-87ff-8bc3af6b588a",
        "cursor": {
          "ref": "a00f3307-349f-486f-802a-4552debd88e2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aad3c044-bd0c-4c7c-b45d-b5ebaf3b5b45"
        },
        "item": {
          "id": "53c6ba13-7f23-48c8-87ff-8bc3af6b588a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9df8acf5-4b94-4f90-affc-02e92f90f0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a96c1-f485-482c-96b3-62ecc1640493",
        "cursor": {
          "ref": "f695d992-12f7-4ba3-8a20-6906e35f566a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85f228ca-eb36-4a80-ae6f-8363d73919e7"
        },
        "item": {
          "id": "808a96c1-f485-482c-96b3-62ecc1640493",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6ac1889b-11d5-413b-b83a-c53aba7596e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853076da-04e1-4b22-b608-fcf6e30adb36",
        "cursor": {
          "ref": "cc81f917-e65f-4108-840a-ed39715b4fd4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d5f9eaf-685f-4af9-8d04-7186a4bb5eb2"
        },
        "item": {
          "id": "853076da-04e1-4b22-b608-fcf6e30adb36",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c906e810-044a-484d-a99b-e5c710a8a0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316e323a-3b4e-4434-b951-1dd5bd0b43a6",
        "cursor": {
          "ref": "f00e4b59-316a-4c4e-b16f-29ba3ebcb1e6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eb393dc9-f530-44a6-a9e4-5615bf2aad37"
        },
        "item": {
          "id": "316e323a-3b4e-4434-b951-1dd5bd0b43a6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d227abf-ead0-4309-b447-c87f70984e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc39fa0-3d54-4521-bce7-62455b8eb51e",
        "cursor": {
          "ref": "c9b4d9c6-480a-4fca-92ff-f1743f0639da",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "775c7805-dd85-416a-9ed5-05352642c3ea"
        },
        "item": {
          "id": "2bc39fa0-3d54-4521-bce7-62455b8eb51e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8fc7e139-4159-4332-a9d7-a6851fdfec35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef9e926-0ad6-424b-9624-6ea01f65218b",
        "cursor": {
          "ref": "f3d82698-3768-4401-9954-acd3bd7c0a22",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "40deb352-4b7e-46e7-b0a4-01115eafb30f"
        },
        "item": {
          "id": "2ef9e926-0ad6-424b-9624-6ea01f65218b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f919c855-8dc7-4d7b-9fe9-1cf099e8ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732a8f94-7b25-4c51-a1a3-7043e92e5bbf",
        "cursor": {
          "ref": "193146c2-b24f-4f71-b7be-54bc4139319d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67f67a89-f874-41f5-83a0-e603e2157e28"
        },
        "item": {
          "id": "732a8f94-7b25-4c51-a1a3-7043e92e5bbf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f16d98ed-07cd-4d1b-a64d-d36fe9d1c2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83334ce4-2879-4240-b5cc-a736993a13b8",
        "cursor": {
          "ref": "7e900cf2-0ecb-4e33-9ba7-2748384635a5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "02dcfa8c-4894-4b95-9271-7b33dd82beec"
        },
        "item": {
          "id": "83334ce4-2879-4240-b5cc-a736993a13b8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "11a8c8f4-5fc9-4beb-b36b-6231d8f887cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3aefba-a872-48a3-888e-50cda582d821",
        "cursor": {
          "ref": "31f2461a-4e45-4175-90a6-efd770a1b8ed",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fa8fa951-45ae-47ef-a352-9532ac8c32bc"
        },
        "item": {
          "id": "bc3aefba-a872-48a3-888e-50cda582d821",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b1a02df9-7532-457d-b181-bb74900c4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb530d-bc8f-4c4a-8148-6c917f957dc0",
        "cursor": {
          "ref": "3ac9d0cb-40d2-429f-994c-0c99bd0b2faa",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5a59a3be-864f-4381-a5d9-0608df09558e"
        },
        "item": {
          "id": "27cb530d-bc8f-4c4a-8148-6c917f957dc0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87db423e-fb0e-451f-9ef5-652128a43337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de135e84-1990-4139-8a47-81335c2545d9",
        "cursor": {
          "ref": "ef2e7aa4-fbd8-43d6-a3c7-b1b34db80e83",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bea6cd38-261b-47aa-bedb-27d3032588f2"
        },
        "item": {
          "id": "de135e84-1990-4139-8a47-81335c2545d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "96f8b238-8bb6-45f5-94a6-e56fad8afba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a4960-8fef-4942-a536-426cdcbb2a95",
        "cursor": {
          "ref": "8719e617-3233-4eeb-96d9-2b16ea5878e1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f8f938bc-94c7-480c-959a-9ed5f91c6668"
        },
        "item": {
          "id": "fe6a4960-8fef-4942-a536-426cdcbb2a95",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "446c76ae-20ea-46c6-a259-4d8e30b797e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1963af43-0f79-43cd-ae7f-a791785bd4e5",
        "cursor": {
          "ref": "34abcaa8-3c44-481e-a415-b6ebf9de6f77",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "41c24e7b-d36f-4f7c-a7a1-06ca67eb1722"
        },
        "item": {
          "id": "1963af43-0f79-43cd-ae7f-a791785bd4e5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0e57d0a9-f9ff-43e4-a325-6d0b3296115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c95211-0fbc-4dcf-93a1-0a3579df5d7d",
        "cursor": {
          "ref": "1293399e-8c71-4622-b07d-dd9bbba1ad86",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4de51286-18f0-47bd-afc6-6fa6331d50cd"
        },
        "item": {
          "id": "83c95211-0fbc-4dcf-93a1-0a3579df5d7d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4372db22-71b3-451a-affd-0430dc87e5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c5c03-e424-49bf-9f50-cb7c04981cda",
        "cursor": {
          "ref": "8c2c2678-c0d3-4a3f-89ee-b462c371345e",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf484735-b242-49b7-aa44-b15726d898f9"
        },
        "item": {
          "id": "ad4c5c03-e424-49bf-9f50-cb7c04981cda",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4c142f6b-c16d-45c7-a2ab-bae4659cf817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db1a9a-a4d1-4151-ad6f-a5cfc53ac07f",
        "cursor": {
          "ref": "e4c4f2ca-bb1e-42fd-80f6-ddf016f0c32b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6fdb2fe7-1bfa-4644-bd9d-021e3cf3b0b2"
        },
        "item": {
          "id": "78db1a9a-a4d1-4151-ad6f-a5cfc53ac07f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2af6547c-7421-497e-82ef-02c55e8d84f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c93a2ec-b99b-40b6-b845-5b24e7292702",
        "cursor": {
          "ref": "251f0a7f-2c1e-41b6-9157-6171b633f9b2",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "68571389-bc38-4b1b-9c35-23e0b7fc14fd"
        },
        "item": {
          "id": "2c93a2ec-b99b-40b6-b845-5b24e7292702",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a112933b-3580-45da-8f7d-c4cbc236ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1f327b-1442-46c0-b75c-23d0307c2b87",
        "cursor": {
          "ref": "c2d24e40-ba5d-40b3-9941-94e15fd84371",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d058244a-79b5-48da-ab92-67de25e12e50"
        },
        "item": {
          "id": "eb1f327b-1442-46c0-b75c-23d0307c2b87",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4fd89a3-8156-48bd-a4ff-3ccd2e75ecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9184382a-8969-4fe5-9af0-45ab317b056f",
        "cursor": {
          "ref": "13da20cf-874a-4670-969a-bcb5dbd72bbc",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "69d6ed29-7abe-42b8-a971-6c6ca8770754"
        },
        "item": {
          "id": "9184382a-8969-4fe5-9af0-45ab317b056f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a2ef9e48-6128-4711-bc35-e2404f94a3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918701e-25a8-4f38-a22b-99ccaebcbefe",
        "cursor": {
          "ref": "4b8c929d-d964-479b-80f5-3162a485507e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a904b396-9107-4092-be5e-7daef544832a"
        },
        "item": {
          "id": "a918701e-25a8-4f38-a22b-99ccaebcbefe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "df963f87-5711-4edb-b255-b21fcb73b981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c645f418-4df1-4d38-9cfa-486422a61d95",
        "cursor": {
          "ref": "39110b32-f2cc-409c-b026-0527fa799447",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "694d624f-3886-4b29-8e93-79d95d8fe7bf"
        },
        "item": {
          "id": "c645f418-4df1-4d38-9cfa-486422a61d95",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c392b84a-baba-4cbb-90a4-352abf36e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01894663-8191-4748-aea2-9014455b7f42",
        "cursor": {
          "ref": "ad8a64e0-876a-48a5-b5ff-f0e045754a6e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ab0b2d1f-2ac7-48e6-a1be-48decb298cc0"
        },
        "item": {
          "id": "01894663-8191-4748-aea2-9014455b7f42",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dac6f8f8-fb11-4602-bd46-74792fbbfa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d4bbc8-12ce-42be-ac87-52db2ff10d2e",
        "cursor": {
          "ref": "9e85af38-0b24-465a-aa32-4b2df5024c2e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11dae666-e8ee-403f-88ed-9836508854fb"
        },
        "item": {
          "id": "c0d4bbc8-12ce-42be-ac87-52db2ff10d2e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c34ef4a-ed00-46f8-8869-f00bd750173c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff39ac3d-cedc-4804-96ed-755ecbcf4f1c",
        "cursor": {
          "ref": "64806375-8ef5-4f4f-a096-31e835863d2c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "157a1d7d-0635-4f60-846f-63c3742b7060"
        },
        "item": {
          "id": "ff39ac3d-cedc-4804-96ed-755ecbcf4f1c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a598ed17-de40-4d1d-a973-44fd5a478f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7dc62e-09bb-407b-8d4a-18aa5fd7da40",
        "cursor": {
          "ref": "b4df07dd-91e9-45c0-867c-27d8a5ddc1fe",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2aed7367-a1fd-439e-b6b3-ddb840eccb8c"
        },
        "item": {
          "id": "6f7dc62e-09bb-407b-8d4a-18aa5fd7da40",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aa836bf1-9384-4d47-88a6-423d49fdacc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fbd311-36f6-46b2-984f-6ae45fdc3569",
        "cursor": {
          "ref": "871967d2-94bc-49c9-bd41-65436b9d7563",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3ed4a24c-0cc9-437e-96bc-04e4aaf60eaf"
        },
        "item": {
          "id": "33fbd311-36f6-46b2-984f-6ae45fdc3569",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9955fad3-2b23-4323-a6a1-02a1058bb4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1781361b-21e5-405e-bcba-1a0e94eeaccd",
        "cursor": {
          "ref": "e9e22ab5-025d-409b-b218-a99f2eb18295",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2062ba5d-c948-4cab-af36-adef70711797"
        },
        "item": {
          "id": "1781361b-21e5-405e-bcba-1a0e94eeaccd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d46d1593-2b98-4a16-bcca-666c9ac9f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ccdd3-327c-48a4-a1ed-f3da946ac667",
        "cursor": {
          "ref": "8a5837c0-8114-497d-b0ee-7229172fb4a7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7e3d5713-0933-43dd-b4e1-58eda27ffd7e"
        },
        "item": {
          "id": "440ccdd3-327c-48a4-a1ed-f3da946ac667",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f903f9a-facf-471e-9a03-8c224978e1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f14617-36f9-4a8d-b9ab-5383c25234a5",
        "cursor": {
          "ref": "477759c4-8f6d-4436-8da2-3337fb069553",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "022893c4-257c-4dd6-ac37-337a1d69207e"
        },
        "item": {
          "id": "39f14617-36f9-4a8d-b9ab-5383c25234a5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4bf8946e-1236-4f9f-8c18-7944ecf745be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb456e-4741-4397-8219-96d87c4e16dc",
        "cursor": {
          "ref": "c2f8d9b2-1a4a-40e3-96f1-130b81049b30",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fd66773b-876b-4879-bfd0-da09577f5b53"
        },
        "item": {
          "id": "fceb456e-4741-4397-8219-96d87c4e16dc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa6c5ab0-504a-4fc4-8bc9-34e3a5b7bd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fcf652-a5ab-47b2-97fd-d4fa66668352",
        "cursor": {
          "ref": "a0d4057e-cb9d-4863-a64f-43d48c5e843b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "487aed64-e13e-417a-8398-9121472e429a"
        },
        "item": {
          "id": "61fcf652-a5ab-47b2-97fd-d4fa66668352",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "08553152-6ad1-49b3-b081-c2e2ff4dae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094be421-5e4a-446d-90d9-bb75968e2149",
        "cursor": {
          "ref": "3c6ef281-1cfe-459b-a9f7-d9f87723ac2c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f04651ad-b0df-417c-b805-af6dc6dc5c56"
        },
        "item": {
          "id": "094be421-5e4a-446d-90d9-bb75968e2149",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "430202ed-6634-45d8-9c86-1b866e49a8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d0f829-d876-4c30-97c7-3ccafdd94b23",
        "cursor": {
          "ref": "132d450b-c98a-456b-967d-c19a0f787987",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "700eed96-7f26-4858-81f5-db215c80037e"
        },
        "item": {
          "id": "19d0f829-d876-4c30-97c7-3ccafdd94b23",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ffd55f4-06df-4a7c-9aec-9f18371d4458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adda6bec-60ee-4802-89fb-e866ffa1c0d6",
        "cursor": {
          "ref": "414abdad-4e9d-45b3-a1c2-b30597ae12a0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e2a37fb3-eba7-43d9-a5b5-95de3d186242"
        },
        "item": {
          "id": "adda6bec-60ee-4802-89fb-e866ffa1c0d6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7343f833-545c-4a79-9860-da7a2d1e8d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7cd3e2-0ac3-4842-a7fc-179c3129d012",
        "cursor": {
          "ref": "d6a4e126-7b01-429c-9438-21c2415fda9a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1786ab07-e3eb-4365-a5e7-369975e88572"
        },
        "item": {
          "id": "1f7cd3e2-0ac3-4842-a7fc-179c3129d012",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d191e05b-4228-4600-87a5-04175978f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3ee82c-0bc6-4005-8406-3fc638fcf4f0",
        "cursor": {
          "ref": "75b2544d-d96f-4bb2-9666-c2686713db4d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7d0ba602-6b5f-4fc2-94cf-6311068d2804"
        },
        "item": {
          "id": "8b3ee82c-0bc6-4005-8406-3fc638fcf4f0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e80ef705-3c85-4d39-b268-feb74bec607b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6f9471-dca5-4dd8-bcc3-b7c8907b4137",
        "cursor": {
          "ref": "ae6cff9a-c6ec-429d-8930-d3e6a34dc4be",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "00a74604-59f7-42e9-b034-cc24807965d1"
        },
        "item": {
          "id": "fb6f9471-dca5-4dd8-bcc3-b7c8907b4137",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "518c140d-ff9b-4b77-a569-99b06ee91941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e65e29-3c87-4b64-bebd-f8a046040935",
        "cursor": {
          "ref": "8d83eb1a-bdc6-45be-9c0d-ab03824b23fa",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec57b55d-1d30-489e-b299-be3e31234539"
        },
        "item": {
          "id": "58e65e29-3c87-4b64-bebd-f8a046040935",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "50085d1d-adb8-4546-8a14-da619ad02c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11e5eeb-6233-4bf7-ac0a-f428289dc443",
        "cursor": {
          "ref": "ef4af1e7-c7dc-482a-a96e-20a353ca83dc",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0708af6a-6f80-4890-8e66-752e2eb2c3a2"
        },
        "item": {
          "id": "f11e5eeb-6233-4bf7-ac0a-f428289dc443",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "019fcd81-30bc-4e73-9eb9-da28b594962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de7115-5ffc-4c48-8b3f-4b527627f958",
        "cursor": {
          "ref": "d1264e4e-0378-4ae5-a39d-01de3b4c0305",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca87ed87-33ff-4ff0-aac7-2925ef61845f"
        },
        "item": {
          "id": "02de7115-5ffc-4c48-8b3f-4b527627f958",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "82bdb970-ecd3-4ab7-b521-c1cd57125a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76991f98-8828-42b1-aeea-1a1d2c857490",
        "cursor": {
          "ref": "3d311ab5-e797-4695-9830-706cbcf5236e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "168d834d-3d6b-42fb-9180-454bce3fed03"
        },
        "item": {
          "id": "76991f98-8828-42b1-aeea-1a1d2c857490",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96453f55-c129-426a-92f8-c05fb014745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ecfffd-669b-4b03-bac7-1791f50e561e",
        "cursor": {
          "ref": "6d11ed79-4d3a-4ee0-b9fa-6873a26c6af9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c262bbd9-f405-4080-a1fc-170003fa20bd"
        },
        "item": {
          "id": "c3ecfffd-669b-4b03-bac7-1791f50e561e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "090c5a60-9117-487e-a45a-fd0a3ce31be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ac4c26-bad6-472c-a083-f0e5219c52d5",
        "cursor": {
          "ref": "69a598f9-3f5a-469c-a3c3-2b7681c18701",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3d90e6ac-a5b3-416d-a6ea-5dc28a03146a"
        },
        "item": {
          "id": "60ac4c26-bad6-472c-a083-f0e5219c52d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3f2591b3-bdb3-4be3-b9a0-76d73a4d6d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651fdd02-3cca-48cf-992b-f249da08b4af",
        "cursor": {
          "ref": "0a47dfed-c9cd-43ab-af45-9a77e1b68195",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "22929707-b876-44f7-8e34-cfbf9cc40b9e"
        },
        "item": {
          "id": "651fdd02-3cca-48cf-992b-f249da08b4af",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb8d36d4-c371-49cf-9d8f-808eea88a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0acf6c4-b6cd-48f5-8c8e-bf5548b80998",
        "cursor": {
          "ref": "8826ac13-c778-4f1d-b50d-6b5e5f01a2f5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "86162571-6223-439f-88cc-80b37c855ee1"
        },
        "item": {
          "id": "f0acf6c4-b6cd-48f5-8c8e-bf5548b80998",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9e99e6f8-1172-4d2c-87c9-bec70011c087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9681ce-70ce-47dd-b865-6a27015897c7",
        "cursor": {
          "ref": "ac7ffd3f-9c79-4165-9b53-4a79a5577eca",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6c00d9ef-d2c7-4abd-bfac-9750f36345e1"
        },
        "item": {
          "id": "5b9681ce-70ce-47dd-b865-6a27015897c7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "75ba7275-523e-4b1a-955f-9c8b6463703b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fed146-326e-4983-86c4-9c07c2fa7e94",
        "cursor": {
          "ref": "ef162c28-7efa-41c3-8401-3a10dd9a1565",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eb008d59-f309-4bdf-86ab-3d4b29af374a"
        },
        "item": {
          "id": "a1fed146-326e-4983-86c4-9c07c2fa7e94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aef86b6b-3ae7-4fd7-b8a6-7825ecf0ac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d616662-5a88-4e92-bd23-5d6a7e0abcae",
        "cursor": {
          "ref": "c9684317-48e3-45d3-97d9-729c1bf237f2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "59350174-bd1f-4954-881f-2af78660989f"
        },
        "item": {
          "id": "6d616662-5a88-4e92-bd23-5d6a7e0abcae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c5570dbd-1caa-4a38-b686-6d879aa47378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c02d9-53e4-4cdc-a9d0-4b5909fe79d9",
        "cursor": {
          "ref": "b1ae1aee-eea0-4bdb-bfee-bf1ae4286fa5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3c8f4e6f-68d5-4447-9aa5-355749b80373"
        },
        "item": {
          "id": "f21c02d9-53e4-4cdc-a9d0-4b5909fe79d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "afd5663f-4d66-4755-87f3-3c2c37f2c461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8569b15-27c4-40a1-8ff5-f3cf82c55ef2",
        "cursor": {
          "ref": "9c3ccb61-85ac-4552-8d45-fee639cc1dfe",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fc2d88e8-0ef0-4e03-9b36-4cc95f1b031d"
        },
        "item": {
          "id": "b8569b15-27c4-40a1-8ff5-f3cf82c55ef2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2948b9f2-7ae0-4e50-bc27-d4d665a47ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eb4cd2-8b4d-45c2-ad2f-ea8a67b1e7bb",
        "cursor": {
          "ref": "1ce163b1-2b6c-4bf3-9c4b-c2c43aa08ffa",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f9ee4c20-4f22-400b-93e9-87fd2ee28045"
        },
        "item": {
          "id": "91eb4cd2-8b4d-45c2-ad2f-ea8a67b1e7bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6d37b529-8fe3-47ea-a203-3e6f94a6a51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03436f3-bb18-4b7a-b7b0-c04e450dfa6d",
        "cursor": {
          "ref": "fb36783e-7b8d-47ba-895f-c0082862d11a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6f11f5ff-a609-4553-8860-94771659b73f"
        },
        "item": {
          "id": "c03436f3-bb18-4b7a-b7b0-c04e450dfa6d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fa252c6f-19df-4958-aa0a-10ef6ddf233a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5070c947-3eda-43c8-ad61-78727badd139",
        "cursor": {
          "ref": "001c08cc-7440-4dbd-8a2c-d25e675d9bc5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9e68fbd-32b3-4432-8ef7-766cfd9f4e61"
        },
        "item": {
          "id": "5070c947-3eda-43c8-ad61-78727badd139",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e3d3bb36-48f6-4881-8784-45f3d789cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bce735-36f5-42ab-9bbf-6a1fed35f50c",
        "cursor": {
          "ref": "299f8b25-2c3b-4c90-92d7-38b30604edf6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d45ad80f-e90c-43d7-9645-b6d5fb69a475"
        },
        "item": {
          "id": "a5bce735-36f5-42ab-9bbf-6a1fed35f50c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d6b5621-975b-4184-84ed-98a6f30c0a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3ee65f-917f-40bc-b335-ce86d05fb1d9",
        "cursor": {
          "ref": "e9798c8a-80bb-4518-b99d-349d3a060b07",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "86b97280-0e85-4683-bb2a-868da92a35a4"
        },
        "item": {
          "id": "df3ee65f-917f-40bc-b335-ce86d05fb1d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d8da7288-6c24-4a4d-993e-9e850f7283f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f9861e-bb3f-44c0-8d9a-0478ca7ba26e",
        "cursor": {
          "ref": "1cf7d65b-5b98-4d11-83b7-694295100ee7",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "51eee5be-45af-4835-98f6-c06b4710731b"
        },
        "item": {
          "id": "e1f9861e-bb3f-44c0-8d9a-0478ca7ba26e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fe11fdf1-425b-45eb-8cba-ad9c0a2e2d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db70a3c-12b9-4db7-93a8-dd6f1efe7904",
        "cursor": {
          "ref": "38ddaef6-336a-49a8-be07-5281c4ffc6fc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "921b9f50-c0f4-477b-a13d-6a61e0f7aa46"
        },
        "item": {
          "id": "3db70a3c-12b9-4db7-93a8-dd6f1efe7904",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "206cab6b-6ef2-4265-9661-3c6f05b0a325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d8cf51-e1e6-4c67-8bf7-337491c37af9",
        "cursor": {
          "ref": "bb1f611b-61dc-499a-8c86-cc34bd42d58b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "68932c74-293b-484c-baf0-9ca23b52eaf8"
        },
        "item": {
          "id": "53d8cf51-e1e6-4c67-8bf7-337491c37af9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c13bddb9-8d40-493b-95bd-4d681adba9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a82ca8-98a2-4ce0-976c-a999627a278c",
        "cursor": {
          "ref": "3ba71dad-7241-4ee6-80ca-0e8da0cfdc3e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "53db291c-bde2-4f54-b855-2b9b38871d54"
        },
        "item": {
          "id": "b2a82ca8-98a2-4ce0-976c-a999627a278c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6d3fbfed-dd5f-4446-bec2-7788efd0c077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad3673-bbfa-42a7-87db-7cb21937c855",
        "cursor": {
          "ref": "b9eb39eb-ae6f-4a5f-b159-5804c6a00eb1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5d2b7a0b-2ffa-4047-b2b2-4e8c3d0dc7a4"
        },
        "item": {
          "id": "99ad3673-bbfa-42a7-87db-7cb21937c855",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41fcd1e5-1799-4747-8c4c-34c435695f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ea551c-88a7-49a5-a0cb-12ab05ed6242",
        "cursor": {
          "ref": "06f46ce4-56a2-4f5f-8449-b6c373a61a26",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e50bc448-3bd5-4c88-8d86-3dfed0cc67d3"
        },
        "item": {
          "id": "f8ea551c-88a7-49a5-a0cb-12ab05ed6242",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ae14412-ff8e-49b0-9985-437fec2ea213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4f8b54-9134-4241-8f0e-df3e4cb3ac76",
        "cursor": {
          "ref": "a898bedd-ab54-4a2d-b79c-ddeef9e5ab6d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b13bd84-4bcd-4166-ad60-fca0138e62ad"
        },
        "item": {
          "id": "6f4f8b54-9134-4241-8f0e-df3e4cb3ac76",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e58577a3-4e37-4f56-a0fb-4a5e0a1d9143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff1078e-3766-4d46-879c-b3c027e21db9",
        "cursor": {
          "ref": "43100dce-539e-4d79-aa92-d0031a72f32e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3cec658c-9b71-4b51-b35d-b3722c85c2eb"
        },
        "item": {
          "id": "eff1078e-3766-4d46-879c-b3c027e21db9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ae3db88-c59e-49c4-90c7-b0362663183b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc1649c-27dc-4444-85ff-c604f4190b8f",
        "cursor": {
          "ref": "7fa133ce-f94f-45f6-bfbe-34a05d24a5bf",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aad2f374-6b9a-45f0-9696-8b65b4961371"
        },
        "item": {
          "id": "3dc1649c-27dc-4444-85ff-c604f4190b8f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b2628fbd-8493-4fe5-9c24-4e87a77c21cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bc6e10-ade8-4f65-b377-f8d575b2a0f0",
        "cursor": {
          "ref": "31635a38-df8c-4db2-a647-fd608bfcec52",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4046ff83-6075-4bbe-9f2c-15f5ab9f5fab"
        },
        "item": {
          "id": "d4bc6e10-ade8-4f65-b377-f8d575b2a0f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "113a235f-df26-4390-9d6d-b7235f855467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3057c912-c74e-4394-8a6e-c132c19b40e2",
        "cursor": {
          "ref": "295518e7-4dbf-450e-91f9-89db77ddf0a4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "93c0686b-7cad-4bbd-8599-79b78e2324b1"
        },
        "item": {
          "id": "3057c912-c74e-4394-8a6e-c132c19b40e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f2e3aacc-8953-4d59-b930-258dc25598aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1951743d-8d5e-47d2-8e76-547447350649",
        "cursor": {
          "ref": "d6386df3-836e-472e-8c03-eae9536d320a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a45dd309-a4db-4b52-a2f4-0f7199d9d49b"
        },
        "item": {
          "id": "1951743d-8d5e-47d2-8e76-547447350649",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8fd6aa2d-ce9b-4b12-8717-c0d543422743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874660b-b33d-493a-a4c6-bdf983f26139",
        "cursor": {
          "ref": "b14bd240-a3b8-4c2b-b24a-dd5a85ddd3ac",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ca88ddea-0102-458b-8ba9-fa2e33811925"
        },
        "item": {
          "id": "a874660b-b33d-493a-a4c6-bdf983f26139",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d193b964-1882-40b1-b20c-fd65db787218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34a0d5b-00f4-42f9-b8fd-3b6e2d78f5b0",
        "cursor": {
          "ref": "29ca1258-2fb1-4dd5-8ab8-6dff368c8f5b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6782fe6b-830c-4026-ab2b-927655c6ec96"
        },
        "item": {
          "id": "d34a0d5b-00f4-42f9-b8fd-3b6e2d78f5b0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "586b228a-c3ec-44bc-9b01-c84bd7210bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed89c55-4eb3-40c4-b2fa-fdf1c96ea026",
        "cursor": {
          "ref": "30df9bba-4a42-4090-9cf3-11907939861e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eecd732b-57d3-4627-aeac-2f3816f34dd9"
        },
        "item": {
          "id": "2ed89c55-4eb3-40c4-b2fa-fdf1c96ea026",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7bd6f595-6acb-432c-b364-e68ae75782c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7941017-e0df-4f05-b1f8-14439d7a36d6",
        "cursor": {
          "ref": "3d6f01df-3241-42cd-8477-771b37f47487",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a52f1eb-9a26-451f-a118-78a7f6f2b452"
        },
        "item": {
          "id": "f7941017-e0df-4f05-b1f8-14439d7a36d6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "695596c3-e114-496c-9b6d-5b0cb78407ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7406ad8-492c-4c4b-9b71-67952d2e3113",
        "cursor": {
          "ref": "eeae39b7-69ea-49ba-85cb-b50969f48e9d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b18880a7-06b0-44f0-a5af-d52d7d91ea2c"
        },
        "item": {
          "id": "d7406ad8-492c-4c4b-9b71-67952d2e3113",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2fbed5b4-2e8f-4131-97e5-a9319990915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a888ea6d-3511-4b2f-b79c-d041142d13b9",
        "cursor": {
          "ref": "cc6b991c-4f12-4615-8fd6-eb6e271b7785",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d19b03c9-92ea-455e-8cac-50be58aa0e4a"
        },
        "item": {
          "id": "a888ea6d-3511-4b2f-b79c-d041142d13b9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "34c26d85-16c3-4f10-b7f0-b05b4afb8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3c3fb1-9e5a-4f95-bdc7-57f1a8c93836",
        "cursor": {
          "ref": "7af2ecf8-1266-45d8-9ce6-99f002aa8fc6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "16b7b01a-6b36-4523-9a81-7368504fcef2"
        },
        "item": {
          "id": "aa3c3fb1-9e5a-4f95-bdc7-57f1a8c93836",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3b22c569-508c-4b89-a789-9aa03c597fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbc9cc6-89eb-4545-8461-f579a646ec0e",
        "cursor": {
          "ref": "1b856618-c13f-422d-8c98-54d3a43f0ffa",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "162e04ed-4e1f-4ffc-be8a-0bb5f07e5305"
        },
        "item": {
          "id": "bfbc9cc6-89eb-4545-8461-f579a646ec0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3ffe00e0-efa0-4979-9d7e-88931eb2ecf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5e74cc-4a21-4315-bd90-c3e6344cf544",
        "cursor": {
          "ref": "6693934c-f0ea-45c6-9d86-eb9bc4e091fc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "44850e3b-9a90-49e1-bbb8-229651d90645"
        },
        "item": {
          "id": "fc5e74cc-4a21-4315-bd90-c3e6344cf544",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "963ab253-70b9-4e62-8e63-b5afa52c9297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c7e239-1c84-47b3-8ed4-a481dd88cd80",
        "cursor": {
          "ref": "c78f94d7-11d8-4eac-8057-a9b27521682c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f9096c1-7515-4ff7-8caf-0b1d9596e173"
        },
        "item": {
          "id": "a8c7e239-1c84-47b3-8ed4-a481dd88cd80",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c4a3f320-8a98-428d-9214-691e3b8f4621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d54272-d1be-41cb-a2f1-d6c341a37e97",
        "cursor": {
          "ref": "87c3fd54-06d5-4603-811e-8f676a90f191",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "153e97db-7cec-4c7e-8078-5bc2879073e1"
        },
        "item": {
          "id": "d4d54272-d1be-41cb-a2f1-d6c341a37e97",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "80d54e0e-3dcc-4d2b-9d7a-ee76cb2e100e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139a4085-f60b-4c3f-b4f5-1e89f4636ee7",
        "cursor": {
          "ref": "2479bb0b-a281-4f3b-b193-1e87342aeda8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b967ce5e-e51b-4248-8bd2-b2deeb7a1aac"
        },
        "item": {
          "id": "139a4085-f60b-4c3f-b4f5-1e89f4636ee7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d13fd0b8-7188-40fc-8912-e3340bb17427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baadf65a-deb4-491a-8c87-f6f396098205",
        "cursor": {
          "ref": "e8838874-aaf3-4e1f-b5d7-265a74306944",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8a7a9f66-d3f8-455c-8390-b9c715808274"
        },
        "item": {
          "id": "baadf65a-deb4-491a-8c87-f6f396098205",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "217d2a7b-e41b-43a5-8c29-9fc32cda3948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ae59ec-7bc9-4652-b852-759fe384ceb2",
        "cursor": {
          "ref": "1da59f3c-a6f0-40e2-af74-3af4e974151d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3499c66b-43b9-4988-8bff-cabca0a3cfad"
        },
        "item": {
          "id": "f6ae59ec-7bc9-4652-b852-759fe384ceb2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9ec95eb8-8872-49d1-a019-cb40d738df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57679eb3-b468-45a6-a82d-8a655fca09b3",
        "cursor": {
          "ref": "1997bd1e-c27d-4f1b-841f-d676f2a10c80",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c2f7fd97-e0db-4539-90da-728689e270be"
        },
        "item": {
          "id": "57679eb3-b468-45a6-a82d-8a655fca09b3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8bfcf17-a158-4867-b3fb-5fcdee68e8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7710cd70-bf9f-47c2-a1a6-6fe5278214e1",
        "cursor": {
          "ref": "2c0b836f-6f0a-41b2-9a5b-fef2347ef466",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2f17d6e4-5a09-4c4b-9e55-0bf7925c1b61"
        },
        "item": {
          "id": "7710cd70-bf9f-47c2-a1a6-6fe5278214e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1293d2f3-d48e-44ec-ade6-45ef260caaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35fdd12-978a-491d-9c91-12f8c5692849",
        "cursor": {
          "ref": "4a5206fb-956d-4a5e-967b-fa134c4634cb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e87cf608-2bd1-4fd1-8f3f-798ac0fbde2f"
        },
        "item": {
          "id": "f35fdd12-978a-491d-9c91-12f8c5692849",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "643e9791-c65b-4ea7-9861-fa659ae24999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c956299-f075-41a2-9052-6ce982e115ce",
        "cursor": {
          "ref": "881c99ee-5690-4688-88f2-a715a1aaa69e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "48ca760d-54dd-4f3d-a7a9-feac4d5fb837"
        },
        "item": {
          "id": "8c956299-f075-41a2-9052-6ce982e115ce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ed9d0d26-c410-4acd-b4c5-30cff40b6cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db191875-c7c7-4458-97ad-e9735d18cb5e",
        "cursor": {
          "ref": "87250441-2dcb-4e14-8162-a730e019ee9f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4b2f6185-5c4e-47eb-9b01-537374e570fa"
        },
        "item": {
          "id": "db191875-c7c7-4458-97ad-e9735d18cb5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8d98265c-33d5-4f09-a9d0-231e0867c5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73041d2c-589d-4808-9367-4f36e887981e",
        "cursor": {
          "ref": "f4b29260-f809-4acf-90ec-c59cc6e4600f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1bc7634a-610c-4b0b-85cf-e656954dadb9"
        },
        "item": {
          "id": "73041d2c-589d-4808-9367-4f36e887981e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c603c73c-b734-4b09-ab2f-430cbff90a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d1c00-cd0a-40e2-b999-8d149b11ff60",
        "cursor": {
          "ref": "665b0ad1-c060-4ce1-90d8-a500c45b5f35",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cc13dfb8-e81f-4866-af50-3bb4c177ad1c"
        },
        "item": {
          "id": "d56d1c00-cd0a-40e2-b999-8d149b11ff60",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8d4e0d17-5ee7-4266-9fba-49e223b9d587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296f8ca0-7977-4f75-94b9-98cb3f3042b0",
        "cursor": {
          "ref": "0f8cd09e-a190-4cd4-91be-7b6dd7df8dae",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1d5166a7-edac-4a60-9316-9b9090d639e2"
        },
        "item": {
          "id": "296f8ca0-7977-4f75-94b9-98cb3f3042b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "34be60c2-4e86-4290-8bc5-18158e2adb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df10b4bf-f2e3-4332-b3b0-138f5de3c65f",
        "cursor": {
          "ref": "9c471de0-5309-4bb3-a4c4-8f7055bc8a53",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4d9c4ee5-6c04-47d1-ae54-699109c59880"
        },
        "item": {
          "id": "df10b4bf-f2e3-4332-b3b0-138f5de3c65f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "40b4529a-e54e-4580-b98b-4240dd59fc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0265173f-096a-40a4-af2c-8175aece5a9a",
        "cursor": {
          "ref": "f3025051-0524-4b2d-a637-317a943da900",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8a400fc7-e1c9-4bd1-b2bb-9476478abbe1"
        },
        "item": {
          "id": "0265173f-096a-40a4-af2c-8175aece5a9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba349971-f5f1-45c7-8116-2ea80868b570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20acee2a-3250-40a3-82fc-0785de3b2f75",
        "cursor": {
          "ref": "e04db2ae-5b3a-4177-a98b-6322e7cd3650",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0d3b0b07-d59f-4773-bf74-ac4efd645b15"
        },
        "item": {
          "id": "20acee2a-3250-40a3-82fc-0785de3b2f75",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7d476437-ed04-4e6f-a61a-69156c5276d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc335ea-a94a-44de-85c9-ccd813ee904a",
        "cursor": {
          "ref": "6a5c408a-319a-493c-8347-f94cc2624e0b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6661afe6-0205-4ae2-a7dd-06e5dc33b4d7"
        },
        "item": {
          "id": "bdc335ea-a94a-44de-85c9-ccd813ee904a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e9a0e97-f36f-4e97-9174-1037f8699e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d797c37-17a9-40a9-b3f4-ea046e75dc50",
        "cursor": {
          "ref": "7ba4451f-655a-46f6-9feb-ee698ea0cf71",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f2c1bab9-0b6a-491b-9eae-f9492d0e5c8a"
        },
        "item": {
          "id": "0d797c37-17a9-40a9-b3f4-ea046e75dc50",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "88a8c2e0-448b-4161-b47e-b12ae1a9fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cbcbfc-f4e2-459c-ae55-0aa326baf5ad",
        "cursor": {
          "ref": "aab408e9-5005-4f55-b5ec-207f1392c061",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "12bf40cb-9e4f-47d8-9cf0-95d106049457"
        },
        "item": {
          "id": "64cbcbfc-f4e2-459c-ae55-0aa326baf5ad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "80a63d22-070a-4c74-b72e-0702ec2542c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f3f03c-9a04-471a-8a3b-6cc8c4c9b2a9",
        "cursor": {
          "ref": "8f315d36-c869-422c-a5b7-df9596311f63",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a7e3bece-94ca-46c8-b28e-59326f0d332e"
        },
        "item": {
          "id": "30f3f03c-9a04-471a-8a3b-6cc8c4c9b2a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "521152e5-bbc7-4529-862e-36009fe96950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a6eca-998e-4fab-bd74-6df5c085b1ea",
        "cursor": {
          "ref": "c3c5073c-91e8-47fc-8551-14b0d0f1f7aa",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0fbdba0d-1f34-491c-b8eb-8698f6882d68"
        },
        "item": {
          "id": "8e1a6eca-998e-4fab-bd74-6df5c085b1ea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b718b626-1f80-42fe-8774-7609a423ddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c639991-2da9-4255-b2b9-4a4000146e48",
        "cursor": {
          "ref": "8833e2c4-6e66-48a9-8ace-a38ac926a321",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1bc6b42a-f5fe-4992-a966-1e97d20c0297"
        },
        "item": {
          "id": "5c639991-2da9-4255-b2b9-4a4000146e48",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "745e7e05-f773-43a9-a461-52e9be5a590d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66f69f4-1e54-4d0d-8814-4e16aac66318",
        "cursor": {
          "ref": "d796ea76-f586-47d3-8791-d3f8f9805abb",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "885f855b-dbb8-4010-957a-15ddd51188c9"
        },
        "item": {
          "id": "a66f69f4-1e54-4d0d-8814-4e16aac66318",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "28caaa53-f14b-4e46-b0ae-9d0427a71b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e28cfe-fdaa-4a32-93e6-9c8d2ab54405",
        "cursor": {
          "ref": "07b8edb2-a18d-42a2-9ce7-f95bc51d0c41",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "de5a0193-6ad2-4405-9322-212915776520"
        },
        "item": {
          "id": "b1e28cfe-fdaa-4a32-93e6-9c8d2ab54405",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e275b192-a921-4a9c-9b20-2c0c829347f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcbfb24-7a3b-45c6-8526-6b14cd10dace",
        "cursor": {
          "ref": "cdf0c4d1-85a2-4f22-8c2f-044782a3c142",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "80bc901c-4fd8-43e3-9bd5-1c853803c5f4"
        },
        "item": {
          "id": "7bcbfb24-7a3b-45c6-8526-6b14cd10dace",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "730ee3e8-503f-4c21-bf8a-d0a3dd4c3c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be459d94-c801-4511-8d18-78f974bf28e8",
        "cursor": {
          "ref": "9a01a93b-bfcb-43cd-b0a6-6b93a9b70c71",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d077d86f-de43-46dd-b45b-7d314a9cef0c"
        },
        "item": {
          "id": "be459d94-c801-4511-8d18-78f974bf28e8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5aa2c45c-bb6f-4bf1-8fb3-1543597f0fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdaeafd-d121-423a-b70e-e4f50843c525",
        "cursor": {
          "ref": "9c9e9b02-80cb-49d8-be50-0306d19f79df",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "aeddfd30-1ced-4b20-83d8-fcf15dbdbe93"
        },
        "item": {
          "id": "7bdaeafd-d121-423a-b70e-e4f50843c525",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "acf9d0c3-1d7d-4033-a6bb-4f9341a43c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919fbf57-8037-4918-a0ee-8dae28804cbd",
        "cursor": {
          "ref": "595e2030-92e5-45bb-ae90-639de22820cf",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2d34bc41-66a8-4f2f-bde2-1e357088230c"
        },
        "item": {
          "id": "919fbf57-8037-4918-a0ee-8dae28804cbd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "125ad6ff-ec29-4cfe-ab10-4a48e2642f10",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d01eb0-3a77-4032-8ee4-275103119842",
        "cursor": {
          "ref": "4dbf9a07-983f-4253-b20b-7496152df3c1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "01b6be4d-4dcb-4a26-b923-5bb720d8438f"
        },
        "item": {
          "id": "42d01eb0-3a77-4032-8ee4-275103119842",
          "name": "credentials_verify"
        },
        "response": {
          "id": "de5d0077-b4d7-40db-81d8-316fb962ad99",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ce9b52-95c5-4177-8154-1559c9f0a21b",
        "cursor": {
          "ref": "d595f472-ac68-43ab-9480-9baa2640948d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "270b1fb4-116f-41e9-a7b6-9efe01795dfa"
        },
        "item": {
          "id": "a9ce9b52-95c5-4177-8154-1559c9f0a21b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d55cf7cb-0bff-441b-949f-c6d3cda88674",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f118f17-b7a0-483a-ad63-6599d3a6d811",
        "cursor": {
          "ref": "0993cbaa-58a5-4d61-a33c-8f2dda6703a0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5799ea23-9389-4635-ab55-02dbe48b2d4d"
        },
        "item": {
          "id": "0f118f17-b7a0-483a-ad63-6599d3a6d811",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d84760c-f257-47c5-ae3c-165313edebda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f118f17-b7a0-483a-ad63-6599d3a6d811",
        "cursor": {
          "ref": "0993cbaa-58a5-4d61-a33c-8f2dda6703a0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5799ea23-9389-4635-ab55-02dbe48b2d4d"
        },
        "item": {
          "id": "0f118f17-b7a0-483a-ad63-6599d3a6d811",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d84760c-f257-47c5-ae3c-165313edebda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad649bac-f597-40e2-af77-10dee0075102",
        "cursor": {
          "ref": "5cfc45ed-994b-4ef1-b84d-3a978a0c2f02",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "83fed211-b3d0-4326-bbe9-bfeb3ce4a5f5"
        },
        "item": {
          "id": "ad649bac-f597-40e2-af77-10dee0075102",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f5227e7e-e245-4ec1-ae2d-f8e9f654c405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bc1079-ed70-4578-8657-36a27af85c58",
        "cursor": {
          "ref": "b1de559d-6716-4e0f-bb11-4417924c361f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e5071b3a-0c0b-41f6-b98c-52b3ad7590f7"
        },
        "item": {
          "id": "23bc1079-ed70-4578-8657-36a27af85c58",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "48d8a4eb-23e2-4ec0-b753-ce7269556774",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}