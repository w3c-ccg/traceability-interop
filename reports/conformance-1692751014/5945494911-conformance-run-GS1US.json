{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8b561e4d-a0d5-425c-8ce2-ddad695ea80a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bac5ec19-7103-4d70-b776-092f5fea027f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14f1e82a-3d60-4108-ad0a-85bd79bc925d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25a91130-feaa-40ee-aaf6-da3e684341e4"
                }
              }
            ]
          },
          {
            "id": "d8a1cbf4-b8d4-4b2a-9616-b161901115a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f8a53e5-b79b-4784-816a-bbef6b026a79",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0352900-124a-490d-bf1c-cb1ae9d6cbef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2391e253-ff47-449b-9e43-81a86ff05e79",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c83ce95-2435-44f5-b880-da3d92e8667a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2db916a4-52f7-481c-bd79-2c7a696737e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe4ec3de-33f6-4d1a-9600-31928ffd1ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76244224-3684-4460-a30b-3e1d3dc3694e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d08369b-f6d6-4747-8567-60082bd48907",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca87f119-3190-4168-b5d0-9f6ff5724538"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73bbc7b7-4a6c-4c0e-9e1a-31fd152b665a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcfbd116-ae26-4498-8752-17b5a01e6917"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e740dc97-05ff-454e-9597-40a48f2fce94",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "086e0beb-13ec-41f8-8de6-717e6f0f8f71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6c2fc2d-bee4-4b29-9feb-fb0020115ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6d36428-e6c5-4c97-b43c-688596879372"
            }
          }
        ]
      },
      {
        "id": "17853eba-40ad-4407-8eb4-820b732610e6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "17a635e3-7db7-419a-bf53-c200854a210a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1719f8f3-2182-4f48-9fc1-5171d87afb0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "299dae45-c800-4f9d-ba2b-ce7213e39d2f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948dac3d-f6e6-42e4-9567-488488320477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c4d07be-6f3d-4889-88a8-f1ae8f521429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11d40ca-4e72-48c0-957d-2c013ecdeb3d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a948c-d4f1-4a80-949e-6e84a0e100e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "183b867c-5cbb-4a56-8985-174ee8979647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a637ee-a707-4522-8583-5f6c7e908d28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e223d-9de9-4058-9cd3-fa4d6afefb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4a930f6-6198-4d69-bb70-a7d3117e7a57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de6fe38a-1dff-4a6a-b71a-1e91f3d6ce0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df6811d3-eeb7-4b18-856b-1a449921301d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465367d9-6b57-4aed-923d-f2970eab2c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e73a336-ba07-4932-b560-5f1517a40dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8774df7b-8bb8-431f-a5e3-cc3d9d5e6e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8825a2f6-b55d-4ed0-be5a-1aec7bb6d6b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5815efcf-d94f-4fc8-bb3a-8188b9240b12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad04d455-dde9-4ada-bdb5-2bb7fbb39e35",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d29867c5-aae9-449d-92bf-20498b6b4597",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8ca8dc6d-86ce-4f50-a534-0be3450235cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21aa44f2-455a-4274-b627-42f2d355760b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "75608190-c3e8-40dd-bbb2-8591ebcbd32e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a6b7c76-7c45-4558-9f4f-027b168c1752",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac5fc5dd-24fe-4a6f-a534-19ceebb2f8a1"
            }
          }
        ]
      },
      {
        "id": "401241ef-641f-4e7a-93c9-2e0904e0b973",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f9172a12-b2af-43ed-b944-c17860f64884",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e694433e-b52b-40e7-adc4-1f939562b8d5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "868b4741-b103-40c4-816d-5c474beea589",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022a2de-949f-4a7c-9bd8-f1f2ff708dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916ec592-b3e2-468d-80fb-0c4ea51c8a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3976bfff-45f2-4f2a-a8e2-f81011a5a638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62b095c7-66a3-4019-b6b4-af3de99bd32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3e5af-4a61-48b3-abdb-46012368fcd9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed6b301-1688-457d-84cc-ca60ac5a4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff61a8ff-bb3e-4967-8088-e2c32c017327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79233af5-6d05-4998-9a0a-876a2ea0b68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f247a8ef-776e-4dba-b1db-2beef84bcfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db79cfb-6df7-4d66-b879-dbbc1bc76d57",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b55d7ae-5100-4fbc-944b-3581b269e2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0d99a2-89d4-4b6c-bd18-ec53465d7d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb043bc-8d2c-4783-b2de-8bfee5ab43bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c8df081-3eab-4278-a43c-8b90da4ac3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0610cc-5ff4-48a2-a5e7-e76a561fa81c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf78a0-6c7d-4ff9-ba5d-cd67139aaf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28488ef3-75b1-4339-9ca1-9ef0cfaa1e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dd4a06-ff8d-4626-9fbd-4d70c0f7520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a1ac962-9809-4986-a1eb-de27c74c3de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0082957b-7ad4-454e-8dcf-ee1fc1066569",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315c7024-7d6b-43c2-985a-c03aeb2c2c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb76cbba-c4e2-4cb1-9e4b-1db66cb18725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1ffbe3-a7f5-47f2-888c-4f6861d44efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e37f9f5f-8a6c-4e31-8bde-fdfa2f51865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d81bfe-4b31-44ca-952f-c1998a42571c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fa6e6a-8d57-4c10-8e69-6ac3f408963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116937e0-bcf2-4e3d-978f-2f0554736f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1262ae-d1ef-4314-bf60-a82c5a38aa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3e8a7ae-f71f-4141-b5f1-34f53a018e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6403993-fff7-4dc4-a83c-f085d91f6370",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4bfda5-db9b-45ab-b7c5-901ec59d85de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14e589e-7b7f-4030-ae8f-b97f317498ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3541bad-5032-4ade-b119-162130ac4df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc54dc01-564d-4e82-8641-56db22638a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b06bd-5bc7-422f-b667-48beab1f7993",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42cf83f-d31f-4444-96fd-9a58f70f275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db96dc7-9275-4a5d-a759-f255939cac77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023f1fad-02a9-41b2-bf50-f425ec7b8655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87dbfd8a-6af6-4641-8c92-5c709b7d603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91430c8-c897-4a9c-aa2d-8b2527e9d5f2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b3b81a-d12a-4adb-bc20-6880b775073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8baac107-cea5-41c2-9990-80d2e76f60b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027bc9aa-503c-494b-aa4b-5dc2fd582f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa19781-3fc5-4d1d-91de-81c60640c03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6da582-bcd4-49f6-b444-143d4cee3db9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22f6f2f-3b08-4397-be8f-042ae67ff31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb2f5d2-3dec-417a-b3e1-04247a295008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9006f6-4177-4673-9f64-c6c67791d708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0081f490-b1e9-4983-be63-032911b75aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57243466-8fcb-4fcc-a5bc-7a8d16fa9a0e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cedbda1-1f79-43fa-af5b-554feadea924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd6ddf6-d0fb-43d7-8bce-74cace3b645e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02c61e1-4db6-4843-b42c-7ff6ea083b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16fe371c-0d5a-4717-89d6-1e1fd0f7d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891a4837-3e67-43d7-8b18-cac65584d386",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac567c73-a01a-4abe-8200-35ba0bddbe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d23b060-6500-4af4-bf70-1f60703ddc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885340af-ae3a-4173-8c2f-1bd1466297db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ed17948-ddcd-4694-bfc7-9c57397cf73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5ae913-a07c-479d-a617-b5a335ab216c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431a8a7b-7006-4761-87aa-65d1fdb74eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8101402-3f3a-478a-8f3c-e725f6cb64c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b4b714-234e-45d1-a936-f94a44ac66e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed21a09-2661-4859-b4fa-760104c642eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527eb36b-c3dd-4ec6-acee-67fea74a0116",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc17812-3fd2-4371-a1d2-d634d3d8029f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a3cd50-4428-44cc-aee5-ead46696ea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26755765-832c-42fa-a9ef-7163b86de767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27f3967c-7523-4cf2-b899-32f05986bd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a2a66f-ae57-4624-a78c-64411a120647",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25953929-047f-40f6-8407-16d064cecb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fe64cd-14c0-4d4a-b38b-ccd1e28438fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637751f6-9605-4498-bfb2-7c2d282fc3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe5624f-ab9d-4daa-a265-c5b241c36189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4521db-9978-4cde-9e65-28af611f4df2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8daecc-004f-4a88-a00f-2ceba2571064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c69b9af-1840-42b5-8ac7-f943c7b441fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03131f9b-2eb6-4498-966c-3539c8b2e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc02b5c-6e83-4234-9bbf-6f817bbc18e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f7801b-11a8-4581-b9d1-c2056ae8a882",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9021c494-5fb6-4e5d-b50a-62954a80f6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97384a2a-8b2e-41b0-8660-4e2b4b78878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780a6f77-5245-425b-8b25-b977e67690e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6285cd6a-f599-466f-a243-b1b75f6adf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3e2a75-b61e-4127-8df4-aef6831758fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6285230a-d3c5-40f7-9abf-bacbcbc4d458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c2f1b0-c370-414e-95ff-763e883bdf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0123012e-fba4-4a63-9829-c6d1dbd3e686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c843fc7b-e1ed-42ca-83cd-047720da6a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60d9901-fa15-4117-9a80-00a9a0619cfa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b749e79-d744-4ce7-afb3-25f31ef09c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54647d4c-374e-42b4-bbdc-fbf20a3c326e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2cb9cb-eb4c-4d88-8514-03ddb7616b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f2aa14-52d9-46ed-99fb-8e286ce5187b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc563cfb-45b3-4176-8263-203a62999bda",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d53ba9-cc37-42f8-91ee-a404c2631845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7f8501-15bc-47df-ba9c-229df215c9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282d02c0-717c-4435-8691-28bc03783494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fad505d-90ad-4312-b095-0c2b619935a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd490d2-90f0-4cc0-bb9a-44569d802406",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a18e42-f192-4119-b903-786d5cd33bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf8213b-51f5-4a8e-83d2-ffb2dd7d9c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5df9ff-ce62-427d-be2a-1d631a9f0130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "984d44a2-a2b0-447f-8b31-5de94efd657f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3b7a0d-7b60-4c33-9bf7-26f6057b66d2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedae8c8-2477-4034-b495-56c8d824295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193a60de-e353-4fa9-9da7-0f40f83e0ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eac801-d2de-453e-a74a-96eb304193c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f56da265-92cf-451f-954b-c7f91e02caa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b1562d-074a-46ff-9a04-dd5e170b8c99",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad14bd-79fb-413f-88bb-a2ab91b441ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb7808f-3c28-4418-9ac0-42c28288573c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a423bc-4ec1-4ab9-a283-d469b7d4eecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47ab47e5-8673-4d52-9081-a431fee45d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6546dc9e-26ea-4147-a348-e78c2c0af322",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645cbb97-660b-4a14-86f9-d7a0f31a1f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbc5b49-3b60-4b3b-859e-77d237d87c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e27911-1eea-49b0-8834-8023a16a314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e89ddb-6f9e-40e2-be06-cd33a49bac0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88921fd3-f5a5-4e85-b8f8-1c87efb7989e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0376c794-a236-40ff-984a-ab984739132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d9fc45-c152-411a-8ef9-9083ef6b9919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a874c-7b57-476a-bb4b-894bab3dbe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f646ea98-1f5c-4f12-9c08-9a5e8a67f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224662fe-a0f9-4687-8e52-96bd0bbec178",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b1e651-053f-46e5-8158-51d6340f5766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1890fe95-61d8-4637-9559-ec6be7d9b2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af5a810-27c2-4565-b1f7-59e9901249ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a812ae7-d74e-4a3b-b6b3-af9bdff2788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab710478-6f8a-46f3-a36f-80bfc86c02fd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca68b94-d4a1-4994-8ea1-70fa1afe0de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd25c8d0-0516-47d5-9193-378af00fa7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a34dd21-4f48-455b-bf69-d29361bcb123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eec6244-4b88-4df4-ba51-cddafff431f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6861caf8-abe4-45fb-a55f-27d1634a4451",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726d7ffe-8e31-4b83-8d52-75984e2ce224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd0d362-e73c-42f6-bcc6-3faacdc177a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73ecc26-fd36-4446-a6cf-5be0a890bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88cec133-310f-4f88-a366-0148d535d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045eae6e-4675-45ea-ad97-6692a44486ca",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cf85ff-2a50-4cdb-ae5d-b54ff678400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24bfd27-f510-41bf-9f7e-47dda4a888d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72481d-7241-4d22-9cfb-204435fd858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e6c3f2-b3c8-4a4c-a4d1-1949971b7011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8bb183-3869-4134-b769-a0b30fb60c61",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f6c103-77af-4c91-a9ab-b6e45f0432ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6956f321-95bb-4ef2-be7a-a0ae03f70c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cc820d-86fc-446d-872a-a7065df40aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df82d15a-ae46-403a-b80b-98da8ea2a96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a9a14a-9b4e-43f5-9a5d-113a8df02dd2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d03d94a-8b65-4b57-b228-824e9e4c7559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dde18e0-8140-4fff-8baa-143968cc0f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8c3753-3ca8-4c0c-8352-336d1dcb4bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "307aa31c-69c6-46ab-aa36-bc26e3259907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05af9b6-ed83-47d9-8613-b49fe4a5e5fa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3a1183-064d-47ac-b4c6-8fc01535fb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595f2eb4-12a7-45aa-9ab3-604d7320545a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011d75f-572a-40b0-bab5-0b7e802f2a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "833d2215-6db7-4e87-b5e8-453dd1a92566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58616d15-c4cb-46eb-8e55-f205aefe30a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d843674-d61e-489d-b561-d40d5f38d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c85a02-6ae2-4138-9f83-35690ecc5269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b83836-8f41-4b6c-b7d1-4864272f6c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "350fb370-fabf-46b5-85f7-a30ab07eb610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b59f549-92e6-435f-917b-9dd72ee0c78d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a8590-3488-4f31-ac81-8c27a993079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3c0b7a-eaa8-45d2-b33f-0734d59e11e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9f4dce-978e-4587-899c-1b1fab1ec3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5116be25-1665-410e-9e03-e922c7e9e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39084fe-3fa4-469f-83da-96784ff1ac9e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6223895b-ac67-4cd8-8d69-b1cf09526a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99855ce-218b-4a7b-a961-be95ccbf0b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19a5a5-ba1b-4409-8dd9-e9e89fffec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c55cd3-a52f-4eda-971a-c1ac540738ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9e3b18-301c-4bf2-98eb-151b9ea68579",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d6e32-a941-48f6-9d91-e6938468514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8e6bfd6-7ee7-4966-be00-9b864567b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb4092f-c300-456a-909d-133949b2f2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffaa1048-251d-4a0c-8a7e-85343e258f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba97f8a-e02c-4ec5-88d6-090cd7d91d69",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f329ea3e-dec7-412b-ba6f-a6e1fbc53f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f806d406-4fa8-4233-a924-fb0d312db207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7448185-4f65-45d6-8e0e-8b73e6224512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3f5216-8696-4f01-b09e-aad3341fe99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dc6df5-dba3-465f-920c-615c22ac29d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792cf5ad-9988-4944-bded-3ab1911951e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5bf0aa-9341-46e9-bed2-f22c9b73124c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd880a4-d5f8-4ed1-8fed-60dd91a1b819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad5d8a-135a-401c-b8cb-8aac774a37b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7098e68-9f92-434e-8fcc-a0cb6c2d4470",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e3ab5d-d734-415e-a402-6a7016713091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4225806f-d0b5-4a6e-8a0a-019fe8b1b328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420f7af0-0817-4945-b69e-7f986fd4f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "363a6b2f-616b-4cc8-a6a3-639625c7abc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e245d-3bb5-4f5a-b4dc-155d8813423b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc6ecf7-6a95-4019-b588-bca4cdb18ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf46588-7433-4ab0-beaa-c66cd7403e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bed005-c272-4be1-86cd-225f8774a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f623de5-ebc6-47f8-aca3-f213320013a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c64a33-33f4-4ec6-94d2-08c12c352a9e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c947c12b-f4bc-483e-b379-a8f22271ad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054971f2-5f68-4ec6-b573-00d4b5e58741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ff7a92-a512-4b5e-b8b9-e11f7fd8bdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af744368-09fb-4bd8-9e3a-9bbbbcbd5fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a77c21-b04a-4c75-904f-7b729a88f9fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f9ad08-6846-4dfc-8d0a-b07552192e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93363df-464b-402b-a155-3bc7767a2de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75ac1a3-2056-4d33-ba22-152e9a1c1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d9d49-5292-41a7-8354-79979835c2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d648a1b2-0f07-467a-a299-5d4fcbd6071c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be05d57a-b426-4035-af20-99db0eb8519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5411ec-95da-4567-9d40-18dd3f55bafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4abb271-0a9b-4d6f-9c1b-c9aa34c9b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2c178c-c3b0-412f-ba75-7e4b67972a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4d3b0a-c199-4b2f-9427-c93914e98c1a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3dad0-27af-4533-88ef-068d3ee8504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb804691-4cf3-4087-aad8-7128a54ed38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc6d94-ea0c-4a1d-83a3-697cc3b7707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55c4ea1-56b7-4e91-bfb2-213146298453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee60f8be-738a-4a99-a4ff-fcad96da66c1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0209faa4-e226-480b-9777-282917e53d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcc7513-c5ea-4846-964d-4a24b3dd709d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67472ca2-f0f0-4faa-8d43-86a626848885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5caffd-5d85-44c0-93fd-896f199e75d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa96295b-657d-4bd1-b6f9-d99a9780e79e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8139d516-edf9-49b8-9922-7d91279ad4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659b34b6-c470-44d2-88a7-abdf0a3dd0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7b95c8-7c6b-4693-a86b-e276b6c4a130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac35fa5-3edd-4fec-9d01-36bdbea6c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7629be9-10e4-41ca-968e-76d71fdaca2c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb566eb-c766-401e-8d6b-0b88e14a5982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65736d77-e1f2-4076-8cb9-2993172cfb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade9f56e-4777-42fa-a00b-a0fd9f448772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bef08b-e362-41c1-bb6f-bc613e384254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dda2df-2165-49a9-8e0f-a43283a2730b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94318475-467e-4dab-b5ce-a77a69bf7e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b115c7a-7a9a-439e-b561-44d7fce1ee2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd49f82-65d2-4eaa-97b9-61d6745cea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25e01b3-23a7-4703-8feb-b059a97f1468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f20600-6efb-4bf6-980d-6e1eb6e8b400",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0cc4c1-8e7f-4538-882f-97b9f6ad40e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd54724e-3012-4fef-8a10-8b9a2c5afd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431a684e-6ce0-4aca-9d47-57dc6cd93f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "400fdf67-40e0-4c03-91bf-5c5db818bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d04830-c701-4f14-b5fb-c2da37ac851e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3864f6c6-4e00-46a4-9544-dd9f076e2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a571fcb-88c0-4b2e-ad8c-d6d050ea6c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5117d5-8598-459a-a868-edfeb9190822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb56ca22-9431-4e58-902b-0cdd18ee92db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9009131-4f3c-458e-ba98-118842ec6f60",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624555f7-c661-40cb-b9eb-65f312e45653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6800e5a5-11d7-415c-a235-a3fab8ab4b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34355d21-bd35-48e1-99fb-a6047c9c5f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c953c0-7eb0-4608-9de7-29162ac60759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456cd445-b378-4ebe-a71b-ee088eeb6867",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d8310-fd0b-4cd3-a6eb-6118a2115dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8510077-c594-4a44-bd26-ca5ceae49b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423c18d9-9774-482c-9846-9054ef72d587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1d329f-3d03-41fb-adbd-7241ee5f4140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7076c2-aec9-428f-8f0c-0b5672b58bf1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ee3d60-31ca-4bb4-8008-51ee7ce9821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17801c70-25e9-45b3-9bac-74d4ec5e2273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b97ca2-1fc3-4f9e-880a-d5b50e0b03cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d884354-f1e0-4208-a651-be2a1d7b26a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cadb4db-cfa7-4d90-85c3-9b39e1ba861a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853e6807-d9aa-49b6-9e26-dd734c3cd31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1ef7a6-20ea-4585-bba5-0ebe02abf8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d4e41b-2734-4708-9cd2-91f378565ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8d953e-98aa-409a-b4ec-3699335721b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e58607-7f19-4522-ae6b-ae6192be52ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44d747-c04f-4708-982e-b98725fbb643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec22156-a072-4520-ab20-a6e9aa8cb92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4368e472-c38c-4393-8271-ac5e9e423897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "803a4da4-4593-428d-b9c3-6e188a0909f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136fbc3c-f5e2-4aae-aa56-f8a2c7d90e8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef359f82-efd6-4878-a436-b611c35dc3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ccddf-3268-41e9-8772-2ac9f0af629b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db352d3-e187-446b-8ada-a2c67d2aaba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36c9ae5e-d99a-49b8-8837-c40de4c4077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329d068a-d3bc-42da-8ca7-4d59de0cd235",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee303bd4-31af-4685-b9db-283f68665747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82360e6c-f435-4809-a898-8527786bfad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ee3ac1-310f-4b0d-85f6-65fdbd543a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fabb37b-fd4c-4e1b-b9bf-7edef47ba37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a5406c-f854-4c62-8eea-2fe0685cdd65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade96201-da3f-48af-a5a7-d6433ca9306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f988bc-74fc-4ab5-b7d7-245c9a22af31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad605d9d-3063-4d12-9e41-95e3eea625a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbf99fc-1475-4ffa-97c2-b0b43988d4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbecbfd1-19b9-457b-b5dc-cbeda4efaef8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0f310c-26a4-4390-8ea7-5116c2c0259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7f614c-b593-457d-95ac-6b9ffa4d9e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4289e596-e9e6-4657-b383-888fde78c1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "caef18f3-ea82-4b94-b7ae-2dd4277f2938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a7c3fa-0c6e-4a8f-945e-779ca13657df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ada2284-1909-44e5-bf59-506f7463570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab2837a-6576-4a0e-b4c6-2e9c0ba5b865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76aa677-f8c2-4a68-949c-4258f97344a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe31652-92b8-445c-9a2b-89be8def3e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5cd0e6-bf93-4c4b-adb9-2ec8ec11ffe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6e61d6-2ab9-4db8-ba64-c11f2a082850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35464497-ff13-4ba8-ad55-230fcda69260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ece3e8-9fa4-456d-ba93-b0a668bdd568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43f9d2ec-ed82-4e32-b795-28c7937e6773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b30420-0568-4d33-b0d8-07ce8dc51a4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee702ad-f8c8-47e2-a347-d6ffe10ad80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d0f16d-864b-4f52-8c43-cfc8f4ebc8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12116ed4-1c0a-4982-8116-b33dc0d58707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c87c8f-4358-46c0-84ba-73956889a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50a518a-05c1-43a4-9566-e9bd66c93e9b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8ab93c-2220-4d67-ae9c-e45fe156e782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efbeb09-0cf7-4135-b552-bab117634f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bfd512-23c2-455e-8869-06bb34ab5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97df6c9d-9eb4-45f1-9a37-f8cc71ce90aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea6f0c-02e4-4b5c-8398-8538b678bd79",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6759d36-115d-4b59-8c48-31ab8d374673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ec24ac-7ce4-4089-893c-8cbb59c85405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82240bf0-3792-4a55-9efa-75e3f1c8fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb63a06-a0f8-4791-85a4-958ab769cc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18489ebc-e039-4a3f-9696-9b824edb4ba0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c25430-b20b-48fa-996d-548be5b07765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd27c44e-2243-4950-ac68-5a3cbeacde11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e627e4-0eba-4379-96a6-0a260bf16da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1199b325-8e18-4dce-b537-fba84c80b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9893e55-2b02-427b-8722-130895233e02",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c7cd13-6773-47cb-9283-b539b2613d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5f95bd-a575-48bc-ab4a-91f03d43c314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4955a5fd-2222-4c01-bd73-e9513a04ff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "054df289-69a4-40b8-9256-79994081c3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a7ea11-be85-47a0-866b-104641fee27d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2250efd-66ac-4880-a416-60dfb6868bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f910af62-b1bb-490d-9b10-3d272214f81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57991ba-5bc6-4149-a092-aafb7c73a168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97e15a42-47ff-4904-a039-dd39cae11567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e3b698-e179-4c29-b855-6dd1b7e4e1ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272a904-f57d-4264-a805-24b36244e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af272649-dec9-42cc-ae76-8d2feecc5962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3a1642-273e-473f-ba88-fc8abd878887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c623f1-fecf-40ff-8219-e0a8070a1eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d714b4d-e497-457c-9b8c-7960857cf28a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa624a-4d65-443e-beff-ec57fff629ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cdc995-c4c1-481d-a9fa-0a5dce11da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d63d281-dcfb-4c87-9697-fc88eaec4ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e027a66-e647-419e-b6eb-be2767e25c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d9779c-3e35-4a4c-9985-88951ee8759e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8878707f-dd1c-4b2f-8409-1a37b2b9361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3a17c0-4eaa-4676-8ca0-94fdd33faa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27837e82-a90e-443d-ae04-7548bb2aa3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b4895b-b68a-4b57-a24e-3f0603ad5180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcec057-168b-4c24-87ad-e3efd34b9728",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d5fc6a-27c8-42c7-a843-d6cab0d35fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da91d994-a5b8-4578-ac8d-7642c746c680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0aaefc-9370-4b24-a6c0-801ca2f82ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aae927-ad71-4d97-ae08-7f8afc15b45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdb35f5-4862-4e61-9ebe-59346d6c8094",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b66921-79fd-4535-9c49-e8f6ea6f24af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092a717e-a1bc-4a19-9a22-35445483571e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6557ba03-ae2e-4af9-88c3-0670048501bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b989f04-2762-45ff-8c08-ff0054055e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e3d0be-c638-4028-a70e-f6e92f2e9446",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d9251-4e1e-427e-aa7c-9e8523ca82b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9595f97-ac9a-4e93-97a7-7d7b3fbcef10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5964766-09a2-4b8c-af66-f5b5b8ae53ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "701ca936-376e-4673-8b74-199b68887842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a3fc4c-28d8-435a-adbc-89d446952c88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ae8687-d8e5-4c33-99f3-92d1171e9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb545c3-c21c-415b-96fd-7ae6f4ea31f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16890026-0927-4eb1-9c99-49f08f3d386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93889cae-7217-4aeb-bcb5-ae3d7415e980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cefe23-1f99-4f45-b4c4-365b086cc1a2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d47eef8-5d17-4d16-b08a-5a64e3adfab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3f9ead-b75e-4579-8087-e28e3ff34edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279298d4-ce5f-4945-aa80-94ec55a2ccae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff1d905-ec13-45c2-9858-5a5c7b5ce269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceeb070-58cf-41f2-978a-a4541ed133e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e57f2d-4f23-4793-825c-248c8bd54610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e39bfec-6b1d-4739-ada3-e81e39875526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd697d92-7971-448f-bbce-46a0906f430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e1cf5f-ce12-4c86-80d8-001b20a43af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab1cdfe-466d-4522-9d4a-e18b2a9ad691",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7834cd-4698-4025-9572-83b8836fa366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8d55b4-cf22-44a0-91f0-5d4534a77fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b8f5b0-a998-434b-9d5e-c83e28d6fefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afa3d62-3b59-4016-98cd-3faf8db0358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7048d2b3-3292-457e-abc8-970b2ff1f8c7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67290237-339f-4a7b-b3a7-d362f816a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a3e219-860a-447d-83ae-47788f98babc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854b6c6a-13a6-41e2-b97b-bf9dd2512fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9193fd-eb16-4a7c-8113-4fc84e3e5159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5475e9-c5f4-4393-af26-9f97f9c96e4e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2c7855-0a17-4f10-86de-eb3efdd8cbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458c5497-cf77-4832-993a-d48438ed0e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e56b020-eac6-4a1a-b651-215d1e6a54fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "300144c5-5e88-4062-b57f-6400152d0ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8d4066-3e1e-4eeb-bfba-20806ea706df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab8c08-d619-4e82-9f13-65e9526248ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3557b4ba-dcca-4dee-9de4-18196664fee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8ac823-dbec-45b9-89b2-8befcc445d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91999ce6-65c8-4f6e-a01a-e5f3e9c23e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47110818-eafb-4538-86b9-683bdc29e687",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463f80e8-2878-4250-a747-42c435de058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2a4802-fab2-490a-8307-53ee46be1d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c75eb-26d1-4467-9a6e-4d03f10995ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "903b1b27-396a-4e57-8426-c5ce14e64d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffbd4b9-622e-4ba0-bc54-fd1663349036",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98beb9e-a4a1-4484-825a-39aab20ca2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d6df5d-07d2-45bb-821c-b75d5c20f228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e174786-d997-4b17-b6c1-e44998529a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ad798a-872e-4e62-ab9c-e04485713de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c3043c-7f9b-495b-b58d-2ccb9d2e6c5b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b7c1d5-b783-4a59-a855-90384f38d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3d2707-d25c-4963-b878-61fbf40c9cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c92227f-d0c0-4466-a6a5-9581202d265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f05c3a-2d64-407c-8625-baaebdcc6787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399e0a6f-89fd-40df-b585-48fb4c636c24",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f670d-4fd2-454a-866f-684cf196d65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581eea01-63dd-4d2c-959c-32e9185db42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4033e4f1-97ef-45b9-bc98-c1c07ffcdf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c8f4c5-33ed-4fcc-8ed2-fd89bd4b610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb450f72-3fb2-4e94-ae2b-5f8ae2a67b76",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f21166-ce12-45cd-9e73-a426d902840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b78325-c178-477a-b429-64a2c4f6d20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf4e4be-c802-4005-a4e4-bc0143e5f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad9dacb-6896-405d-9fd1-62fd8c572f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf0c556-38aa-408e-9c7f-6c0aef7fc506",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96b123f-287b-412d-b645-ba6c8cfef875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c526f7-7c64-40a9-8a78-604f46d819d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c440e83f-29f1-4ea6-b8eb-789617f5a32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89c41811-7efd-4681-a241-c3720cec98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcfb42c-3968-40b7-843f-9fd6ed2ed492",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e87490-34ea-41d3-be40-ca18680647c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74dd3ed-d88a-4f86-866f-06cc980bc17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db411053-79f4-4d17-8c35-33db086f4c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab68ae30-ae4b-4d78-b94b-fa882c06beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78db5e0-5b13-4417-9331-849e50e28b35",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e744d-756b-49bc-9ee9-e29399ac07fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7134ec-8aed-4390-8e31-894b8f37d0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7300480f-669f-41f4-a0e1-17bd12c54c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f550e9a-e153-4423-863d-ff783338bd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd74e67-f6b8-4203-a81e-10e8107106b8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddfed23-6767-4492-85e7-a3aef975c2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1146916-d01e-4ab8-8180-460b88254cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50267234-e5f3-4a49-8cd4-30d03b98d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "52809619-db5b-4afb-b475-e57c5382df9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e266f04c-e5bf-47f7-ab7c-a35d18a51374",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83330eda-997f-49b0-83b7-22c44c4ac10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4de0853-9c71-4c03-9659-b6f6dfce63ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97b5cdc-6e22-416e-aa98-221302e6ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81221998-2b15-451b-aafe-7f1fdb21cfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f4434d-b752-4f00-b638-cb3b234dce9b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c1d6f1-3b05-44c8-96d8-28374cd680ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede9aac8-5195-42f4-97da-52378e47ec18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a29a87-e77c-4a23-8439-2df7da2db57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25bc2fc4-d949-408b-b39f-da4be3d3e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92bb075-d9fd-4ee1-986d-29c1fdfa7c21",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b12be-3adb-4f20-aabb-3afcc2bec6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "47c64dc1-5278-4f32-a379-9dde46acdef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aed4e5f-86d0-4136-8634-5f95db4d1000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "972395e0-fd7d-478c-9422-989c8d7e6007"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83d00123-37d4-4fed-a0df-4dfe69eb0ff2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57d96b5f-1909-4042-a657-6058d6199016",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7850936-f66b-4c47-986a-cbe8269787a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8c0f5f1-1235-4d40-bf84-ef63401f9585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9430292f-48be-4a8f-ac64-bdd9b9b28eb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a937e6c9-e6db-407a-acf9-31a4129dc7fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8926283a-2591-4997-b95e-f5026d0b3244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85973762-d27c-4720-80eb-73a25eedfac3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "082ffc57-45ca-4558-92f8-d72bdd22f957",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f189e089-b587-4cec-9dfb-61c8cf46d5e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8cd9c93d-bb3d-48e2-9c31-6967f454a487",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c22ed622-1743-43da-9c59-6c6d0a8002e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac814472-7347-4158-a424-791900788a14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa8be753-76f7-40eb-9906-61eb681b55b7"
                }
              }
            ]
          },
          {
            "id": "a5856cc4-8c81-429e-9b5e-330c53157852",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1671959-983c-4a09-827f-5594fee59473",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc4a6208-aa1f-49f5-a6c3-b1985f026bc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9077c954-89df-44db-aef2-679740758b12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c22444b-712a-4d0e-8652-c3d1e2fd5c4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99283a18-7dc4-46e5-9ed0-3a3ab0ee6a7f"
                    }
                  }
                ]
              },
              {
                "id": "cc351b2c-2a8b-426a-9483-612f2d3f83c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfd3944-0848-4a0c-8732-ca586ab7e08e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "805e28d6-a804-4c6d-9f08-524a75d73ca3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ed9f951-bf6e-4639-9a3b-d86d6d245038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a59fcad-4edf-4db7-b67c-11b250e7581a"
                    }
                  }
                ]
              },
              {
                "id": "2e321358-6ec0-4238-80b0-87add078886f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "510d2a05-f61f-4620-b269-28b066d3aba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39ea7fa5-ac85-4e75-99be-2b4ce10a22dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f29565-f783-4dcc-8edb-8c2d4cc81b32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a13261fa-7eb7-436b-9ae8-f734a83e6b57"
                    }
                  }
                ]
              },
              {
                "id": "b2c70d83-40ed-420b-8bc7-ee61a72bc007",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e144ab43-4c46-4cb3-8cbc-f501ef29e09b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ec4aed0-5be1-4bf3-ad8e-f0f209f4da46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0865e88-0aa0-46b1-8155-e4fa8f59351a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae5b0c27-9c82-4230-ad15-0cdc5b6f2131"
                    }
                  }
                ]
              },
              {
                "id": "4fa7c638-b1ca-4afe-b3e2-5610bc0a7274",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df761fe9-9dbb-40a6-9444-b385c26d4041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b71c4df7-df29-40c2-8e38-276b14d44ef6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846275af-4edf-46ac-9474-03231740cbed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "23c9668c-e7da-4c82-9072-c48007ba65aa"
                    }
                  }
                ]
              },
              {
                "id": "d196f894-da82-4684-9567-a70a982809b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0244f2b0-b34c-4aaa-8f2a-2dda3682f3b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33391b08-451e-4df4-99e6-33a6da6b1b0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f75a37f5-9f45-4ab3-ab23-18a5ede74f72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b11d49e-0343-4c25-8804-1065e572ad27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fc0cc76-2ef1-4c4f-b089-71197c4846b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b3c697f-1b45-41d5-93f9-ade6b2bf31fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2c3bd04-978a-4cce-9423-4aa741370ee5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e518f86-9ea7-4e9c-b55d-75ccd6c63877"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3085aa54-1956-4266-ad24-a778f4a4cde9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9d3e21d8-7052-4c3d-83ca-7606f673dbea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6e585d3-e1e3-41cc-97e9-fb820df35349",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5e0cd26-a221-46f9-abe4-f8cf86635820"
            }
          }
        ]
      },
      {
        "id": "9eec35be-1bab-4658-8c02-45f8436cf685",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "be455224-f164-4998-8968-c5ff931364b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dab6026-d66b-44af-9f01-c29e1f544cbd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f5a5970-de6c-4321-af47-ac899e135068",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f014f07d-8377-4063-8753-70034694a997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6922cc8d-98ce-4eb8-9eb2-24292327228a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82248e08-a16f-44a3-91b6-20ac3ed2fec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcbf444-1bdf-4f4e-9477-6b4d0de2f059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe1a04-d99d-4ff9-bcbc-945291948205",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf3fdc7-31f4-4c75-9063-cfb4806fa629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb744f7a-47f4-4b35-b7c3-11bee4d913d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d440fd6-971d-4664-a921-3659bbc110c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92845bb2-b72c-406a-97cf-e44e30ab5017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3809c3b-581a-4921-93a8-7faa5c771217",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f45c03f-0105-4a34-b3b4-84c57fd16e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67af8b00-ac2c-4a4d-9232-9cf01772e7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14e195d-f15d-4ca1-b6e9-651fd7685a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4218fe55-dc14-4cf1-b83d-470d6ad0fc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc582f61-0d6c-437e-ba41-32172e91e9e2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183672ad-42df-4ee8-8dcf-bd27cdb32a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b00ca17-2c69-4a5c-9f39-4ebea8a47a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34940de4-1d61-4e46-8b4a-6b627f76ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdad370f-620b-4b88-94d5-df113a4f93d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3507afe-b000-47b0-8bd7-67e08ff03390",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8313da-1647-4c2c-b467-27e6323d0572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d67f82-d2da-4944-8d5b-4c281d749ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29076406-282c-4f1c-8849-4c7f122e145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af81ec1c-d485-451a-9593-548c71d8e69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a150a2-a948-4c67-9446-3a2e30316b8f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b96546-9851-4a39-a1d7-5d4af146ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc03d51-bacb-4781-aca4-7339e6959f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492745c0-e884-4aaf-97ca-5041312893cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "453b6f08-abf1-478c-b17f-da20aacbab97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15156cd-9698-46ed-b1a8-c65b4d7929b4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559a4e7b-03fe-4ac5-ae49-5ac7c8184da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebfd8bc-a9b1-447e-966e-50e96df0ca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ce23e1-101e-4d91-80cc-9afe4c906131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "725bd3ba-6c77-4b32-a3e2-0f1ed7906c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f2aa0e-5342-4a81-aae0-c202b1be1963",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b40b30-f9d5-49bc-a99f-71415509bcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ce1f94-dd1e-4969-83a3-b467d36f2a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4a3a05-9a9d-49ea-89d6-d4bbfa8baac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5620387a-dec5-42b1-8e47-746df5dee3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab1282b-352b-41b6-bf38-a663b02e6de2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b670b9f-7cfc-4e80-8d7a-735a47311196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d562b4b-391a-452c-941a-e69cb14e4e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d42737-73bd-457f-8333-59f131bd48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c233e4-5b02-4a99-a04c-01e69606d8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c4df4c-c9b1-4fe6-a861-f58003871a23",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30817b7c-7307-49f4-801a-74168336bd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af446d6-de21-40db-a8a8-7e8f642aa8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8b23bf-272d-4a14-a693-8735c7a32ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7adc73fe-3587-44ca-99df-05b4b5366c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e172ebf8-35e6-4e47-bf12-43b218a0c24d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d973dc8-1eaa-44a0-a102-957482a3ca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd111a1-935a-44ec-874c-a53096ee47a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d998b-8065-4892-8c56-1c6ceda42e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "169fae4a-9f89-450e-9de8-4d6ed4acdd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e826a-805e-45e0-8df6-f50a1533fb69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d30c4c6-a5c4-4927-ade2-ebcf2f198814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5616300-8b64-4dc3-86eb-78aaf26f7598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3d5f94-3ce9-46ef-b641-7269c9295ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0151b40a-5fb8-4814-be69-133523697f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a1b375-db23-4646-8741-0654173b5274",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beedb2cf-be94-4c18-b3d7-f01e10f30007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa600fc-a277-44b9-b9d4-2230dd3ec7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e1109-a689-4457-a51d-5fa3f73730b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7fbdc-776c-4462-83c2-9eeaf71c202f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f47063-4898-4c7e-afaa-3526a4ae20fc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b6e7ef-df4b-407d-9b6c-cd2e1f626f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd647ef-12cd-4d01-9d50-ba1da217eda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913010f2-ddad-40a6-bd48-6c5af849e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4792e27-d905-42fd-8b61-893fe2107c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba22fc0-e311-4892-9292-339a7cf5ec3b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701c1f69-faa3-4893-931d-867a8f223ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab82906b-b219-4cf9-b39e-26bde754669e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0dcd44-d0dc-408c-b7a0-ed8038346093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b2ffd0-3d6e-4aed-91db-8bbc3581e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaab0c3-4420-44b5-829e-a569f0ebe88c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfe9e10-f509-4011-a9ff-cef8b743d9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7583bc-6c22-4605-bd8b-c50e37202292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cceca4f-dade-45ca-8d99-eef02959980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fefaafb-c464-445e-85f6-86c53666c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c9104a-6e9a-4ea0-b589-c69428b8f691",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cc3637-d410-4d99-a17a-b9a021d17871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6813b3ed-3b36-413d-abac-8f424ba02d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710451c9-fbf1-45d3-88d4-a7be9ca61f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "205d2ef8-62f1-4804-87f4-3642e70d2673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd277ac1-a980-49dc-a93a-a8eee94d4905",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd9641-2b0d-4fc7-a116-d9f2867a2a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e8734-a406-4dac-89df-1622f37b0a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d6b357-1347-4f89-a62f-a1339008672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29043c3-6c4e-4542-b24f-f14cd90ae328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a5f72-edb0-49aa-9165-c9460d9652be",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90c52e2-2374-4f17-8c35-77262bd89350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42a86e9-c42c-458b-8b8f-ca94959e1fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac96870-3f8b-4bde-be9c-e2bea15720e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a67876-a944-457e-9287-e6ab0b457bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae58d0ec-b794-4ff8-a5d7-38d21f7b61bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7155970e-c47f-477b-b722-5c0e1108ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8688e1fb-db25-4453-9e0c-911b019af77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd8ae69-cd07-4dab-bd1b-2ad24b486e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e97e49d-b8a3-42b0-9d7c-c4ac5ac4dfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c040bf05-09df-4302-bbf1-b0cae4089e48",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d9841b-36b9-4b3e-91ed-530148ad3e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7311898a-f6c6-4025-92d3-b6eea54f604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeab65e0-3df7-41d2-be94-8fe91903df23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5cca6f-b788-47f3-9b40-529dc1ffe21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27d4d15-94b0-4022-9616-fc46670c3d4c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15af1a9-8957-498f-9426-121aa0a83f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b399a338-38b9-4f95-934c-5a5843398ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efdd0c4-5f2a-4ef7-a65c-7a0513c950e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f1a684-aa70-405e-9469-6498d2a63d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2938017-daa5-44f5-bfb7-1a80dbc3aea4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae3e79-f6ba-4a0b-8a6b-126b79542fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f155fa04-12ed-4490-a08d-559f02b07b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63409d3-d807-4d4c-810d-d1b4d795c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "412bed41-4dc5-4c97-93e7-58fc52ee92f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b89bd1-ff93-429b-be3b-a34fc9bd5b3c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b3b59-2dd6-431c-855c-ce59b0798df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3be7ee-9e8c-49cc-9d14-60c63c0b7b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0ee4c-003c-4815-b5d3-e0638050ab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd6997e-cf74-4481-9a32-37bd7b469904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8394d56c-d238-4145-8dd7-169180060950",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e802d1-1ad9-44e2-8394-2830708db12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79192763-ae84-4ebe-ab23-155be4e9069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72799cbf-6571-4e1a-9eeb-c0c95f3a7086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2408d537-77cc-43ca-ba6b-158052aa40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240ccb4d-f3ad-4a04-ba0c-0d0539943d24",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d073908-00e2-41cf-91e9-e7c45cce4236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c952a2-fffa-4ea0-bb3c-66bbc11a8d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b812ab4-5546-4cd4-99de-08ad8cfaa485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3b35ea-3e94-49db-b9c4-e90bba9738be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7264422-8f1e-4934-a289-c40a93ccf452",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52375363-bb29-4aca-ad79-0052e8a0b60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32fd5be-564a-4a4a-9ab6-03c640523c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a4ce3-85e4-434b-b128-96e41a9ae923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2738a01e-b917-44e5-9274-dc7556398439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33829d0-508c-483f-89a1-1667bd0c1df9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa3282-c707-4399-87f3-05db64d400a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215e229d-4742-4025-9a57-1ada9f0ba9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3254c7-b1a3-494b-9f18-97f4dcaf78ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b142ad-764e-4fb3-8da5-8298791befe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f796a73b-b27e-4b4f-97e6-c330ad36d296",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b754e133-9e2c-4ec8-971d-de248f0591f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4348bf-253c-4a8b-9937-b6338d01f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e7250-c65f-4076-8bbe-2615ee4fe5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14237dc9-65b5-49a6-9a56-6aa75807267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a399c17d-8bd2-4e1b-927f-9da622adc1e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19608b66-195e-4ce1-91d4-c25c06d1530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92489bd-1ee1-475f-a5cc-dfd748a287fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ecb387-5902-46be-a7e1-24078c8e6225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f03e26-559b-433c-bcdc-745d4ca7942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ddac4e-dcfc-4912-847f-2882b8c784d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bc6b46-7d80-40d1-9f68-9965ac8f3bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769cb110-8328-4e97-8992-4b1223060598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4613fee-4f14-46b1-b24c-bff21b6fcfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06a95ed-de7f-4a08-b845-b6d422df6619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978d8a96-ca44-4510-9eb9-7ff97a6e35a6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95f7119-225a-4b5f-b716-c0620f50e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bb4118-2a7e-41a2-8e0f-247a1e42a97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e886fee-c342-4a83-a86e-bb26a9555306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db94c1a9-dc7c-474c-abf2-5f238af24519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49cc01dc-381a-4692-a3ae-6d6a228aa380",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a379ac7-d212-44ad-be68-6f2f5836c715",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31b1f10-0c0d-4304-abae-e3f6c4a56511",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "119b339d-3413-465c-b06b-85fc3950c46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faab91e-7c7b-47de-8c11-5710ce4a1ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54b7728e-61f3-49e4-a90b-dcebf8b66470"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef99d4e1-457c-408f-ac52-acfb8cfcaae3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2331018-3288-42d0-b356-bae2429d5293"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb773db9-4569-4c94-a28f-9fb0402fe09c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ffe4f62-2b75-4b37-9cf4-34bc4662cb83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8916e03c-66d3-4a19-aba6-a355e99e6604",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43f7aac1-fce4-4553-ba9e-c4f0a8e4491d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9606f6a-0f02-4da1-871b-66b5da747711",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39df7407-0639-4f02-9da5-90da45bf3bd7"
            }
          }
        ]
      },
      {
        "id": "3bd25370-baf9-4ec2-a4fe-e38e29046163",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c13c7107-3b30-4054-bb11-d0d8483b6813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26e004cc-2e8e-4bd3-9722-245236cc48c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "813a2193-4c76-4e8e-82f7-ae85e3a368b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9ac5a1-b9c6-4a39-95a8-6a0cedd824ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63cc1d9-b68e-4bc2-8502-4f5b612fc5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d419b1c1-fbf9-4225-863c-a47958728db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6319af-5f38-4d00-8b61-8ad873d64722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10729183-fb76-48f9-a34c-c095b92da850",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4667fc88-b0a2-4541-81f2-6e712416feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75326fbb-279b-488f-9920-b2c3869680ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfa5349-2d69-4dc4-9038-27b186f3fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1207c2bf-25ad-49c3-869e-4f67cea3381e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d77efa-3238-4611-a646-d34b6c447646",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860badce-e49f-4101-9e2c-1ef4ead1ba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbff294-053e-4ac4-be08-40453e1c157e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbddfff-7d4f-4eea-86b9-d2670fa0b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed95e0d-3906-4d18-b1f1-ca1710514514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83cef9f-fe9c-4ff6-b911-4b66c4f5022c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f2061b-d085-44fa-881a-9f33324b26b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544f033a-ed77-4151-931e-1715b48f4405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f321eb0b-bd7c-46e1-a681-8443c6512774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3035359-de0f-43ec-84c9-00e5367360a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb819ec-da6f-405c-83cc-798c0c85d1e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a960c6eb-c239-42b7-949c-c5cd4c51a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f321737-6778-4582-b3e8-c7960f1891c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c49bd9-0fa4-4457-9bb6-e8cee6702c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb1adfa-3f19-4309-ad11-7aeb9e717090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de83c9c-93e9-433b-b007-abe489e45863",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a13faa-6c1c-40db-a8f4-44a3f86ef116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd3491a-d526-46b7-b135-d3b78253294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5fcd48-97ba-4bc5-936a-dec83fddccb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e875e61-a28a-4ee7-9d34-ca49df3c6030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e1a930-168e-4a5f-ae80-d5dca2339e94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98598378-f800-41c2-afd0-8f236c7ae561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5ba3b6-59b3-47d3-819a-10661a25aaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75be0fa-6b94-4133-9621-bec2b92b169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fd1980-0686-4108-829e-f75e1daf0351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34716cb-8343-4607-9a71-6e03c43cbac9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c1a802-dd33-437a-b9e5-a188eae0b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aadc202-4e20-4674-b65c-c0c15383a2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42497c5-a8cc-4553-b485-946782732989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbe574e-67ff-447b-a0b4-651bb0296609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa71d48-6265-428b-bf17-432d20a0aa72",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fd9091-3b24-4b4a-8215-0d114ceb2109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1350a6e-c175-42ef-aed1-c202eca326dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1f1bd0-4365-4ea8-b7d6-c3ae734e7cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ed7992-03fa-4b99-891e-f9fcf5120c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c92ce87-5478-4180-a579-41856bb2942c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddb8cbc-a0b9-4eb3-b39d-d72a26ca436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feec0da-b0c3-451d-9e86-52dab82f7034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ac74b2-5c09-4863-a648-c051e25df983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e208078-c8d0-4a0e-8e6e-868b22aa4b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65fb564-df22-46d8-ae8f-877c8d3baa49",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10a065b-e93b-4f9f-bb3a-949a9309aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a983e3c-1c77-42f2-a37a-f042183a1033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf804eb-fad3-4beb-beb3-095c55afa8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8928ebf4-dd24-460a-b1f0-abf8e5c8dc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c746b8-bf48-45dd-93ab-bb9aea043236",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d812cf-8186-4aaa-89a2-685e6bbb982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e69fd3-fcfd-4458-ae9d-c4ecd63bf84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffb8d04-4ba9-475c-ade6-07502fdfb6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db46477f-3a6c-459a-8c62-665937a7ad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733ae309-2d77-4c28-9a19-c161a1ee0f5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5e1bb-f563-4612-be1f-5e419b2fa71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0873b7-c52d-46b6-8243-676a83d71ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc53ff4-26a4-4d52-9e3b-7a7b68aef9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12a968f-7b9a-4c7a-a5ab-cd63ebc0d417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46ef37b-9a64-459b-983c-00b52cad843e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f4fa0b-42d2-4d2a-acfe-65d505e233b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b24b31-3946-4797-a03e-c47da6e19594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1987d135-1b58-468e-bfcb-c64a7af80e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da2782d-ec0e-47c6-8e02-4e5148eef430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1a442b-a3d1-413f-8d02-a460ad5ba62a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00249225-c695-4775-af0b-abf7813528eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5682e65-b737-4550-92d6-a92ff735b938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c31ca7-2070-4a29-9637-ec3853212559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ac4979-0806-4e62-94b3-29cbe9921a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5621be-22d1-4666-b8ce-7005d7ddd091",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58526b0-5df9-4a59-90d6-30fd14588f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a08d634-8b0f-4b58-8aa8-98d87e2e76a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e929bfd2-315d-41aa-a901-05d31e1b725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3edd987b-7d2d-4f7c-94e8-40b19a10e618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64df1279-4158-4e46-9296-5c8cdee1c3de",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bfae64-a6b0-418c-8dd8-666b678d13dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba50934-07a6-491b-aa6d-418504523675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51299154-d007-42c0-ac95-c48c6c114608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c999bd75-49e2-4135-b74e-624a2a1ca506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e884b826-90a0-4d83-81f8-a60d33a3a1ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc5e8e-c362-4b01-9980-0e7b36284b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7581d99-bcb1-4d58-98d5-fdacf536507d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5ef7f-c070-434a-92a1-26003a0dbc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bb65c8-81fb-40cb-9ad3-397070a1582b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3f1126-e8f8-4b8f-ad02-604d4bf950eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb4c59f-24d4-4d8c-851a-10b6c860348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dacdea1-1ec5-4939-9170-8b0425364dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb979612-ad36-4861-8f0e-089c92add8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "556d10b7-4201-4b0f-b966-55ca28f1c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71dae29-ab1f-466f-b9c3-5ac8222ad3e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1f4bc1-fc63-4a2a-bcfe-e7168934a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7bbc96-bf1d-4bf4-a953-d4b70871d256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed397d46-eca2-4369-a26f-937dbcaad3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c106f56-8b42-4ead-9cc8-e7051359de7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a1615b-abaa-46ee-b77c-9206a47f5302",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea287034-0493-4faa-a479-2270043bbe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b601ca5-c942-45bf-92e6-9e3d7b9b003e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0db83ed-f211-4e87-9c87-c63962780504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5902be50-2497-41e5-9850-bf2569679494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3471c684-35c6-461e-a16c-9bed271b3d45",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248ff98a-0293-4cb7-b770-51ebd1727470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950529e2-d229-4bdb-af95-d2e6aa5949e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb6b27-f716-4407-b897-f18a62bda5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71562b2-b166-455e-a000-f87b25c7bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97172d7b-259f-4457-aa36-1a0c0e388fc0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5b0a64-3a5e-4467-ae78-5e42081c22f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d374aa5-52b4-498e-ac65-e1f62a38d593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab8ca9f-5687-47b0-bd8a-678b8e31b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60967fee-afa9-4f9d-8e92-7556b56cf03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c4986e-83fe-4ebd-bdaf-1aaa42bbb0cb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0529c574-53d4-4f1c-abff-129cac1da10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a6bfc5-613a-41e5-8dd1-c0523b2fa451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33c3528-c133-4040-a9c7-6828ddd8f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8439ba9e-2560-4f41-94f1-315cb26ae827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed480f75-9599-4dfa-86f3-fdc15fd32372",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bd577b-dfe9-40eb-9d04-abad0c425f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb08a71d-1494-4111-a5df-ef13f16ec2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6ce6e7-38dd-44a6-8d6f-bcb3ebea2c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1b593d-46f0-4b6f-8ccd-cf908283885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7e2828-0922-4a28-9842-becd1635d368",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd05f737-81e7-4047-9133-f41b740a8922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09da587c-0b77-4af8-80c9-118761aa0f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e5e03-93b7-41ba-9ebd-9cb26ddc37e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb1ea1a-283d-4881-bc77-5a04060136a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d546169-a42a-4150-a6ff-4dda71bfd9bf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0328b006-7068-440a-8c59-134a99bbaabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a1237f-cc22-4f54-8326-51cfb74a4dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4e857-24ba-4068-98a9-455b5ccc3c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7c4817-7dba-49bf-9685-61d93b16f8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b97af58-a96c-4ec3-841e-31ec3ee92887",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7a466f-5656-49d6-8db4-a56686d0a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d7ad11-a423-4231-b428-d71d8ab99681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248ee361-c860-45ab-a91d-8fc84243887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b458ad-12fa-46c6-8af2-7458f22edc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365f2373-b2c8-490e-8eee-fab49dfd5d43",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de778600-f0a8-4efd-b9f9-c51e72437a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9cd012-1f04-446b-8c6d-1914a6f7c397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa6126-7f63-48e8-81fc-c98b403f794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa247d20-24d2-4265-bbec-d547a2ab84de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ea16be-de19-49f2-a311-6d7a12905946",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5755ae8a-1808-4cc4-a7a8-0a898673f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842135c7-3bc3-49a4-b60a-66cb3a83840f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59157e9-ef6d-4f86-affc-48b19a355e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b052dc-4325-47ef-ba65-6e991eebdec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87e0a28-7196-459a-9c72-28f88ad9d6c2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96fc90b-1b61-423c-8edb-23985c1d4c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e85ebd-f9ca-4b9e-99c1-34b0d992bed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda8755-4064-4dbc-afc8-829d1c96c2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b009bd-13e0-418d-a147-abb26fd57c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292e2177-1503-49b8-9181-492b05edf3e5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d48bfe6-c962-483f-836c-f1ebbc27e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb9064a-21c5-4bb2-b57f-39ea64cfeb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d77b8e5-daf6-400a-9025-0fa753c32901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e471fd-41b1-45fd-b5d1-65d0b799cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a3a96-546f-4683-8c70-6ecbfaabff7f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b60a2-ca03-4e45-94a0-ef8dac65dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbffe645-67bd-4973-a38e-93432fb4480f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934fe2cc-5772-4d8f-be51-3dc3e2c1f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e7ac7e-6906-4ba0-9599-4301b688c195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27fcfca-1779-4353-b97f-7205387b266e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda35c9d-8133-4e67-93aa-a129a23a54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6f8422-ecd9-46f2-abbf-2e543b26920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9998c4e-c862-4c90-a6e5-131067745c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80dc3f23-0093-45dc-a973-95aa3aaa703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c4f33d-21f5-4993-b4dc-d5359c865326",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7eb3eb-32d6-4c18-82a3-72da51e84ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80999f7-7901-42a3-a246-d8bdfb7c1f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c604529-6798-41d8-a35f-e4a3b2df3aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf53ca29-b78e-4947-88e1-a2c2c36b1e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17cb291-d227-4ec3-8a26-85af08494767",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c5b13f-d174-4340-a3d9-137f073035c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae45f300-bf8c-4a0f-bad7-6fcef011c3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac411b06-1d91-451e-bd00-7a993dcfd134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40273f48-e44e-444c-85d4-59d51a14cd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efecef1-fc3f-42f1-8186-8dd038d2e663",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2c5dc8-2645-49fc-8fa8-bbc5252899b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf99374-36fa-44bb-aac2-74db9f476386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c9a6ef-8bad-42df-acbd-2115df0a4e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "075eefb7-fcbf-4890-9fb5-5d2ab39188ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "808561d6-514c-4b34-ad61-a305d4740cf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0778b4d-7019-4b69-93c2-cc48cb6e2406",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bb2a43-fc5f-4bd1-a1b3-01cba0f00862",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4600ba10-3ca2-471d-b1c8-fb2f0f285027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b1152-e904-493e-b255-34cd69076dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9678398-8af8-4fa5-9d93-583c73f113f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52f8c151-b74f-4824-a4ae-a64208cace80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69aa752c-f873-4414-b6e3-5f2a26fbc615"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39828ca1-85bf-46d7-948a-84872cb1c02b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c089065-ffbe-4987-a31c-622f274bd456"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5812fa8e-a794-4659-91bb-21a9d11c8035",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62321dd7-c3b8-4bda-9a1d-eb08573dcf08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d827f772-4304-4586-9d12-580a2b46c639",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "903658c7-ecdf-4b7b-8778-46ec87bcc529"
            }
          }
        ]
      },
      {
        "id": "04f865d5-215a-4a02-829d-5f05dd31772e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0f40b0bc-74e3-4844-a105-2e0c7351ab42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83fe4a30-5731-4255-8695-db04efb67980",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de7097ac-c360-468c-96e6-3a11dc33b90e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e659b-a3ed-43e0-a3f0-fd58858337f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4290289b-612e-48ca-9e9c-808545d47f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1221a53a-2955-4378-bf7a-6cbf58ba7733",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f56f79-eb74-4dbc-9560-0435478cc756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5118b947-0dda-480d-9d8c-430d54eeae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6f02f3-cf45-42e5-8640-b84c9d8cad14",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a668f5f1-52a1-4a5b-bc06-a295eb137a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63687cc8-8c39-441a-83d1-dd6c2dc3b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10a235d-90b5-40fa-a243-aadf1ab2ee67",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685f0b64-f903-4605-8eef-5c35cfb41a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b9ff8e-f8d0-49d5-ba0f-9cbd503c37fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb5cf9b-cea1-4d16-80be-8f98654000be",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa733ef1-ec88-442e-8037-0f9b026b6598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c49fa3-b060-47f6-83b7-ce8b5ee7935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee3359f-38b0-4b7a-b809-151660199f74",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aba346-96b8-40c9-89b5-556e561e4691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772665e4-92f7-4988-b49e-6d4b11b08bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca569cf3-62cf-4fd4-9927-3ccccb1e510f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64ebb3e-8e06-48d3-903e-b6299126cc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c0eaa1-90df-46a9-9b04-6502c8715641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f35ca3-9593-4421-9fe2-3f82e912b436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c669de3-9407-4709-b67e-243249f26527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c231bad8-7459-41bf-9e26-30043f8feec1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a14fa-4e09-4bd3-b9bd-2cf7c013fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5fd091-bc54-48cc-804d-6c191618bbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f752acb-4d86-4761-bc8f-439a8d7d00a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff21d84-02b4-4d49-8c48-80210c1ffa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe5f301-1d20-4396-96e2-85a08d53376f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c416596-15c4-4d43-a8cd-67f6edbb7984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f2fd60-13b0-476f-b307-6f23e82ed83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e133145-f324-4c56-92d1-2f90f64cc1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b64a5c-8128-4a7c-8c33-0acfe2bebce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c96972-18c0-4fcd-9a0f-8ac30db29d15",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81672ff-f503-4072-ad02-320226a9b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365f5277-b5a0-49d6-97f9-153bf9917823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a143899-6581-4ef3-9a60-72183d55df53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b32c3af-d9a5-4edf-bbf1-2e235b300855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d93bce-62e2-4768-a28b-820e68cc5f3f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e974886a-6500-41cc-915e-d8626447dc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c736b95c-1e40-4964-9104-89f23c4ac95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608337fa-f163-43b6-8622-754462f687d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6abfca0-cdfe-45d7-b033-cc1b16ffb161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f70f75-0046-47e7-8f52-0cf2bee4583f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b0ee0a-f9ea-44d7-a64e-afee00d51ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e5c7ef-6244-4e2c-998b-1960b16d6878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af3a309-e2f3-41c9-9340-e46725d04b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eb6c2b-a65d-493a-a4d5-2c44b1475811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bebfff-a6da-4ebd-9f8b-91ab184e9f99",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d5d31a-9d7a-4f35-afb9-a8a20585376c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7b09e8-b6d2-478c-852f-05234d02a3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2938da3-362c-4be3-88dd-53d86999dda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a289992-9432-4851-b409-fe4ac49cbb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3455fcb1-67de-43bf-a867-03542881b19c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a573f86a-78f9-41a2-9c32-09e85f38116a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3751dc9-170c-4e7c-a4a9-672cc9b28416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79327188-c558-4018-8bce-bc93858dbf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6b1a07-5539-4cea-9c37-7613bbad532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfb2a8b-4faa-4311-b530-51a3ac173972",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663e2653-ca60-4075-8fab-a1bdd9e5ab17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e949456-2f76-4784-9b62-6df98f9c0a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979a7950-5e89-4149-a8af-95d581d849a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2cd9ea-8aa8-4781-8d17-0c74439d8d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8a5d0-e2ff-46e4-8e42-8f0416442fc7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe4d4d-655a-4d25-8cee-171b4ed4e92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9a422c-d959-48fb-aa31-381091f9624c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805e282a-827f-49b8-86a1-11d2ab986fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3229191-6fa9-46fe-9851-4e1c7344c1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0233cca9-5dfd-463e-9757-0230f278114d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9d7005-96f6-43d8-889d-014dcb342eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db050f1-da9a-4047-8226-c51fefb48925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5f8de1-7859-49eb-8945-f68e2d1cb364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c812a01-3b8d-4c4b-bd6c-5e728a965431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fd3f1-2705-4e43-b8ba-58cd4921ed70",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db7088a-fedd-4402-afaa-4ab3a97a0ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430495d4-32e9-446b-8825-289fb4148f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c5ceb4-4c5b-4ffd-87c4-310aba04180a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50433b62-7d15-4cea-ab85-ce113e2c3ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb636143-d5c7-4bc0-8d26-e590a8a68ba8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764f43a5-832c-448b-82ab-d0e3a5460821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b245cd6-86de-44a6-8ba0-977739be0e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb6f8b0-299d-4b9b-b163-b76eeffdfa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e8698a-902c-46a4-a6ef-b2bf47873386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a47112-6fb3-43ec-b12f-f9e719b43eaa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a52188-4db6-4b61-a804-f9bee402f639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db57913d-49ec-4f6a-9f9d-4ab425f33cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b8d130-5a90-43e4-92e2-19a5bff2b4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abc88fa-d3eb-427f-8f29-0b0b63075349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7047c8-412b-4b3d-85fc-ee28488a1e8d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1a8bbb-5b5c-43ca-a06a-a133bf42b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8fccfd-012d-480e-ba4f-8ca4a8335bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eeea70-44c2-4c00-b01e-3ca42add5876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72845436-1e0e-4106-baf0-a8c460eb4828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6011893-097c-418e-82bd-2fa705e76091",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a649413-ce7e-4be8-8b24-1242388a3182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514bd7d7-0b7a-4b42-befb-3130adb7159b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6308471-2225-4e8a-b34e-b99c66e29f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db703b32-f187-4b6e-babe-6f7775ee1d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5ef10e-cc86-4f46-8891-e0071cc22e07",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b9f0b0-cbe3-4060-8c49-689b08d7ff6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f0afbf-1470-4bab-9144-69fb8209d0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01515289-91f0-44f6-aeeb-fe43871ec010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83357965-9cb0-412a-8127-780cac7d0aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7748a05-547b-4793-9290-4c07c3c713af",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5577f7-6436-490a-a756-a5386bfd90f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b7c9c8-cd3c-4da5-9b8c-763edef7d3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c5a80a-3bd8-4293-926f-08982e900fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe400c6-1d4a-411c-87f2-2621b59e6977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecfb9ef-5ca6-4e7e-8408-6f56ffac6227",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f737d3e9-c787-45a1-abdf-eb6526f2d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74d970b-4330-41f0-9f6d-c26d99d796a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e948ac-2755-46e4-98d6-b843150c9868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6470b3fb-ce96-423b-b0b8-a1f9882bd22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9825833-3154-488b-8891-c4bd9bfab9c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15144859-a544-4db2-9c4f-4bb1c11b4ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb1791b-9e3e-4b5b-9be2-0ffa96f246da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3266d710-db01-4b7b-9377-23359e41c80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c4f2d0-16d4-40f8-86da-9eeda3459011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf0803e-41e3-45af-8e85-a05c84cf6ea2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99168333-d4ce-460e-9cbf-ac5cdb083130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3685b75f-d548-47a5-8335-0d95919e1c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb6c2f9-542c-46f9-bfc3-a1512bd8618d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dfbb50-823b-4352-8016-e4731ac5fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d32ed0-29be-4bba-89f3-3176519fe6e2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0909c2-65ea-41b9-b4df-bed569a32b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e8d49f-ab67-41c8-b33e-38e3ba41081b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad671f6c-cb6b-41a5-89d6-c8a7dc6c5b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61100d4-099e-4c01-b0e8-7ca27d7c5133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c892a652-718a-4fd1-85d6-ec0e464c38c4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08529ca-bb20-49d6-8630-3c28e5b138e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c246ca-d941-45c7-ae7d-3d812650fa64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e72ca-7905-4cb9-9732-3878abed43e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5f7aca-7ba5-4678-a3fd-d880d0c66a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8279c997-60d2-4d88-a06b-2e0cbee2b850",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165bd39-c9e8-4268-aea6-c1be943cf9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8bacb0-8051-4167-a6b5-d104aee8ee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac66e7bb-0e1b-4463-84ff-381e68ff4f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259ea12f-16eb-404a-902d-4982c7869fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d269c3-4534-495f-806a-9f10bc40f76b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a0a127-fa70-4927-b9a9-1c0d7fb567ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f04e9d8-33ca-4666-a8fb-be621cf9b05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce585c72-34fb-4b4b-980f-be7dc9428aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80f0822-6778-4319-9e88-177fa1d640e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17963f4e-e2a3-4fd1-937d-949753018af1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637e3b7f-154c-40f0-903c-88fe3e49331a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64348787-ccbb-4d30-aaff-8460984ed08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf3cbab-a3bf-4597-8fed-a0f57293f879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96d9f4b-cf64-4c1f-a1a5-c861e2bec8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3243f2-5dc1-4fa3-9fdc-1e7a8a8039a4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cd1067-0b9f-4745-9525-217c74b3ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f10a9b-46c6-4b60-bb6b-e8608185a848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc8f842-0b40-405d-8102-9bcb4f0cbff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37155131-df44-483b-9e1f-5f905955f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303a2731-0dd1-4f8f-aca2-e65efce14916",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97013df7-fa36-49cb-840b-009ca4fc4193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3287fa9-10d9-4cb8-b284-31ad8176908c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b281e53-81ac-4f97-ba4c-6516b04b4427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875e46fe-06eb-4a13-9968-b546b3070f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a4ba2-2742-4724-9281-c5d904ee896c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd556f9-f921-4b60-9081-ea7f5903f668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c9fc4b-511d-4cbf-a1e0-7c00a3ade86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f7d00a-a42b-4f35-b2e7-9ff4dfa45f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bb4da4-2c89-4db9-b5db-28ecb02ee8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c0693-052c-4627-a8af-7ac6e91a4f77",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f24f0e-f782-4304-80c9-7d75b3d6932b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609f16a0-d46c-4274-9dc0-96dad8684fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834627fc-01f7-4974-b674-19a08ee6bf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a125930-df5f-47f5-a18c-4feacffe25e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6726b0-edd2-43b4-b539-b2db00e0dfa6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742f3022-11f4-4037-be6f-8115b80a02de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f9b24c-629f-4250-9cb4-251fcde74843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d97281-8735-407e-9014-341f71f94f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceaf242-d74d-4651-8919-f2f00d9fe105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab86199-675b-4985-988f-64200b12b94a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07759a8d-8efe-4306-ab8b-610259ee1663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb757fe-2510-455b-9bc6-bc9dd71a47d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b52959c-b97b-4161-8881-2cfbcc89db84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f02117-7f3f-4274-8912-5fb5cd909289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0315cb7-bdc4-42ca-8f2c-c9b8050d3304",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283a0b1-c3a1-4295-bcd7-35b7f3f4be98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdc10f9-3710-4bff-8435-7dd6021b97c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243465d3-7cfc-4619-9704-7d85724183ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097f4fc8-202b-4746-b7eb-db9228c91c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea8ee7c-2d5b-4ae4-82a4-9425d5f0bf48",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4291d262-a1d3-4db1-892a-6fde46f35b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0735f9c-2ce5-4a17-a93a-608940b5b630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688377d4-917f-4450-afa3-457231346ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee2f04-5021-4002-8ef7-0632885c5bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ad872d-defd-49c1-a568-10372cc39dc9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f4031-fe8c-41b2-ac3f-60cefe7b157f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55a5f3b-f400-4975-ad5e-6cc438f2e5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630b451f-3cf3-454b-8e94-43b940c45e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43218dfc-5e95-43df-9ef4-9bcf56c9c752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895edacd-227d-4743-a1cf-04a8c8fd86b2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd270c85-e471-407c-a8a7-85c6101bdd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c66d230-f84a-4aed-90c1-25741ce6b31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f19bbd0-5924-4374-876b-aa047c07dbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e246aca-cbb6-4730-b10e-978d9545e52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329f1263-cc1c-4f29-bea9-fc4a79e3d168",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38351d92-b931-4337-a5c4-95207940faaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116c8101-c9bb-4bb3-a787-273a8e8cead6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c2150d-9af0-46ff-a715-010109d8dcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24680a14-4a99-4c53-b446-bdd0a20b296f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602aa7c9-1145-4416-bd8f-606e8a99bdfb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c91eca3-651c-47f5-8193-4475a90e9702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bf9382-ea3d-44fa-b2b5-5fa044b5c70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27ee1fa-f229-4702-bdfe-b86ea1d10f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8f65a8-0090-4ddb-909e-16ccb301085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122cdbb5-b922-428b-ae4b-14e92bf95012",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888613d-9b88-403a-8024-139b7df62bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffdb519-3578-4606-8de3-5a0ce701d96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9502ed-0809-47c4-9640-f271b800287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc349ec-728e-4bc5-9f18-46430c9a351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b32decb-7538-4ee2-8c1b-91f2641986da",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac25e856-0c05-4255-96a0-459c19b97036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80774ce-9cd2-4984-893c-5de1d9842302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e209104f-997a-46a9-8ea2-753d0b383a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca9f5d9-a8b0-45e9-b8f4-bc464450b522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbb6adb-5976-493f-add2-ad538f125921",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f57c54-04f6-45f9-9224-881745faa5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8386112c-db6a-4efd-8738-60f10f43bcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044bc238-7cc3-4491-ae46-c4c68f6e10d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa920040-f2b2-412e-85bd-44a45f19a6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daeeb85-05a0-46f2-9590-1af2b3801630",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21495c0d-a975-459d-aa90-83a4e50c7b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780e2061-a930-46af-9991-8c560b433d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b697352c-e3bd-4c75-9e5f-2c864cc20176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adfc2f2-c2a6-4055-b624-02b9bcc63e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6867b58-ecb2-460d-adeb-62634423dbc4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfafa4e-587f-4557-9469-0a12deb70116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcc1f21-fa29-4cd3-bd25-113ed6e5572f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4d7a9e-15a8-403c-98a4-5b989a9a0560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8980c240-3f4b-496e-a92a-08bd79bee595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb251c4-6c88-413c-91e5-02a0e704f691",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e3dc55-b721-43f3-a7b1-36073208b763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d010b6-763b-4015-8157-1e178b3ea193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91dc28f-505e-4c3a-9bb8-f95d7679d11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e8620a-7a13-4878-9956-d064d1e2d580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c55802f-9596-4ae8-81e9-0afdb7ade6d5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c72ecc-ca9b-4c6d-af1f-3e3ecd3fe192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad58d9-b34a-4066-ae38-298eb88c713c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b7b999-839b-4fbf-bbb2-b0ea06eef698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8b6cd6-9c4b-419e-89fb-dc61ac8d7df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4fbd29-677a-4b99-9237-b39c85de12b7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d57973-3a9b-4520-a419-cfd16e010f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cc1c20-d9be-4cc1-82d3-51bc9cbb211c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315f82ea-9eae-4f23-9c3a-5455af9a7810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6c00a0-bf52-4149-a587-63d02a9a5f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b51b794-afef-450b-a907-c4b5f910762c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f00857-8c06-4e95-b7ef-017b0ff48a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89a9c7d-f2be-4ae2-9cbb-347e457a37d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a4cf44-f643-4308-a77b-7f1157984b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af28ac3b-6d64-4bfa-9565-e9a20a1b5872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d814c04-958a-4c8c-84b3-0646e776cfb5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da53c65-6daa-4afc-a1c3-c5282a57be22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2fae23-a191-4afe-a3b1-464115b8c8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081a6d3-5b96-40c6-9fde-de7febdfa8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78227c58-c38a-44a2-a342-1ccafdf3a60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff3afc7-9210-47a8-a6b9-64ea85d740a1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190893f6-19de-4093-b379-242612ff81c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd13d4c-b48a-4cd2-a1a9-266dda08f350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a84e75-2997-4125-ae00-a0d65c44ef5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869665ff-51bd-4373-aed2-7bbf26d60295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead75afb-5a64-493d-879d-95e008380e32",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126af4bb-4467-445e-bccc-2959855724d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963ed515-6458-493a-9cdb-0b80cce6586a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f265b4-4f91-4f8b-afbc-0af2f87c58e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf8b9c6-9ed7-4d66-a188-93471fa36fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad81092-6be3-4abd-9120-895d44873735",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef284f93-27e5-4704-9e26-9fc617283c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35aa1ac-654f-4441-a891-95a1e297aa29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8396004-9eea-42f8-955d-8a2bcdcaf467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305f0eba-b949-435a-9286-69a9d1a6aaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2aa82b-fb0f-46af-9f87-9fed0d04482a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31bc7da-4599-4b98-884b-f7d1dd9c0976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772cf523-0c55-4415-89d8-828b36b19c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e359c0c-cbc3-45e6-bacc-fdffd4cd93ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f894e2d4-a5cc-4274-844c-90ee1ea68205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ee76eb-0bde-49be-a981-4c7498ebb981",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b82392c-a7e6-4f1a-8255-ee7129b12059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dab7fab-f536-43b4-8379-d48d93492147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89260812-251d-475f-980e-a6bcbf94e3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f37d0-e75e-4f87-8611-a3e17d6e0f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6779f02e-3ab8-4d39-9bd0-ea1d19ab22a3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b9510a-653b-4833-b276-4101dc641a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfed3de-1e62-47c5-832a-2f067ca8cdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fc822-f57e-4a82-a7bd-c5cc9c380470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d909caa-db80-4005-b79f-df8c735d4dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59edab8-1132-46c7-95bb-f86b1b83b5b3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93547798-0158-4d99-8f1b-d25d485f199f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fcf9e2-d5d7-432c-a954-57f52e1c13ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01188eb-3f16-47d2-9889-6ced5ecc611f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abe8f2c-b4e1-4b5c-a571-b9fa486dc024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb9fcc7-748b-411d-a6f9-63e2addc76cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf0cf6-6b5b-4f49-bd0d-cfbcee24e00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596bc7fe-0ff9-4792-a384-83cbf3505d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3977ea50-29d5-4275-a643-2c1bbc0f9323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e620d795-e6b6-4daa-bb50-3020075a42dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3bbb0b-e72f-45cb-9f8f-ec7365877a16",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d284a30d-32ab-4d37-9145-541405d65caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0d6b1f-4b07-41df-92fb-f8016dca7cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf7bc32-9de3-4ccd-8f1d-8dfd8c62d876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98aa7a6a-2efc-49b6-af96-4e23ebba46af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebefd7ef-37fa-4414-ab8c-3b9d293a3a8a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee5a02-3c13-4c68-8f5c-6b78f97fae4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96a85f2-b631-49fc-9eee-2ff31d2202f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb3537-54ed-4d46-b451-03ea68c85bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20649232-e13b-483a-ae4c-9c1fc2131039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221216ae-aad1-48ec-a874-7d0f4e3510ad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021526a-18b0-4a13-b1ed-e9a641e18f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29878394-71db-4f50-80ca-d99aa5892166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6a6ee2-edc0-4a1d-ba6e-1652bdc0485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f21dcb6-a2af-47df-ba5a-ba4a9d01b66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66acf914-098b-4a76-95c6-0e9a70e99a02",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd22ee-93ed-4b4c-b8bc-cde37437548d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b9a23c-529b-4f5d-91f6-5c44ed27fde4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b46f1e-e033-41c2-a8d4-b87c53ad2ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d64146-8c91-4e76-a392-d3fd04c5f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e75f25-9840-44c3-a4c7-ba364ad92fe9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44de1a6f-b304-4d7d-971d-2843e815c1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1182abf-9e15-45a0-ac2b-d17a719791b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92714555-9587-4ae1-811e-ae57b3628ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a617643c-e214-4c81-8667-0052b8e76f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aecb073-4f95-4083-a9ab-7cf5201d0b2c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963aa1a3-35b2-4e11-af2c-2f682cd55b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70c1c25-87f7-41f7-86c3-620f5fe1f79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a7d9f0-cf37-4d12-89fe-40cbd1afae48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c29c30-d584-4514-9d3d-28ae3e9ef8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e103fa-fe3f-4cc9-8c4e-838b1eb698d9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eca9e9-56aa-4715-9b81-a739e43c382d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5a60b7-16ed-4e95-8f36-2b4e1f24221f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118f6e8-0c75-4e22-a393-8ca4ac4a6529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ec3e36-a162-4251-9d1e-c9b82b48e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a679f-1a32-4d6b-98dc-d3dc8eb91e32",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eed3d7c-8025-4452-9047-8aceb17e0991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92307e2-339e-447b-8b9e-2884fc5ba1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266ff1ad-663c-48e6-9e02-e81e281f1484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998a9055-bffd-42f6-bfb2-bbe47387a931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dbbb32-756e-40fc-be3e-d0dbf6db7126",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae18834-dcd5-46ab-b007-5ef0a6fded3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e69f6f-f170-4b49-a08a-bdb0d69f4f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab0ffd-9dcb-4fa2-8451-e0fa99ea9e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4c1229-68cf-43fe-872d-ab7511a40f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade653c8-4d7d-4017-a417-7ea3f525a9a9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c35309-c28c-4e01-8636-48fe4d9f825e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04fa219-8f9e-4905-8353-9ba0d2c7ad3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab23d395-8db0-4f6e-8ab7-3d17178d1bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a206ddc1-0774-42f6-979b-786e88d71fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a671aae-8451-42ea-a90c-c909f03508b6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe503cf-c187-4a5b-a76c-72849d237140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f07827-c69d-4c62-806a-3e3b54f31f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc816a39-1695-423b-81dd-46f5b9413b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf912c8b-866c-480b-8529-df3231331d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2a3b9b-e920-4e99-b00c-a35b2371181c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a065c996-ad81-44eb-ba97-38d13e2a1541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84d2ae9-3def-4c15-b763-386534edb553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e154788a-fafb-4b82-8b68-b65ce7a1ef4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a75608-5bb0-43c2-b942-26013ef3140e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68f3c2-6651-434b-8832-d5f51577ea88",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd569a-b461-4a50-938f-be25de817b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ef4d38-01f5-400e-b915-b3d387e75efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c4ed8e-f458-4fb5-834a-e5cd8542d8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2678a415-d78c-4def-86bf-661f397d1d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e96d6-267f-46ab-b39d-3134e654db70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fdf71-25a0-4f9f-a369-e49bb4b96403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1020ba59-1741-46d6-9acc-596f96d7d139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02268ac0-e599-43ed-b285-3b541f9f41e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc6c07-ea64-4e67-addd-78177278a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424cb801-4a90-490c-90ac-620cfdad1846",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39559d6d-6025-40d9-81d3-3164bcc74a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae57d19-9a8f-4810-8c01-7978afaba2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3cb14d-954c-49d0-b0ad-09362648c2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad23b3a-1bc0-4a78-8a37-7d44ccda4689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a410cc5-6ffa-44ab-822e-244a346a5b62",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed8d32b-02be-473d-902f-8d21b726e054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3096c55d-afe6-42bc-bd76-91175831cd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d409d7a5-4736-4cbc-8235-e83d95ae105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20ecba6-d4e5-4a82-a1e0-f9a3ef037803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1e41b8-500c-4589-b91c-185310e7e5a5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ecd31f-5ad3-4289-814a-3dd23eb94726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa5ccb9-8de0-480a-b810-9e0da74fb34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5364c08-05f0-4f59-939f-26d74ab09502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f5682d-75e9-4985-8ec0-0a0467558c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa24e1-19a7-4b32-b1b5-f96e637246d0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2232f0-f8d1-45a9-a761-03dc8f9aa3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3d42c0-c775-402b-b6b2-739809a6e8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555ea094-8658-496c-9283-6fce91925e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c518855-05b5-4e7d-afc5-41d76fb1edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92d2cd3-eda2-47de-b0ee-72f0a62aa2ef",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3613e1-c3b5-4b5a-93ea-cba2a452ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12e11ee-ea7d-4509-80cd-3e6250512a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca83bdd9-5b14-46fa-8221-27590bb630a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e099fc5-68f7-42f9-a032-138e0c1b23cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4c9929-d0f3-470f-b0a2-3e7a8d8f5b55",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e785bf70-b2d2-4f85-96e9-78eed548d356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e8e28d-151e-4500-a614-e1d4551e9233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261475de-e765-4641-b6d8-406fc1524316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a39f52-7aa1-45c9-91a9-21393579ce33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6caca5e-5eec-4b8c-9527-71ba799c6556",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf30a485-6739-4e02-8171-46899361cd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa9d2bf-22f3-4cf4-b472-33b6f03ef77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e4308e-3baf-488b-b0d7-f3cdd623ba6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da48a1ab-16e7-4eb6-9f7b-0567acce5e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33e293-b5d5-468a-a65a-a09b973e736a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714d0079-b6e8-4b7f-94d9-3e522bffbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77641229-27e8-4134-8196-1de1810d2eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c876e-cda0-41eb-8209-a3f988534966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69dd0b0-9338-45e6-bfff-7c5a16666b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696461db-6a2c-4394-8757-1187899c2981",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b6c69c-e380-455a-9213-d31bc7338aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e603440-9bf9-4b44-8923-fdf66ca49ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b60f91-c135-4e93-a1bb-375079331336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a814db4-d8df-4f86-b59c-3a36b516eb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac405f9-9bef-427f-8113-840fb6efcbe4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bcc9e2-c5a3-46ef-a8a1-74a36ec9519e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfdd874-dacd-425e-8e31-8096bebf4d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db416d-383a-435c-aadb-67fc8d192dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6bb89c-d7ff-4510-bbc9-0deb91c4ebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cd7a23-d1d5-494a-8618-ca38514e4c57",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8993fd2-a1b3-4e59-ac44-1299dd9b0ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b8f748-31dc-4792-92bf-e5b3b6a546ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca490e92-b4ec-4491-b34b-6e3ac437d9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdfbfbd-9d18-4365-a9f0-13a0be0fa86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72c58e5-1246-4a76-8ee6-8c57c852c79e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31fb6cc-fb9b-44ce-9ada-fd78297bfec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd27dcd-3b33-4589-ab8c-a317c46e412f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e42679-8fc3-40f8-a79d-3d7f5467931a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372b5821-f772-4ac5-a348-1fd2f30c23cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b043f2-6f71-4e98-aeb9-f11b0936b159",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe7548b-c003-4ded-ba4f-3d9d605737b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f6fc9c-ad4c-43f0-bba9-b2c5df5e53f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7faab42-5c73-45fb-b462-34e305b15d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bed5985-611e-4e55-9435-107b3b5b06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9a202-a727-487e-81fa-c0027a3d627f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dda2d3e-ad56-4517-9621-3eaf29153f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec83de4-fd65-4e08-9cf5-d1abff9684d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3667403-183e-403b-a8e8-ef66834cc77b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03877879-a5ae-4d17-bef3-8d1d7a525919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298c3051-8755-4b42-9f62-52038ce45d40",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b25d99-ffac-423e-86c1-e15ca483f6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602fd6cb-7cd9-4fcc-b2e1-096c274ce5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c09cb59-19bf-4b73-86d4-e9c02c23e90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f4674c-6050-4828-9d79-977d989b5da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7b404-5e98-40fa-91f0-fecef471ee36",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4532cc72-771d-43d0-8548-a1787651740d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598b1c8f-dd32-476a-9fd3-4367a190a7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f75cdc-7ecc-4438-91fc-5b9eb9b6c308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006b55b9-4e35-4068-a80e-240d703d40ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22f6dc-689e-48f1-80e7-af94a53dcae0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50817ffe-8c57-4f9c-a10e-ecce809cdf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54afdf9f-739e-4d63-bdba-8f9ba9e12f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff875947-519c-4c7a-85e9-c02b2941d727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ec396c-3bd1-4936-8980-30c4c29cd2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9555bb-ff65-470f-b577-22753529da57",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4b9b0-cbda-4576-b64b-70be92a33e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe56af74-9bbe-4b9b-ae7f-6c37123503c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7458ccf4-d4cb-4fe3-a8da-5a65fb016b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bf5246-3ec7-431d-b239-67b66dab5b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408d6f7f-79cc-4d8a-b8fe-783bb893e816",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d6bca8-bf30-4075-9aa6-33c409697b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a316ee7-a471-43c2-a3c4-083781c6c94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f440649-4ac8-4d9b-9cbc-40db17a8121f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a33d7f5-35af-4f89-b94e-8fd4f2b54f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c493aa3-454a-4c44-acdd-c991c1e6b15c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58f505f-da52-45bf-b6ef-cbda676e18d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2376bc4c-8154-4261-8f4d-251be2096460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57011315-cd7a-4a18-bb8a-e5656e628c14",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edf8b09-8a8c-4b5b-a545-af440ff1392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0542dde-99c7-4597-abc7-9755cdc9cf03",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157be58e-da67-47bd-b10d-1a815ed17365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbb8601-53f4-4e4e-b15a-d969b8995e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f68c6-5930-4b1d-9672-45aae3c858aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397fa12a-87e9-4030-88a1-60b3701dfc1b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1436cf22-cdcf-4eec-b31c-ab604d623eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d302a4b9-0a7c-4995-8ca4-13d021cf86c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd6cae1f-3117-426c-88ea-c1216ebd64fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4075fecd-cb51-431c-ba54-06a1c1207881"
                    }
                  }
                ]
              },
              {
                "id": "85baee0b-f366-4ad2-864d-cb41440372bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c265940-801e-4dec-a9d8-38041a5df01f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445a8bb6-86f7-4f26-9509-f7690e8b9680",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f405cb1-14b6-426d-a28b-f64328fefb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87594f78-573f-4a5f-bc47-411125e6d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af1205cc-4ce0-4789-b76d-d9c53dd4e4ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39c7cd01-90e0-45fa-a2db-5a4e23fef99d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd38a6a-18f4-45ff-8b94-8250b988a46e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aae2e0ff-37de-495f-9c31-a8f289813c0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5a9348b-2691-41ef-a1da-467a210e7d53"
                    }
                  }
                ]
              },
              {
                "id": "588a753f-422f-40a4-b9d4-907143200fbd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a40daedb-d31a-4e7d-abe5-bcc13cafe35a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a429fca-67ae-461a-af8a-7897f210b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8add465e-5021-42d4-9d02-1b01cae23ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bc7753-84f2-43c7-a477-6184b87e232a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e601643-be77-4456-a3b0-2b7c4931b880"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2a5c5bd8-69e7-4dda-8257-b7b846fdce16",
            "name": "Positive Testing",
            "item": [
              {
                "id": "704ae1d0-7f87-4f12-afb8-043e3f3713d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "533f75cc-0c44-481e-8620-89d1cb9ac258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0576c98-6262-4d9f-bab9-abe7f9c0a754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8cc075d-9c8b-4613-a50c-8488b2d6f301",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "493cd326-1799-4065-881c-82625b731309"
                    }
                  }
                ]
              },
              {
                "id": "998c69a9-16a6-40c0-a165-eed0519d65ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59684a74-c2b1-415c-b47b-126087d629e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01857018-69df-43aa-ba18-8b4559fc50b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec8e2248-97cc-42e6-b7cc-b2736c8e71d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77a2b45-5515-49cc-a4fb-8d76ee4b1eca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dd62fc1-6251-4d80-a412-a9c0828f0e7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b3bc9993-c6c6-4e7b-bc01-3777d4b6307c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53f766b1-2899-4a1f-9473-d30a294c29e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18f45389-20fd-42a8-a7f9-cd081ba3d1fd"
            }
          }
        ]
      },
      {
        "id": "599169de-cccd-41a2-9b49-a9e3e963e15d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7dcf7f9a-84da-4970-b687-f1ddc02a9d8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af09b5bd-54d0-4214-ad3f-eacd1a60cb87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3f34cf1-5b88-4a13-8ac2-b8b10ba0b38e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087208d0-9ad5-4233-b95d-8013d97f0939",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f719cd5-57d1-45a3-a326-431a125cef63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92c81e3-2d41-4ef4-8a3a-bed076ccb719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "098d4903-55af-4bbb-b07e-25a4d5264c6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80691a68-6cf5-47e0-89c0-a229c1c3fce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636e5427-fc6c-4cdc-aa60-cc744481a2d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59510be7-f94c-47b0-8c36-acb966544e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23523471-63e9-4739-8017-cff4207726d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "115d5376-014d-49c8-b925-1fe60f6f2820",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "95b529e5-a583-4b1c-bb1a-cd0e0b984eef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b04ae82f-1b94-4eb6-978f-845f5728d372",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "332e13e1-ba87-4fea-b2cf-143f8666b8b6"
            }
          }
        ]
      },
      {
        "id": "42ef71bc-46cf-406f-a786-c8b96bffc33c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9b6a8c2b-8e81-4b7c-adb4-9e4723014bce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b41033f7-c058-46cf-9bbf-9e69cf8f0046",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08093862-52e7-4f45-85c0-2e45f3949102",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c34fd22-8235-45a4-9dc3-b16854213290",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ffaff7-cbd9-40f3-80a7-588a96200e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6268f831-3ade-4fe0-9f89-fc1521ab64ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06b2d3c2-3724-487e-8a64-95b4b8884b35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b485557a-cf63-4247-8f81-8ceda4947fdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39e6609f-88d5-4bd9-97f2-0a4a67757968"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3594fb43-fb65-409c-be57-844c5a47f61c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "681273fe-91d2-4d04-bdb1-31a3f6ec3ee5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cfbf5ba-e54c-40ae-9ce5-2e2eaa0404dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23df6b50-a9ab-4224-828e-5fd0ade025a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebf8511c-fb8d-4e14-9093-9b1a5bc17232",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22066d5c-0b6e-4e3c-ad77-c7597eb35b62"
            }
          }
        ]
      },
      {
        "id": "d1b383b5-01f7-4ba3-94d5-a3d5ec8c7196",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "45529074-edc1-425e-9081-f49c50c0ffa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0f377c3-57fb-443c-8c1b-123227b7ef86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99748292-60a1-41db-8e29-2e10e78b7a97",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481faa61-1570-4a1e-9ac9-4bb53179704b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed9c1881-b675-4acb-820b-02acb3eee791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a627c63-b557-43ee-9230-f90d67ba309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1e025d-efda-4e88-a41b-0455b4764de9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bccd03a4-16a6-48c0-8bfb-b91c5db8be43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b92d96e-0bff-4a76-9d36-1be8508dd1be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9af4ee8-be51-412e-8192-7d5d55a3521a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bae2bc39-62b7-4699-ab06-f2bfe829922b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7e3f5d3-4f35-4fe7-b310-916f9db4731b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5148cd54-65e2-4f67-9217-9ef1fd406852"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5fd3aa1-56d2-40fa-8462-19f776d29621",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b1c9822-7fda-4dff-94b8-e920573db491"
            }
          }
        ]
      },
      {
        "id": "4cc7394a-5604-41a8-a58b-bbc6fadc9af5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6470207e-6425-46c1-a395-519fa5f2dba6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a5e18c2-0647-409c-9331-d9bb87d4f3e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "619f7a03-8f01-49ad-bac5-22c003d44c57",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c86197b7-7439-4d8a-b053-8a12fbb359ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3c0a2bd-6742-4db1-9688-cde5f42b918a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.69366197183098,
      "responseMin": 12,
      "responseMax": 8108,
      "responseSd": 547.7672231933013,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692750713402,
      "completed": 1692750758179
    },
    "executions": [
      {
        "id": "bac5ec19-7103-4d70-b776-092f5fea027f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3b9adecf-b908-4852-b47a-64ce0867a46c",
          "httpRequestId": "a516c676-9337-4132-95d4-ad08619bd6be"
        },
        "item": {
          "id": "bac5ec19-7103-4d70-b776-092f5fea027f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "152ca2ec-02ea-4591-8a82-c5c05b1a97c4",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "d8a1cbf4-b8d4-4b2a-9616-b161901115a1",
        "cursor": {
          "ref": "b861a90f-23ed-4a38-bea6-b47924e3f3ec",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bdad6af7-c79f-416a-8f0e-8d86b2c5baec"
        },
        "item": {
          "id": "d8a1cbf4-b8d4-4b2a-9616-b161901115a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec315528-9e10-4e91-8253-bee0a2b2df96",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "2db916a4-52f7-481c-bd79-2c7a696737e3",
        "cursor": {
          "ref": "1b40ed1b-0b56-42c3-83e1-d8c1a0fa9033",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe5f0b5a-0af2-430b-bec3-961a1d7774d1"
        },
        "item": {
          "id": "2db916a4-52f7-481c-bd79-2c7a696737e3",
          "name": "did_json"
        },
        "response": {
          "id": "89be5934-e4f1-48fd-9186-8640e810bc6e",
          "status": "OK",
          "code": 200,
          "responseTime": 256,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299dae45-c800-4f9d-ba2b-ce7213e39d2f",
        "cursor": {
          "ref": "7ef7f537-25b5-4e75-b28b-ea815e00bcba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4efeaf5c-776b-4265-a71d-de09fb906e12"
        },
        "item": {
          "id": "299dae45-c800-4f9d-ba2b-ce7213e39d2f",
          "name": "did:invalid"
        },
        "response": {
          "id": "28da3755-19dd-4c6e-b5ec-a5d030156542",
          "status": "Not Found",
          "code": 404,
          "responseTime": 565,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299dae45-c800-4f9d-ba2b-ce7213e39d2f",
        "cursor": {
          "ref": "7ef7f537-25b5-4e75-b28b-ea815e00bcba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4efeaf5c-776b-4265-a71d-de09fb906e12"
        },
        "item": {
          "id": "299dae45-c800-4f9d-ba2b-ce7213e39d2f",
          "name": "did:invalid"
        },
        "response": {
          "id": "28da3755-19dd-4c6e-b5ec-a5d030156542",
          "status": "Not Found",
          "code": 404,
          "responseTime": 565,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11d40ca-4e72-48c0-957d-2c013ecdeb3d",
        "cursor": {
          "ref": "9b5629ee-43af-4add-b6b2-55c36c64e86f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2796ca91-5ec4-47e4-9c91-da798937d20a"
        },
        "item": {
          "id": "b11d40ca-4e72-48c0-957d-2c013ecdeb3d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1a7b0927-2ba2-46ef-ac1d-13edad2fb8a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a637ee-a707-4522-8583-5f6c7e908d28",
        "cursor": {
          "ref": "12ef1595-ebd4-414f-a877-b8cd76f7116d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d194c1ed-2e9e-4bcb-8a66-6ca4612f2873"
        },
        "item": {
          "id": "03a637ee-a707-4522-8583-5f6c7e908d28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3c73edc5-84e7-4935-81fb-51e38fbb0dcc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6811d3-eeb7-4b18-856b-1a449921301d",
        "cursor": {
          "ref": "d5002db4-1f26-4fa2-aaea-ddc52184993b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f86bc9f7-a16a-4ecc-8e00-3b96e8fb23a8"
        },
        "item": {
          "id": "df6811d3-eeb7-4b18-856b-1a449921301d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a591a659-6312-4a87-8ffb-57dfe06e962f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad04d455-dde9-4ada-bdb5-2bb7fbb39e35",
        "cursor": {
          "ref": "d5c63b33-fa55-46bc-8f4d-f61fd7a9c788",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fdcf5b2-0651-4801-8953-591edd244583"
        },
        "item": {
          "id": "ad04d455-dde9-4ada-bdb5-2bb7fbb39e35",
          "name": "identifiers"
        },
        "response": {
          "id": "3a95833e-1762-43c9-a87d-3b08941b9233",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868b4741-b103-40c4-816d-5c474beea589",
        "cursor": {
          "ref": "804a3350-0d89-4f49-b32c-1a04a5f1b09b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d3304b6b-de7c-4827-9f39-daff170ecbc7"
        },
        "item": {
          "id": "868b4741-b103-40c4-816d-5c474beea589",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "223df1d0-4b02-4271-bfa5-908f93323292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3e5af-4a61-48b3-abdb-46012368fcd9",
        "cursor": {
          "ref": "a8ec1d89-c9ea-479d-9098-2808113f5dfc",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6e9c05bc-b3ed-40ac-9e1c-f2fa17606b91"
        },
        "item": {
          "id": "18d3e5af-4a61-48b3-abdb-46012368fcd9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "358b36bc-7275-4b0a-8509-b7d31692e25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db79cfb-6df7-4d66-b879-dbbc1bc76d57",
        "cursor": {
          "ref": "5b5da11b-73e3-4728-94fe-61dbafb2ebd3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f43fbb08-8db3-4b67-bb96-895bcae2d7e2"
        },
        "item": {
          "id": "0db79cfb-6df7-4d66-b879-dbbc1bc76d57",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "98e13087-3e4a-4249-8d07-22ab27fbb6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0610cc-5ff4-48a2-a5e7-e76a561fa81c",
        "cursor": {
          "ref": "e87045e6-139b-4c1c-a906-cb2fa97828ac",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9f75cedd-75f1-484e-bca7-9f7f5f3ddb31"
        },
        "item": {
          "id": "2f0610cc-5ff4-48a2-a5e7-e76a561fa81c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c482406-07dc-4752-8af7-515025bd1359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0082957b-7ad4-454e-8dcf-ee1fc1066569",
        "cursor": {
          "ref": "db0edcf9-c992-423c-87ac-9a81d0ecf179",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "597ea352-413a-4efa-a33a-f56468b26050"
        },
        "item": {
          "id": "0082957b-7ad4-454e-8dcf-ee1fc1066569",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8d648ff0-4ce7-491c-ad78-f783a81a1edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d81bfe-4b31-44ca-952f-c1998a42571c",
        "cursor": {
          "ref": "20709538-9ebe-4b9e-b00c-7c16c118aa9c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6297f84e-5e8f-47e3-8b6f-093a81fea536"
        },
        "item": {
          "id": "23d81bfe-4b31-44ca-952f-c1998a42571c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b487ca6b-8c88-4cbd-a36a-77a18d9c7981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6403993-fff7-4dc4-a83c-f085d91f6370",
        "cursor": {
          "ref": "955cb12d-fea9-42af-a4b3-4e365fafa594",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a0a2c35a-ac2c-4e37-8f64-7df54a665df8"
        },
        "item": {
          "id": "c6403993-fff7-4dc4-a83c-f085d91f6370",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30be5acc-6fa0-418b-984c-ab71e3dda2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b06bd-5bc7-422f-b667-48beab1f7993",
        "cursor": {
          "ref": "eddf1e11-7970-4c3b-9cae-060d2743cd1d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "39767130-8fd4-4d8f-b9bd-de8970f2cebe"
        },
        "item": {
          "id": "3f1b06bd-5bc7-422f-b667-48beab1f7993",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c5248d9c-e3ab-4ca3-b225-39c0288265d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91430c8-c897-4a9c-aa2d-8b2527e9d5f2",
        "cursor": {
          "ref": "40819f51-fda3-4d1b-b2da-813909419b30",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5751bc27-4a2c-49f1-ba2c-3ae5e36df7e4"
        },
        "item": {
          "id": "c91430c8-c897-4a9c-aa2d-8b2527e9d5f2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6e7668c6-2497-47fb-b4bb-34cbe39d9e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6da582-bcd4-49f6-b444-143d4cee3db9",
        "cursor": {
          "ref": "fec8278b-7a70-4c81-8edd-932abedc694a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "538fd295-559d-4ec1-a13a-c9e5046598eb"
        },
        "item": {
          "id": "5b6da582-bcd4-49f6-b444-143d4cee3db9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b379ff13-9fd4-48e3-8e19-ff5c489ec226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57243466-8fcb-4fcc-a5bc-7a8d16fa9a0e",
        "cursor": {
          "ref": "e579c51f-545e-4fd6-b3ab-4ec2bad2b242",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a18e6203-28c8-4cf1-ab18-5a3434b9d14e"
        },
        "item": {
          "id": "57243466-8fcb-4fcc-a5bc-7a8d16fa9a0e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5f42339b-860d-43e1-bbe4-83b9fc51aa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a4837-3e67-43d7-8b18-cac65584d386",
        "cursor": {
          "ref": "a9f7cc32-9ccf-4ceb-93cb-e12f14abfe36",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dfc27fbd-da9d-4c36-8845-c7dd357e127d"
        },
        "item": {
          "id": "891a4837-3e67-43d7-8b18-cac65584d386",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7dedebcd-25f7-4f43-81a3-4b518f9286c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5ae913-a07c-479d-a617-b5a335ab216c",
        "cursor": {
          "ref": "0a619ca2-4a22-4cdb-9dd9-6e37cedfef7a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ec59d625-d543-4bda-8a7e-83877d376683"
        },
        "item": {
          "id": "3c5ae913-a07c-479d-a617-b5a335ab216c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8324b1a3-7d51-4c34-bb38-23d7138d3e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527eb36b-c3dd-4ec6-acee-67fea74a0116",
        "cursor": {
          "ref": "d3e6999a-4d8d-4425-94a5-37dfc98795c0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "db8d3187-7cd1-4a73-bb7a-6fc5ef4d7add"
        },
        "item": {
          "id": "527eb36b-c3dd-4ec6-acee-67fea74a0116",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3f5d54b8-df90-4897-bf14-7993f0b0544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a2a66f-ae57-4624-a78c-64411a120647",
        "cursor": {
          "ref": "6f728ced-8965-42bf-be6a-dcf4067091d9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2e91ac24-9a0e-4ee0-a3fa-de53d974a71c"
        },
        "item": {
          "id": "e6a2a66f-ae57-4624-a78c-64411a120647",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "38bc3d57-1652-4d3c-b06a-62be6924067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4521db-9978-4cde-9e65-28af611f4df2",
        "cursor": {
          "ref": "1ec155eb-874b-44d8-ade4-7bcf27dcbc57",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dde028ce-40bd-4978-9960-07f1d2b0fc52"
        },
        "item": {
          "id": "bb4521db-9978-4cde-9e65-28af611f4df2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "93493157-7457-4084-9e99-a7a3cd3d0db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f7801b-11a8-4581-b9d1-c2056ae8a882",
        "cursor": {
          "ref": "a3e68531-4c08-432c-b23f-cc5d036c4cb5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d2769e2-ebc4-4796-a129-9f498be5d82f"
        },
        "item": {
          "id": "d4f7801b-11a8-4581-b9d1-c2056ae8a882",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ab39a733-7142-4507-9ca9-e38081e64f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e2a75-b61e-4127-8df4-aef6831758fd",
        "cursor": {
          "ref": "39a3c0f0-2c9b-4274-9c36-d78f90310ec6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aaa3639c-0d1d-48df-924e-c8fc1f23e450"
        },
        "item": {
          "id": "2e3e2a75-b61e-4127-8df4-aef6831758fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "41a08798-212e-49ab-b1b5-140ac3be3348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60d9901-fa15-4117-9a80-00a9a0619cfa",
        "cursor": {
          "ref": "2a6d3b94-91b4-4e3c-8fb5-759f3741ea60",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1a4166c4-8c25-4008-ae35-77667f788537"
        },
        "item": {
          "id": "c60d9901-fa15-4117-9a80-00a9a0619cfa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4dca1b83-d307-4b28-a80a-24806a2fc0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc563cfb-45b3-4176-8263-203a62999bda",
        "cursor": {
          "ref": "3ffe24bf-0546-4c99-a1a8-73b842582eb1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bad61c26-0b59-4acf-8c8f-7bb4f9b9f1bb"
        },
        "item": {
          "id": "bc563cfb-45b3-4176-8263-203a62999bda",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "950f7ed3-e7ba-4318-b4a5-3156e698f4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd490d2-90f0-4cc0-bb9a-44569d802406",
        "cursor": {
          "ref": "f93f0d4d-a2c4-4e7a-a15b-0a9a9e58694d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "76c9f1c3-8d4a-434e-9fca-b16d66952bef"
        },
        "item": {
          "id": "7cd490d2-90f0-4cc0-bb9a-44569d802406",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "492c1bc5-4592-4afb-85fc-861c081d0bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3b7a0d-7b60-4c33-9bf7-26f6057b66d2",
        "cursor": {
          "ref": "b71a6b07-e2c9-4075-b5f1-86f9fe1b8c98",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b6b3bf3-bb42-4019-b81d-7fc900449091"
        },
        "item": {
          "id": "1a3b7a0d-7b60-4c33-9bf7-26f6057b66d2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6ee86a9-fae4-4b16-a543-fc340c207683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b1562d-074a-46ff-9a04-dd5e170b8c99",
        "cursor": {
          "ref": "70e169b6-8cd2-42ec-9737-9995e576b527",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "41ff7228-e04f-415a-8a7c-d954b9f8ea32"
        },
        "item": {
          "id": "06b1562d-074a-46ff-9a04-dd5e170b8c99",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "56b21acf-2207-46ed-b117-18fb4d220f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6546dc9e-26ea-4147-a348-e78c2c0af322",
        "cursor": {
          "ref": "ae156341-3c25-40cc-a285-c0c70267dfce",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "05071acd-acfc-40d7-8e46-d766ffceb25f"
        },
        "item": {
          "id": "6546dc9e-26ea-4147-a348-e78c2c0af322",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "970e09cb-8c77-44a5-a921-c00fb8a09959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88921fd3-f5a5-4e85-b8f8-1c87efb7989e",
        "cursor": {
          "ref": "0fc96c38-86a9-440f-b38f-c510d80b9a30",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98aa5c7b-f8c8-4692-8380-f1eee825af79"
        },
        "item": {
          "id": "88921fd3-f5a5-4e85-b8f8-1c87efb7989e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "977e87ff-23d2-42cc-8a95-763d9ed0f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224662fe-a0f9-4687-8e52-96bd0bbec178",
        "cursor": {
          "ref": "21b01f75-4c3f-4f8b-8e81-3cc3561c6d46",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dc6fa111-7256-40f6-a106-047ae62519c7"
        },
        "item": {
          "id": "224662fe-a0f9-4687-8e52-96bd0bbec178",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d45517e0-49b0-4a62-9d9b-e53c5695f448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab710478-6f8a-46f3-a36f-80bfc86c02fd",
        "cursor": {
          "ref": "12c4bfcc-4db4-4262-8fb7-14e888a9f170",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "59b801d4-7113-44fe-9d29-6c93fcc014c2"
        },
        "item": {
          "id": "ab710478-6f8a-46f3-a36f-80bfc86c02fd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ae39de5-5744-4d65-85c2-0481eb353eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6861caf8-abe4-45fb-a55f-27d1634a4451",
        "cursor": {
          "ref": "03b5a203-cb0b-4540-a595-9d0a4404f6cc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9033297e-a1e2-4c98-a050-8bc2f40e722d"
        },
        "item": {
          "id": "6861caf8-abe4-45fb-a55f-27d1634a4451",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "26f1a818-b5c4-47cf-a37b-6d53a38b07c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045eae6e-4675-45ea-ad97-6692a44486ca",
        "cursor": {
          "ref": "6dbb15a1-6e7b-4e50-b477-9624a9dd71a4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "22463756-3715-4385-bece-7599552e22a3"
        },
        "item": {
          "id": "045eae6e-4675-45ea-ad97-6692a44486ca",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "61a17e58-3ba2-4058-a2ed-fd1a4280f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8bb183-3869-4134-b769-a0b30fb60c61",
        "cursor": {
          "ref": "69cac61d-f565-4cb6-9ba7-969321ee1b1a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "da607295-54b3-442f-b48f-908627cb73c9"
        },
        "item": {
          "id": "1d8bb183-3869-4134-b769-a0b30fb60c61",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b1d8e4eb-d859-41a7-b8d4-92c2382cf854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a9a14a-9b4e-43f5-9a5d-113a8df02dd2",
        "cursor": {
          "ref": "d0906e36-328c-4f68-a6e3-b4ac57767a80",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "954b3de0-10dc-48f4-9d55-3dc59572372d"
        },
        "item": {
          "id": "c3a9a14a-9b4e-43f5-9a5d-113a8df02dd2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "da0fa164-33e4-4172-9a1b-877e36e29940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05af9b6-ed83-47d9-8613-b49fe4a5e5fa",
        "cursor": {
          "ref": "6ae31f99-dc2a-4c4f-a198-dc483ade4745",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5a5fde7-db3c-49bb-8812-f0623419c4f6"
        },
        "item": {
          "id": "a05af9b6-ed83-47d9-8613-b49fe4a5e5fa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "086ecb42-0b9f-494e-b6c9-f2335690707c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58616d15-c4cb-46eb-8e55-f205aefe30a6",
        "cursor": {
          "ref": "67000951-2460-4026-b1be-52315fb9f760",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5672dcf4-f881-487f-a199-9d414dc8169c"
        },
        "item": {
          "id": "58616d15-c4cb-46eb-8e55-f205aefe30a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fa813c5e-7c99-4615-925c-ef17e79049db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b59f549-92e6-435f-917b-9dd72ee0c78d",
        "cursor": {
          "ref": "78f98a7c-9c4f-4cb2-9fb6-f933c429843d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6d9c3103-baf4-4c7c-b043-33eb9e33260f"
        },
        "item": {
          "id": "6b59f549-92e6-435f-917b-9dd72ee0c78d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "09034b6f-dab3-4708-a73b-313b27efe0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39084fe-3fa4-469f-83da-96784ff1ac9e",
        "cursor": {
          "ref": "57b81c5c-22a7-4a68-a4c2-6fbf4c7e7705",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "618fbaa3-a1fb-47d4-a037-a0c322a867e9"
        },
        "item": {
          "id": "b39084fe-3fa4-469f-83da-96784ff1ac9e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3f0114af-071c-496b-a88c-236e88e58924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9e3b18-301c-4bf2-98eb-151b9ea68579",
        "cursor": {
          "ref": "8c5e3208-125b-46f5-b3ae-1cf3986f005e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58c7972c-372e-4242-854a-d48113c764c3"
        },
        "item": {
          "id": "eb9e3b18-301c-4bf2-98eb-151b9ea68579",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "04da4750-0bcb-462c-9e8f-718061693c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba97f8a-e02c-4ec5-88d6-090cd7d91d69",
        "cursor": {
          "ref": "1e1b604e-717b-4aff-98b0-706b596521d2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0c546e1d-f42f-4338-8d74-1b36dd645e9b"
        },
        "item": {
          "id": "3ba97f8a-e02c-4ec5-88d6-090cd7d91d69",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b99922dc-d270-460f-8c5c-c2713970bb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dc6df5-dba3-465f-920c-615c22ac29d8",
        "cursor": {
          "ref": "4ea31149-cea3-4b77-ac3d-b517e85a6690",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d587046d-dfb1-41a5-bbc4-d491bab85940"
        },
        "item": {
          "id": "26dc6df5-dba3-465f-920c-615c22ac29d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6cd9183e-af41-4d7b-bfbd-390e005f0546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7098e68-9f92-434e-8fcc-a0cb6c2d4470",
        "cursor": {
          "ref": "6725d745-7cd1-43d1-8258-a910081a6619",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "abc1e1e1-6cb8-496d-b624-7d5fcbc8069d"
        },
        "item": {
          "id": "e7098e68-9f92-434e-8fcc-a0cb6c2d4470",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e1156682-01da-4578-b81c-81852ade86cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e245d-3bb5-4f5a-b4dc-155d8813423b",
        "cursor": {
          "ref": "c42d3010-eb98-4cf0-9a33-21c65c582184",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d1af4163-5ce2-48fe-ac8b-f8d0d4956b1c"
        },
        "item": {
          "id": "887e245d-3bb5-4f5a-b4dc-155d8813423b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ecc64efb-b02a-49b0-9464-3c292b32cebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c64a33-33f4-4ec6-94d2-08c12c352a9e",
        "cursor": {
          "ref": "db8dac01-e3a5-4ef7-be80-fdf4433f32ef",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b8e37d00-9952-4cd9-870d-1ff86895f9e5"
        },
        "item": {
          "id": "c3c64a33-33f4-4ec6-94d2-08c12c352a9e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b1928ec-4f53-4a98-af6a-813f75dff46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a77c21-b04a-4c75-904f-7b729a88f9fb",
        "cursor": {
          "ref": "49e47f4e-7455-4b02-a4fc-95d4c796c914",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9ff4f9fd-03ef-4272-94f2-435247659757"
        },
        "item": {
          "id": "64a77c21-b04a-4c75-904f-7b729a88f9fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "af0a4fa8-3936-448e-ba44-c4d3b5ed78a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d648a1b2-0f07-467a-a299-5d4fcbd6071c",
        "cursor": {
          "ref": "7829a0bc-5e6e-4e78-92f5-7d624e6bb893",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b8a25fc0-dcba-4862-b67c-f3d4379bb631"
        },
        "item": {
          "id": "d648a1b2-0f07-467a-a299-5d4fcbd6071c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8afc4615-85f7-4365-a9fa-3e548c1e8779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d3b0a-c199-4b2f-9427-c93914e98c1a",
        "cursor": {
          "ref": "d0627f74-db27-4e06-be3f-8698c94b430e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8684e20d-55d3-46f7-a990-2209c5897e69"
        },
        "item": {
          "id": "af4d3b0a-c199-4b2f-9427-c93914e98c1a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "937ea4f2-36ce-4ef3-b9f1-fbbc04c75500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee60f8be-738a-4a99-a4ff-fcad96da66c1",
        "cursor": {
          "ref": "f1978cb6-f414-4a45-907e-9bf0b06d69cf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "364fdd82-71c3-4841-9b57-7b87cc5c7eb5"
        },
        "item": {
          "id": "ee60f8be-738a-4a99-a4ff-fcad96da66c1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae964ba6-e468-450c-bd4f-7f3d563e0261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96295b-657d-4bd1-b6f9-d99a9780e79e",
        "cursor": {
          "ref": "335b122a-05c4-4a78-bce3-9cbcf05594d4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0e757965-861c-4338-8a67-798920677a9c"
        },
        "item": {
          "id": "fa96295b-657d-4bd1-b6f9-d99a9780e79e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ec7fee13-2fe9-483a-849a-ab502b9be1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7629be9-10e4-41ca-968e-76d71fdaca2c",
        "cursor": {
          "ref": "02c8c0f5-3fd4-4550-9fbf-fc86371acec5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b69f59c5-3269-439d-87b1-f67f296f63a3"
        },
        "item": {
          "id": "a7629be9-10e4-41ca-968e-76d71fdaca2c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab59b93f-552a-47c0-874a-687e78802e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dda2df-2165-49a9-8e0f-a43283a2730b",
        "cursor": {
          "ref": "982c1967-7a42-4ecf-9c11-4d1884f69851",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d56e25c1-61df-4d1b-ad5d-6be078ca7cce"
        },
        "item": {
          "id": "c5dda2df-2165-49a9-8e0f-a43283a2730b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05331e1b-4014-40c6-82f4-a201252a7e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f20600-6efb-4bf6-980d-6e1eb6e8b400",
        "cursor": {
          "ref": "1afba791-e55e-46ab-a32e-d265134ed60d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "36520518-4ce7-4144-aaa1-73aca00a6474"
        },
        "item": {
          "id": "03f20600-6efb-4bf6-980d-6e1eb6e8b400",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4b12066f-97e3-45f2-b54d-056cdb1f84d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d04830-c701-4f14-b5fb-c2da37ac851e",
        "cursor": {
          "ref": "c6089cc7-16f9-4df1-9734-da5d834a8986",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7fd07585-c44f-47b2-ae96-47b339ee9ae8"
        },
        "item": {
          "id": "44d04830-c701-4f14-b5fb-c2da37ac851e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3e905bee-370b-4b7c-b188-267dc361b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9009131-4f3c-458e-ba98-118842ec6f60",
        "cursor": {
          "ref": "524b1919-f3a1-4bd3-9539-35f2210bedeb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4652db32-ea86-418b-bcb3-cc0d10ba4820"
        },
        "item": {
          "id": "e9009131-4f3c-458e-ba98-118842ec6f60",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8dc8ae09-96cd-482e-b43b-feb44793a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456cd445-b378-4ebe-a71b-ee088eeb6867",
        "cursor": {
          "ref": "e8b354ce-899c-41d4-a579-fb9c93172cc6",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a4625d63-ea41-45c1-b252-049e70da0a3f"
        },
        "item": {
          "id": "456cd445-b378-4ebe-a71b-ee088eeb6867",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9c4c9189-0f03-41f2-8116-a252d639c23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7076c2-aec9-428f-8f0c-0b5672b58bf1",
        "cursor": {
          "ref": "6697bcba-e2e3-4d90-a605-6b29148c8d07",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "feb059da-1e36-47a7-8de0-e4ce3140789f"
        },
        "item": {
          "id": "0b7076c2-aec9-428f-8f0c-0b5672b58bf1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f06ca948-835f-41d4-9308-5ecace1a1f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cadb4db-cfa7-4d90-85c3-9b39e1ba861a",
        "cursor": {
          "ref": "59011199-efa9-4f69-b88c-ef6ac0a1913e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16eef393-b0ea-478d-9334-a3ada815f970"
        },
        "item": {
          "id": "0cadb4db-cfa7-4d90-85c3-9b39e1ba861a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0b7ba328-3b19-4456-9c21-45d2c62259b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e58607-7f19-4522-ae6b-ae6192be52ab",
        "cursor": {
          "ref": "0f213299-cc65-414c-a158-a1f817a0436a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a1c1d768-d097-42c2-929f-df779e9cb2be"
        },
        "item": {
          "id": "58e58607-7f19-4522-ae6b-ae6192be52ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c1903f34-874d-460d-affd-04d59c0d582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136fbc3c-f5e2-4aae-aa56-f8a2c7d90e8d",
        "cursor": {
          "ref": "f403c512-c916-4d54-84ff-0d299e74401b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e83fcdd0-7467-45e6-987e-d481ebd128b1"
        },
        "item": {
          "id": "136fbc3c-f5e2-4aae-aa56-f8a2c7d90e8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5768e7d5-f197-4cea-8fcb-1139c553341c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329d068a-d3bc-42da-8ca7-4d59de0cd235",
        "cursor": {
          "ref": "e77a163c-df88-4d0d-8e21-64a643397af9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3f870bbe-5ff3-4e31-8251-856f1a644a03"
        },
        "item": {
          "id": "329d068a-d3bc-42da-8ca7-4d59de0cd235",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4e88dfaa-83c6-43d4-8a82-5180cc26a82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5406c-f854-4c62-8eea-2fe0685cdd65",
        "cursor": {
          "ref": "5df7fedd-3270-418f-a2e7-ac274f730f3e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dfce40fe-2e0f-4f33-aa6a-5b43a43ab347"
        },
        "item": {
          "id": "57a5406c-f854-4c62-8eea-2fe0685cdd65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2feaf1fd-2cb0-417f-837d-0b37dd0be872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbecbfd1-19b9-457b-b5dc-cbeda4efaef8",
        "cursor": {
          "ref": "b4f3ade3-5fd2-46e7-99fe-3facd73ca9fa",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "63b0d32a-59af-4e92-b06a-92e4dbdfbf29"
        },
        "item": {
          "id": "bbecbfd1-19b9-457b-b5dc-cbeda4efaef8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "106e8e83-9b73-4786-a960-1d4a03d4a3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a7c3fa-0c6e-4a8f-945e-779ca13657df",
        "cursor": {
          "ref": "a3255ae7-e954-41e6-abba-1e8457260891",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "20e62bc5-f6b5-4830-82ef-049b5a686cf9"
        },
        "item": {
          "id": "a5a7c3fa-0c6e-4a8f-945e-779ca13657df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "728b4582-26a3-40c9-bb89-db884387db08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5cd0e6-bf93-4c4b-adb9-2ec8ec11ffe9",
        "cursor": {
          "ref": "d37f1119-c62a-4abe-943f-6e45c5eaedba",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa224865-5806-464c-839d-1648885991cb"
        },
        "item": {
          "id": "eb5cd0e6-bf93-4c4b-adb9-2ec8ec11ffe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d4bdb596-e1bc-4755-b27d-3c3e9175d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b30420-0568-4d33-b0d8-07ce8dc51a4a",
        "cursor": {
          "ref": "666f4bb4-816c-4b74-a494-159afa58477b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1d206dc5-f48a-47b5-9a00-f80e92240c8c"
        },
        "item": {
          "id": "03b30420-0568-4d33-b0d8-07ce8dc51a4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d7fe4729-9594-4ae0-becc-d74f2353f3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50a518a-05c1-43a4-9566-e9bd66c93e9b",
        "cursor": {
          "ref": "69c85943-12e1-4481-823a-8bd5d832be75",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3c3c8b4d-7829-4b86-9971-0861402aa202"
        },
        "item": {
          "id": "a50a518a-05c1-43a4-9566-e9bd66c93e9b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "97f63f72-ea20-431a-816a-8403839ed8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea6f0c-02e4-4b5c-8398-8538b678bd79",
        "cursor": {
          "ref": "0878fb7b-3fa7-4cef-b19d-874133fcbef8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "42e52949-c588-4a82-aa16-884b8a095b46"
        },
        "item": {
          "id": "82ea6f0c-02e4-4b5c-8398-8538b678bd79",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3d373356-d535-4ab4-a313-cb315084c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18489ebc-e039-4a3f-9696-9b824edb4ba0",
        "cursor": {
          "ref": "54f5b289-6f2d-426a-b87b-472cba276138",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "859464bf-f7ae-4cdb-bfc0-9ff0cb39bf17"
        },
        "item": {
          "id": "18489ebc-e039-4a3f-9696-9b824edb4ba0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae3c8163-4be9-42ab-ab12-9cf41698d3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9893e55-2b02-427b-8722-130895233e02",
        "cursor": {
          "ref": "478bafa2-fdac-4054-a91f-60fc767db7bc",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c29f8d76-23ee-4172-863e-37e14ee2fedb"
        },
        "item": {
          "id": "c9893e55-2b02-427b-8722-130895233e02",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a3588283-6144-488e-a800-671e7377a64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a7ea11-be85-47a0-866b-104641fee27d",
        "cursor": {
          "ref": "f7f9397c-92c1-4a33-a900-2aba71715b3a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b6a9114f-0073-444b-8397-d6c8db4b220f"
        },
        "item": {
          "id": "a7a7ea11-be85-47a0-866b-104641fee27d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "92256b86-6452-47c7-9ad2-d795708453d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e3b698-e179-4c29-b855-6dd1b7e4e1ae",
        "cursor": {
          "ref": "3a41b92a-d3a8-4cd1-a077-2093bd8cbb99",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e67368ac-f1b7-49fd-b677-b0538c30e536"
        },
        "item": {
          "id": "58e3b698-e179-4c29-b855-6dd1b7e4e1ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "400829fc-a36c-4fca-bdac-59927bd12640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d714b4d-e497-457c-9b8c-7960857cf28a",
        "cursor": {
          "ref": "b8c05eb5-4922-45b0-b5e3-34d392093424",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea9d0735-39c4-4faa-bfe8-63b588c34980"
        },
        "item": {
          "id": "2d714b4d-e497-457c-9b8c-7960857cf28a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cd075a13-710a-4ec9-9c2d-510767cc4b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d9779c-3e35-4a4c-9985-88951ee8759e",
        "cursor": {
          "ref": "79c45677-923f-4958-9a98-a7c24f1835db",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "23404e7f-1091-40ac-ab57-f2bacceb0c19"
        },
        "item": {
          "id": "78d9779c-3e35-4a4c-9985-88951ee8759e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ad079b31-cbdd-45a7-8c61-26f76623c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcec057-168b-4c24-87ad-e3efd34b9728",
        "cursor": {
          "ref": "2b6376e3-458e-4b02-a07a-7d172ac9a20b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa6d85ed-ad1f-4c6d-b09f-d0138b88330d"
        },
        "item": {
          "id": "2fcec057-168b-4c24-87ad-e3efd34b9728",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "866893ad-2ea4-474e-b89a-18316cce9a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdb35f5-4862-4e61-9ebe-59346d6c8094",
        "cursor": {
          "ref": "50e0cb9a-2837-4372-a4fd-edf4a9f87cdb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49ae2540-72eb-4789-94fc-24242f536aae"
        },
        "item": {
          "id": "8cdb35f5-4862-4e61-9ebe-59346d6c8094",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b4f9f57d-0257-4239-800a-38ae2be900be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e3d0be-c638-4028-a70e-f6e92f2e9446",
        "cursor": {
          "ref": "0f246e63-61cb-426d-bed4-19a592b54873",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a8feef62-df2b-4c6d-9227-25d588e8f24a"
        },
        "item": {
          "id": "d8e3d0be-c638-4028-a70e-f6e92f2e9446",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7815bc0e-94aa-469d-9a5a-945b480d7d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a3fc4c-28d8-435a-adbc-89d446952c88",
        "cursor": {
          "ref": "2524ff13-ac35-418f-b0d8-d99299534d12",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "266f8e43-52fe-413b-b89d-72d646bf4b9c"
        },
        "item": {
          "id": "f4a3fc4c-28d8-435a-adbc-89d446952c88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "37d5c45c-902b-4b8a-a353-d9602a7f53cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cefe23-1f99-4f45-b4c4-365b086cc1a2",
        "cursor": {
          "ref": "a36fb0cf-bcc4-456d-9ca8-5437ca9c5d4f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cac0acb9-e29d-4bb6-bce7-0b77bd59d8b4"
        },
        "item": {
          "id": "c8cefe23-1f99-4f45-b4c4-365b086cc1a2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "37a72101-5ea9-409a-88d0-e66c3da2a908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceeb070-58cf-41f2-978a-a4541ed133e3",
        "cursor": {
          "ref": "08c4ec97-7696-4693-8081-0cf6b6806303",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c30f97bb-04ec-4215-80ee-679a58c1730f"
        },
        "item": {
          "id": "8ceeb070-58cf-41f2-978a-a4541ed133e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1129b492-79be-4737-809f-1ee4405c0dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab1cdfe-466d-4522-9d4a-e18b2a9ad691",
        "cursor": {
          "ref": "01487b05-9dd3-45ac-9503-138375330c15",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b063b6c4-c976-4bbf-8eb4-f64ef25034a4"
        },
        "item": {
          "id": "2ab1cdfe-466d-4522-9d4a-e18b2a9ad691",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a6684e80-d22f-4819-bb21-6cba82ffc84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7048d2b3-3292-457e-abc8-970b2ff1f8c7",
        "cursor": {
          "ref": "3366c2be-2601-4f75-bc31-d2894e24f7d2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1ceb55a5-739f-408e-bfb6-56f71c7836e2"
        },
        "item": {
          "id": "7048d2b3-3292-457e-abc8-970b2ff1f8c7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "068c1323-eda8-436e-8c6a-8a55da5af8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5475e9-c5f4-4393-af26-9f97f9c96e4e",
        "cursor": {
          "ref": "87142cd4-2d3b-42d5-adec-f6fc33ec08ff",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9821ab57-c19f-45ae-857d-7462ca08cc7c"
        },
        "item": {
          "id": "8a5475e9-c5f4-4393-af26-9f97f9c96e4e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a9b49a07-f279-4d3c-b26d-0380b9f305a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8d4066-3e1e-4eeb-bfba-20806ea706df",
        "cursor": {
          "ref": "eb4432d4-d0b0-4957-8a22-bec6fb975795",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c0c4a673-9f1b-46e0-879a-d535a0e02889"
        },
        "item": {
          "id": "cd8d4066-3e1e-4eeb-bfba-20806ea706df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2eb1c0ea-43f4-4c38-83b9-3926fa57fb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47110818-eafb-4538-86b9-683bdc29e687",
        "cursor": {
          "ref": "03143109-cfb7-4b05-a8b2-ec7956f85a73",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b337beb1-b8f1-4ab9-8fa5-0d8042997696"
        },
        "item": {
          "id": "47110818-eafb-4538-86b9-683bdc29e687",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1582ed43-c802-403e-8b9e-ae087f887514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffbd4b9-622e-4ba0-bc54-fd1663349036",
        "cursor": {
          "ref": "87ba5f8e-c4d0-435f-95e9-bea17dcfc639",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16998a06-416e-4630-a735-bc1bfa7c00e2"
        },
        "item": {
          "id": "6ffbd4b9-622e-4ba0-bc54-fd1663349036",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "863518d9-3aa2-4e6a-8553-78d2666cc7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c3043c-7f9b-495b-b58d-2ccb9d2e6c5b",
        "cursor": {
          "ref": "9528b713-652d-4b51-85ca-fb13283e16f7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1cd92a72-a9af-4ed1-a767-4e25c5baa694"
        },
        "item": {
          "id": "81c3043c-7f9b-495b-b58d-2ccb9d2e6c5b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f63b24c0-6aab-46c2-b603-8f21279520b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399e0a6f-89fd-40df-b585-48fb4c636c24",
        "cursor": {
          "ref": "07ef23a0-b5e6-4564-8421-81f5a371028c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43abae6f-f6db-455b-ab15-8d51aa52b5ce"
        },
        "item": {
          "id": "399e0a6f-89fd-40df-b585-48fb4c636c24",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2c619003-3a4e-4baf-818b-bf175562ba05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb450f72-3fb2-4e94-ae2b-5f8ae2a67b76",
        "cursor": {
          "ref": "0ca3b460-e29f-48cb-96ac-8b0d9275135f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "27f903dd-662c-4b49-ac2a-80f342b11dc5"
        },
        "item": {
          "id": "eb450f72-3fb2-4e94-ae2b-5f8ae2a67b76",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "444f2689-3d69-4081-84c1-1c536e5d09f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf0c556-38aa-408e-9c7f-6c0aef7fc506",
        "cursor": {
          "ref": "a78e6615-2afc-4cb5-898c-4844e6209675",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57ed8550-0b81-4c1f-ae4c-6833e30aaeae"
        },
        "item": {
          "id": "ebf0c556-38aa-408e-9c7f-6c0aef7fc506",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aebc087e-6d78-4425-aa98-5fa1543fdc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcfb42c-3968-40b7-843f-9fd6ed2ed492",
        "cursor": {
          "ref": "fe474359-87a3-4abc-b9e8-11f808f9a47e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5cf5ed0a-959b-4e1c-9888-077b7621dced"
        },
        "item": {
          "id": "bdcfb42c-3968-40b7-843f-9fd6ed2ed492",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "29aa4a9f-5a4d-4e14-a45a-88612582efc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78db5e0-5b13-4417-9331-849e50e28b35",
        "cursor": {
          "ref": "60f08843-d1a5-41a1-b4ee-f1fde7e47c58",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1efea80c-5417-43b1-825c-1819100540c8"
        },
        "item": {
          "id": "d78db5e0-5b13-4417-9331-849e50e28b35",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a316da9f-f9f3-46c8-ac6b-e8bed6b79ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd74e67-f6b8-4203-a81e-10e8107106b8",
        "cursor": {
          "ref": "f16f29f0-683e-4ecc-932e-5b7a7606605e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2fba205b-cb84-45e9-9b44-d67cfacd0191"
        },
        "item": {
          "id": "4bd74e67-f6b8-4203-a81e-10e8107106b8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4e307ab-38a3-4b19-b042-b78c53cbceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e266f04c-e5bf-47f7-ab7c-a35d18a51374",
        "cursor": {
          "ref": "8c6387b5-14e6-4b6b-902c-32ce3a6b8a11",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6cbb4e07-ef2f-4103-a447-9a9c4ee8e385"
        },
        "item": {
          "id": "e266f04c-e5bf-47f7-ab7c-a35d18a51374",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd74bd3c-669f-487c-815b-109c1818c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f4434d-b752-4f00-b638-cb3b234dce9b",
        "cursor": {
          "ref": "0e0b6fa6-257e-400c-8134-64e4679a7cc5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd8b2571-cc3f-45e9-b7f7-b9ea710ecf71"
        },
        "item": {
          "id": "42f4434d-b752-4f00-b638-cb3b234dce9b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1afd89bf-6a44-46cc-b42a-0e15f6423b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92bb075-d9fd-4ee1-986d-29c1fdfa7c21",
        "cursor": {
          "ref": "221d3825-003a-4fa5-aae7-0e91cf87bdd7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85d9475b-d01a-49fa-9e23-11efd985cbdb"
        },
        "item": {
          "id": "c92bb075-d9fd-4ee1-986d-29c1fdfa7c21",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9af2606a-d79d-498f-8612-27a954c7e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d96b5f-1909-4042-a657-6058d6199016",
        "cursor": {
          "ref": "cd0856ec-1371-4aa9-bc71-9fa1a4c05336",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2c3a0bc2-0f0a-4847-b93b-732967b4d177"
        },
        "item": {
          "id": "57d96b5f-1909-4042-a657-6058d6199016",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ae8345b6-edd6-45a6-8e61-e226ff5112e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1671959-983c-4a09-827f-5594fee59473",
        "cursor": {
          "ref": "c4cb16d2-156d-4566-9031-0c1b93814040",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e049fa98-46d2-4f8d-a6f2-fe253d2090c8"
        },
        "item": {
          "id": "d1671959-983c-4a09-827f-5594fee59473",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3b0a621c-e31f-4c17-aad9-556e6d46e8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "cc351b2c-2a8b-426a-9483-612f2d3f83c9",
        "cursor": {
          "ref": "0862647f-d6ef-4cf8-95f3-e696ef533d07",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0be3ca52-f362-41d4-b372-0248ad5529db"
        },
        "item": {
          "id": "cc351b2c-2a8b-426a-9483-612f2d3f83c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7e0c564b-c839-43da-b29c-49e78432ab82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "2e321358-6ec0-4238-80b0-87add078886f",
        "cursor": {
          "ref": "d48b185a-0de8-429a-b318-2574f23d1b50",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "37e3866e-0e1a-4b35-b288-d9889ac706ff"
        },
        "item": {
          "id": "2e321358-6ec0-4238-80b0-87add078886f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ddaa06cc-b05c-48ca-9048-457085ae2fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b2c70d83-40ed-420b-8bc7-ee61a72bc007",
        "cursor": {
          "ref": "f2eb5948-ce48-4158-b463-e6767e8c4b0e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fdb94532-9e54-45f8-9acd-5b4449f0b65f"
        },
        "item": {
          "id": "b2c70d83-40ed-420b-8bc7-ee61a72bc007",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "05e268c3-a599-49f4-a93e-4ba7b7cf418d",
          "status": "Created",
          "code": 201,
          "responseTime": 8108,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa7c638-b1ca-4afe-b3e2-5610bc0a7274",
        "cursor": {
          "ref": "4dd9a498-e36f-44e3-a3fc-5ba4493ca27f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d833a629-13bb-4f37-aaee-57b626b567a4"
        },
        "item": {
          "id": "4fa7c638-b1ca-4afe-b3e2-5610bc0a7274",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "10eb9682-9cf6-4117-a1e0-8e85f3f9cbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d196f894-da82-4684-9567-a70a982809b4",
        "cursor": {
          "ref": "fb77a520-1e0b-4530-a910-eb5be274e5a5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8403344-7350-4ef0-aed5-dc3f8433068d"
        },
        "item": {
          "id": "d196f894-da82-4684-9567-a70a982809b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d6c36f8b-10ee-4062-afbd-afd318a801b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1f5a5970-de6c-4321-af47-ac899e135068",
        "cursor": {
          "ref": "dbd3dccb-4bef-4b4b-aa10-47a5e3445592",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "10074b7f-e214-4fbe-bccc-162022774c26"
        },
        "item": {
          "id": "1f5a5970-de6c-4321-af47-ac899e135068",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b68204f-f98f-495a-80a9-6cefcb2d5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe1a04-d99d-4ff9-bcbc-945291948205",
        "cursor": {
          "ref": "512c13e7-02e1-4087-b03f-490dc8311600",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7990e290-f91f-46d8-85bd-b65b838bbc0b"
        },
        "item": {
          "id": "2bfe1a04-d99d-4ff9-bcbc-945291948205",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8dfec5f-06a0-4c69-ae7f-a71d03672f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3809c3b-581a-4921-93a8-7faa5c771217",
        "cursor": {
          "ref": "05b3c430-09f7-4e5e-9bd6-c4e7d3f4f294",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f2ef0feb-c209-4cc1-8647-457901e1c468"
        },
        "item": {
          "id": "d3809c3b-581a-4921-93a8-7faa5c771217",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "db651022-5f19-42b4-b01e-f227e4ad71c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc582f61-0d6c-437e-ba41-32172e91e9e2",
        "cursor": {
          "ref": "afd43d17-3936-434c-9eea-9083f47d6f73",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0aedecee-cb56-49ab-837a-52932516fe0c"
        },
        "item": {
          "id": "fc582f61-0d6c-437e-ba41-32172e91e9e2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c13baad8-cc60-4563-9228-c46ddd5e62dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3507afe-b000-47b0-8bd7-67e08ff03390",
        "cursor": {
          "ref": "3fd948c9-6f78-419b-8be5-0bd511d5dd51",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c75d3953-5cba-491f-a537-f400fa65ea68"
        },
        "item": {
          "id": "f3507afe-b000-47b0-8bd7-67e08ff03390",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "33d2c4c9-c526-4607-89d1-81f557079476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a150a2-a948-4c67-9446-3a2e30316b8f",
        "cursor": {
          "ref": "e3957cba-35cc-4ff4-9bc0-e1ada2ee342c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2322030e-29b5-47ca-80dc-d0500f3cc84e"
        },
        "item": {
          "id": "b9a150a2-a948-4c67-9446-3a2e30316b8f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0f2953b-1d1b-4136-bc26-d826b16d2c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15156cd-9698-46ed-b1a8-c65b4d7929b4",
        "cursor": {
          "ref": "578cca34-95dc-421b-af1b-b56135c43996",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b7d2d15-632f-42f5-8d92-e0ec47efe839"
        },
        "item": {
          "id": "b15156cd-9698-46ed-b1a8-c65b4d7929b4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "329faf30-ac74-4f56-b184-c65cb310ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f2aa0e-5342-4a81-aae0-c202b1be1963",
        "cursor": {
          "ref": "8b4e06f2-3582-481d-ae39-3ef08b98db01",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cf4dd948-a812-45ec-8a27-729fe4fad925"
        },
        "item": {
          "id": "f8f2aa0e-5342-4a81-aae0-c202b1be1963",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "af6d9a27-14fb-4d69-9abd-e59a65ec6764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab1282b-352b-41b6-bf38-a663b02e6de2",
        "cursor": {
          "ref": "bf1761c7-e54d-4b56-a6d9-564ac949f45d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31ce76ef-eece-4bf2-b913-d70752f3aa3b"
        },
        "item": {
          "id": "0ab1282b-352b-41b6-bf38-a663b02e6de2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1b586198-4d68-4265-a8d0-305929d04cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c4df4c-c9b1-4fe6-a861-f58003871a23",
        "cursor": {
          "ref": "853fb709-17fc-48f5-8975-de4fc28eb135",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "87af65b1-4079-4532-a62a-32a4c7958c30"
        },
        "item": {
          "id": "c6c4df4c-c9b1-4fe6-a861-f58003871a23",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "198cbe08-4ef7-47be-a747-133ce11a9c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e172ebf8-35e6-4e47-bf12-43b218a0c24d",
        "cursor": {
          "ref": "5a514ff1-aa29-4a04-b8d0-d4e6a780d115",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a8b14d32-5aba-438d-9411-a2c724a8789b"
        },
        "item": {
          "id": "e172ebf8-35e6-4e47-bf12-43b218a0c24d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f5757020-5358-47d3-9ed2-26b5e320bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e826a-805e-45e0-8df6-f50a1533fb69",
        "cursor": {
          "ref": "9260d337-3d07-4238-b440-2c5cefe1948e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3629b233-8634-44b4-bdb1-303be271c983"
        },
        "item": {
          "id": "3d7e826a-805e-45e0-8df6-f50a1533fb69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf654d15-88e0-4e83-b76f-a5905cec4507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a1b375-db23-4646-8741-0654173b5274",
        "cursor": {
          "ref": "285569e9-9648-48bb-8be2-994425419e58",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d5136543-fb3f-4534-b96a-44e66456fd30"
        },
        "item": {
          "id": "73a1b375-db23-4646-8741-0654173b5274",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2917d21f-9459-4010-923c-b6c82fcd1789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f47063-4898-4c7e-afaa-3526a4ae20fc",
        "cursor": {
          "ref": "36003865-856e-42c9-9e2a-e7e1c549ebac",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "21d0788f-79ae-4864-a29f-67adaee8551a"
        },
        "item": {
          "id": "40f47063-4898-4c7e-afaa-3526a4ae20fc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27081219-1173-447c-b8e1-82e1f3b47c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba22fc0-e311-4892-9292-339a7cf5ec3b",
        "cursor": {
          "ref": "3484f8b0-5974-41c4-8f4d-e9c52d856a1b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ce2838de-8cc1-42ad-81a1-e18d1090cad8"
        },
        "item": {
          "id": "cba22fc0-e311-4892-9292-339a7cf5ec3b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4cf3d750-0eee-4ec1-9fe6-ed4b71cf2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaab0c3-4420-44b5-829e-a569f0ebe88c",
        "cursor": {
          "ref": "4a5c7846-7614-4df9-b19d-5390676fce25",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "45822010-6f81-4f9c-9b09-9d73e55d598b"
        },
        "item": {
          "id": "ccaab0c3-4420-44b5-829e-a569f0ebe88c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b43b9a91-7692-48d3-80a8-7b4de974a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c9104a-6e9a-4ea0-b589-c69428b8f691",
        "cursor": {
          "ref": "090cb728-92fc-4602-9ec6-dc2c9f022c40",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9712e296-c074-4ca8-908f-bba835034c7b"
        },
        "item": {
          "id": "80c9104a-6e9a-4ea0-b589-c69428b8f691",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0eda9678-1458-4427-92b8-e94e8fc83ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd277ac1-a980-49dc-a93a-a8eee94d4905",
        "cursor": {
          "ref": "86cd8c44-7dbf-44d7-8095-f4be2d6cfdc8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bea42507-aa13-4c36-b1e1-71940ddfbb63"
        },
        "item": {
          "id": "dd277ac1-a980-49dc-a93a-a8eee94d4905",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6dc0e591-9ddb-4c94-a5a6-75f662018fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a5f72-edb0-49aa-9165-c9460d9652be",
        "cursor": {
          "ref": "2de3c309-59ae-4a33-be2a-0e53760bcf83",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2e9132c2-6fcd-41fb-95f7-405651253e8e"
        },
        "item": {
          "id": "111a5f72-edb0-49aa-9165-c9460d9652be",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83762211-89fb-47a1-93c6-066f052e8349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae58d0ec-b794-4ff8-a5d7-38d21f7b61bd",
        "cursor": {
          "ref": "7e276c29-eb60-45af-b62f-a08e25a73c69",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f4b08a66-eb49-4369-82d1-c7889754f708"
        },
        "item": {
          "id": "ae58d0ec-b794-4ff8-a5d7-38d21f7b61bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1cad138-a42d-4b09-a731-cb7b3d1cbd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040bf05-09df-4302-bbf1-b0cae4089e48",
        "cursor": {
          "ref": "1b3de11b-d288-47ce-8f86-15a2d9e18e64",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6fd0f8c1-3e7b-4d33-b26d-761c3c5310f3"
        },
        "item": {
          "id": "c040bf05-09df-4302-bbf1-b0cae4089e48",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "af138f88-de32-46cf-a944-db24e80bfa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27d4d15-94b0-4022-9616-fc46670c3d4c",
        "cursor": {
          "ref": "f7b36d81-e921-4281-8817-cb3a0129ef17",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a24527a3-2437-4280-bbd9-982a2cb9b183"
        },
        "item": {
          "id": "d27d4d15-94b0-4022-9616-fc46670c3d4c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4541b78-9476-4b5c-a331-56c3ed146a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2938017-daa5-44f5-bfb7-1a80dbc3aea4",
        "cursor": {
          "ref": "306cd334-78b5-458b-a549-889397543f44",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "105acf1c-4c1a-474a-8d7d-eb22d47a1e76"
        },
        "item": {
          "id": "f2938017-daa5-44f5-bfb7-1a80dbc3aea4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "386ef229-2694-4d20-8367-323f41abd309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b89bd1-ff93-429b-be3b-a34fc9bd5b3c",
        "cursor": {
          "ref": "66137a99-313f-400c-b541-21ea3bc7bb98",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "386397e6-7945-438d-b658-3e9a8725e919"
        },
        "item": {
          "id": "10b89bd1-ff93-429b-be3b-a34fc9bd5b3c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "339d7eab-22f4-43ff-ac30-1ffa75a37c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8394d56c-d238-4145-8dd7-169180060950",
        "cursor": {
          "ref": "f0fcc69a-a659-4c8e-814d-816fc401c810",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b0006621-bff8-4bac-8584-a870fc8ddb72"
        },
        "item": {
          "id": "8394d56c-d238-4145-8dd7-169180060950",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a56fbe5-33ef-4204-8026-b92092aa6fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240ccb4d-f3ad-4a04-ba0c-0d0539943d24",
        "cursor": {
          "ref": "ff5a88b7-b934-47ca-a4cf-6c7a19c26968",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c895714d-5ebe-4273-8b87-1246f5d0fc6c"
        },
        "item": {
          "id": "240ccb4d-f3ad-4a04-ba0c-0d0539943d24",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2b9fe50-8737-4dfd-b1fb-d7d3237c15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7264422-8f1e-4934-a289-c40a93ccf452",
        "cursor": {
          "ref": "b1f327e8-c016-4580-aa96-dfa37d8bc29e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aaa5966c-65b7-498c-a81f-aaacb6425959"
        },
        "item": {
          "id": "d7264422-8f1e-4934-a289-c40a93ccf452",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98a49419-7c0f-45e3-a435-44c07fb09822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33829d0-508c-483f-89a1-1667bd0c1df9",
        "cursor": {
          "ref": "192cfcd5-50aa-407a-bbd2-198082ec35de",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "544884c0-99bb-4111-ae55-94f394a599f6"
        },
        "item": {
          "id": "a33829d0-508c-483f-89a1-1667bd0c1df9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0737d2c1-a024-4131-bee9-c91aca2a4943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f796a73b-b27e-4b4f-97e6-c330ad36d296",
        "cursor": {
          "ref": "000033f6-73b8-4485-81b9-cb41c7e1ef8f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1771957a-6871-4a9e-a214-f6d4e81a36a4"
        },
        "item": {
          "id": "f796a73b-b27e-4b4f-97e6-c330ad36d296",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3707d8dc-dfce-4995-b715-7b8039c8fec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a399c17d-8bd2-4e1b-927f-9da622adc1e6",
        "cursor": {
          "ref": "6ae596e3-0042-415b-9140-933be4a1b143",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b25d970-22b4-4fa7-9f60-cb80d911afe2"
        },
        "item": {
          "id": "a399c17d-8bd2-4e1b-927f-9da622adc1e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "239e3a0c-9859-405e-9cf6-5708851f7329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ddac4e-dcfc-4912-847f-2882b8c784d7",
        "cursor": {
          "ref": "ad9b2cf8-2b28-46c7-a1bf-cd70c6ddd119",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c3fb532f-f062-4d96-8a3e-12e3aa55904f"
        },
        "item": {
          "id": "11ddac4e-dcfc-4912-847f-2882b8c784d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dd5124e2-c6be-4573-9e4c-1888af3cdfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d8a96-ca44-4510-9eb9-7ff97a6e35a6",
        "cursor": {
          "ref": "093c64bd-200a-4294-9e8f-5a586bbcd59d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7869302e-2cdd-45eb-a461-1afcee8538f5"
        },
        "item": {
          "id": "978d8a96-ca44-4510-9eb9-7ff97a6e35a6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f06e3ce5-6d1c-48cf-9dd4-8288d9e66d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a379ac7-d212-44ad-be68-6f2f5836c715",
        "cursor": {
          "ref": "680f61cc-23a5-4422-b080-18e6d9b139b6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7ac36b07-731e-4844-89c4-851e72aa57f8"
        },
        "item": {
          "id": "2a379ac7-d212-44ad-be68-6f2f5836c715",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1fe07a5-e848-4378-9bce-7a99394e2a3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a2193-4c76-4e8e-82f7-ae85e3a368b7",
        "cursor": {
          "ref": "9b9110f7-9abb-49b7-a6c9-e1a0d3fbcf0d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "28479d37-a91e-4d09-af97-9f7dfdcac3f4"
        },
        "item": {
          "id": "813a2193-4c76-4e8e-82f7-ae85e3a368b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67be1dcd-da48-4609-80ea-62250927a09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10729183-fb76-48f9-a34c-c095b92da850",
        "cursor": {
          "ref": "44279d3e-f1bc-4863-9e14-8fc1844ea847",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba05a895-2567-45f6-bf1d-5a0e25a4c07d"
        },
        "item": {
          "id": "10729183-fb76-48f9-a34c-c095b92da850",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c2ab7a2-368e-4b2f-9d25-28518321556a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d77efa-3238-4611-a646-d34b6c447646",
        "cursor": {
          "ref": "e8876cc0-1145-4c31-8abd-e3e4df2f2b13",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "09002c6d-3010-4d9f-9aeb-d2c7fcd3a2ab"
        },
        "item": {
          "id": "e1d77efa-3238-4611-a646-d34b6c447646",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96d0ddfc-1262-4b55-bcb0-5eca0b4dc325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83cef9f-fe9c-4ff6-b911-4b66c4f5022c",
        "cursor": {
          "ref": "c22bdd47-0d45-40df-a32c-01ca6c6fb9f6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "46832480-9bfd-4a50-bbef-7ff9df895459"
        },
        "item": {
          "id": "c83cef9f-fe9c-4ff6-b911-4b66c4f5022c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a25196c5-e894-41be-ad59-1aab6a509ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb819ec-da6f-405c-83cc-798c0c85d1e6",
        "cursor": {
          "ref": "48c4ad2f-d8fc-498f-8a26-ce2fbe2b17ed",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce1f7169-bb32-4b62-b8d5-326e97c58fcc"
        },
        "item": {
          "id": "8fb819ec-da6f-405c-83cc-798c0c85d1e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb9ce6f6-b4d2-4d13-9f62-0967276bac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de83c9c-93e9-433b-b007-abe489e45863",
        "cursor": {
          "ref": "de788dfe-9732-440b-8ce6-e6c3b894af1b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e6b5a7eb-83b7-4939-a30f-a684f4ac3650"
        },
        "item": {
          "id": "2de83c9c-93e9-433b-b007-abe489e45863",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f4252e0f-751d-4786-a09c-dc15ac1bb9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e1a930-168e-4a5f-ae80-d5dca2339e94",
        "cursor": {
          "ref": "10ff33a9-f756-4ce3-8737-78dc174f4bfe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f5c025fa-f4c6-4dff-823b-593d00be4e0b"
        },
        "item": {
          "id": "72e1a930-168e-4a5f-ae80-d5dca2339e94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff7af0e4-3063-4bf9-b295-a2a473bde6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34716cb-8343-4607-9a71-6e03c43cbac9",
        "cursor": {
          "ref": "a89ff38d-7238-4abf-90f9-ff3fdc851b61",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b209613-e060-41dc-b1c9-2af1b4c3ea76"
        },
        "item": {
          "id": "e34716cb-8343-4607-9a71-6e03c43cbac9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26327ec3-3948-44c3-93c0-ba6c12cb36ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa71d48-6265-428b-bf17-432d20a0aa72",
        "cursor": {
          "ref": "ebde7075-64fe-42cf-acef-2f9cc853e2a2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a08ef200-8b8a-4379-a3db-da9c8a804135"
        },
        "item": {
          "id": "5aa71d48-6265-428b-bf17-432d20a0aa72",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9afe061a-b5f4-42bf-88ff-72334abb1295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c92ce87-5478-4180-a579-41856bb2942c",
        "cursor": {
          "ref": "e9b20f10-cd22-4bac-a6f3-55a03b831d36",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f8a84fa1-96c2-4c1b-ad39-4ffe16c321fb"
        },
        "item": {
          "id": "1c92ce87-5478-4180-a579-41856bb2942c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f6ed28b4-0405-41e7-84c6-37b208a454de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65fb564-df22-46d8-ae8f-877c8d3baa49",
        "cursor": {
          "ref": "7c89e803-d5ee-4181-8178-a4e2b9284d29",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "67dbf136-aa24-476b-880e-6bfbd0fe7445"
        },
        "item": {
          "id": "a65fb564-df22-46d8-ae8f-877c8d3baa49",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d79aa754-9a76-490b-bbe3-49ae6275a40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c746b8-bf48-45dd-93ab-bb9aea043236",
        "cursor": {
          "ref": "08959013-f019-4eb1-b6f9-83dac69ca8e0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6c3e5a82-5645-4a39-a4cf-a6b48d637bc0"
        },
        "item": {
          "id": "69c746b8-bf48-45dd-93ab-bb9aea043236",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73cb90c8-809f-4ad0-8ca6-c808d1de5101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733ae309-2d77-4c28-9a19-c161a1ee0f5e",
        "cursor": {
          "ref": "5b6f4fde-375d-4f59-a867-e1b4a0e4cee1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "49453cdb-f274-4a13-a1ab-b1a27b9015b1"
        },
        "item": {
          "id": "733ae309-2d77-4c28-9a19-c161a1ee0f5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ebe2c73-e6c4-43f3-89b9-a33e579c5f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46ef37b-9a64-459b-983c-00b52cad843e",
        "cursor": {
          "ref": "af20a179-dadc-4d60-8b51-95df316c5cac",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70655097-f628-491a-8825-127db40fe680"
        },
        "item": {
          "id": "e46ef37b-9a64-459b-983c-00b52cad843e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1cbb8935-e92d-4819-94dd-11270c1b44e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1a442b-a3d1-413f-8d02-a460ad5ba62a",
        "cursor": {
          "ref": "3312c964-3109-4747-9517-040a81422bd8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "99f363c5-062e-413a-b020-5b095d07c4eb"
        },
        "item": {
          "id": "bb1a442b-a3d1-413f-8d02-a460ad5ba62a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54c02c43-226e-4229-a94b-cdb5ebfb1d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5621be-22d1-4666-b8ce-7005d7ddd091",
        "cursor": {
          "ref": "9f1a7278-100c-4c15-a56d-c4d3ff40dcde",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b9098f47-c2f9-4420-a381-0fb94dbadefb"
        },
        "item": {
          "id": "ff5621be-22d1-4666-b8ce-7005d7ddd091",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "879765bb-ebfb-4ea6-ba15-1f6eafd9c6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64df1279-4158-4e46-9296-5c8cdee1c3de",
        "cursor": {
          "ref": "c31ef3b2-7d53-4553-8d88-7e37f578e3f8",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "91330d53-8c01-43ab-87c9-2f13b734971e"
        },
        "item": {
          "id": "64df1279-4158-4e46-9296-5c8cdee1c3de",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "32c3802e-9e31-44b0-bb2c-fd8644255118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e884b826-90a0-4d83-81f8-a60d33a3a1ed",
        "cursor": {
          "ref": "96e1e583-8375-4fdc-b82f-dd40cc5fa7c0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "21bb1d73-0671-4136-8312-c62123fe0bd0"
        },
        "item": {
          "id": "e884b826-90a0-4d83-81f8-a60d33a3a1ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5fb80af9-3ce5-4a1c-ac5a-c0bfae7ec2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3f1126-e8f8-4b8f-ad02-604d4bf950eb",
        "cursor": {
          "ref": "4802012b-f2d4-4857-a76c-16d9f907d26b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7edf5b84-1453-4584-93d8-559b2f8339de"
        },
        "item": {
          "id": "ca3f1126-e8f8-4b8f-ad02-604d4bf950eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9252e793-6d49-4112-9a26-4868c849b12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71dae29-ab1f-466f-b9c3-5ac8222ad3e8",
        "cursor": {
          "ref": "12ad1030-97e9-4213-a0fa-aa10f3f96d3e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8f7659e3-b78d-4f83-bd89-89b3c0481c2c"
        },
        "item": {
          "id": "f71dae29-ab1f-466f-b9c3-5ac8222ad3e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "91ed1647-c65b-467e-99f7-e17c0d982320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a1615b-abaa-46ee-b77c-9206a47f5302",
        "cursor": {
          "ref": "938b2d33-d647-437e-81ca-110f256f0fdc",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1f186b8b-960a-44af-864e-0eb665e7ef38"
        },
        "item": {
          "id": "d4a1615b-abaa-46ee-b77c-9206a47f5302",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9f0b3d18-90aa-4e85-9057-a2f403b8acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3471c684-35c6-461e-a16c-9bed271b3d45",
        "cursor": {
          "ref": "41a7066c-eeee-485a-8c60-c10eb729b652",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0cf810d4-ae8d-46a9-abb7-2cb65cd4d32f"
        },
        "item": {
          "id": "3471c684-35c6-461e-a16c-9bed271b3d45",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b15a72e-c928-45c7-93e1-98a3d8efb7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97172d7b-259f-4457-aa36-1a0c0e388fc0",
        "cursor": {
          "ref": "ca0db741-6b99-4530-91ac-7366be9fdc6c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f3917f1-df1b-413c-ad16-9f56d3b42262"
        },
        "item": {
          "id": "97172d7b-259f-4457-aa36-1a0c0e388fc0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f033cc4c-385d-4869-aa35-771823d97984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c4986e-83fe-4ebd-bdaf-1aaa42bbb0cb",
        "cursor": {
          "ref": "85480c23-e91e-498c-906a-4512016faa54",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c3940ad-1544-4d74-88f0-ebe1b2510ae2"
        },
        "item": {
          "id": "51c4986e-83fe-4ebd-bdaf-1aaa42bbb0cb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a8f183ed-619d-4aae-98c5-ca7acb4dcfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed480f75-9599-4dfa-86f3-fdc15fd32372",
        "cursor": {
          "ref": "8f0769b9-d881-4101-b156-06f6ab30c460",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8312e253-7de0-4e1b-a153-cc32b0c36fec"
        },
        "item": {
          "id": "ed480f75-9599-4dfa-86f3-fdc15fd32372",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a655c65c-aa4b-4959-8ee5-59fbb8c2ac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7e2828-0922-4a28-9842-becd1635d368",
        "cursor": {
          "ref": "d7e7c6c5-4dfa-4480-9b26-f209ecf6d1db",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fd9e0c3c-0f83-437c-a79c-a58b10f2db0f"
        },
        "item": {
          "id": "5b7e2828-0922-4a28-9842-becd1635d368",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b28cee33-2820-418f-ba02-0507a87d8c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d546169-a42a-4150-a6ff-4dda71bfd9bf",
        "cursor": {
          "ref": "1dee6836-9390-4afd-a0dc-f79d9a6291ad",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7689a32f-431d-47ba-8b16-bc939a367536"
        },
        "item": {
          "id": "4d546169-a42a-4150-a6ff-4dda71bfd9bf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4c0b32a1-e88a-4abd-b2e5-0f75bfcc8781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b97af58-a96c-4ec3-841e-31ec3ee92887",
        "cursor": {
          "ref": "238fedb1-e54a-47d1-ade8-d5dc5aab8161",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "50675f11-bf69-4fde-a51a-e3f45298f87e"
        },
        "item": {
          "id": "9b97af58-a96c-4ec3-841e-31ec3ee92887",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a7e2810-92c3-4c78-af7d-064b5d7b2a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365f2373-b2c8-490e-8eee-fab49dfd5d43",
        "cursor": {
          "ref": "d47f6c0b-23f6-4e46-bc09-a2c92dabde60",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f0cb9fa9-451f-4500-a7f2-5e63a2b1bf72"
        },
        "item": {
          "id": "365f2373-b2c8-490e-8eee-fab49dfd5d43",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "490a0978-c731-4387-a080-c5d58fd13e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ea16be-de19-49f2-a311-6d7a12905946",
        "cursor": {
          "ref": "7cee9bc8-0c1e-4fd3-89e3-1af05367ada8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e59049c2-427b-4d9b-bfe9-d1a54fd6c39d"
        },
        "item": {
          "id": "38ea16be-de19-49f2-a311-6d7a12905946",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0da14bb2-19bb-4da8-9ba7-6a221a40f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87e0a28-7196-459a-9c72-28f88ad9d6c2",
        "cursor": {
          "ref": "86604f31-3f3e-46fc-94e1-96881d3dd127",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93ca6b6d-8278-4765-8e39-d316972feeb9"
        },
        "item": {
          "id": "e87e0a28-7196-459a-9c72-28f88ad9d6c2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "afaa782b-5fa7-4cd1-a1dc-b52e873c6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292e2177-1503-49b8-9181-492b05edf3e5",
        "cursor": {
          "ref": "658cd3be-b181-450d-95d3-d8f0feeb7511",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9445fc8f-7a31-4665-89ba-e97db41392c5"
        },
        "item": {
          "id": "292e2177-1503-49b8-9181-492b05edf3e5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d6bd0dcc-80a8-41b5-99af-33bee39df888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a3a96-546f-4683-8c70-6ecbfaabff7f",
        "cursor": {
          "ref": "918693ae-f20f-4487-977d-dbc2cf4a1909",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0444c78f-0379-4617-8e01-1458c0a08e4c"
        },
        "item": {
          "id": "a51a3a96-546f-4683-8c70-6ecbfaabff7f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "60ca30c9-2bca-4387-80d5-b99f88ecaa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27fcfca-1779-4353-b97f-7205387b266e",
        "cursor": {
          "ref": "beea1c2b-a89d-4f69-800f-4c2323a00f82",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8d7653d1-ae16-480a-bdd9-badd1e46caf3"
        },
        "item": {
          "id": "b27fcfca-1779-4353-b97f-7205387b266e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc56e5ba-a6d9-42aa-a777-d579079105f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1137,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4f33d-21f5-4993-b4dc-d5359c865326",
        "cursor": {
          "ref": "78d2ddf0-f93a-475e-9174-ae7d320c49ae",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41b79a31-1438-48b3-9a28-b7bbfc29cd32"
        },
        "item": {
          "id": "52c4f33d-21f5-4993-b4dc-d5359c865326",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9d3068f-1a13-43a2-895e-08adad245b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17cb291-d227-4ec3-8a26-85af08494767",
        "cursor": {
          "ref": "89a84ca7-37de-4095-abb9-0e17c461a826",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2e151354-ec96-457d-82c5-f67551ac34f5"
        },
        "item": {
          "id": "d17cb291-d227-4ec3-8a26-85af08494767",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e83811ef-d3d8-489b-91b6-82f294b5ffdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efecef1-fc3f-42f1-8186-8dd038d2e663",
        "cursor": {
          "ref": "d54c4dd6-97c8-42f9-8679-4d4f0fd44c92",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9a15114d-b0f4-442c-a89f-a5321257d068"
        },
        "item": {
          "id": "2efecef1-fc3f-42f1-8186-8dd038d2e663",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bfbb80fb-5b6d-4e50-9077-9db59b884e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0778b4d-7019-4b69-93c2-cc48cb6e2406",
        "cursor": {
          "ref": "c782f431-9a4c-45e7-87d0-618dc8cd8866",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "895cf854-11bc-4be4-bc7c-ed48cc994769"
        },
        "item": {
          "id": "a0778b4d-7019-4b69-93c2-cc48cb6e2406",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2091315-afb3-4612-8ae2-9a9f8b0c714a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7097ac-c360-468c-96e6-3a11dc33b90e",
        "cursor": {
          "ref": "9a3c0df4-454a-4afd-8197-7af88c24f16d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8e630013-720e-49a8-83b3-953d156a9f1f"
        },
        "item": {
          "id": "de7097ac-c360-468c-96e6-3a11dc33b90e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f1e7488-414d-432f-b1ae-6770566322c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1221a53a-2955-4378-bf7a-6cbf58ba7733",
        "cursor": {
          "ref": "4231da51-c3f0-4fe1-8ac4-d91f059f4b53",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ef95d016-ca96-41b7-b420-8646dc49dc28"
        },
        "item": {
          "id": "1221a53a-2955-4378-bf7a-6cbf58ba7733",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "024f0de2-af79-4872-9b79-128fb51d503a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6f02f3-cf45-42e5-8640-b84c9d8cad14",
        "cursor": {
          "ref": "743dbaa6-f9d5-4cab-ba72-5c598051046d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cdf53e7d-890b-408e-8d0d-6fd8e26a2b7d"
        },
        "item": {
          "id": "fb6f02f3-cf45-42e5-8640-b84c9d8cad14",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e8be0e06-da48-4890-b915-1ce76636c1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10a235d-90b5-40fa-a243-aadf1ab2ee67",
        "cursor": {
          "ref": "a32fe0ae-2e45-445e-8e13-254eb9d6c1d6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d41a1603-1c9d-4fa3-9d96-6eed58454e85"
        },
        "item": {
          "id": "a10a235d-90b5-40fa-a243-aadf1ab2ee67",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a6a264d3-069a-476a-8a80-40a4a5544486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb5cf9b-cea1-4d16-80be-8f98654000be",
        "cursor": {
          "ref": "a6b3ae1f-3938-4d83-9afa-ce0c24ed927b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cb065003-3d46-411d-988d-07e46d79e131"
        },
        "item": {
          "id": "5fb5cf9b-cea1-4d16-80be-8f98654000be",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "601628cb-223b-4df7-96c0-2a9041a125f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee3359f-38b0-4b7a-b809-151660199f74",
        "cursor": {
          "ref": "d65578d5-0ea4-493f-b70c-83a97567025d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d51fcc0-678b-4290-b0e9-805e059e76e6"
        },
        "item": {
          "id": "9ee3359f-38b0-4b7a-b809-151660199f74",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b42ef480-0ae7-4b49-8395-29994c06f91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca569cf3-62cf-4fd4-9927-3ccccb1e510f",
        "cursor": {
          "ref": "2b2c7552-e66a-4444-ba92-ef5391125043",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "634d83f6-3161-4799-8564-fe0df26aa9bb"
        },
        "item": {
          "id": "ca569cf3-62cf-4fd4-9927-3ccccb1e510f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3cf220dc-5100-465a-977b-c7896e59e5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231bad8-7459-41bf-9e26-30043f8feec1",
        "cursor": {
          "ref": "31aae207-9de7-4799-8824-6647077293a8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4c49245e-dcb7-45e3-8a12-c1e01cac6a46"
        },
        "item": {
          "id": "c231bad8-7459-41bf-9e26-30043f8feec1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba49e1af-cfc5-4baf-b9b9-406b9fd3ef99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe5f301-1d20-4396-96e2-85a08d53376f",
        "cursor": {
          "ref": "9f0aa7a6-d967-449b-9cf8-b4bdcaacfade",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "186e1bd6-5c8c-4d36-99d4-0f6bb9c4de8b"
        },
        "item": {
          "id": "6fe5f301-1d20-4396-96e2-85a08d53376f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "da63d2e0-bd4f-4e5c-bb73-fadc19e2d0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c96972-18c0-4fcd-9a0f-8ac30db29d15",
        "cursor": {
          "ref": "2676634a-7ef4-47f8-b45c-7e00036914a8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2fbc6638-b59b-439b-9034-d3f7909aef3e"
        },
        "item": {
          "id": "98c96972-18c0-4fcd-9a0f-8ac30db29d15",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "543c3b0d-e7e1-4a0d-b1b2-2f804d7ae495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d93bce-62e2-4768-a28b-820e68cc5f3f",
        "cursor": {
          "ref": "33a5682b-88bb-4f50-a8d3-7a98dd2b6562",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1119b42-dcd6-4138-a0f2-8f960b24aab8"
        },
        "item": {
          "id": "88d93bce-62e2-4768-a28b-820e68cc5f3f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "08c1a07b-28c8-4554-90b4-3cb420291ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f70f75-0046-47e7-8f52-0cf2bee4583f",
        "cursor": {
          "ref": "79001178-e80c-487b-96ec-75aea4136091",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4446c752-4d32-4f19-9b9f-d51d63401769"
        },
        "item": {
          "id": "84f70f75-0046-47e7-8f52-0cf2bee4583f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "483a77cb-8d3f-4221-bee0-6af663201163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bebfff-a6da-4ebd-9f8b-91ab184e9f99",
        "cursor": {
          "ref": "c4f4993e-b0ce-440b-930d-be5f803298eb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8b04d401-0a54-4d24-a639-8cb749674f14"
        },
        "item": {
          "id": "19bebfff-a6da-4ebd-9f8b-91ab184e9f99",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f02533d2-0245-4cc7-b4b5-f576119b2def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3455fcb1-67de-43bf-a867-03542881b19c",
        "cursor": {
          "ref": "060213df-f3e5-4adc-822a-de7a2724465b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a893be89-d660-45c4-9941-9428a2e59d24"
        },
        "item": {
          "id": "3455fcb1-67de-43bf-a867-03542881b19c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a8bd940-6eea-4bda-9028-19c4526f85cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfb2a8b-4faa-4311-b530-51a3ac173972",
        "cursor": {
          "ref": "e45ca289-04c2-46f6-bb84-e39e022e4dba",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cc9431f3-5adf-4774-8ace-edbe5f288431"
        },
        "item": {
          "id": "fcfb2a8b-4faa-4311-b530-51a3ac173972",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ea31b3c3-ffd9-48ec-adc7-7e26119ee5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8a5d0-e2ff-46e4-8e42-8f0416442fc7",
        "cursor": {
          "ref": "87b72722-370a-4add-a320-0a959daa9769",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0fd53767-17f8-490f-9612-8ec03ad9d29d"
        },
        "item": {
          "id": "08b8a5d0-e2ff-46e4-8e42-8f0416442fc7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84afa544-9e3c-4baa-bde5-0750093f2502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0233cca9-5dfd-463e-9757-0230f278114d",
        "cursor": {
          "ref": "2941530c-72b8-4457-a797-7e37d0e8c233",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aa4273f3-364c-42f6-9b3b-212f19df6cc2"
        },
        "item": {
          "id": "0233cca9-5dfd-463e-9757-0230f278114d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d3d69822-b74a-46ac-9a7d-9ad49231e0b8",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "393fd3f1-2705-4e43-b8ba-58cd4921ed70",
        "cursor": {
          "ref": "c41a770b-e57b-4821-86fc-4b42ad94b44e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "214e25a3-d0f3-4e3e-b9a0-8bec7a24dac4"
        },
        "item": {
          "id": "393fd3f1-2705-4e43-b8ba-58cd4921ed70",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f1214aa-0cb6-4b68-992d-a50865cf196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb636143-d5c7-4bc0-8d26-e590a8a68ba8",
        "cursor": {
          "ref": "59da330c-f1b4-4663-aa18-ac4acb2075cd",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "415b555b-9a51-46ae-b119-15cdf25b6e9f"
        },
        "item": {
          "id": "cb636143-d5c7-4bc0-8d26-e590a8a68ba8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0f850ffd-7a1d-49f6-91d0-7d57275b2295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a47112-6fb3-43ec-b12f-f9e719b43eaa",
        "cursor": {
          "ref": "e0d88f31-3d83-4f7a-ae0f-9f9c408674cc",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "46a919f4-534a-4422-821a-1d994150899c"
        },
        "item": {
          "id": "a6a47112-6fb3-43ec-b12f-f9e719b43eaa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5913c6c-2fcb-459c-8d8f-17d7075df84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7047c8-412b-4b3d-85fc-ee28488a1e8d",
        "cursor": {
          "ref": "59b7b924-415f-4f9a-b3fb-3245988def45",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4bc0bcca-8077-4f73-8fca-5fcd75791142"
        },
        "item": {
          "id": "ef7047c8-412b-4b3d-85fc-ee28488a1e8d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec0fde12-7160-4abe-8147-64db2374d5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6011893-097c-418e-82bd-2fa705e76091",
        "cursor": {
          "ref": "133c4b58-ab20-445c-86f7-0faa73713bfe",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1191607b-4ed5-471b-adec-193253701ca7"
        },
        "item": {
          "id": "d6011893-097c-418e-82bd-2fa705e76091",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3b0d0089-4bd2-4d18-be6f-a54f95d5c6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5ef10e-cc86-4f46-8891-e0071cc22e07",
        "cursor": {
          "ref": "01be6593-ccd7-4a18-9d0d-96a0c7857ac3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f6eb7917-871a-4f1a-9aed-ecb29dba0499"
        },
        "item": {
          "id": "5a5ef10e-cc86-4f46-8891-e0071cc22e07",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb773e2a-a0c2-4103-a316-0c5686287394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7748a05-547b-4793-9290-4c07c3c713af",
        "cursor": {
          "ref": "55b24701-dea5-408c-b21b-2caeeaab2e78",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5739d16-48af-4142-a280-6e3eb6793681"
        },
        "item": {
          "id": "f7748a05-547b-4793-9290-4c07c3c713af",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "befa85de-4272-40e3-87a4-0689b7ec310e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecfb9ef-5ca6-4e7e-8408-6f56ffac6227",
        "cursor": {
          "ref": "5b8315d7-6ddb-4a27-80ec-543781141dc3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "263c75e6-5aca-4931-84ff-9e569b12772d"
        },
        "item": {
          "id": "3ecfb9ef-5ca6-4e7e-8408-6f56ffac6227",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "37a1658b-7900-40de-b807-96b6d87def7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9825833-3154-488b-8891-c4bd9bfab9c6",
        "cursor": {
          "ref": "bcbd58aa-7cba-413e-9453-aa36d41c067e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "19d5b1da-d54f-4547-941d-34f7b6e12573"
        },
        "item": {
          "id": "c9825833-3154-488b-8891-c4bd9bfab9c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "32dc8c9d-520c-46f2-9fad-2696599c5caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf0803e-41e3-45af-8e85-a05c84cf6ea2",
        "cursor": {
          "ref": "1f631b9d-7492-4b06-832e-02577d2fc0b3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "458928e0-f4b1-43f3-8bd0-5fa391ad71fd"
        },
        "item": {
          "id": "eaf0803e-41e3-45af-8e85-a05c84cf6ea2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0b5393fa-4694-4bb9-821c-ecc53161c7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d32ed0-29be-4bba-89f3-3176519fe6e2",
        "cursor": {
          "ref": "0cd10c6d-e0e0-45df-8327-e2193723167c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dcb074c5-23d5-4312-8d8b-5b3e2effd8ae"
        },
        "item": {
          "id": "30d32ed0-29be-4bba-89f3-3176519fe6e2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0b7abc8c-7b31-4a30-8646-e18909b86e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c892a652-718a-4fd1-85d6-ec0e464c38c4",
        "cursor": {
          "ref": "885fc95b-7afa-421b-aefa-3b4071685b07",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97457e67-61d1-4224-be0c-b3fd55930e4e"
        },
        "item": {
          "id": "c892a652-718a-4fd1-85d6-ec0e464c38c4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5c95c858-9116-4fc9-9dae-cce4b912515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8279c997-60d2-4d88-a06b-2e0cbee2b850",
        "cursor": {
          "ref": "22ede8cb-35a9-45f7-9a96-100b0777d86c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "66846432-8ce5-4018-a794-c7f37d5590a9"
        },
        "item": {
          "id": "8279c997-60d2-4d88-a06b-2e0cbee2b850",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8bbed16e-d034-40df-92cd-67c9e2d8420d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d269c3-4534-495f-806a-9f10bc40f76b",
        "cursor": {
          "ref": "2f5c7d53-c12f-4444-923f-b16c0884e483",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "268d7674-98f7-46ab-9715-d217a6acc97d"
        },
        "item": {
          "id": "f5d269c3-4534-495f-806a-9f10bc40f76b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eb651b4f-8aa1-4c87-b9c7-b50dec70f4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17963f4e-e2a3-4fd1-937d-949753018af1",
        "cursor": {
          "ref": "91ef8cd9-8182-4285-a816-6de7f46e3d9c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7e998e69-53ad-43d8-ad69-fa78738f92d9"
        },
        "item": {
          "id": "17963f4e-e2a3-4fd1-937d-949753018af1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0b42526-0fec-4483-adf7-9fca765477ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3243f2-5dc1-4fa3-9fdc-1e7a8a8039a4",
        "cursor": {
          "ref": "ac64cd56-50d8-465a-b2ec-83cac41eb93e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "89ae95a2-03dc-4279-a6ac-2461d82e79ee"
        },
        "item": {
          "id": "fe3243f2-5dc1-4fa3-9fdc-1e7a8a8039a4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "944c6ea0-c757-444f-85e3-187e0b353f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303a2731-0dd1-4f8f-aca2-e65efce14916",
        "cursor": {
          "ref": "e7bf3148-c4a6-49ea-86c8-0fc629fe85d3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f7ff668d-0a97-41a4-b644-abc43af52d36"
        },
        "item": {
          "id": "303a2731-0dd1-4f8f-aca2-e65efce14916",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8fd67cc6-4652-4319-b656-b162a3f88253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a4ba2-2742-4724-9281-c5d904ee896c",
        "cursor": {
          "ref": "16915ae7-7838-4f8d-867b-8e77ec3c86d9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c270c6f8-51b9-4fe9-849c-d28614396c79"
        },
        "item": {
          "id": "0f0a4ba2-2742-4724-9281-c5d904ee896c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "33ccb3d0-8a5f-452f-8f5b-726de9a76913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c0693-052c-4627-a8af-7ac6e91a4f77",
        "cursor": {
          "ref": "fe8afff4-57a9-4714-8f70-43bf68d75246",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "430e230a-793b-4543-90b0-ad084ac60ea7"
        },
        "item": {
          "id": "d51c0693-052c-4627-a8af-7ac6e91a4f77",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "13c1598e-661a-40d5-8fcf-4f1eef3e5d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6726b0-edd2-43b4-b539-b2db00e0dfa6",
        "cursor": {
          "ref": "a210550c-967b-4753-9dd9-177a8783f2af",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a4794f79-dd5c-4a99-8aee-133a3df10651"
        },
        "item": {
          "id": "2e6726b0-edd2-43b4-b539-b2db00e0dfa6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "67e4a44d-ba37-4a10-99b0-7cf47b1df647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab86199-675b-4985-988f-64200b12b94a",
        "cursor": {
          "ref": "0327960c-71d0-4ce2-8d98-6c5358bd0b35",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d1a60b05-d17d-4706-bdd3-779e3725152e"
        },
        "item": {
          "id": "aab86199-675b-4985-988f-64200b12b94a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "56b2316c-3b1f-4810-a930-6133f7ad4d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0315cb7-bdc4-42ca-8f2c-c9b8050d3304",
        "cursor": {
          "ref": "13934b57-9232-41ef-9209-b480ca604a8a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c795bb8c-fa1e-4f7b-8481-d0c809b89da2"
        },
        "item": {
          "id": "a0315cb7-bdc4-42ca-8f2c-c9b8050d3304",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64fa5400-5639-4934-bf6e-fe7a865d12a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea8ee7c-2d5b-4ae4-82a4-9425d5f0bf48",
        "cursor": {
          "ref": "feddc9ee-6885-4495-a2ed-e5ad8c33d832",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "71c0197f-db40-42f3-b302-ad3201a9b58f"
        },
        "item": {
          "id": "9ea8ee7c-2d5b-4ae4-82a4-9425d5f0bf48",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a77ecf78-30bf-4904-9375-eebbd278ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ad872d-defd-49c1-a568-10372cc39dc9",
        "cursor": {
          "ref": "ea759929-ff01-4186-8713-c9b5e7b30e5b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e380dd16-ec93-45d3-9248-e67ac61f88c5"
        },
        "item": {
          "id": "77ad872d-defd-49c1-a568-10372cc39dc9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fad30cda-b82f-4fb2-8bfa-aa7e173881ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895edacd-227d-4743-a1cf-04a8c8fd86b2",
        "cursor": {
          "ref": "a4f14dee-32d4-40e3-8981-a6e56a67ef38",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b5d43e70-965f-4c91-9725-371dcfa73fbb"
        },
        "item": {
          "id": "895edacd-227d-4743-a1cf-04a8c8fd86b2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "71a54abd-093b-4966-ae37-981ce0cafe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329f1263-cc1c-4f29-bea9-fc4a79e3d168",
        "cursor": {
          "ref": "cf7bfa22-d362-4090-a580-b219b6d772a0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9f5f945-3a4a-4793-8740-114c3b3f1604"
        },
        "item": {
          "id": "329f1263-cc1c-4f29-bea9-fc4a79e3d168",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1a0c37f6-b81b-4d36-82d1-fdc2f728ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602aa7c9-1145-4416-bd8f-606e8a99bdfb",
        "cursor": {
          "ref": "ea156d8e-becf-4807-bfe7-37730932810a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b83c7d5b-98f0-4395-8bf0-0413522e4512"
        },
        "item": {
          "id": "602aa7c9-1145-4416-bd8f-606e8a99bdfb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24984c5a-3246-4555-8637-f0d98840ab3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122cdbb5-b922-428b-ae4b-14e92bf95012",
        "cursor": {
          "ref": "1b351d83-ad50-4914-ab31-dd1c76dcda07",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8fc37050-90d3-42e3-b43c-8c9af89ab1df"
        },
        "item": {
          "id": "122cdbb5-b922-428b-ae4b-14e92bf95012",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "68891d35-6e39-4d0a-b824-9d1a5d4a8aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b32decb-7538-4ee2-8c1b-91f2641986da",
        "cursor": {
          "ref": "f0aca725-4853-44f7-8ce6-01352df1e919",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "688710fb-b178-4fff-b0be-6d7cf55df586"
        },
        "item": {
          "id": "8b32decb-7538-4ee2-8c1b-91f2641986da",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "195a3799-fc9f-4a06-805e-3b805484858a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbb6adb-5976-493f-add2-ad538f125921",
        "cursor": {
          "ref": "49f388e5-517c-4185-bc8f-dd91e1ac45f4",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "41e69a33-82e4-4041-a157-d0aabdd8bd19"
        },
        "item": {
          "id": "abbb6adb-5976-493f-add2-ad538f125921",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "126e538c-df8f-4e24-b3fe-9e5fa65a8c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daeeb85-05a0-46f2-9590-1af2b3801630",
        "cursor": {
          "ref": "ede7c746-f8e4-4987-951c-63cc4d068ca6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "151de16b-4d64-4373-85ac-f4c080811c50"
        },
        "item": {
          "id": "2daeeb85-05a0-46f2-9590-1af2b3801630",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8afa89b2-e6fe-4264-98b3-59fecc4c4bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6867b58-ecb2-460d-adeb-62634423dbc4",
        "cursor": {
          "ref": "40c9f76f-7ded-4a0d-9b90-a245ad66d18a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6d50e632-0b2e-418e-a98d-9effc566cafb"
        },
        "item": {
          "id": "a6867b58-ecb2-460d-adeb-62634423dbc4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "afe66c50-6356-4916-9771-d12c8b29e122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb251c4-6c88-413c-91e5-02a0e704f691",
        "cursor": {
          "ref": "fc0a1e81-da6b-4422-814d-5d98bc2c70a1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d64f1cf5-c1cf-4b92-b514-396467caa1ec"
        },
        "item": {
          "id": "eeb251c4-6c88-413c-91e5-02a0e704f691",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "412c0a08-0e0c-44de-8551-14943b0994c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c55802f-9596-4ae8-81e9-0afdb7ade6d5",
        "cursor": {
          "ref": "450befe7-e3ac-431f-8eef-d5ca2f6f3eac",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b9bbe9ab-72f3-4893-9693-3387903affac"
        },
        "item": {
          "id": "5c55802f-9596-4ae8-81e9-0afdb7ade6d5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ff1d0f14-d511-4829-aa8d-9d82b177f483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4fbd29-677a-4b99-9237-b39c85de12b7",
        "cursor": {
          "ref": "006be170-3710-4f96-8341-8e062961bc1f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6c402c44-a5e5-460b-8ce4-e1f786ac058d"
        },
        "item": {
          "id": "9a4fbd29-677a-4b99-9237-b39c85de12b7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a0edbef1-ab4a-438f-b6f2-1f1f2c50fc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51b794-afef-450b-a907-c4b5f910762c",
        "cursor": {
          "ref": "9a0a080d-839d-4632-b7e0-614f2a0129f1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "459d1948-7c14-48b5-aac8-e0ab3ea3f653"
        },
        "item": {
          "id": "7b51b794-afef-450b-a907-c4b5f910762c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "320d65a9-ad5d-490a-9874-97e995b0abea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d814c04-958a-4c8c-84b3-0646e776cfb5",
        "cursor": {
          "ref": "9b0a7660-5a31-49cd-9f8e-99bb884b6270",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "68f01f5a-2031-41a2-97ad-d0f22ec2d0fd"
        },
        "item": {
          "id": "5d814c04-958a-4c8c-84b3-0646e776cfb5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "061883d5-1b29-4888-a23c-fe7d6b2219d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff3afc7-9210-47a8-a6b9-64ea85d740a1",
        "cursor": {
          "ref": "19cb9a1e-c1f2-4149-82cd-ac0e097f8093",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "183c89f1-a15f-44f2-acca-21c68e2ebaba"
        },
        "item": {
          "id": "7ff3afc7-9210-47a8-a6b9-64ea85d740a1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "66b3c4ab-2ab7-49b4-8ad5-f6e2543bc2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead75afb-5a64-493d-879d-95e008380e32",
        "cursor": {
          "ref": "4276dfdb-e5aa-4792-a766-ac63ada341ff",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d6eebc39-197b-45d0-a5a0-1e0dc314ea00"
        },
        "item": {
          "id": "ead75afb-5a64-493d-879d-95e008380e32",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c6cb5523-3980-4033-a5bc-510bfe0baa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad81092-6be3-4abd-9120-895d44873735",
        "cursor": {
          "ref": "3e8c6252-b0c8-419f-9aa4-7bc097762f61",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9871ed6e-4e58-4a44-b2f8-4a3a5afff92a"
        },
        "item": {
          "id": "5ad81092-6be3-4abd-9120-895d44873735",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c9a8c20a-d460-4ef5-9719-55e60e6e6a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2aa82b-fb0f-46af-9f87-9fed0d04482a",
        "cursor": {
          "ref": "a6879ef0-4611-4350-b840-a5172926726c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "56f569d1-0b8d-4071-9ef4-8f399eea662c"
        },
        "item": {
          "id": "bc2aa82b-fb0f-46af-9f87-9fed0d04482a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8310d1ab-5c2a-48fc-acc9-14fccd3b35a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ee76eb-0bde-49be-a981-4c7498ebb981",
        "cursor": {
          "ref": "fa69c3b9-1336-4612-9794-a92e15199aa3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67a85faf-39d2-4954-8ba2-bd53c1c26517"
        },
        "item": {
          "id": "89ee76eb-0bde-49be-a981-4c7498ebb981",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8ec4076c-ced2-4434-9d63-a5b3f502506b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6779f02e-3ab8-4d39-9bd0-ea1d19ab22a3",
        "cursor": {
          "ref": "415190fd-d481-4641-876e-a64c7fd47cbf",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "925dbae2-bb33-41db-82cb-4f0b87edb140"
        },
        "item": {
          "id": "6779f02e-3ab8-4d39-9bd0-ea1d19ab22a3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff4c0904-8ec6-400b-a89a-7862f0811ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59edab8-1132-46c7-95bb-f86b1b83b5b3",
        "cursor": {
          "ref": "a25cbc99-c0be-48f2-927f-604c30f7e6da",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d81ee8b9-30f9-4bed-8698-e282dcee3f12"
        },
        "item": {
          "id": "f59edab8-1132-46c7-95bb-f86b1b83b5b3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e2d2e62e-3813-450e-959e-fde6b9c6bce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb9fcc7-748b-411d-a6f9-63e2addc76cb",
        "cursor": {
          "ref": "f36d1c20-bde1-444d-a921-e11ee656d812",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1bafdd42-9fc8-463d-af3d-cd63bbb21523"
        },
        "item": {
          "id": "fcb9fcc7-748b-411d-a6f9-63e2addc76cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04158228-29a3-404b-8288-d24e21dfbc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3bbb0b-e72f-45cb-9f8f-ec7365877a16",
        "cursor": {
          "ref": "b576aa6d-6d7d-4a48-bd20-22a0d75a138d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59fe314a-49d7-443f-b722-363b0262b9ca"
        },
        "item": {
          "id": "fe3bbb0b-e72f-45cb-9f8f-ec7365877a16",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7f54243b-f504-4a0d-b379-165b031df456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebefd7ef-37fa-4414-ab8c-3b9d293a3a8a",
        "cursor": {
          "ref": "0e2690cc-b1bb-41b2-aec3-cd18079979e9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e01e81eb-d7a1-46f2-a4ac-254486383765"
        },
        "item": {
          "id": "ebefd7ef-37fa-4414-ab8c-3b9d293a3a8a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c67b55f-e5c7-4095-b13a-9c39a6fb852a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221216ae-aad1-48ec-a874-7d0f4e3510ad",
        "cursor": {
          "ref": "37b7a6c3-b89e-4106-8083-b1e551da60aa",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26dee310-a33a-462b-a0f3-ba89326662dc"
        },
        "item": {
          "id": "221216ae-aad1-48ec-a874-7d0f4e3510ad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c7b24fc-af2e-418b-8fe2-f2dc8be7993d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66acf914-098b-4a76-95c6-0e9a70e99a02",
        "cursor": {
          "ref": "67416a59-8462-42a2-b367-ea6dbdd02de5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1ca65b55-4414-4063-a718-ac5c81406fcc"
        },
        "item": {
          "id": "66acf914-098b-4a76-95c6-0e9a70e99a02",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "15b2f3f4-65c6-49c5-8f17-64a426d06ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e75f25-9840-44c3-a4c7-ba364ad92fe9",
        "cursor": {
          "ref": "fb581722-7564-45a8-8a92-54d7b29630b5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3c1cfbdf-9b2d-45be-a870-e05c048b5bad"
        },
        "item": {
          "id": "86e75f25-9840-44c3-a4c7-ba364ad92fe9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "781220ed-f987-48c7-ab58-dd0aba2ed0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aecb073-4f95-4083-a9ab-7cf5201d0b2c",
        "cursor": {
          "ref": "3755acf4-11a2-4bb1-92ed-c2e24bb20cdf",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b0700489-aacf-465e-bb72-be972c56ff10"
        },
        "item": {
          "id": "8aecb073-4f95-4083-a9ab-7cf5201d0b2c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c152f9ff-8efe-4401-8668-3eca37ced6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e103fa-fe3f-4cc9-8c4e-838b1eb698d9",
        "cursor": {
          "ref": "21821aa6-0575-4430-a32c-a5bd08f4152a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9952971b-8398-4e7b-a26b-ff83f2413781"
        },
        "item": {
          "id": "e3e103fa-fe3f-4cc9-8c4e-838b1eb698d9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d17d020b-0e10-4efc-881b-1cc0a1d4bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a679f-1a32-4d6b-98dc-d3dc8eb91e32",
        "cursor": {
          "ref": "ecae4b73-b5ca-4b70-b3c3-c7ac7fc6808f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "03227c81-a1c9-458e-a898-d142a3bab0f6"
        },
        "item": {
          "id": "802a679f-1a32-4d6b-98dc-d3dc8eb91e32",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bb927082-fb68-4a9a-9dd6-81e84fbfa6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dbbb32-756e-40fc-be3e-d0dbf6db7126",
        "cursor": {
          "ref": "dddd457e-10bb-4b33-9dab-f8ffad12f90c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "188bada3-bc77-47c0-b692-b3492718c7bf"
        },
        "item": {
          "id": "03dbbb32-756e-40fc-be3e-d0dbf6db7126",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "abb20a14-aa2c-43c6-8c27-49b2a9c50995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade653c8-4d7d-4017-a417-7ea3f525a9a9",
        "cursor": {
          "ref": "369e2a25-e0ea-4ff7-82aa-37aca05a83d1",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be52c09b-476e-4f73-8c84-c19e64492760"
        },
        "item": {
          "id": "ade653c8-4d7d-4017-a417-7ea3f525a9a9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "160852ca-65eb-45dd-b3e5-a063647114a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a671aae-8451-42ea-a90c-c909f03508b6",
        "cursor": {
          "ref": "c8aa56cb-81a7-40d5-881d-7c53282e1c47",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dbb56510-0875-4956-9517-c452e3226a21"
        },
        "item": {
          "id": "7a671aae-8451-42ea-a90c-c909f03508b6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6601a0c7-367f-4300-9c54-a648e5c43f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a3b9b-e920-4e99-b00c-a35b2371181c",
        "cursor": {
          "ref": "a83c29b8-d853-49cf-82af-cdbf12a9c872",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2bba1c77-9a4d-468e-b035-d1264ff9b9ea"
        },
        "item": {
          "id": "3a2a3b9b-e920-4e99-b00c-a35b2371181c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7fddfa2b-1c6e-4583-8d82-7b8dbc8a6ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68f3c2-6651-434b-8832-d5f51577ea88",
        "cursor": {
          "ref": "4fc9dbc7-a35d-4281-be46-cbdad197d40e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "759e5f06-3092-4bb5-8c2b-1aba22473c2c"
        },
        "item": {
          "id": "cd68f3c2-6651-434b-8832-d5f51577ea88",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "129cee47-ef4b-47e7-a8e9-3394bea07fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e96d6-267f-46ab-b39d-3134e654db70",
        "cursor": {
          "ref": "3a6d47c9-9b51-4dde-91e0-794260589516",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "19c659b8-6e39-4764-85f1-0ce94c40a2a5"
        },
        "item": {
          "id": "402e96d6-267f-46ab-b39d-3134e654db70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "76070a64-295b-4fac-8878-eb7b027c5990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424cb801-4a90-490c-90ac-620cfdad1846",
        "cursor": {
          "ref": "dc6154f7-a664-462c-9e4e-464c18fb0ac3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "318f58ec-93a8-49fd-a170-3eb35135d2bf"
        },
        "item": {
          "id": "424cb801-4a90-490c-90ac-620cfdad1846",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9b6c8b3a-d1a6-4205-9065-c8427e5797e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a410cc5-6ffa-44ab-822e-244a346a5b62",
        "cursor": {
          "ref": "805d36a3-c733-4e4e-92ce-4449995a88a9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c6de6652-9610-42bf-ab70-c4818ae214b9"
        },
        "item": {
          "id": "8a410cc5-6ffa-44ab-822e-244a346a5b62",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b53dd52a-f372-49a3-8483-bfda87827131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1e41b8-500c-4589-b91c-185310e7e5a5",
        "cursor": {
          "ref": "1f4000f3-1c9e-43d9-89d0-6a1c1bb65d0f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "83c5fde9-404a-42b7-b0ac-f5d8bb7a59df"
        },
        "item": {
          "id": "6c1e41b8-500c-4589-b91c-185310e7e5a5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a9b2a43e-ea1d-4f12-a72d-cdaa128d1a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa24e1-19a7-4b32-b1b5-f96e637246d0",
        "cursor": {
          "ref": "e25712f0-9133-4489-9d00-e497976d28f0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bed36da1-69e7-429f-916e-a7c375080438"
        },
        "item": {
          "id": "baaa24e1-19a7-4b32-b1b5-f96e637246d0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "22ae4158-693b-47c9-90fe-07d3ba446747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92d2cd3-eda2-47de-b0ee-72f0a62aa2ef",
        "cursor": {
          "ref": "b3dcc73c-c436-43bd-882b-7a17b80c76a8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "16d1d944-7e4f-420f-86df-2993a7e7d09e"
        },
        "item": {
          "id": "c92d2cd3-eda2-47de-b0ee-72f0a62aa2ef",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1553e021-06a3-4a39-86af-5f59a46cbaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4c9929-d0f3-470f-b0a2-3e7a8d8f5b55",
        "cursor": {
          "ref": "e696c8f6-7900-4ca4-8a92-7b4410a9b710",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "980a925d-ed9a-489d-b588-25cc78cb5532"
        },
        "item": {
          "id": "cb4c9929-d0f3-470f-b0a2-3e7a8d8f5b55",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75001f1e-c898-437b-af82-ff11cd9b8a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6caca5e-5eec-4b8c-9527-71ba799c6556",
        "cursor": {
          "ref": "c3743e0d-4e0b-4f3b-a524-b59e15c1df81",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b9a50acf-428d-4630-8c63-9e383ec1b0ea"
        },
        "item": {
          "id": "e6caca5e-5eec-4b8c-9527-71ba799c6556",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3212951c-4c5e-49d3-9b46-a664a5360064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33e293-b5d5-468a-a65a-a09b973e736a",
        "cursor": {
          "ref": "590c5dbb-f936-4c15-a6f0-cb5976ea4eec",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bd1508e4-25e6-42ad-95e8-c4d8fd5a1a32"
        },
        "item": {
          "id": "bd33e293-b5d5-468a-a65a-a09b973e736a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a21da854-cb06-42b1-86db-73bd3533d835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696461db-6a2c-4394-8757-1187899c2981",
        "cursor": {
          "ref": "c88673a0-01fe-4036-92e0-2cb212aab905",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6ad4aa60-832f-4813-95e3-2c587d133a5c"
        },
        "item": {
          "id": "696461db-6a2c-4394-8757-1187899c2981",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1d05d252-34c6-424d-915d-f9ac6001d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac405f9-9bef-427f-8113-840fb6efcbe4",
        "cursor": {
          "ref": "1239cd9e-7585-475c-b2ca-91d025fc797c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c3dd102d-6fd8-40b6-bd30-e4949876d5d3"
        },
        "item": {
          "id": "4ac405f9-9bef-427f-8113-840fb6efcbe4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ff4dacd4-68fb-4dd2-ae7b-7bd18518123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cd7a23-d1d5-494a-8618-ca38514e4c57",
        "cursor": {
          "ref": "cfda85c2-04b0-47e1-bfba-60c305e16925",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "494b4c72-7dbf-4566-8bd6-94f205506364"
        },
        "item": {
          "id": "21cd7a23-d1d5-494a-8618-ca38514e4c57",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c69263a7-5101-4aa0-b609-5427abfe87b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c58e5-1246-4a76-8ee6-8c57c852c79e",
        "cursor": {
          "ref": "bcd57ed3-f372-4e9d-8987-4faf9b9c5825",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9f245a1d-536e-463e-8d7f-133a19dc7e3a"
        },
        "item": {
          "id": "a72c58e5-1246-4a76-8ee6-8c57c852c79e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ef993d7f-20ec-4f20-a325-22901bc859c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b043f2-6f71-4e98-aeb9-f11b0936b159",
        "cursor": {
          "ref": "0c9fc5f9-d705-4366-88cf-b78cb4d9277e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cc3d3546-e64a-41f4-9405-c0ca2929a110"
        },
        "item": {
          "id": "e4b043f2-6f71-4e98-aeb9-f11b0936b159",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "41c2ec7f-3951-4cb2-a0e0-7b975cdac094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9a202-a727-487e-81fa-c0027a3d627f",
        "cursor": {
          "ref": "bb325e12-c77f-4b3a-a154-91f3335f1f4a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e9006490-dde0-4130-9593-2240ad1c689a"
        },
        "item": {
          "id": "0db9a202-a727-487e-81fa-c0027a3d627f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9736d07d-d7e0-47be-a6a2-574184a14867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298c3051-8755-4b42-9f62-52038ce45d40",
        "cursor": {
          "ref": "d1ce57be-62c9-4002-9d3a-808ba52c0e10",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8e08e3f6-1eda-4cfc-a1c0-35fa94c28ff8"
        },
        "item": {
          "id": "298c3051-8755-4b42-9f62-52038ce45d40",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b9974c39-edab-4a4d-aa9d-67b96df548db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7b404-5e98-40fa-91f0-fecef471ee36",
        "cursor": {
          "ref": "4291139b-e74a-4159-bd08-627ae40aa33e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fd18472f-33cb-41d9-a280-118fe88a1e3e"
        },
        "item": {
          "id": "4be7b404-5e98-40fa-91f0-fecef471ee36",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8d6494a2-3c4d-4bb5-b2cf-0faf977aca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22f6dc-689e-48f1-80e7-af94a53dcae0",
        "cursor": {
          "ref": "3668127d-9beb-4d1b-a427-be813e90b8fd",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "504d4d17-ccc7-4678-8d85-d4fd3a2c515e"
        },
        "item": {
          "id": "5a22f6dc-689e-48f1-80e7-af94a53dcae0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4025d3b2-1b18-49c1-8af6-e9eb525d6d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9555bb-ff65-470f-b577-22753529da57",
        "cursor": {
          "ref": "9c67b677-6b2d-4e5f-971b-d50008d88695",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "33c44cbf-5977-4be6-937e-444bf2f071f8"
        },
        "item": {
          "id": "da9555bb-ff65-470f-b577-22753529da57",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "926aa1f1-9d3a-4c52-8795-5ec9456ac35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408d6f7f-79cc-4d8a-b8fe-783bb893e816",
        "cursor": {
          "ref": "cef85eb9-723a-4e18-acff-0825dcc5536d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ce67d3e6-df05-4050-ae62-876e71155890"
        },
        "item": {
          "id": "408d6f7f-79cc-4d8a-b8fe-783bb893e816",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c1a5b40f-47ee-4015-8dbc-d297b1de1620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c493aa3-454a-4c44-acdd-c991c1e6b15c",
        "cursor": {
          "ref": "99382ba8-ed1b-4ee2-a639-f6099ae82f12",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cbd6c854-94ce-4813-a026-259337c343ac"
        },
        "item": {
          "id": "0c493aa3-454a-4c44-acdd-c991c1e6b15c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "83bae9cf-9a54-42f1-aa56-b95bc7a83654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0542dde-99c7-4597-abc7-9755cdc9cf03",
        "cursor": {
          "ref": "b3fb7eb1-51c5-4bdd-9441-2ba1c3f7dc80",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a936ba9-7c79-40ff-933a-92627ac9e930"
        },
        "item": {
          "id": "c0542dde-99c7-4597-abc7-9755cdc9cf03",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c170081-c1b8-4df6-8834-ce183be7a4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c265940-801e-4dec-a9d8-38041a5df01f",
        "cursor": {
          "ref": "c6802fa5-e4a4-4806-b1dd-3fb75c089527",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b1a3505-51fe-46d5-86ae-07345930b1c5"
        },
        "item": {
          "id": "3c265940-801e-4dec-a9d8-38041a5df01f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "acf05058-a9f3-4850-8ba3-67340def5d7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40daedb-d31a-4e7d-abe5-bcc13cafe35a",
        "cursor": {
          "ref": "f1824ccd-0acf-4d9c-8180-ea9112803cf3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1bbeb9b5-3fb4-47ab-b5da-5467eb8b4873"
        },
        "item": {
          "id": "a40daedb-d31a-4e7d-abe5-bcc13cafe35a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7b925991-c1a8-41e2-9c19-42dc72bcacf2",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "704ae1d0-7f87-4f12-afb8-043e3f3713d0",
        "cursor": {
          "ref": "9929883a-38b4-4163-8f03-c18d03151510",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "edbbbed8-1b20-4c7e-9597-8457d4699af2"
        },
        "item": {
          "id": "704ae1d0-7f87-4f12-afb8-043e3f3713d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "07f6a468-7b72-4faf-8bd3-3fadcc7905a0",
          "status": "OK",
          "code": 200,
          "responseTime": 3311,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "998c69a9-16a6-40c0-a165-eed0519d65ef",
        "cursor": {
          "ref": "49f42283-dfcf-45f4-86e6-afc2ea65cfcf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1ab8b5fd-1877-4541-92bd-8a9f9ed1d47b"
        },
        "item": {
          "id": "998c69a9-16a6-40c0-a165-eed0519d65ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "de901f75-96e7-41a5-b355-64cf76820a2f",
          "status": "OK",
          "code": 200,
          "responseTime": 2942,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f34cf1-5b88-4a13-8ac2-b8b10ba0b38e",
        "cursor": {
          "ref": "0eff32cf-19aa-443b-b6d9-10cac987a625",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c70c2ecd-54e2-4ade-a8de-f505d48e7727"
        },
        "item": {
          "id": "d3f34cf1-5b88-4a13-8ac2-b8b10ba0b38e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ab22a68-a9b2-4513-878f-8185498b5773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f34cf1-5b88-4a13-8ac2-b8b10ba0b38e",
        "cursor": {
          "ref": "0eff32cf-19aa-443b-b6d9-10cac987a625",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c70c2ecd-54e2-4ade-a8de-f505d48e7727"
        },
        "item": {
          "id": "d3f34cf1-5b88-4a13-8ac2-b8b10ba0b38e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ab22a68-a9b2-4513-878f-8185498b5773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08093862-52e7-4f45-85c0-2e45f3949102",
        "cursor": {
          "ref": "a5161ae4-95ce-4cbb-b406-406249af4a62",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "de943b89-49d5-4663-8e52-4822d17bd193"
        },
        "item": {
          "id": "08093862-52e7-4f45-85c0-2e45f3949102",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b22217d0-b7e4-4d0d-90d4-a5851077aa4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99748292-60a1-41db-8e29-2e10e78b7a97",
        "cursor": {
          "ref": "928afd69-a7cd-44d1-bf88-1b967fb92773",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b1cf7916-a51e-42f7-a2cc-cc2260694ba4"
        },
        "item": {
          "id": "99748292-60a1-41db-8e29-2e10e78b7a97",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4685fb5c-9d97-47f0-9331-463a824a7b9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}