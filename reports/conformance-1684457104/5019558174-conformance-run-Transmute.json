{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6bc8c02a-ad0e-4be8-9f8e-bc20145227e2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5f47b44-5814-4248-a311-c0dfe96972a8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f536957-a1a5-43c0-b5a4-9fcfeb43f1be",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da51c496-75bb-4b30-93db-05ee11548056"
                }
              }
            ]
          },
          {
            "id": "5bb3f384-c685-446b-b788-59ae5da078bd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74bbbdae-76ea-4356-8ee5-e4e8f01d6f44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8e05e6d-0e84-41bc-b1a0-1a5eb9981bc6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "391a0899-bd9d-4a73-9880-f76ccd6739ae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c3138a7-470d-4ce9-95cd-460fe3078759",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af666ece-c0eb-416a-9a00-2ce7396feee0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40d4e24e-83a7-463e-b461-13e5c8ba5d04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37a877c4-1a41-4c9f-8e80-09ad2aa77792"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66b0bfa4-b74b-46dc-b9fb-6365d75130a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0611c847-9544-4c13-b2ff-9279bd6327d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26be41a5-bccd-44a5-9216-88ebeb006ddc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2801c0a-bab5-4f61-b6ae-9610fc75f8c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba3a94d-267e-41c4-99d9-f1773291ebf7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2a4e4acd-7672-405f-ab61-f2d5fdf812c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab86ddc4-e973-43fd-9988-20cdda0c8712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1af591be-8770-4a88-a8d5-82ca253de05d"
            }
          }
        ]
      },
      {
        "id": "54e42bb9-8b70-4ad8-96cc-303ad486ccc5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "53c3bc67-0ab8-45a8-80e2-20f345747470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42728eaf-2ea3-4e0b-bc89-ae64429b5db5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "690ffad4-6ce5-498e-b3ce-b23db9d14c7b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec4bd5f-81b0-4f6e-8e0e-c53792eb2364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cbf279f-1813-444c-b4cc-1bf8df5c487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22199473-9f97-40d6-a3f4-85ce1f2ce112",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abece1c-b6ec-4e1d-88cf-292b2aad56c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "705f5a68-45a5-4034-bf59-758a93bcef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36534351-ba2f-46a4-b53d-b1e063b9d1c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4645dc74-ac40-455e-9f92-6076088931b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "378e28a9-da10-4c91-b076-c8d69e8e4b5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4133a291-3473-471e-898d-56457d87054c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24c0c044-b9fd-4b48-9d2e-04e3297415da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b061c81d-cd35-462c-aa4f-f08911772073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c1a256b-4b57-4d11-b22c-cd1f68cc2ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb6e91-61ae-4e3d-ab76-9bef9a6a83aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e10370b-1c2c-483b-946c-9ab23746636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9d17f4-36f6-4fc5-a9eb-10d1b0668cb0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab6840a-a260-422a-907b-910380898dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27a2574a-f3f5-445d-9cec-e9dac6dbb975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddfe2ec-2007-423e-9327-7e460f366544",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "af80962c-83fb-4fea-8f2c-c4b0e20faed9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29674b11-f740-4120-a0bc-de5935577d28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b39475cb-8745-4b76-9cc9-2679ddc2064e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c085401b-4e09-488a-b87a-092ee01d8a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "45009dc9-4e90-41fe-b1de-17426e84ae27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b7bda3c-c324-44f2-a79f-e0159d3c1501",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2c989644-c455-4963-8231-c32f603fbbe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "329a554e-887b-4fed-84fa-687dc588107f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5908f59c-69b1-4f07-808b-addc8ce82e52"
            }
          }
        ]
      },
      {
        "id": "57fbac7e-3cf7-4adc-94ad-6ee9fe37ec36",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a490c59e-1467-4db8-a576-d2c22118f71b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7398b0a-cbc6-4927-bff4-b336278b337c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "78023b31-bfd8-4ab0-aa2d-930b793a7170",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e75af9-de6b-4e2c-9617-92bc58c17694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2999c3-d232-4977-8026-2e04e88e9d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f709e8-e987-422d-8da0-b0e2243271d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef943632-c17a-4222-b2ce-a4c9241e5d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427fe9a5-9adf-4b3e-a427-ce82d76376e4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46171953-64c4-4374-92b0-8bd752928cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2873c94b-aa52-4dc9-bfb9-bc43da2bdd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea9544-7f99-456b-abcf-22f41e6d47a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f5fe81e-192a-4bc5-97f1-e42f5ad8fbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e7fd6-afc5-4bbc-83c5-4e495cf00677",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d14328-9dfd-49ab-8376-019707dfbbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ad8394-2516-470c-a7d7-f2da48343814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d86b895-d483-403b-bdef-65587880398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c017e43-6929-4244-a0dd-fbbe0d1c9926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b85838-9f76-49cf-a90d-54e8b93dfbf4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10153e9a-2bdc-4bcf-b3f4-aae6dde4d0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4796c5-230b-4ce1-ab2f-67ebfcfd3a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7d856d-24af-47f1-9c53-462417faad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f92a74d5-3b6f-4cff-bc90-12a2aad613c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aac2ef-1368-4f8c-a000-b2d6c1cf21b3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c23ab4-2e1a-419d-949f-24cee4e6270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978469e7-f3dd-4f20-853b-44af76fd0d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c3a8ca-f7fd-4775-9868-51f0a73cc7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cddd23e7-423e-48d4-a367-d4325c9eb720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6765bc4-61b6-4007-af8f-ca79ba7fecfa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda40524-e857-4369-aed3-1a3accf0e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e062e9-f89e-4079-8256-9353a51a5e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49139da1-3f28-429b-9bd9-110c7ecdfa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d87456eb-5105-4567-9e4f-2062079fc7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01b9a7b-4a0e-4930-9b80-c20328fccf5d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70b707c-0950-47a4-9038-990098e18547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46990d86-861c-431a-a1e4-779b881987e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda437b-1e46-421a-ae85-ed8e0f1a06e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65395a75-9508-4b0d-bd45-17f7969057e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd60e064-d361-4718-bfbb-beeecc0cabc1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0611479-6cf1-4408-b208-9e67cde57549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72edefe1-991f-494d-af38-e6a5ebe84aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e41e9-7316-4d46-a515-e5c2a16cd218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba02427-4024-46ac-b794-5401a8b872bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a1b98d-9b42-4e89-a1a3-d54d714c90ef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98ebd31-7a3d-4989-a904-1f5b1d6ccc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6dbb8-b544-433c-8369-a2f07caf979e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba8882b-413f-49a4-97d6-9887d0807e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f408a5fb-7434-4212-909c-0c771c16816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58650ddd-8508-48ce-bd8b-ef4e51bd3477",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2ba393-ab20-4f71-a322-6dc8b7e24516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8d9889-a609-4878-9f6e-e7e8d9758214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bec383-a1d4-4016-9cd5-a14a1e39ef61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fcfd132-3f66-46c3-9cc3-9d980e5b1f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590bfd69-9996-401e-94de-be6e1d929281",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb5d735-0527-453d-a53a-d8ebdb488ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0b0c14-c397-41bb-a4da-5dd3ccc5882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576914f5-dd04-4cb5-8287-4ca4d478b742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84fd11ed-1333-40f4-8cf5-c0a960c45683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc986cf-aa2c-4bf6-b4fc-acc6bd5469d1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392c4b5e-5c70-4842-bcda-6722e83a56a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c094bd-0e34-4568-83cd-a719004bb64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c57a19-d483-409d-ad68-0e8b05c37ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c578d6bb-c5fe-414b-ba92-92bdc9b954da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0623e2b-3eda-49bc-af5f-e220087b0f89",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cb065a-70c3-404a-b492-0a7bd95388ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381bb79b-4a30-4478-b579-c968ca502b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd937fd-4fc4-4d55-a41f-1e2e5a3dbcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e17ee4d1-0b2d-4cd0-a701-6baaf4fd2173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4756808-eb7d-4336-8f62-19e7ef696f7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa2c27e-7a72-4f2b-b73c-5463668b18b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bee0cd-d9fb-4e04-9c3d-56f558ae47b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191e617b-43bc-4ccf-b2d5-d60d6b544a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad85f32a-fc18-42d5-99f2-7a27f9f47a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24883357-9b23-4960-b70d-3bc1d76d0083",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2874888-27ae-4663-886d-a5f63725a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6176e7-ddd0-4450-bcc2-f23b2924d957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3f393c-e3f8-452c-be1e-258e11b76703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "739e7db2-1f03-42e0-a85f-838f4a6d7188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fae6e46-57ee-46ad-86b4-8e41b8407a30",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b6580e-89fb-4df2-ba17-cce96e229c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b96c959-195b-4e2a-834d-dffdb76e924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d2c45d-f552-45fa-9d6d-2f16d64380f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1c05ba3-1b16-4da3-85bd-f9eef72bfe48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf31200-e0da-4ae2-945b-7707854de368",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7acef02-ec5b-4549-af73-a0d710418da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62f6f42-ffb7-4acb-bd6c-a0630066773b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2683e34-d68a-4e16-8808-4a73841a69b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03efb817-6fa5-4f25-8ca2-4fce16149650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f080e97-99df-43f9-ae50-7b03910439a6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5efca-7cc5-4fb0-bab7-72a9936cfd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad2186c-0418-46eb-b203-e142982dcb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfc3657-43c8-4510-8894-f407063bfffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "713a053a-7780-4f5b-9322-8fdca9522385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792786e3-e858-4e09-8031-faa3fa374386",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84dacc7-0773-4538-b9e2-3935eccbdf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e404f947-2d79-4554-9ffb-0414722dcbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cb763f-9a7b-43e7-9a52-fc16cf49654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7634a7f4-aeff-4e73-973f-dd690269b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b2f5af-9606-4fa3-9c41-7bbafda7efbe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab4fd2a-fa15-4731-aa03-d243b6bfaf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5d017a-eaf8-414c-985a-23c2c65bb697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21949127-0329-4679-9f46-0304139893ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98842665-8d08-4d3c-b602-5703befddf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343147d-4d1a-4753-85cd-264d03ffcd8a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c322ca-6aba-4155-be45-adceee9c62a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ac136-96e4-4848-bc2b-9e1aebc3587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fd1631-90d2-475e-9d5f-509f3e4dc948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cdc500-3ba0-4372-bcac-f6f981452c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01d1e42-88ed-49a2-9f48-d1008b8423a2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed0d67-6aef-4057-85d7-6f2274557342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f378d6f3-76f1-423a-a62a-ff2594f95f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ec0c2d-80a7-4223-9138-50eab5203c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8127a457-231c-47ee-b78f-c6d7761ac2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0adedd6-136a-49d6-89f2-a0155989184d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86a88b4-5344-4179-92d5-abb8ebd5cb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5a3e65-784c-485b-b8aa-518726a7b7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8157d8a-4c47-4709-93d2-9df49d913c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "647496ca-1351-4da1-93a5-51c109d1dd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b31ce-7e38-4561-8ae3-05648cd4702f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9510ddd8-ca06-4bf6-8941-243ca2c3ed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda29699-0964-4661-987f-4bb165466fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976e02b2-c208-490b-8602-23f24ee4dbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4102e126-7c95-4879-bfc4-da582b0bbd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99179b6b-834e-45b2-b45d-f73a324e9c18",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4d784b-5999-4c7c-979a-687b0c2f29ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4936219-1cd9-48a8-993b-01676d584e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f474359-b294-4f50-bbee-427b9595a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44480204-ab17-4a3d-991a-145bae1ef228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c583dc-9e7a-46f9-8fbf-405e0a784b50",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec71fc0-63a2-4115-afd6-b8d8fb1ad6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f3b4f7-6bd3-4f49-9323-2dca219829a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96651951-f066-4ca1-bf18-70c06e1be2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71ffcd1-8efc-40b8-8372-69b4cbef7025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6ec3e2-2f21-402f-a008-271caedd3b9f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ea38d6-1985-4a30-9307-584e1c35d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084c06b0-a809-4ff8-9da8-15f255c34766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13249b68-3880-40c9-b016-630057633e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b6d99-77a3-4317-8148-2601c867d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3063ec-e863-4395-bf4b-5a482128926d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1334c02b-c786-4782-81af-c1447e89f777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b997e2-0b4d-487a-b9f3-fc72ad7381d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc926af-2fc9-4a97-a9ed-e300ae1600e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63650d05-7906-4897-8ea3-a86203edc364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c649af9c-9a94-45cd-bdaa-d682e5ce7fe4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97030922-e6ab-4586-8d2d-d1e5e791390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c894cf94-0c1c-4eba-b175-4ccf0134020c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1965a14-1573-47c8-b886-f00155e9fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "931761b3-f55a-4216-922a-8d08cdc257d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08123b8e-75a9-4917-a685-b677bf73a929",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b056c-d616-4f01-a948-fa8afadfed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d588e8aa-2de1-4be5-9ff1-c7857ec089e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c7520a-4bd6-4043-9c80-f8d2eda74a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07a5411-c5ad-419f-8be1-82e5accd1969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbd6016-43c2-4216-a08c-cbb2e5a6416e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c6e99-986e-4b25-8a18-feaf10d2b099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ddc5ce-a1f2-44a2-a6c0-25650abc312c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb68cff-62b4-44c8-a679-750615c7156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ce83b6-7992-47fa-bc80-7a49a8769136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cda0904-02e1-4a64-a674-b0afefcbea28",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152fd103-b756-4876-b5f9-686f7f6caa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67945689-b3e0-4d2b-ae1a-3d752142c7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c6636b-1293-4f38-abde-cdd9556e929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f44f81-4b82-4ca1-ae1a-8920f6fcd827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0c93d1-3a50-4375-8dd2-fb2d30d19f32",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae053734-20ee-4156-bccc-4459b682b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efe796a-105c-4bbb-8e72-de64a0a09a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2824e993-4dd6-406f-9ca7-2311509c44f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f45f4f-bb63-4879-bd0c-aa2cd92ecea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7637e1-8cf8-4658-9550-a91f39a4f760",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729193d2-f56e-439e-b7ee-b245bd2b2ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071eb8ff-6a3b-4bc9-be4f-a1a1d3afa8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f4b6a9-7d1f-4513-a71f-07ffcf76bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1038fa81-3662-4841-9a73-5acb3fbc4048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60dac8-cc46-4605-8c7a-8829be3d4d6e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a704fc36-44b0-4305-a057-5f5cf97db2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ac6525-3f58-49f8-bb86-6e5b9c7f6c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720626c-b713-43b7-8164-31b1d52742ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfc72aa-373f-45b5-9396-39e533da9e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce96343-011f-426b-b24e-ac7f013b7ec3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4284d6d6-5713-49ee-83e3-59c8ade1b433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be84d981-ef01-4bab-8a14-f63262f4f099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4116e2d-5989-41f6-bc4f-2354ed512285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31a1c4d6-3651-4ef0-aa0a-b93195725b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f969f593-3eb2-4a63-b1ee-3f4869c4b488",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22918553-b6b4-492e-ad26-3fccc2a814d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac2b30a-1c7e-4d61-ad02-cef88c3792fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f60c4-057f-4630-8c8d-5dae3dbd2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee920a8-318f-49ab-b1d0-bf2e992117d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e184d37-7dbf-4cf1-aea1-d7d869d3331b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c802d7ef-2090-41df-8066-474823a67dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0c90f4-ea42-4629-bed4-53bf181a1786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ecdf24-176f-47a2-9fb7-5a73d1c1ca7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0551e8b3-6bbc-41f4-bf93-7871152fca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a189dfb8-92d3-4cc4-b838-5114e1755db0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4b7ad1-d0bc-44fd-b399-840e0a1aa4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45d9bea-b36d-49ee-94df-e9e9bed3ef55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350af03-ae50-403c-8e82-b22cf67ba250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7712d79d-89a2-4d65-85bc-ae5145ff2520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6aa27a-260a-4275-a5ca-96ebd0310f65",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d6f3fe-69cd-4d0c-9500-5a403c93c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7423ea7c-6113-4f6b-a355-9106a7db0199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dc24c8-5a4b-4472-8ce0-36474acb9329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11bdaae-41c8-4e75-a469-48487cd47984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7dd86d-c905-450e-b2c4-ada77a530cc4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722d0fb1-b91e-4583-88d2-4498761ea084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef50495d-702a-4b9e-94ee-db49fa1d5f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f81b24-c9de-433a-bcbb-7aaef86d7de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de7d2da-d3fe-4cba-bdec-ebdf411ce268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9412200-2f53-4503-92dc-e92a2938d48d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acfbe7d-f8df-4580-bb0e-96631266b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb55508-142f-4092-a22b-97ef3db1ce93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cb2eee-44a3-4433-bd8e-9b1de86be470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2ed897-0634-4b6b-8caa-08a871c8809a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee563a9c-b254-4b6b-b8c3-aad8ed929520",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a7bbf-5d3b-4770-a6ec-186a95fcdeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe637dfb-66ea-4793-860a-e06bdc57a978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95e723-12f4-4370-84a6-f697e795cefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b64731-ffef-464d-844a-0c721db0cc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f72dd4c-ce7e-4565-be88-8a2d700a6652",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c69a2-1a90-490e-bdb4-83a5801b89b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc4d0f8-1d29-4757-b879-4f1c72c83ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba678cff-9942-4bf6-8084-c848f927e80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3f58b2-8af7-4e50-834b-17c4cb6f3426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc01ea4-24d6-4199-add6-90a9394b1c1d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee113d52-2e8b-4003-aef0-f02228503051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79195ef-97cd-42f8-90a4-39fbf5373f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30292f02-abe3-4517-8193-632bf0729c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd3ed68-c183-496e-b50b-13fc19c16623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9d07e-915b-4ff3-a4c1-25beb75c9ef1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9fafaf-8a75-4099-a388-43546b80de3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dde769-7d57-44ab-8a77-e2b7734d8d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbcfd2a-f690-4374-9976-22cc54440ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2332789f-3e21-4aa7-9037-90766fe72d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0059ba97-035a-4d14-98a0-90cc4a015d98",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604fbe41-833b-4e5e-8fd3-edefee8cdb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23e0f24-c3f2-4125-a6fd-72ab9b276ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2323847-cc7c-4dd1-9d0e-f6bca981b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdb3f67-bae6-4355-8945-da86c2c71ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5ae66a-c97a-4d4c-95d5-ef281546a804",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d031f19-69bf-46c1-baa2-4f0a2b37dde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b619a24-8ae8-42f6-bacd-d8d3d6250d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cece32f4-1856-4e6c-beb3-bf1894c9734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cc47c1-cb9f-4dab-b114-ce572e41eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc2e61b-36a9-4822-8ab6-3a5178bbfea2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1d65ef-1978-487a-803f-e1d629a791d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a8302c-44a9-4ac6-beb2-f40a7aae5a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7285bb7-a008-4c5f-b61a-a4f89fe77579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40115a0c-f341-412d-91bc-c42b32d7a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d5edf9-ca92-4b61-8d30-4e4d1cc5d8ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b414d2e-ae25-4c8d-946e-8d75f3982163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1aebcd-4e52-4064-bbf4-d28eb17d2409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cbd4fd-03b7-486e-ae0f-34569dd29de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "149498cd-be07-4044-b539-f30fe716a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdfc86e-59c3-4160-80a1-758dc5cf0a5f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d696a008-166b-4808-b886-1673c98a3592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1156034c-f81a-4e4f-8be9-0d0effc005c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e919212e-ebeb-4e97-805b-dea134cb30fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82ba10b-7f36-4db9-ac0c-6a687de850ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa6ef3b-e58f-4261-b558-2213ddac7d56",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb9d3f7-0bc0-451e-b523-f090ff200458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82794e0-b5f0-4430-8577-fba57529f7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da107b91-068a-401f-861d-96d0ce32ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa73b769-102b-4c19-8323-65f6fc3c3271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57edbd-a996-474a-97ae-9aaa622a89bc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898a8cc2-6824-426f-89a5-11344408e93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a1b715-1fbd-43ea-b659-cb813e70fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f28691-32d8-45f1-8478-24b7a2a5ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2cc94c-9943-4f92-b2e0-5611af474141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8b4a00-663d-4df4-8408-cd77ebdfc4c6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45899d76-e81e-4506-a4a8-029ffb0f9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcd76d8-4410-4cdf-bd03-80d38cdf3667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b80856-b993-4985-81a2-9bf4c5bc1161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a5d20d-845f-4ded-85aa-d98142b47ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a2f2fc-0ca3-4fdb-a253-691514c80cea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b222d51-f038-483f-97ec-6391d8ec70c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6116b16b-d3e9-4ac8-a562-994d9e405969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c1ede-221e-48c1-8f5e-b0949a1bfd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc12b22-39d5-4e65-a00b-9f8c0767781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518b4200-3968-4718-b4c2-61dc1186b31e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2805b32-010c-463d-accc-ccc9630617ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530da44f-eef7-4b46-9dd7-317e528bd4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d980228b-7df4-4b57-8ef2-9507eb68f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "46c4f8a7-43d1-4061-bd0d-0d176b6346a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbea87e-5f60-495e-accf-ffc6bd2e3c63",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40cb75-93b3-4b09-8ede-0a70cc096885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6d7e73-bb26-410e-88ba-eb35e5702347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df83ca9-3d32-452b-a1f1-597618d17f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1883b2f5-cd2c-484e-8b50-abb3c17dba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe039c02-2b52-4dfe-9128-94266da5d887",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc221c-750d-423f-80a1-a37d37bbe406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4cdb7a-8f29-4bae-83c3-1a7a5cfe04e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7f5db4-5c75-4ba9-9c41-9decb7877a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eccd3888-392d-4e2b-be05-06109ca58190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e008a3-f82e-41e0-92a8-2f3a34d487f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e5a3a-69ba-47cb-9289-2eec1551a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef57869-16f8-4aa2-8278-7f5ae3e0bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a22aab-4545-4880-a9e8-198aeb1664ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28641d3d-e6e6-4fe2-afdb-123a4a071114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936ad50c-188a-4d81-832f-51d505400cc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ee436e-cd91-416e-bf09-5e98200acd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fb0334-261f-445e-9d83-7244e9d39ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b5b15b-54ab-41b0-b6cf-31657a11a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f2d262-1e79-4b63-a38c-8eeb6e500207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cbe5ed-cd15-4a99-a8ae-dfecc9e4fd14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4c5f0-12f8-45e5-b502-59712e7d9969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e709aac2-1e09-4e6c-bc01-21011ae4c5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabad120-8f41-4750-91f5-df474fc286ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9739a3ae-9fab-46fd-b777-302857a494bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dbeaa2-8caf-4555-9cf5-9fc91ec70aea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ec84b9-ddc2-4692-bdff-1be10354461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c73cd8-ae6c-4e03-a04f-b3da099ec987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd45ea0-f980-4994-9088-03f85fee29c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1fc15a-c36f-4bb4-ab1a-ef89fb5c6ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e85c122-b234-4548-84a6-a99df4822b69",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d00341-be28-40c8-9189-9a4631479182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057f3cd0-a0f0-4537-b66b-439aeae59c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2c4e60-0af7-4555-b13e-a2a9fe291869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "667b40f6-09c0-4502-ab80-0912c670272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b899beb-a6c1-4519-bd06-28efe6fc79f3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80deb37-4ec6-4b41-bdfd-f66c6c001f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5435dba6-9639-452d-9a28-87badf39e49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eb22f9-54f7-4276-a062-f105f3a6a416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cefbd82-b663-4bb0-b002-ff57ed81bf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31505c7a-7ef4-4306-94d3-fbe0da5ea861",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271d9d0-c732-4b33-b40c-02d5a7453da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20011f81-4cfb-4f27-9cad-0ccc4470fb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5d5366-0ab4-47d0-9e43-de514f342a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e03082-dc6d-4eff-a0f6-bf3500ca3ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296e83d7-21e4-44c8-a208-a645fe563ba2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8d16bb-9472-4eca-8238-83e8be4e8291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cada48-92c8-4ca1-b19f-14952c18babf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cacda6f-a8e5-4720-8c3d-1f2a8bb6b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee646bac-0c5c-4a1d-82e5-78a53a4b7f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c169c69-f114-466a-a22f-e3b8d3edc911",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d9e4a9-0375-4ef6-92e6-13e026da83b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d798b839-fa29-49bf-850b-989bf71d2eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7a4057-ba72-43a4-bea0-ca70cfd18515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c814ad01-5e05-4406-81c0-d4f4d88503f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9facc6eb-8999-40b0-8767-04bd298d0e42",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38cc6ae-0934-4b87-b39a-a9fe7828d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cc246f-0709-4e70-9a65-18d42269aba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6abec77-5a81-4531-875a-2019cb8169cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "506b9bf5-c8d8-4f52-9911-a2ea6904d69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d4432-d8ff-4f67-ad11-392734a2a00a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cea25e-cc44-4f61-a576-c13df2c05eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18990398-68a3-46df-a342-0a03dd45fed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a792e0bf-08ea-4f98-a44f-8caf3b334962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8af9311-0c49-4fee-b0f5-54ccc525aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed926b2-4a60-4feb-9f8c-018a7d22a882",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f850d1f-55d8-4add-a2bc-bf4a394b206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d2e55d-583c-4be7-b27a-380917594e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6199878-aa6e-4f09-85a2-93050edc3e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f99fe1-e2b6-4421-877d-cd6acceb114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048f39b7-dffd-4e8f-8e16-51d04cfd37a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef15788-5bb7-44cf-b00b-2adb86dc541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95341e3e-f44b-48c1-88f6-951c18d5ac0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eba848-6802-444a-9ebb-560205550611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4477a2-3f9b-4eef-a00f-e491d6c237d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4996b68-9745-4aaf-a839-f2e0ff11a8f4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c0b1c-de54-4145-ad54-597580b591d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6836aa6a-9424-48ba-abb8-824f316f63dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e0dcdd-e001-4e44-8405-fa0492772678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2d253e-646d-4f37-96e2-7bee5f6a6ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4de043-b715-45c2-bb8c-0e7f7ed8a8a5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6b8b3-e375-4b7b-bd46-690b49ddc31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ad14fd-13ab-4a20-9651-03e7a28247f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdddd78-ec7d-4782-9fa3-a7f64c7dbeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b271045-ee91-4dd1-b3de-cc2283540d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757f13d1-ac6d-41d0-bd09-6c7d5dfaab0e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad735e3b-cbf9-4ecb-b640-14dccf9ff1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1049b2a9-078e-4b8c-b213-7913de00e991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642598f5-ca32-436c-9245-a6c1d30b7698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8ec921-ed77-42d4-b78c-050ee50a8763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf876f1-ffb0-416b-ac48-03869a500d80",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6a4501-e8ef-4bb8-a4c6-b159d3ebd589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a04af2-512e-4dfa-aa87-d4c221772a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5486b230-beea-4e01-a663-75244cc7221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da53fc31-76c3-4518-a2ac-0bc20d5dc89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4bbd3-c247-4d43-98c0-53bc78d9036a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58804fcc-b2c3-44b5-99a2-713dd14ca9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf70c08-b79a-45e2-a403-672aa85c94ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa88c5f2-982e-4af7-a3a5-0f7585ba730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3e2519-e61d-45d9-9be8-ace65cce76ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3619ce5-c7da-4749-a54e-8d7c12f4bcc4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac185b-f867-44cf-9d9d-c876f61663a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67056caa-86dd-48b9-bdb9-87557c0aff5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7880d1ac-758f-4ca8-aed0-450b72827268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "057708e0-f1f9-4992-8e2f-38854adbc410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032d315-b07c-418f-8384-516d3e08d238",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f62107-7c25-4236-a2d7-648534ab0ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1be583-a620-4af0-b0cb-6c2c729b5e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d21138-6a30-4144-8252-eb73c4fa8719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45e7760-abf0-4df1-9a99-14c56b20e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2d18af-86de-4688-8a71-a0dd358cf0c3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331069f1-a259-4798-8c33-bea0850bfec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fe712a-755c-49e9-8cf4-bfb0f1ac4beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1e4b82-d841-4170-8752-10473574467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28656f4d-7adc-43f7-a548-824a3cab382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f331c1fd-cbca-4c86-967c-111fe469030f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80fa4d1-325f-40aa-a30c-1483cd56be0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8cafbc-9415-4518-967d-105be200226c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb09bf2-5f77-4f9e-a9ed-7880335482e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e284122e-e58e-4b33-9201-b21cc91b711f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43006f51-3c14-42c4-a5e3-af99a48ba672",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e43920-d637-4395-926c-acc4e3ee329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ca8b66-9141-41e5-9629-f46c2e93269b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a21954-ba51-4934-9e4d-c78d4aa2dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5ce618-9321-4602-9a6e-9423083cfd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5697a198-5595-4fbc-b70e-514cff62889a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329becf9-8a5e-43c3-b6bf-61ffac0e0b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a606f1-50a0-4652-b4e4-266ba5a0f012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd88a94-b4b1-47d3-86a9-761643eecdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25622d48-d099-4987-8054-8c5ce21ccbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f12545-cb63-4eaa-9e22-0006d8d4ad98",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aabf3d-c170-4850-8a24-748d69e3cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14538770-3ff8-4bef-848a-196bb7dbf0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b42fc10-fc12-48ec-b989-4236bf596854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "581644f1-6fb3-4d78-b2d9-4198aea36e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9abe9-6cc6-4cda-b714-fd6c72d17eab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb343c5-c7fc-4eba-82d7-7cdd11dcbdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abf8a68-75d0-498b-a68a-92bc1f2d115e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0e08ab-f07b-4d42-a5fd-8a48553aa62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0bd544-0dee-4498-87b6-1da7b250b83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c77efda-f263-42d7-978e-f38c063bc8d8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c36648-eb15-4a73-8a3d-8e962c109fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6970cf-3220-4183-8f41-89bc0b930083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982515e4-4e3c-465a-a4aa-63b7e1fde124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03a98b58-bd2c-4f30-9acf-108a0e6be2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bd5168-f2de-4f87-97ac-09d4df8de52d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827c67b9-384a-467d-8a5e-fb2009a3f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140ee28c-3a68-4671-bdf6-53a000bb7b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84fa564-f773-4ea5-98c5-686deceb88b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47d03a45-666d-49a4-9a70-72b1fc4077f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab650ee-c959-4b73-8c39-008ef0935aa7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4443d6f8-5006-4e32-8259-5dead8ecf04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3daf7f-c116-4f2a-976c-2eda716cf6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6f8cdd-4f7c-4d0c-b71e-ec440ee06b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f88af531-f0ba-456d-82b1-26095653f7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11ccf0f-5917-42e8-9839-e75343e912d3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c805c68e-fb14-48ce-8af2-32d8edfd792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249170ce-289d-4b99-8d50-d0a3ff0df0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ceac5c-8c3f-4972-b1b0-01fdde80d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f8920f-7a2b-40e7-9a65-8fb7e0202eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417098a0-0b89-45fa-8b59-0551edacb37e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74244559-55c7-4567-9fe7-1cc439c87f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f25834-0f7a-4f17-82e3-6ea7c73907cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c114ec-1dcb-4298-9244-fe58b33dcfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0196c2cf-6d74-49e6-8349-d4893cc013b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310021b1-9180-4436-a285-7af57545f9b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f444afe-7479-4bb6-b0ee-47f96a49532c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a7c76-415c-4c26-842e-b3f0ec9929c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fa1992-6853-4f01-be91-9beac308bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f02156-b3d1-422f-b858-328c04c4aab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff72c58-43ef-4f2f-8b30-2ff052b30532",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3c8d8c-1343-4f49-9024-46c4713f2063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8925053-2d54-4082-a59f-656964f4ef8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2834bf6d-4beb-47f0-820e-793f03589e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9628c8af-7fc9-4e6e-a532-c7abbf8e76aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d34f3b0-9156-4b13-8a24-7f2a74383edb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa010d-ef38-4471-8eb6-60dce6ea7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b7c4cdb-d7fa-4a8f-9bc0-7cccd00f6cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b0f97-2cfb-47e7-a9eb-ee8cbe94c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af8e771-364e-4fd8-a0dc-4e68bc6d4772"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbf48782-356d-4a7b-ba3d-b8bdd2782c4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a9835a5-209a-4105-8993-7e32096cfc9e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77042b96-10ff-4fbc-891e-09b9e62703d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "409b3366-b6a2-4dcb-beaf-45a5a6b305bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3c4444-a153-4f0b-aac2-8833d9214ee8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e897397e-1eef-44ae-9c9c-1c1bfbe27ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01546e5-583c-45ea-96eb-01fc53d75798",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a04acce-b313-40b6-acfa-3cc2fbec4184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928b2ee5-069f-43fe-8b66-15f460480fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af4ead9-f5d7-4ed4-8ec8-000975ad61fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0331311c-2b00-45c8-9811-e0c86dafc072"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e440f61-f70e-4d75-9dde-09d21be1bd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ade44747-5143-4ed4-adaa-c350b95bc301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21d70f09-ccf0-49fd-9236-522c21958937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b18953d7-8218-44fd-8ddc-38a04f49ba84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8586ede6-a16d-4119-ac02-32ff786692c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d42ce771-9df0-4890-a739-816955d3025e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "87e3cc1f-4052-4f24-910a-284410dd4a52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a97bfd9a-b8f2-4c48-b5c3-d72cec47a1ab"
                }
              }
            ]
          },
          {
            "id": "5d4e66ab-46a3-4570-95b2-2a0b25a26f06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57fda43d-229c-45d2-af65-bf72202754c6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aba7d50-cc5d-4e9f-ba33-f9a67e53c86b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac15634b-60f6-40a1-a13f-ce1955dd3048"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64a76a42-baf9-4dd8-ba3f-8ba444a6678c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "967f60c7-3edf-40c2-9f95-c059f46f9a2e"
                    }
                  }
                ]
              },
              {
                "id": "cea07460-eb9a-4d7f-95c9-e9f8abd5fa5c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4097c806-34ac-40a7-a3c0-8bf5e35e9d69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09fa89a4-964e-4ef9-a53b-37f128cd4b0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08491ee1-4433-439d-aa76-1269306ab7b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "753b797b-fe5a-4289-b8de-6ab123eb1b66"
                    }
                  }
                ]
              },
              {
                "id": "5c61c6c4-906a-4a2b-9331-34fe70bac978",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5177f5cc-6537-40c4-b434-9713e92b4c26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff6f2b3a-2050-4f40-8550-100d31690719"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "570b9ba0-f736-4c84-beb0-71f1b75f69e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "037cacda-1160-4acc-9467-8d85590658aa"
                    }
                  }
                ]
              },
              {
                "id": "c0657817-bc28-49ad-aac2-ab0ab1382ebe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01cd452f-9b4b-4ab3-b7d6-fe35b2b22011",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d29e1d0c-05c8-4f89-8a91-550a53e07ca0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6694ee5-f226-472b-9e50-921fad9de56f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e09b003-d199-4d8a-a97a-5b87c8fdbb75"
                    }
                  }
                ]
              },
              {
                "id": "2d72ebee-3afe-41b2-bb85-51e319f33a9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92965397-6a48-48d6-9664-44c49a4a41ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d70e664a-8277-4796-8316-8f6b8d6dd897"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0765589d-a50e-4057-ad08-246f88f9fe2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ef5b02d-b5cb-414b-baae-c722bcd9cf07"
                    }
                  }
                ]
              },
              {
                "id": "5eb0f2d9-c9dd-4639-beff-b522ad606b66",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa39889-75b3-4213-906d-ef217b73b94e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "053dce9c-6951-4fc1-9536-ef7ff464f04c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f24ab767-a007-481c-ae74-583a076a2d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b731688f-7264-4cf6-a603-4d44062147ec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0db404a-5ebc-4c69-b872-4a962b147eef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e93b5f9b-e96a-4103-88c3-d549c5543b50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "956e52b6-59c9-4e69-8636-e5fe9902f55d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe151aa4-0952-42ba-9971-3dd119b91c5c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5201e4f-00f3-41d4-a7d4-dc332a6dd3b8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eff61c23-91ad-46a5-8559-69be640bd714"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9056333d-e287-4aba-876f-411d1a8501df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc1fcec1-3478-4955-86f3-278d20ad5da8"
            }
          }
        ]
      },
      {
        "id": "9112c802-08c8-4ca8-8047-8f5b8728fd64",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c8d5527c-c0e6-451b-9f10-06189501e6be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cce9794-dabc-4b46-816f-1bf36bb7511d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f38c7b9-6bd9-4e89-bc34-3820fb526011",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02807558-a27d-4e19-a50d-188ff7ad499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7f8970-84e9-41c3-b496-1b0ab5f95fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c526340f-d036-44bb-a1ec-7a583ac220e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6edd6d-e851-4c7d-b1c5-87e7d899f430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a9ad42-0d28-40bc-9573-34060ae91f74",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a2da55-9e13-4e4f-9aa5-8ac51b53b867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e611a305-bfd1-4e02-acb5-a4960633b85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7565a412-96de-4dea-990c-6f91ee07f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "489cc42a-5eb7-4e9d-a865-99d270416c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01a91c1-c6e1-4379-96b6-22dbd34e0d5f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb86fa3-4ac8-4bd9-9ec1-b94fc4261fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba00228-4b89-413e-b334-30103c8fb0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cefb22-e384-4077-b45e-e538d5b98bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35561300-ec09-4d3d-a955-85c87f26ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259d8ee-496d-4fef-af75-549362d7a02c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f80cb6-484a-46ea-a207-942622c62bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ab4eb2-478f-4958-924e-1c2adb0b521b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba20df6-a38e-4dc5-b9c2-fe9213907856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f0da57-4453-438a-9cfb-d9224c5cafc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4de7e01-f98b-4fad-b644-1cf2867fe3ad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0d008e-205c-4062-8bce-08183134c913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c6a259-ddcb-47a3-82c0-8dc4df964252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e963bd-5489-45ec-ab49-fb41c8864e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed7e8e9-e442-4997-baf3-e3bb7f8d269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3712587-419d-4225-ac94-f661e4c6e5da",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647e0f7-898a-4e32-9a91-dea77d1c9f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bcd6bb-5bdc-4a2d-9c2e-bfea3e8b413b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021bde94-6c2e-44c6-beb6-1b1945c20603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd43cce-de55-4516-a6ea-837cad07b970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e0c1fa-0a34-4d4f-8408-fb0cfa0d15ae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0d3883-27e7-4b5e-8d8c-b54a754d3843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b8447e-0e4e-4c2e-89f0-b2909da0cd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e922f9-23a2-45d4-8b5d-f90d42babfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb009a5-78d2-4e71-bbb4-4cb4ad232259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a5f5b0-efb8-4d8f-b3a9-f7e58c86e541",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d691ea-feeb-47cd-a097-37bd74d0ca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cdc9df-0de8-4449-8b2e-23f5eaa0940a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519f9e78-4503-4e36-89b1-5b13e573308b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ce71f2-2191-49fe-8023-2d4ebaeea6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa1bb85-0051-4b7b-954f-3989df496713",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70698abc-2384-4c00-8607-3b1d11e5e0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d764f032-f956-48fe-b660-e32c41d53b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa30ae-448a-4f4a-b822-42ade7bc5d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a656dd-772e-4535-8a68-4cbd097e8979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484e381-753f-4f48-9947-91cdcd1603d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665faca1-7668-4493-a905-133da5b3b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4a830e-c71f-4b01-a4ae-33304a4bb2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ca0d5-b76d-4b25-bd9a-0c7570d4d213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18569f8d-f686-4aa5-be40-153d78b6ad67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e744ca3e-d21b-4b91-ad4e-5b607277840e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5a84d6-157c-4bdb-ae87-73ab9630a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a5be67-c6f3-4d25-8c26-904ac29ec49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cee928-7d9b-428e-82df-f4d99cdf84e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "34ffbda4-46d1-40fc-847f-8e92888f0bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6bfbc3-ea11-4e5e-9bf7-148acf4d962a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc78c0-77d2-4225-973e-c3ee0583cc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857614ff-0e9d-4ea5-9af3-f79cde1aee69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ec7a30-f8d2-4b82-93d4-f2c4f6395db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04dfc1cb-e151-4996-9b90-99cc60d23dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9590df07-d8c0-4981-9c11-4784a1eb92f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9fc7f0-d6e2-4a23-8f3d-43ba7bafa37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23f11e7-9dbb-4dc1-9860-e8533c200e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6263348-ef98-43bf-910e-8d26b132d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e7c98c-b75c-4c2d-8406-207aea561d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab201565-fd6c-4977-8e7f-b684796ca763",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8d968d-26ce-4e19-a4b5-dc19af1a62dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c15b054-b87d-4903-bb54-6f962d3c8620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a3ee06-3513-41a3-9149-33ab471c4239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c09111-03db-4bb2-a1c3-be7bfc86f4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933266a7-8c98-4ebc-b73e-7c2d63669e82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1916ba2-e1ea-4459-8bdb-2353cb0fe259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80a6d66-5788-4b6d-98f3-e6c816f29835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d510041-2cf4-4f59-9754-0070e86ac3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08f5155-d4fd-4f2f-8175-ffa205d8ad5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f03a89-c900-427f-a6eb-58386a57919d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a08b4c-2ceb-4bf8-9928-252ba66889fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b8eb13-c5a0-40f9-b489-1c6f08bb26f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0053776d-6908-48a7-b62e-19b81dbfe053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4753e5c-9818-4a23-9967-416bdcaf7574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a256e36-603e-486a-8b2d-ea9df66325c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e922acc6-7a26-4f90-b590-d9a89eb88fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7387887f-b114-4cbb-8045-c0de0850a4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef97df9-cd4a-4e9d-ae38-aeaa7925d14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a446f493-fbcc-4451-9074-0d759034ea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce03ecc-f23e-42d6-aa3e-e62eec10e25c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fea233-c12e-40cf-96b4-a6bf9f9b304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df54cef0-30be-4a7d-8ae2-bc87dc4c4c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3095a59-cf0e-40f4-8dbd-862aa4ab1be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c3239e-90ae-4313-899d-c828132d2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5a5716-8193-4762-9070-76e840666bbd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ced542-6560-4ca6-8446-76d39adf0f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385dfa9d-08ab-46be-81cb-bd1d66ad7a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d4d8ab-033d-4dfe-b521-d1965a4968ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c9064e-a4b9-4062-838a-4c887b8ea32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e368cc-a4bf-4400-a10a-df6ba9bcc511",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114609b0-39a1-40d6-beb0-22c9e3db3384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6009d822-8426-4e33-8bde-1952e6286933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b28549-a9dd-4518-b53c-62e82d3f4262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e1f1e9-3167-4bcb-a871-e0a0d0bfbece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e24ca6-a2a0-437b-899a-9b550e44ff37",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e358e6-9d03-4fa9-94ce-0c849329a0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bf0732-129b-46d6-9482-2d1e98c540de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30583f93-a111-43a8-8625-aad8eee01175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38002aee-e63c-4d87-8f74-2d11bf134a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cb7629-14af-470b-a32b-1c0224a1d975",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b314bf7b-192a-4a5e-b9a0-0d0f33b52779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8876cf1-4294-4d66-9c57-b4ffcce2effa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb5a7b5-92a1-42d4-b57c-34ee3b1e0d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61276cd3-5822-4d47-913c-4cbd2a333cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25051a2-ff7f-479e-9043-1699d6c4604a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c40fbc-8e96-4a20-b663-46a93970837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bc933f-8d56-4059-acff-92b66fd494d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53988e0d-2267-4742-980e-d3f8de9a32e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "606c217e-ebdc-4c8b-8fee-5df2785ae631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10919279-ad43-4e56-b135-1a5c6a3e95c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1064ae6b-954f-47c3-944b-1c7a38791391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e632af-0d5d-4f12-9cf8-1957a158b24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ffcc03-93d8-491e-a24f-8e454f8e64cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31790ab7-8c59-4877-9523-f120a8841a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba6dd1-c496-4baa-b821-1d9b6ffcbe74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2531b766-3e6f-4a49-879c-318fd9cb02da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c06f6eb-db6f-4c48-8f07-dd5bfe210c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13cd97-bbf6-462d-9bce-e1df02befc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c803997f-c657-4a12-8d76-4fbfc1a5ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf30b4e-56b0-4bae-8af7-7e5c3310b0f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f10a4bf-5f88-49bb-8473-d4489d021ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a571c58-8292-48eb-aac2-bf11f25e9d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bf192b-840f-42e2-83a0-0398139e8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc2b2f6-4dcc-4349-9890-18cbf8027895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b60b07-f9ab-4ed4-aca3-2eb5351cb73e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc222930-4dae-48f8-8e9d-5dc629911127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd52f16f-306c-407f-acf7-8f9a2d2a770b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cef047-000e-41c6-a2d4-7af02d5993a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dd96d5-db0a-43fe-9c1b-e3a88eca2dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc80b020-6224-42a8-9c4e-1953dcff66b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211641f8-f315-4d7a-b8e6-2e9bb334a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5914ab-c0b6-4e77-aeca-98bfe43d70fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f28e7-6eec-45ec-9e3c-71209de6c160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee08c0bd-5fba-4fed-af6f-3b9bba477358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2e41b9-9e16-46ef-b8ed-5a7cc80037be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef1a816-9466-4cd3-b724-594b2cd04dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467009a5-b4e0-4c57-83f5-fc416b26e10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b66aef-b8a7-49e9-8935-f2ec3b70b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e46b17f-1d2b-4ebc-8348-d1ffbb7e235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e537640-bda0-4385-8b1d-ab32e3e68bf7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eecc491-f6f6-4c9c-93c5-a043d65ce368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017263d7-7c8e-49b3-a001-b738f55b029d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b50df-e07f-46fc-8577-53db42c1824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64ea110-1469-464c-84b8-0f6dbc7ef743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fb3779-3b90-47cd-9d43-94959ee3d004",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8cb8d4-e839-41b5-95a3-d6e72394f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2048157c-703a-437c-bda9-68f368234826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df872207-a0a7-42c7-a309-dcc643827c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "973304b5-1d52-4396-bbd7-fa59867d8308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e010b51-8263-4110-ab6e-61321c97867b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728eb0d-afae-4fde-98f7-ffe730bff9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911e9f7b-61b4-4d29-9187-05f4fa704093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a5fd5-651d-4585-8f73-4ff50ce9ec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9321112d-1d98-4d4e-a88a-62f8cd0a5639"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbc28eec-6e55-437d-b1d1-90a53cbd48c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b24848b5-bf0e-4c2f-9c23-d07e8d081df3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0d5879-83c7-47bf-87ab-9d4abfe38b15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea09526-bcd4-468f-8535-6dc2273f9860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb341b-62fb-4751-a6ac-87dd35ae4a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f43dac31-fc14-40c6-bae2-277f4c21fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc8fbce-3a51-4c9f-995e-708c8ee30cb6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8206dd77-a03a-4626-a1c3-f24d44222d2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f42a59d-7379-4b45-a31b-b92a7fc3d4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278f21a-e814-444c-899e-ac94027cd52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4bc810c-d4b5-463b-b0da-dc9014ae2de6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769cd15f-3b1e-4b42-af48-acad3e7a30a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac9e2ef8-4425-4846-aec8-8d1b3447650e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09091db-967c-4db6-b977-495a5a32c7ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a75f88-6048-42cf-9967-e3ea63750b33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3ba693d-df40-4e31-8229-f47a3e099209",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ccbae90-bd88-4a7e-8a55-11a21f929728"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13eb2855-e6ee-4fd5-a964-52a6ca0d98da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3f6471c-a3b6-42fb-830a-ec95423aef62"
            }
          }
        ]
      },
      {
        "id": "2726ff3d-926c-4c7a-8f46-640409921797",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fdb3e8ff-78d8-4e30-8703-71b9631953cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a911509-ddef-42b6-b445-43f939fd5829",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7461c11f-bb9b-4c39-b81d-b3bc95694890",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df127cd8-e372-41f7-84c5-d13b898e7b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1a5ae1-d9ca-41c4-95d8-32b47bb93bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb28df0-795a-4b6e-a0d8-6489ec9139a0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4099f93a-a862-44aa-9ba1-15da79dbf17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297e516-0e67-4de3-8a55-30d8d2494c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3a0187-d5db-4eb4-bd76-9e8a2e63f6db",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168f74f6-2abe-4217-9b32-d5bfd0351a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d248597f-fe1b-43a3-bb47-479b0b81f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b383b47-cd2c-4625-9642-b0b328dcd255",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e89962f-e5a4-47a9-9410-54d9e0ba826b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b907ca7-2446-4c9a-bccc-e5c09b1be316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379de9d8-0d33-4db0-8fc1-96dcbf719ec5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631612be-d60f-4614-abc9-67acfd17071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0084d00b-bbac-44f5-84af-7e0421f06c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8259ecc-5f24-4818-8fac-9e1f399ada72",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91422e3b-59f4-49e3-a886-88e05bde40d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2570850-767c-4e7d-90fe-fc94fc8f7a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bda1f6f-37e4-466f-81a7-c05313c0f2fe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953d892d-63a2-4f74-9728-613c4a0f234a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c93da86-d82c-412a-823d-56bbf8c5d5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e770daf-9e6a-4836-906c-812852501e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf6ca1b-5f91-4381-9edb-ff5649cbcb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad00b8-1e2a-46ab-ade3-fdc38bcb6f99",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6783f899-de16-4fa1-9a5f-93a397a7b5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e299e3-effc-4edd-8233-7b29b4171057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5222d390-608e-4a5f-b318-8bf6b07cef59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854a5e2a-fe15-411c-bf4f-d1a8fd6c401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c88dd4-329a-4b67-bda9-6b68aec19ae2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b1add4-49ab-4cc6-b4e0-2d66b96a3070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d455999-a09e-402a-b7e4-1e49bcdcab02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f18e2-4407-4b8d-aa6e-57b6f8a681f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6f953a-d0e2-40e9-b4d8-388ad5c578a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0dccb7-81a5-4b3b-a48c-55d91a8be321",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e70da4-7aec-4e75-b3d3-ecc87ed2dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5dd8bee-043d-40ce-8686-1aebfeba01d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1940e-cc09-4f4b-843f-1c47df95bedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9710944b-1c89-4ca5-82c9-8cddf7f56fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54806908-28aa-4ee1-99d3-45dc5630757a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58da1999-44b7-4abc-b610-15b32405b1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf99dcec-242e-4d21-a6c2-46bb190393d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a077e2b-132c-47da-bcdc-02c383513045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff2965-55a3-4c8e-b373-9e677282ec30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f246eb-b03b-4a80-9788-03f11109fd49",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d289c4d-153c-43d8-be7a-7752ff37bf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275645a3-96cd-4ca7-b1ba-2102dcfb21a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3849ec0-52ff-423f-8b3a-98f7d8537d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3271cf-6d8b-48da-8035-6027eefe4bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37791ffe-7558-49b6-80b3-feabfa356437",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6eae2a-a34e-4f43-acfb-72c94f9e249c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daa4c15-75a4-42c2-9b4f-6319bd3fb8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c74964-7490-489f-9eca-bf391c82491b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefadc2c-0f2a-46b6-b641-5284a2d8e15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06490f4b-2212-4513-ba29-e7974fd9c1d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3a9692-f720-4766-a3c9-8c6a0cdd30dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b00c3c-d260-4d38-b366-898c7c34c85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73610c77-58e8-43ce-9253-dd8fa8548979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0903e365-e213-4010-983b-35f258773d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445b2868-ca65-40c7-a53a-68bbbab7458d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdfb31-3f66-4f68-a228-be2ca2c8d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3428497f-7264-4f05-aaa0-01e35efdc8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a36f5c3-9433-4487-8964-72bcc7c60fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23019a3-106f-418f-b96b-43936a066048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64d6e42-03b1-4b24-b6d0-ab729ff36e77",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23907d2a-e660-4710-8f9e-d306845c3a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1e87e2-8af2-4379-91bd-5bd49ae21e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f8b434-17cf-448c-a44a-1287373fb283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763b554c-1842-481e-ac6f-d579eedd6a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95ec05f-2654-4686-b1c7-5cd6cec1cae0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b0999-1e46-4def-baa3-71c3719e5a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a7304f-8472-4afa-8c81-70806e7b635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e603e9-0c9b-4c2a-91a2-f0ab28e409fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d3db33-1d76-4e33-9e5a-8e8fbe109d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbc56a-43d9-4380-8301-af8e36471e37",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57bb78-180f-4543-b529-ed83318624e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736a0589-4492-4f5a-a9b8-f931d014caf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f25943-4230-44a1-a82f-0736dc20d896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7a1dc6-4c14-431f-a392-2a2f3010480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff2b922-e7ee-495c-a8d7-ded2b9c3fab0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29c3c3f-ae97-48ce-98e2-71856f9d0a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4ec120-17cc-4cd2-8bb3-a97ef0fe33fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0019338c-de82-4737-83b5-51d99a3f1a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e424562e-8269-4d60-9691-e39fa87e4304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b73e4c-9bcc-442d-81ba-7633f2c27bab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34a2118-d73a-4edf-b0de-56efd9cf0607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a723370-6ccf-4f7c-ad63-79406467809b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cbe566-5970-4274-b911-c227ab2dc4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba805872-bffc-4b98-a899-b1375fad0182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67212b23-b9e7-417f-85b5-f8ef81269beb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea6c8d-876d-4a75-8f75-72a63eb9cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cc736b-adac-494d-aebe-5784688a2a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4432bb6f-1ece-44f1-ad31-7491f9702197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dc98e9-43c4-43e8-af0a-840ab5c73fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f14f14-9c25-4a53-b5f4-35360c73bff6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4da8e3-b759-4d47-b856-d71504c82997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a79ace-6be9-4ba9-8fbb-0661176f9664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fe8558-b4b9-4b90-a755-719ca86bed8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3aa787-3b1e-4977-b902-80898f55018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbb4582-5ba4-4a32-92ee-2b6451d309fe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e68a983-2488-42e5-a40f-42e94527538f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f75b80-81ac-43e8-b67a-eeacf347a2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be71c53-a2e6-4cae-829b-5831e99068ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8f1faf-48ce-4c79-a01a-f39a71fd1d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e63bff-2b45-4cde-81f2-cd545fef6b02",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb671cd-aedf-4987-a66e-43cb3745612c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8218bb-a370-449e-bde3-f27fe63e7171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714bd7e4-2568-4f0b-a3a7-8ec29c21a638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c864b840-b3d7-4b0b-a469-d08ecf7ff209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98556aa7-99e0-432e-b098-05138fde35d7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4de9066-e7d2-4f1f-b26d-a8a89502917e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007be0fa-5eed-487f-bb51-1659f37e8053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1259f47-904d-4e3c-a176-f83da5fa9eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc837e0c-6e72-43d3-9c0f-8e758fd3461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64b22ab-fe45-4326-bc83-189f05221f26",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad37e4b-fc90-47c7-ba20-05ffa978f571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a404623-d2d4-4a90-9600-4e4ea64e58e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31c2df-5eb8-4c56-b713-f140c17ab329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66995c72-977d-4f9b-98cc-cd74355650a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5c847a-3790-4b16-828e-94ec7c7383ad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a997b374-f6ba-44bf-a034-0444d27ffbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f3fc68-21e6-47cd-a2dc-ea0fb7b8920e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42038c1b-a477-4a49-98a4-08bfa3811b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76b0431-0273-4d2e-ac3c-1e5f723d058a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec41fc66-f721-4f2f-b25d-94f76fbbe5dd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96cc2ab-984d-48a9-9adf-d6e508594db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3592e77e-2b86-42b1-8218-bb4cb3c5d6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bea87e0-6eb9-4fd1-b8cb-fa7fb9289434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcef74fd-eba2-4ba9-85eb-8f2de193ddff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca63576-c2cc-4b75-ae7a-832a0471bcd0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a183a99-d7b2-4be1-93a8-b5276a5bc597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bb2e37-af3d-4e74-b805-d9f3100143c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5fd7be-fef1-426e-aacf-ea11ea8f43ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24a6975-3fb1-49eb-8a10-cae4b7f13eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bf80e1-7d0d-4cae-aca6-f964193fabfa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697cfaa6-8dcc-4f7d-bd03-0e7e2f710f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3159d24a-d985-4e75-8315-e2728afb9e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab32227-29f1-4675-865b-3d7ae5e81e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db12aa2-d7a9-4303-a9d2-114909c3c3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84aa466-a66e-4c6a-a130-d27ffe239475",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2643f67e-9412-4142-a5f2-ce03f706f7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ab01fb-86eb-4c27-a435-31e0f202b62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60adc321-917f-41fb-8e00-ded0b97fd459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3c5908-95d0-4438-9cca-24a4dcdc818f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73638196-6a78-4748-9087-0ba48d2fdc8a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0255e29-fcff-4ec0-8e4e-cac898e7398a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de920a1f-28c6-475d-bea9-c6f1ec6834a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01545ffa-cde3-4937-bee2-c278a5a7b481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72203d97-cff1-4025-a937-f5be602a63be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5f01af-661e-4c7d-9426-7301c8d1d0dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3944d0d3-fe80-46e7-8a79-d3187a07342c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d001e3-6ea9-402e-86ff-bec165e7ad8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d6c4cb-8018-4d1e-ad48-0df562f5b896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809a95c4-3dbc-4eb4-b87e-63e518ff35cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2377d81-1d6e-4de0-8598-2f56bb0f338f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80ff352-1cb4-411e-80a2-e8ae9342ece5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa3555d-1c34-45c6-b26c-89371ef1ae66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ebf700-1ee7-4312-a621-811c43b2bbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3c9aa-a332-4504-a2e5-cb106ac17cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11129951-e613-4909-a6e8-3988edb87b69",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbe135c-98d5-46aa-8c45-7d422d2ff050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6b04b9-e80c-451d-beb8-e42534526aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6232b-45f0-44e7-a331-25495db9dda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086ace94-de21-45bf-bc62-68849b98e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21176850-2532-4aec-9d4e-57b9f8392324",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92aa665-b3a6-454b-b531-f682b705734b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274f2eb0-32a2-4620-80e2-73ff0cba5441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c403ce-095b-4b54-b461-8569d807faab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375fba04-a264-4001-8ae5-bd7b5c72eb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e718e0-86d2-4566-8c14-05e281e0db3d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c530fb-ccfc-4ebf-9031-3a66792dbe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4366500-38c4-4a0c-b21f-4db6098bad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2cd9e-81f4-4dee-85b3-4f014aac44a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ff2586-c35c-4f78-93b6-24ae5e9a1561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71b38ba-620f-49fd-bfe9-4cd55c6d9f83",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f596f98-e913-457e-bb47-2c8def76d89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c41aa18-0a3f-4dc9-b8d4-103910eb3583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d1f874-f944-4048-b653-d6ab5e6c5d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22fd59a-56c9-454d-88b4-29054d8763d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8583dfd-0c33-4d72-bf95-17ac88407537",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27792c82-0489-4ed0-82f4-ce730a3262b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d203fe-3f27-431a-8345-1a6aaac9c879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d10b01f-648d-4294-b182-feca07d3859f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fb84df-38bd-4480-ba2f-bbbc33112e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17678ace-31ad-440f-aae7-308f1bd3f390",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f091b1-d81f-4b77-9195-a63a8b98ab46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e49459-ad96-4fb7-bf11-ea879aa096a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec716f01-caf3-4f57-bf25-cb2e28dec0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ebea54-7e0d-4487-8792-f5819c6e7002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68991dc-3f29-4ef0-a3c8-d7ba4d4b8560",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2574403-3c9c-46d6-b733-572a6d94ddc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0163093d-bdaa-46b1-9ccb-c591eaf6531a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06da705-a993-4037-84f5-d7bd65d633c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aa8e6b-0170-4b50-a0d7-4c05961ab08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f3180c-30a8-4c88-b4e6-0d252718d987",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ab824e-208e-48fa-ac51-149576f19a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad9db92-3677-4207-a79c-4afc08432765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846a9874-22b5-4e63-be35-7604cf2b115e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d83531-3284-4ed3-aa2b-15b232687ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10e32d-413b-4d46-9685-2d6d29ea81df",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c015582-6892-4005-b410-6047fec79f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d8a88c-8d33-4292-b056-4f4d197070be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfdadb0-e97c-4cf7-808d-dc43cdecc13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397f7f70-5fd2-4fdf-8a17-559f46abbf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3627c2a6-0f42-44ec-94f0-4f15a8805013",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cb02b9-7817-49cf-abd2-c47c4a928bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5590fa74-bfa6-4e71-8c67-0315ce702a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcef570-da3b-4e11-888d-e5138491d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a93af65-c027-4ea6-b4c6-5679efb716d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591d5d8-b9d5-4619-8b9c-69f7f4cd5635",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4195b-6ce5-4376-b35e-9580bdd09f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d73956-9f74-4311-bbb0-7a44cd1673d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c84049-be90-4a98-bcc7-6a786c04d123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae965f63-189f-40d5-92b1-38a0b5d55bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cae96c-8290-47f0-97e0-47188e0f6da2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b37450f-1b84-47b4-8150-765ffd3edc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ccca4-7e9c-41c1-9aa1-aaeb737ef93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc959ec3-00b7-4259-a0d9-a51c99aeb7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54db7d7-f063-484c-a026-9b22aabb55f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17db43e-80dc-4140-814b-4b6bdd6763c3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e253b3-f73a-4bd0-bcd5-be10eeb15251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1043bf9-630b-4ef7-9cf0-20f98e06bfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b56c58-1c3e-4934-822a-05f4a8ee0b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d5bc3f-18cf-4ff9-9bff-6da84d32a8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bca03df-b979-42d0-bfaa-9a52c4e35410",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf076d0-d853-420c-8c9b-5870bcc708b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772504bc-9e47-4100-bcfd-a3cecc25e266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85c831-4e29-4cff-a1da-c548eae54e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e001562-8115-4d19-9d20-48a5d588cc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39071330-30a8-47aa-8955-ec3024485d6d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6372020-ed3b-4546-8ae2-87a380f5bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c0c593-1ba8-4e32-a2a8-45a4c612be5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af11404f-08ce-4bd7-9e10-bbb3d767d876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42876365-39e4-4fd1-9e46-1f19742af701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eed6e8-cb5a-45f0-8a40-62a16cab9b78",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680ea804-bdc3-4d90-bd32-de37991257ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7e9333-8983-438f-82a8-5567c78bfe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30301ed2-7305-4e59-b7d6-91e73918f777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8194fa1e-1799-4b11-8e01-1950314cd9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4809a5-fc29-4aa1-ab4a-c92ef379b634",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a0471-0aaa-42c8-b4c9-a3241234cad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5dd022-77e8-43e7-a793-1f60c2f3fd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4321824c-7102-4726-8b1d-728207a3a3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2d4e94-e6b8-4838-956c-525711b53b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74924d17-e39f-4978-8498-9fa1a7857700",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567f89cb-b78f-445e-b1ea-4956b2d7d666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccc1702-c694-490e-a195-bcb3392666d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3627751b-0131-493e-a953-ed05ab519176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437cc3e9-5bbf-4f3f-98c3-ca1ba4491f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f495a022-6705-429f-886a-c0e15da9e2bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb9700a-9df5-412d-891a-a9eaae40d1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c022c6-298a-4415-bcff-46a3fdc7ece8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a79ca7-f97f-44bd-8d33-45124edf8cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772f8775-ea34-410a-b2f2-e67a37ec5b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9785ecf-8431-481b-a436-08f18ed61665",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdcd0bf-5953-4964-b4f6-bdc4c1c5da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f18593d-fcb9-4a0f-bc21-56aba6219187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8861aa0c-dbf1-422d-b70b-47af08b6e1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd0b37b-c3f5-478d-87f2-8219451e3f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cad69ff-b0bc-4ab2-9ad5-21caa47d75cb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3be8eb-beba-4ede-a6cb-81b0e281707a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c925650-c87f-4334-bd3b-b7c860fb5f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620e6037-bffa-40f2-ae10-eaf89a44c230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcead46e-046c-4355-aa61-5146f0af1843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee771e09-c5f5-4a8e-8828-58e7774b44e2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4be1d15-45f4-4715-9c91-4b80846f9d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8086586b-b112-4fd6-ab48-d4a66649f16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a45ffa-a5e1-414c-a3e0-8090b012cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9552677-1e02-4c85-a7eb-66e6a9021633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0f5dd7-2281-4687-880f-d6f0f7a7d929",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c453f093-40b1-42ca-ad08-a9ac7b9bacff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b236593f-a4c9-4bb0-8979-2e2bbebe930b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0944ec-a074-4793-b0f6-b26da4ac994a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e99ba85-a4b5-4ecd-beed-ad56fffa8b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb41ae7-f71b-421f-91ef-1bc8d0595e79",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa48c92-2e67-4634-9a82-9a4e5267803d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d92b681-01dd-4df2-b0ed-43b345b464d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5def09a6-01b0-41cb-a5bc-118de04495d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500cf361-85c8-48e9-9aa1-93c9754399f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ede9e02-aaa8-4e28-a5be-942e0bfb7a32",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a6efd-0f81-4e0b-b4a6-24d5f8b38c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8819061c-bb6a-4144-a3c5-2851ae760a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f88c24f-bbeb-4129-8988-65d3460bc9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26223f31-b53e-4311-9eb1-e7288790a6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b8b6bc-c97c-4094-a1d2-8c286c02c625",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31e0f36-9eb0-4601-a422-670b6c9c5157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82235448-ac06-483b-aa52-f518a8c4d746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c4bc2-fa93-4ccf-afef-25f2188dc560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77a5e0c-050e-43fa-a2de-2a64caa052aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66329acc-ba7b-4057-9242-ecbfa5115e10",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b43f962-ace8-4cb1-82c1-f4e153af01cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3243879b-83ef-4da2-8fb4-aa9683282779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ebf52d-480f-4a80-9636-fb1baa03e8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fa07c6-178c-4b2d-a324-097c4e0578bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f62905-5116-4be7-9a84-3c50b28a0e1c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4445e236-6d3e-4b0a-8fc2-46deddc53e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98486446-9309-43ef-8849-e9935f66fde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf9f9d6-d10a-4f2c-954d-c2a18685fce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a86788-2492-4fc7-86ab-9e9ca497f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0050e-e2d9-4d77-887b-c39e0289bf62",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea7b1ad-04e1-4a1e-9d32-f11946dace4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5d1d89-2211-4681-96e2-524843ca7d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675785a4-7e68-4151-ab69-50eaa3c08051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db64dca-480c-4714-bf34-77c157d5da7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94447137-035a-4205-82a5-52319427d4c4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ac707-b9df-44eb-b46b-d54a26383117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6211b04-ab4d-45a7-92d1-506312737db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db98e68-93f1-45b6-8e74-9d1119700905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87bf70f-1e68-4804-aef9-4d09032a6405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7377fd0c-78a5-4d74-8532-2c38d0e3e34f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445f6006-67cc-4437-ae91-9e34f254ee3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db92f947-9891-4711-8989-1c1d91da39e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b995eb-f7ac-44cb-8000-1440cf824883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855f4a21-ed0f-442d-830b-b65d525f138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739fd758-3ceb-4ad5-8124-02f23bcdbd93",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb935222-5378-4ada-ac58-517f77936f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee5a36b1-88c1-4918-93d0-09e91974bbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366f827d-f740-4d5a-88f9-092c655051af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef805d28-8966-4f01-9fb6-542a183c5666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42769def-0a81-4e56-96e7-ea59934ba15c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a5bb89-a91c-43e0-b87e-8a8dc0bef597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47858556-44a9-4f2d-a8d6-c1cd0f975986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac88ed-c22b-48fd-b040-af003ef99c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7def6203-542e-4a7c-b48e-bee6919f3d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8af010-6705-46e7-bf5c-14e3662687af",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d3e9a-d24a-45fe-b589-8d3e58cd4532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c8fdaac-6c57-4624-a03c-5d8eb951bded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e120ae28-6b3b-41da-b59d-1fcb6c1e7160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c2d40f-c968-4b50-ae5f-bd145fad010e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71110181-ff82-4fe2-9ec4-dbfeb52f92fe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37516c12-83f2-41eb-ab94-34621caa3873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9af0f1-f372-44b9-8c60-6fadff667431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef35958-248d-4643-b7cc-0707ff33c289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b7dc77-e2d6-445e-9eac-0e6cebf287ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b6057c-9e93-42f0-b689-d69869ee1fd2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f649e163-ebef-47d9-aa27-0c1661965d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63ea3dc-3b40-44f8-9a90-ba0ebced5821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a54fcf-0b33-462d-9231-f1230ffb08a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a8de26-37dd-46a8-a686-a170681ba084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacebdf6-7636-4057-a0ef-7546512bb62a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76166fd-b1fd-4e95-977b-31b677fddfbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250aa463-52c5-415b-a64f-6877faa445c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4597c3a-769d-414e-a196-6808e5d7b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc68f786-c1b4-45e7-8ce7-54c1da9f0433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f46539-177e-41a1-99e1-f7d98b209416",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99520e6e-587f-410b-90dc-b505f9891f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d700da-30ab-46db-8689-9eaade0e9d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab383e0-abe6-4ae7-b740-cdb4b1e7bdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27b968d-45cb-480d-ad7a-c3a2a5b64576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dcb1dd-6981-448d-894d-50eef8fffdd3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699d83ac-2145-4249-acab-fb0ecd0fa4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220ceaf0-7cfd-4352-b57a-a4bb8ee25b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456045db-4bfe-4424-90fb-71b917af59b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585b6d0e-32cc-4624-aa5c-5dc89d3118f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36fbaf4-8f60-480a-bc80-1dfd98bc31b7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e136ee31-7a28-49f3-b958-d471e5db5d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c319fe54-511b-4972-a05d-f59704f9f157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315052e0-8090-4f55-8120-9d59dfa8736e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5846f3e7-56ee-4e69-a93b-fdd7ff5ecad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce25452-81ae-4050-97a4-729115d52f0c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0a2aa-f020-4f3b-8f1f-0a05db7fabf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ac6a8f-c03c-47a6-ba5c-7ffb0c27811e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f406b4db-830f-4b38-a9c4-59efa8efadff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b2de3c-cec8-4403-b56d-dba865243953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87142c0e-b882-48b7-867a-10f7c946ec31",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d696bdc2-c1b2-4756-b6e1-8563b6603184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062cb225-8f2f-41ae-829b-3623cdffdced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea396fb-567f-41f4-9d92-dbdf712eb38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16e3165-89bc-44fa-8b74-201bb4c673ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac193e7d-3d64-4259-bb6c-2f2fa89c8a69",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd09d12-b4d7-4831-8a81-7c8d121b14fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539ad550-eb18-46b3-9840-95bb6a4cbdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e56049-adb9-4123-9a1f-83818d48dabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf6eaa1-f9b1-4ebd-945f-237a2a89ae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1f89ce-e7fd-4571-b91c-2e42f5737c46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90945a3-47a8-441d-8cf0-a2e0d54ecf93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b61d4a-6070-4fb6-830b-9ff80aa1fc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f11ba6-e850-4a78-8ac4-dc99e1b8ef4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c51b2d-3663-46a9-9a30-86fb1c4b1ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b6024e-439b-4c29-bd9e-0b4351fa92db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae499e2-87a7-47f6-b334-9a2c4d333212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f28147-2c0a-49f8-9d2d-504e8b0d63b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ee32cf-03df-4e01-b788-cb4c678ba12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e3f853-1175-4dc8-a527-6409816e3004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07c76c5-fc73-4e25-920c-49a243a9c68a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f749bd-d1e8-47ed-973e-eac435426f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db0057c-3feb-476e-87da-e3d15256fc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83be8391-0982-43f1-b868-c4bb67d39eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ebb0ca-7b76-4a50-b9ff-b5c960f7f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7231a27-6ace-4a82-a8ed-c8cd36bf1f61",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf1edb1-64e1-4a65-9051-620bd4bd23c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfb2bfa-e8a3-42e3-96e4-b7ce6e791309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2827db-e54b-4bf8-aae3-07b9e6bd12c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5731a1c5-c46f-4c25-9208-b8001084a915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3cf2fc-9173-415d-bccf-823348c69a46",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dfa156-4e27-4c6a-896c-129ed028b551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb17bb89-688b-4c16-a2ea-50c29d2e5c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8917385e-0517-43c7-845e-911506ba423a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbea381-f5c5-4999-ab2d-3d7da02eb3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bf4f83-7cbb-4619-ad6b-0fda7f477421",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4dd1f0-6c25-45a6-ad96-76b064b8f123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14668b9d-ae3a-4d37-9a81-8f0ba800730d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3844bc6c-a57a-4214-8589-0434101953c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1276ac68-780f-432e-bd5b-5ab4d5fbd614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9612cdc4-f16c-49e8-b774-debe8b4a40ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d3f9a2-f327-41bc-b200-ca165399198d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4544340-9d08-411c-9935-8be4d7d67bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2492f725-8fcd-4f45-8828-5a45c059938e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cc7a4e-e0c2-4aa3-a6c7-7fa0f28daffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689d1c3e-4f21-4a91-8fca-fb18d812c559",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4483555-811e-412f-8e1a-02602fd17998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce21861-fd37-4027-8a11-0d98c0fcae62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09fb6ba-6a14-477e-8481-8960d356f55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7305c9c-86c5-42b2-8f5d-798807a11615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce76883e-64a4-4316-80f4-6e0229d2cb51",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204e2c8-0830-44ed-a03f-04c7f1163342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac1073d-3f92-44c8-879a-a54adfce1167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee3fa7-3236-4862-85c7-21cd5f5f3c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93cd70e-c7c4-4820-ad32-c26b79d5ef35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0739574f-65e8-425c-9c30-8d401130b8ee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8420e3f9-7195-4265-b295-08a078174d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22a82c8-b004-4c05-a921-50efc0b5dd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174cbe22-0296-4bca-ae63-3079b7a196d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc799e92-e17f-438c-a912-a09bef3bfc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a09f0-e7d6-49e3-abb7-c3f10ae24116",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b77b94-4387-4976-91f9-250418347a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3257e5-6d4f-4168-838d-f23556bf9ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839956f1-be97-4f6b-a419-804ae3f236fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d643a85-3e59-4a24-adcb-c1cf6989f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e346a7-80bf-41ff-be81-9265c60e3162",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b672b390-73b4-4152-8263-9f15899f6f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800d1949-c24b-4773-b8e7-d417e4a0c716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdeee67-b7d0-41de-ab0e-977ab5d1be79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a9c354-aff6-42da-bf20-b0d3dfb8a1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3303834b-41d3-4229-b878-1ccfc5d6f264",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdc22db-41bf-4d93-a7b5-fad08a8c7bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08a371b-d003-4cd9-8570-8a468cc4a0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efa5703-e188-45fb-91b7-fede78ee9207",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e827327-7069-4f89-894e-90cf1863a125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cb3bac-3195-4639-8763-fcd039e9f01e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31c0399-beaf-4092-a453-44f4e4e065c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50456503-cfbb-403b-ac71-fcbc18d97d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4447296-b07b-4a92-9bcd-35b0fb663cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e6106c-4dc0-4cb0-936f-d56553665230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9300ff9-82b5-495a-8ac0-55c09fff812b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a426971c-8639-43ed-a285-265531c96bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d5c635-1302-4d33-86eb-5ec55cb6613b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a734be4-c37c-4098-935a-ce344379d476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba8f61a-b280-4a94-ae56-8c268010a070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760226ed-6d55-4163-879d-ba71cd522cec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af36eff-5ff1-4a7f-ab92-bb0e9cd3ca8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1988daea-485a-4aa6-ba29-b9a712f0f179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf6799-fd15-4d0d-a934-e785955e35a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ed025d-e5e6-46e9-b418-502ac68c8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2370efd-36ef-4cc1-a966-2b0bc5a07248",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0957573a-7e7a-40ae-a56c-c0b7cbb681ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f12a7b-88bb-4404-bad2-4e8d8343321c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c02fe41-e025-4ee9-908a-79f05f725543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e953d-4efe-42df-847d-43a64bde5348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea77103-e3c0-41c2-8b53-b7eea873ea7b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c365d-b88c-4454-a886-9b9960eaf899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef7aab9-627e-4fe9-9eeb-557c259a19ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2ddae4-4d36-4e52-a420-34a1fab5a25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998f54a7-bc1b-43d7-9140-624ecded5690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e70637-ed9d-4c87-a976-dffb0e9b475f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea60d454-4307-4d50-b1d5-3d74bf7aaf68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f2d6ac-e548-465e-8bcd-be3fe31bca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06f1e47-48d2-4514-8c4b-310ad3a165ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3baa9e-e4e4-4dbe-ac77-bd85440cc659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b110872-87ee-4769-b0b9-17ad75ebceb3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee255245-e0b8-47a9-9c77-c6e40e0593d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8149653-99c2-45f4-9b1a-3eef08e9650f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc60da52-40ac-4c86-8339-99435615a2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5883d75a-a956-471a-a276-92bc0a647b4d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba35af4d-1e39-4e37-a5e8-c18b28c6a842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03397585-48a5-4db9-a854-3f1a0f1d03a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9600cf7-7fc0-482d-a2f7-e7d345630c00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c334aea9-aefa-47b3-8521-c45c4b922819"
                    }
                  }
                ]
              },
              {
                "id": "22b734c9-24a5-421a-b509-a4c790e517b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "196e4f3a-6b74-4c8f-81c7-265b9ecea959",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945acbc0-6014-434e-bdf1-8b5cd1dbd39e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6bf69198-621d-4df9-b6c2-7bcaf3c93d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d409a9d-e3fc-403c-b4ae-706b13219a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b284e1b-300b-4889-bdb1-f2dc38f9d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d16653d-8d62-4ca1-98a2-de3f74d4a7d0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d3bb76-ce44-4955-8645-4117c9ee65f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80399aad-ea57-477c-8041-7b2e7024b2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa04fe70-74c5-489f-b328-cfa8abab2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df6ad3c2-1e96-4b5f-ba76-9d6961cdb9f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92f38511-4305-4c14-87fb-aea298838327",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa83fd58-4450-4df8-a757-8b3c9a81394c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "440a789a-5808-4721-b89a-284c6dc6254e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1da90107-ce9f-4e02-8380-5c36e065255b"
                    }
                  }
                ]
              },
              {
                "id": "10d8fdcc-70f7-4be6-816c-19581579cd4a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "60f3c01e-1e63-4d86-a4f5-adc0b0ce1125",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f054db-1030-4f18-8730-9862505bd3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "037d0a03-f5ba-409d-8d44-152eca5218bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed0466-5ffc-47f6-ab7c-c40934171266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76aefaf-3037-4cf4-94ca-c5130b5fa2c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "055a5456-3921-4488-a86c-ceeea3fb4c41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "286cb9d2-4b77-4992-bc24-c0e2c7ae0cbc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4245f9f-6300-46ab-9e95-3e4abe3b9965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0796a5a5-a4e2-4318-af5a-309044589b9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16636913-6b04-4021-b149-9b413650295c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63b3763f-34cf-4011-a7cc-93c321c31bb5"
                    }
                  }
                ]
              },
              {
                "id": "9172d5c5-f677-4b45-883b-e9e9d23ae2dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77ebe4fa-9fd4-4f60-b8ac-15cb27515801",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16dc0d3a-6005-467b-8d9e-3ddda5dc0a8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2af8a573-dd0f-42e1-835f-529c46657ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3fbdafc-411b-4f5c-8149-7a69beb2487f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ac97895-980b-4447-b8c9-95cadcf38eb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7bc8ca1a-f50d-44cd-8080-caa42b5787ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71d07128-a04e-405b-b3e8-558b1c606d11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43e7fd7e-7e75-486f-9dc8-c9bc573bc636"
            }
          }
        ]
      },
      {
        "id": "be3559f3-e920-4a21-903d-12ae137189d2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c96c443d-27e7-4637-9485-8df2957ca18a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62b41fad-9432-4d70-8c34-0541638c0428",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa467ef2-a3b8-4ebd-b05e-1fcf146912ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "395b1f8f-35c0-4421-a5f5-61a1baad36aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad25ea1c-422f-456b-ab0d-a8b326752929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "975e9de3-62a0-41b0-b52f-7c50d77a50e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b759242-a555-4bcb-a99b-8c48d2d80b5a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a723be02-66af-4331-b151-64217d838a59",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "20da1738-3813-4b1d-824e-ff8b993d3f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec2d713-cd27-432e-b86d-8ea153365a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd73651-d162-4401-9549-c61da848b1ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5238cd4-9beb-4e69-9c07-5346f92e398e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fe82c2f-8ec4-4363-adf6-c149809c508c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bbc9c0a-1b5d-473c-947a-21a1fad7c5a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e06456f2-2ea8-4c87-beec-68643c41fe25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c403a0b-8d0f-4030-a2e7-ae8369f284c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8b2075e0-d15d-4486-bf2c-42d559d29e3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4f22672-4ef2-4444-ace5-7504c83ce5aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ee1054e-3e64-4047-8e7d-ee01a1050915"
            }
          }
        ]
      },
      {
        "id": "f38842eb-5c42-40c1-896a-8b28f4d688cd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "25751bc8-3c2b-4787-a400-992b960d81bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01572f38-74d5-4353-91b4-b346595be3ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f8118e1-414f-4c65-aa7b-3e055fe926f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1f38d2-b344-49ef-a3cd-f6ece3608757",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9dddf44-6ce6-4942-812c-59ce8b722788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9138c3-0abb-461c-ad7d-96d95d02b249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34d92cf5-b9be-4b5e-9293-525238108b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9510a3-ab18-4ee0-960c-b1e910c474b8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d975ebd0-a814-473b-9eb6-02f2c2fcb7c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46fc3e42-4f60-49a0-946b-d9705d72dc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91360ab7-9b61-49e6-b1d1-f83ee46e9eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53b6f983-a6a0-40a5-a1e5-141ab1207581"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54d85e2-6d0d-413e-aab0-c613cee33134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e51ffd3-844e-46b1-9724-e46df123c3c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28adea0d-b512-4497-985f-0861491044f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd43cdc-ca26-4956-8a49-caa2be1606e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e93ea0b-1ab1-464c-b04b-5436092899ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05b1c639-3025-40d4-a2c0-9bd0c905d5eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d35de29a-5087-47d6-a088-fc5533951cc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17b18316-db8d-4ccf-9d87-737e886c6b08"
            }
          }
        ]
      },
      {
        "id": "8b8a9015-1dff-4c74-9dd0-fd6ea6247a1a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8c73818-2bcf-4631-9dd9-0a4ca6b25076",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bef42f4-5af9-4011-a4a7-3da169ebc2e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "711fcd2f-2341-4e23-abb9-50f48d480892",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1095b22-8266-4d80-83c1-2984a6c0bfbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904e6531-7462-4784-acf2-4c9c7fd2c7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b29150-85cc-4cf5-a023-8f50fcd63a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a2a8d92-f1a7-4bca-bd22-89a487bc43b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3fa7dc-54ce-493b-9a61-c7b27c0fedd6",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d893d1-6fc9-4867-bbb6-4d5b33bccbf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "588f2e73-b2a3-4261-b011-9c4d0c43b26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aab093-2be3-4c5a-abbb-92929b2fe48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "579968b4-9cd5-4f87-9b8d-548c5f5100a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aa8ac69-c921-4068-ad09-a04ed510889f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1a10f4f-564b-4c79-9270-48b02f634e62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b70cc75-a4b5-4e33-96fb-ea2941e516e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15c834e0-8ea9-4adc-9edf-27adba6656b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b864bffd-af09-45ee-ac21-42f3998eb625",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89d7f464-e591-400a-8656-1c8c61ee37db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a746da-1dfe-4acb-a3b3-00c2ef778aef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b054dd2-6295-4afd-a6e7-5082400bb52c"
            }
          }
        ]
      },
      {
        "id": "4d9f7667-c08e-47ac-b18c-8e8204452a39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34465755-b6c0-4c2e-b067-f180b59f747e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e0c41f-53dc-4a65-b755-84081f9387cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b17b2e25-fd12-4ef5-b4c7-31d548672386",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74fc88bb-de57-4e07-8426-b9b6b5a91576",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60cbda6c-9763-4ac4-b385-d1960df2a4da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 797.7153846153847,
      "responseMin": 10,
      "responseMax": 7359,
      "responseSd": 916.5665550102258,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684456629947,
      "completed": 1684456848208
    },
    "executions": [
      {
        "id": "b5f47b44-5814-4248-a311-c0dfe96972a8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33735630-977b-40ad-9b9a-2966236d241a",
          "httpRequestId": "4ff7e4f2-da79-464f-8ed9-82ce84a493b7"
        },
        "item": {
          "id": "b5f47b44-5814-4248-a311-c0dfe96972a8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4f9f3aa-d34a-4e75-9284-74cde88a3ea6",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "5bb3f384-c685-446b-b788-59ae5da078bd",
        "cursor": {
          "ref": "6dd3b40c-1f3a-435f-ba26-3133461cfc97",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e673a55c-1cc5-433c-816b-c137db6c6037"
        },
        "item": {
          "id": "5bb3f384-c685-446b-b788-59ae5da078bd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "898f509c-1b46-4089-8301-a6e8e8e81ef6",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "af666ece-c0eb-416a-9a00-2ce7396feee0",
        "cursor": {
          "ref": "48d1dbbf-210c-4d1f-b2c2-400a9d98d32d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ab53d8f-0124-471e-bb79-e7cb68a996ae"
        },
        "item": {
          "id": "af666ece-c0eb-416a-9a00-2ce7396feee0",
          "name": "did_json"
        },
        "response": {
          "id": "ca8b2bce-7524-4ecf-b2cb-e86fc16972ee",
          "status": "OK",
          "code": 200,
          "responseTime": 1281,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ffad4-6ce5-498e-b3ce-b23db9d14c7b",
        "cursor": {
          "ref": "0df246bd-778c-491e-873b-bc04450da61c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d18bfe1e-09a1-4867-9b24-6e45ecac1215"
        },
        "item": {
          "id": "690ffad4-6ce5-498e-b3ce-b23db9d14c7b",
          "name": "did:invalid"
        },
        "response": {
          "id": "26548590-711b-484f-96ea-b54f4392ab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ffad4-6ce5-498e-b3ce-b23db9d14c7b",
        "cursor": {
          "ref": "0df246bd-778c-491e-873b-bc04450da61c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d18bfe1e-09a1-4867-9b24-6e45ecac1215"
        },
        "item": {
          "id": "690ffad4-6ce5-498e-b3ce-b23db9d14c7b",
          "name": "did:invalid"
        },
        "response": {
          "id": "26548590-711b-484f-96ea-b54f4392ab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22199473-9f97-40d6-a3f4-85ce1f2ce112",
        "cursor": {
          "ref": "c4233e12-3e0b-4e14-a3ed-0581c8a07961",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "af15c844-75a4-4080-82cb-3b0a3530e82c"
        },
        "item": {
          "id": "22199473-9f97-40d6-a3f4-85ce1f2ce112",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6699f010-cc9d-46a0-833a-9b2cd98e402f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 881,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36534351-ba2f-46a4-b53d-b1e063b9d1c0",
        "cursor": {
          "ref": "01f6ffb8-81ae-4338-82a3-3a47b16881e7",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e112819b-5ae8-4bbc-9d13-3046a9440151"
        },
        "item": {
          "id": "36534351-ba2f-46a4-b53d-b1e063b9d1c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d23a963a-ca9b-4329-a167-4d8df1ea8843",
          "status": "Not Found",
          "code": 404,
          "responseTime": 670,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c0c044-b9fd-4b48-9d2e-04e3297415da",
        "cursor": {
          "ref": "e97e6eb0-c78b-479a-9bf6-e7162b556de1",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "934340a1-dbef-4a12-9e46-7852c7078ca1"
        },
        "item": {
          "id": "24c0c044-b9fd-4b48-9d2e-04e3297415da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ab7e296a-2cf4-4a67-9906-53f671f1f263",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9d17f4-36f6-4fc5-a9eb-10d1b0668cb0",
        "cursor": {
          "ref": "0c8c3506-c973-4f3f-98ba-604c7ccc09ba",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e9e009ae-cac7-4bf8-8bd0-b036209e1658"
        },
        "item": {
          "id": "6c9d17f4-36f6-4fc5-a9eb-10d1b0668cb0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "034ec5c8-d06f-4702-836d-b24b9dc33313",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 696,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9d17f4-36f6-4fc5-a9eb-10d1b0668cb0",
        "cursor": {
          "ref": "0c8c3506-c973-4f3f-98ba-604c7ccc09ba",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e9e009ae-cac7-4bf8-8bd0-b036209e1658"
        },
        "item": {
          "id": "6c9d17f4-36f6-4fc5-a9eb-10d1b0668cb0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "034ec5c8-d06f-4702-836d-b24b9dc33313",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 696,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39475cb-8745-4b76-9cc9-2679ddc2064e",
        "cursor": {
          "ref": "ab12ea58-5f9e-46a9-b52d-3dfb055395e7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00612042-da0d-42cb-9e24-420fc5549126"
        },
        "item": {
          "id": "b39475cb-8745-4b76-9cc9-2679ddc2064e",
          "name": "identifiers"
        },
        "response": {
          "id": "1ec82c32-8c07-4d8b-8481-03dcedb6c3e4",
          "status": "OK",
          "code": 200,
          "responseTime": 1202,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78023b31-bfd8-4ab0-aa2d-930b793a7170",
        "cursor": {
          "ref": "2925a5a3-6099-4474-afd7-8d6501e1d9ba",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1885fdfa-238a-4907-8406-479e8b83a68c"
        },
        "item": {
          "id": "78023b31-bfd8-4ab0-aa2d-930b793a7170",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "51983f58-30e7-4e59-ac79-cf2539efce52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78023b31-bfd8-4ab0-aa2d-930b793a7170",
        "cursor": {
          "ref": "2925a5a3-6099-4474-afd7-8d6501e1d9ba",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1885fdfa-238a-4907-8406-479e8b83a68c"
        },
        "item": {
          "id": "78023b31-bfd8-4ab0-aa2d-930b793a7170",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "51983f58-30e7-4e59-ac79-cf2539efce52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427fe9a5-9adf-4b3e-a427-ce82d76376e4",
        "cursor": {
          "ref": "28d2cb4b-d212-4c57-b9a6-92e7ccf6e8e1",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8367d838-8197-4bba-bbd5-49737aaa8bcd"
        },
        "item": {
          "id": "427fe9a5-9adf-4b3e-a427-ce82d76376e4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88197728-0a12-4ced-aa2e-038187d05c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e7fd6-afc5-4bbc-83c5-4e495cf00677",
        "cursor": {
          "ref": "443010a9-0d21-4b38-9b08-6e5fb5bcba88",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "957a122a-0bc5-4ad9-903c-5a639c9c2802"
        },
        "item": {
          "id": "2b7e7fd6-afc5-4bbc-83c5-4e495cf00677",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f1c54660-c0ed-4ec8-902e-55a09ce998c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b85838-9f76-49cf-a90d-54e8b93dfbf4",
        "cursor": {
          "ref": "0625a558-9c10-4ed5-9af4-616fe3897488",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "721e98e1-0c5b-4b3b-a57e-db0e772a2295"
        },
        "item": {
          "id": "74b85838-9f76-49cf-a90d-54e8b93dfbf4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0971087c-1ba2-42db-8456-34459f667151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aac2ef-1368-4f8c-a000-b2d6c1cf21b3",
        "cursor": {
          "ref": "262bf0ce-84f3-4cd4-8ed0-9d062eafa4d8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8febd948-3d5c-4fa1-b1d4-c24ce146432b"
        },
        "item": {
          "id": "e0aac2ef-1368-4f8c-a000-b2d6c1cf21b3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b9fe4013-0aba-439b-b47f-22eb40b432c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6765bc4-61b6-4007-af8f-ca79ba7fecfa",
        "cursor": {
          "ref": "bd89587f-1ad8-4932-804d-1037de45a54f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "01fbac58-9567-4d4f-8189-6d7b8b83ebb6"
        },
        "item": {
          "id": "f6765bc4-61b6-4007-af8f-ca79ba7fecfa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1f49e91a-ba3c-42aa-a361-f38eab25977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01b9a7b-4a0e-4930-9b80-c20328fccf5d",
        "cursor": {
          "ref": "871ca80e-5871-4098-a230-4521ada0e438",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec44ea8e-e441-4437-b3ef-7ecb1249a9f2"
        },
        "item": {
          "id": "a01b9a7b-4a0e-4930-9b80-c20328fccf5d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "366a78a5-f9ee-4ea4-ae41-6abf6c83526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd60e064-d361-4718-bfbb-beeecc0cabc1",
        "cursor": {
          "ref": "f57391f7-8db7-44fb-8dcc-aa3dee51560a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b4f1cee0-d830-4744-9456-71c70b076750"
        },
        "item": {
          "id": "fd60e064-d361-4718-bfbb-beeecc0cabc1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f3b04e9-f342-4980-a831-bbfeff6690b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a1b98d-9b42-4e89-a1a3-d54d714c90ef",
        "cursor": {
          "ref": "b1098bd6-a903-4dce-9215-6f72d05a755f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e7886e7f-e328-4017-88f1-badc76f16899"
        },
        "item": {
          "id": "28a1b98d-9b42-4e89-a1a3-d54d714c90ef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98f2224f-65c7-4bd0-86ef-275af7d74e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58650ddd-8508-48ce-bd8b-ef4e51bd3477",
        "cursor": {
          "ref": "09926dc1-7428-4db6-a1c9-08316f25e6ce",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30f35791-a647-49f4-a588-d4d1121a9f4e"
        },
        "item": {
          "id": "58650ddd-8508-48ce-bd8b-ef4e51bd3477",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f7806f87-1212-4a74-a883-2874d76037a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590bfd69-9996-401e-94de-be6e1d929281",
        "cursor": {
          "ref": "ec312594-bcdd-45ab-975a-e90f715efc26",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8738abac-46e8-4293-b269-aa8dc877480d"
        },
        "item": {
          "id": "590bfd69-9996-401e-94de-be6e1d929281",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d7a1c14b-1caa-4808-aca8-8dd9750c1d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc986cf-aa2c-4bf6-b4fc-acc6bd5469d1",
        "cursor": {
          "ref": "a2374233-3057-4bfd-abbf-f7d874383d96",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a2cb8a65-1488-42b1-80ba-8a170354974d"
        },
        "item": {
          "id": "2bc986cf-aa2c-4bf6-b4fc-acc6bd5469d1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e1e7773a-a263-4427-9f8e-c369faff399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0623e2b-3eda-49bc-af5f-e220087b0f89",
        "cursor": {
          "ref": "d8386d3a-ce42-4bad-b39e-34bab4299742",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "34f31336-195b-4835-a024-0473cde57f06"
        },
        "item": {
          "id": "c0623e2b-3eda-49bc-af5f-e220087b0f89",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae7d9ead-7f10-4ec1-b61e-b32dad30ad0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4756808-eb7d-4336-8f62-19e7ef696f7d",
        "cursor": {
          "ref": "76586813-2554-4def-a148-4d223222ebd9",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7bebd387-493d-41fe-b561-07fca776cf06"
        },
        "item": {
          "id": "d4756808-eb7d-4336-8f62-19e7ef696f7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c6a8c0fb-5164-4ddb-92de-d4e3aba5834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24883357-9b23-4960-b70d-3bc1d76d0083",
        "cursor": {
          "ref": "b4922b5d-702b-4f26-9ab6-69216afafb48",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "371393c3-c5a4-4c29-b781-7946785a54cd"
        },
        "item": {
          "id": "24883357-9b23-4960-b70d-3bc1d76d0083",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8093be46-f47b-4bad-9384-eee91103ea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fae6e46-57ee-46ad-86b4-8e41b8407a30",
        "cursor": {
          "ref": "675cb2c9-49ac-445b-96fd-2538748e442d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "449c572a-c30d-40e0-8c16-e83867fdff99"
        },
        "item": {
          "id": "7fae6e46-57ee-46ad-86b4-8e41b8407a30",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "00bbf8ea-ac00-44e0-be99-f3cd298ec60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf31200-e0da-4ae2-945b-7707854de368",
        "cursor": {
          "ref": "089052ad-d256-47d4-bfa6-6bc603b77099",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "690965ce-12b9-4272-95e1-66e8e2b0e9e2"
        },
        "item": {
          "id": "ddf31200-e0da-4ae2-945b-7707854de368",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d8e23fa8-0e2f-4972-ab9e-c020735bdb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f080e97-99df-43f9-ae50-7b03910439a6",
        "cursor": {
          "ref": "9831ed34-7b08-43a1-be0d-6d5df13d4732",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc864a4c-e34d-4110-a71e-f5f0040cbd4c"
        },
        "item": {
          "id": "1f080e97-99df-43f9-ae50-7b03910439a6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c70c7a5-67a3-45a9-b114-239360044d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792786e3-e858-4e09-8031-faa3fa374386",
        "cursor": {
          "ref": "befa632e-e6aa-4174-9fba-821a1c520115",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "edc28975-e771-4772-ad43-bc1115361298"
        },
        "item": {
          "id": "792786e3-e858-4e09-8031-faa3fa374386",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5fb66bc6-03b3-423e-97fb-ac83e38f6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b2f5af-9606-4fa3-9c41-7bbafda7efbe",
        "cursor": {
          "ref": "b7d275e5-b11b-4b9d-abb1-704717bc5f69",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c34cac86-6855-4533-aa88-29404dee2e1e"
        },
        "item": {
          "id": "a8b2f5af-9606-4fa3-9c41-7bbafda7efbe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9c6c3e9-8e65-420a-aa25-bf914acee710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343147d-4d1a-4753-85cd-264d03ffcd8a",
        "cursor": {
          "ref": "7183c625-dd63-42c1-b2cd-e3994d067eee",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d138fbfc-f012-419d-b64c-5cb448233c42"
        },
        "item": {
          "id": "0343147d-4d1a-4753-85cd-264d03ffcd8a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5eda10e3-68d7-48f1-b8a3-286c91d46b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01d1e42-88ed-49a2-9f48-d1008b8423a2",
        "cursor": {
          "ref": "14a03abd-bcc4-4ec6-aded-1efdc7d40a17",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "09ce7b78-5b45-4d32-a0a3-df60d3b36f09"
        },
        "item": {
          "id": "e01d1e42-88ed-49a2-9f48-d1008b8423a2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5c26328-e634-4d78-aed1-983007241770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0adedd6-136a-49d6-89f2-a0155989184d",
        "cursor": {
          "ref": "4f7c0e0e-69b7-4858-853f-8cbc0161b2f0",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e57c7de-98cf-4599-a70b-3d1d5121c7d7"
        },
        "item": {
          "id": "e0adedd6-136a-49d6-89f2-a0155989184d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d70d43f-0228-4b63-a259-bfddf111a25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b31ce-7e38-4561-8ae3-05648cd4702f",
        "cursor": {
          "ref": "076e1e08-e3be-41e3-a16e-f65355b0255d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81fd900f-e5bf-48dc-93c3-34e6bb0f6858"
        },
        "item": {
          "id": "565b31ce-7e38-4561-8ae3-05648cd4702f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a222f7ab-c57b-41d9-984e-fb7c2576823b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99179b6b-834e-45b2-b45d-f73a324e9c18",
        "cursor": {
          "ref": "7dc7e1ef-c07a-42ec-8e89-6d9b06d07f7f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26a3e581-8768-4dab-87b9-520ea8efa75d"
        },
        "item": {
          "id": "99179b6b-834e-45b2-b45d-f73a324e9c18",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b26d399f-b041-4837-8b90-39eaf92fa931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c583dc-9e7a-46f9-8fbf-405e0a784b50",
        "cursor": {
          "ref": "a98a801f-7919-4587-a1bc-a5fa61a60188",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5509c0a-5cf4-42d4-a069-7ea4e67c3e42"
        },
        "item": {
          "id": "e2c583dc-9e7a-46f9-8fbf-405e0a784b50",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "16b2fde0-5308-40c8-8ae0-0d672695e56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6ec3e2-2f21-402f-a008-271caedd3b9f",
        "cursor": {
          "ref": "8db582d2-e6e4-4144-810c-40f7466ee508",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "358e336d-819b-4181-a81d-b43a2ff4d424"
        },
        "item": {
          "id": "8f6ec3e2-2f21-402f-a008-271caedd3b9f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "92ab9961-ecfc-415f-bebe-5173e48a095a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3063ec-e863-4395-bf4b-5a482128926d",
        "cursor": {
          "ref": "209b2b24-9648-49ac-bd20-d0e59cdcb200",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "89fa3267-a11c-4bc1-813d-f97e652af692"
        },
        "item": {
          "id": "bf3063ec-e863-4395-bf4b-5a482128926d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13b31eeb-8965-492b-bad6-f59012e167e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c649af9c-9a94-45cd-bdaa-d682e5ce7fe4",
        "cursor": {
          "ref": "6becc30b-cb19-43c5-a908-bb82c63b13a1",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d7e6f395-bf3c-4c91-b9fe-ccafd7f4dd9e"
        },
        "item": {
          "id": "c649af9c-9a94-45cd-bdaa-d682e5ce7fe4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "da9a6495-24f7-4989-b1e7-e41e7a22bf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08123b8e-75a9-4917-a685-b677bf73a929",
        "cursor": {
          "ref": "e28f5530-d18d-415f-af61-f6f1dcb9aacd",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ef025b7-7e60-4b7d-a1bf-1c174480a4d8"
        },
        "item": {
          "id": "08123b8e-75a9-4917-a685-b677bf73a929",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0780bf27-cc26-4e4d-9acf-34d373ee0fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbd6016-43c2-4216-a08c-cbb2e5a6416e",
        "cursor": {
          "ref": "539c3de9-19ba-40c8-acdd-4f6093ab72f2",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "deb38b68-4b62-487f-93cd-83701dc69309"
        },
        "item": {
          "id": "3dbd6016-43c2-4216-a08c-cbb2e5a6416e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2d5a1cf8-6368-4a87-8ae1-8e559d67194d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda0904-02e1-4a64-a674-b0afefcbea28",
        "cursor": {
          "ref": "903fd43a-d1b2-4bca-9340-d9f86e381cf3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de3e6917-47ce-4fc1-87b4-b41a0e7c1d44"
        },
        "item": {
          "id": "5cda0904-02e1-4a64-a674-b0afefcbea28",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a884d3de-897a-40ee-bd69-98ba6a57780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0c93d1-3a50-4375-8dd2-fb2d30d19f32",
        "cursor": {
          "ref": "f2648c96-d0c2-4e8a-a4ff-21ae667c8d59",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "18b80b04-5a5b-46be-b20d-f4a16e35fe7b"
        },
        "item": {
          "id": "7b0c93d1-3a50-4375-8dd2-fb2d30d19f32",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a19212b6-dc2e-4cb2-9a6e-0ef3b54947eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7637e1-8cf8-4658-9550-a91f39a4f760",
        "cursor": {
          "ref": "0ed5ed95-4d8b-4e89-8df4-a02e3c2b9aa2",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8fde1391-2b76-44e3-95e1-0d184e3def5c"
        },
        "item": {
          "id": "ca7637e1-8cf8-4658-9550-a91f39a4f760",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "44912299-d40b-46e1-9277-24c73319c176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60dac8-cc46-4605-8c7a-8829be3d4d6e",
        "cursor": {
          "ref": "4a94c323-bb92-4d5f-ab56-4109cc242534",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f70a7609-8af2-435d-8a1b-a8f090ef59ff"
        },
        "item": {
          "id": "5e60dac8-cc46-4605-8c7a-8829be3d4d6e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d8181c21-bb34-4fb1-957b-a75b17f30050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce96343-011f-426b-b24e-ac7f013b7ec3",
        "cursor": {
          "ref": "1a19996e-a906-4a70-9943-57a1eae50c0f",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32de88c4-3d0c-41c9-ac43-936b02a7ce85"
        },
        "item": {
          "id": "3ce96343-011f-426b-b24e-ac7f013b7ec3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "533a1e1e-df02-4db0-b310-c1fca42ee4c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 899,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f969f593-3eb2-4a63-b1ee-3f4869c4b488",
        "cursor": {
          "ref": "4c690098-41ba-4d0a-a646-6f07f5f9c4e0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6d47cb0f-7e5c-4f98-8499-cb935a33ae90"
        },
        "item": {
          "id": "f969f593-3eb2-4a63-b1ee-3f4869c4b488",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28639641-615e-4cdd-959f-2fafb416b6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e184d37-7dbf-4cf1-aea1-d7d869d3331b",
        "cursor": {
          "ref": "87fda855-8ab0-4d7c-8c4f-9856df0f7140",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ea01776f-7024-4898-95cc-fb4136f7e3cf"
        },
        "item": {
          "id": "2e184d37-7dbf-4cf1-aea1-d7d869d3331b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3ebd5405-70dd-474e-ac02-95930d76686e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a189dfb8-92d3-4cc4-b838-5114e1755db0",
        "cursor": {
          "ref": "ab82d565-7d7b-4479-8136-c429c60f5a60",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "796c0cb3-2ce4-4a95-8f10-2a3d1f170264"
        },
        "item": {
          "id": "a189dfb8-92d3-4cc4-b838-5114e1755db0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0724e5ce-e59a-4fe1-a7ed-7a51c894fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6aa27a-260a-4275-a5ca-96ebd0310f65",
        "cursor": {
          "ref": "f3369764-bfa4-4420-b1ee-b01ccb2b99bf",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7271f55f-b981-4cd3-9a83-3b04e86bf589"
        },
        "item": {
          "id": "fe6aa27a-260a-4275-a5ca-96ebd0310f65",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7b5e57d0-e801-43dd-ac69-adcec37e2af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7dd86d-c905-450e-b2c4-ada77a530cc4",
        "cursor": {
          "ref": "9aabffd4-bb6d-48f3-a983-076c754a5cb1",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "75f91853-c530-4160-9439-674341ac952b"
        },
        "item": {
          "id": "dd7dd86d-c905-450e-b2c4-ada77a530cc4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7c3055f3-ccee-4682-b871-539886bdc15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1545,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9412200-2f53-4503-92dc-e92a2938d48d",
        "cursor": {
          "ref": "07b75885-2261-414b-9340-8bc6bdab6532",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f6874fff-efec-4ab8-ae45-d9fd4b2ae499"
        },
        "item": {
          "id": "f9412200-2f53-4503-92dc-e92a2938d48d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e5aa86a7-a03d-45ad-b297-1f92e2d26c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1759,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee563a9c-b254-4b6b-b8c3-aad8ed929520",
        "cursor": {
          "ref": "af215992-1022-4a43-9c2b-bea3be0d7345",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b8e6dccc-9620-4716-b465-101ccbd9b246"
        },
        "item": {
          "id": "ee563a9c-b254-4b6b-b8c3-aad8ed929520",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f44cc0d2-e12f-4dd2-b9a2-a192e62cfe71",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1580,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f72dd4c-ce7e-4565-be88-8a2d700a6652",
        "cursor": {
          "ref": "48fb2cce-bcc6-440f-b106-43379ff8d417",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5f34d784-f851-4932-8a41-b9a6feabca48"
        },
        "item": {
          "id": "6f72dd4c-ce7e-4565-be88-8a2d700a6652",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "13fd2651-eec2-4f10-8ae4-1a56ef53910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc01ea4-24d6-4199-add6-90a9394b1c1d",
        "cursor": {
          "ref": "8c2d42d8-78e1-4353-a523-a0d149a6d4cf",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "09a42470-6716-4601-b0eb-500d30068af4"
        },
        "item": {
          "id": "8fc01ea4-24d6-4199-add6-90a9394b1c1d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ce13f32e-2f07-42d0-b5a4-5c1aa76d2159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9d07e-915b-4ff3-a4c1-25beb75c9ef1",
        "cursor": {
          "ref": "641397ee-610b-4871-b561-ceefaf474353",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9760db3c-2663-4582-92aa-993ea5c0bd38"
        },
        "item": {
          "id": "31b9d07e-915b-4ff3-a4c1-25beb75c9ef1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dce08a71-07f2-4336-8de3-dedf1ddcf336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1178,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0059ba97-035a-4d14-98a0-90cc4a015d98",
        "cursor": {
          "ref": "b6174011-1ac1-46e2-8709-0854368d206f",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6dc2b381-23de-4bb9-96c6-39647c286ea8"
        },
        "item": {
          "id": "0059ba97-035a-4d14-98a0-90cc4a015d98",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5ba4fdaf-695c-4aa6-9c63-925e156a97aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5ae66a-c97a-4d4c-95d5-ef281546a804",
        "cursor": {
          "ref": "b46845aa-976f-4d15-b2ba-d57d5ec37e2f",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1c690583-1c47-4558-b304-589162bd4647"
        },
        "item": {
          "id": "ca5ae66a-c97a-4d4c-95d5-ef281546a804",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a29d71db-fabc-4f16-a164-e6d8398faa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1226,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc2e61b-36a9-4822-8ab6-3a5178bbfea2",
        "cursor": {
          "ref": "61a63367-9567-4048-9730-144c964833f5",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "449399e2-316b-4699-b849-3bda6e2b8e51"
        },
        "item": {
          "id": "fdc2e61b-36a9-4822-8ab6-3a5178bbfea2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "73f43f37-b01e-4b88-a92d-c2d2b53cca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1220,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d5edf9-ca92-4b61-8d30-4e4d1cc5d8ff",
        "cursor": {
          "ref": "2874985c-5302-463a-9ed6-f1bd05bb268f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5d684b6b-d668-4069-a9eb-60bfdcc60849"
        },
        "item": {
          "id": "82d5edf9-ca92-4b61-8d30-4e4d1cc5d8ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47b1b4c2-4ee8-4daf-bb57-56cd2e91a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdfc86e-59c3-4160-80a1-758dc5cf0a5f",
        "cursor": {
          "ref": "f5235ae1-8efa-4f8e-92d2-cea9a3ae617b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4946d146-25f5-432b-9d81-efcf95ddb6b7"
        },
        "item": {
          "id": "5fdfc86e-59c3-4160-80a1-758dc5cf0a5f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4a0fe1c2-d26c-4f1d-8b5c-3f912f15a310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa6ef3b-e58f-4261-b558-2213ddac7d56",
        "cursor": {
          "ref": "c7a8a928-194d-4ab2-a34d-b6b2b1fcd3f7",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d81f887-08b5-4e1a-b360-004a6c8e1a5e"
        },
        "item": {
          "id": "8fa6ef3b-e58f-4261-b558-2213ddac7d56",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2598dda8-a2e5-43b1-915d-242b3868f33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57edbd-a996-474a-97ae-9aaa622a89bc",
        "cursor": {
          "ref": "1bdb6c04-d3a6-48fe-85e9-ce52d96d374c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "628d8f73-aed7-466e-b659-0d7fb27930d2"
        },
        "item": {
          "id": "7d57edbd-a996-474a-97ae-9aaa622a89bc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "75ae1629-1921-47b3-8819-756e6c0bf8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8b4a00-663d-4df4-8408-cd77ebdfc4c6",
        "cursor": {
          "ref": "8a213a14-6dcd-4a46-9158-dd7bf3fc5134",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "82818200-1e3c-4a65-83a2-155fdb68e110"
        },
        "item": {
          "id": "1f8b4a00-663d-4df4-8408-cd77ebdfc4c6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d7e01c31-3895-43c2-bc3a-239c4625f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1468,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a2f2fc-0ca3-4fdb-a253-691514c80cea",
        "cursor": {
          "ref": "a8ad9d63-0ea0-4f99-901c-e22237dc0280",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a5890d0c-87cc-4bd3-800e-27d7502883ef"
        },
        "item": {
          "id": "c1a2f2fc-0ca3-4fdb-a253-691514c80cea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9a01dd1c-834f-49e7-810a-d206e5801c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518b4200-3968-4718-b4c2-61dc1186b31e",
        "cursor": {
          "ref": "f9313cb2-bf53-407c-a1a0-789b8592f708",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2556cf82-73c4-4ae3-9641-c103134b1e91"
        },
        "item": {
          "id": "518b4200-3968-4718-b4c2-61dc1186b31e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7aabc80a-94a5-4629-b8b5-8a130189774a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbea87e-5f60-495e-accf-ffc6bd2e3c63",
        "cursor": {
          "ref": "7a26a88b-da81-4750-8da6-2168eb633431",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0eab72a8-200d-4808-b59a-e2610d539f40"
        },
        "item": {
          "id": "1cbea87e-5f60-495e-accf-ffc6bd2e3c63",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e6fba9e8-4014-4ff4-bdcf-ede48eb327cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe039c02-2b52-4dfe-9128-94266da5d887",
        "cursor": {
          "ref": "3977df13-b786-4efb-99a8-6eb4c00f6124",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8dfca0b4-1724-4166-881a-a97ac0718cd1"
        },
        "item": {
          "id": "fe039c02-2b52-4dfe-9128-94266da5d887",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "77e0e2ff-6b0e-49b2-8a91-22b0b9384569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e008a3-f82e-41e0-92a8-2f3a34d487f0",
        "cursor": {
          "ref": "b1726efe-ac5e-4211-b1be-ce467e6518f8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0b2910c6-e593-46cc-bef5-5cac7c0de8ae"
        },
        "item": {
          "id": "29e008a3-f82e-41e0-92a8-2f3a34d487f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76f50f41-a031-43f9-ac27-8eb9383d07f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936ad50c-188a-4d81-832f-51d505400cc0",
        "cursor": {
          "ref": "74319051-81b9-462e-8c31-5232e076dd62",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f85ecf7-3b94-425e-b6eb-d197b1569871"
        },
        "item": {
          "id": "936ad50c-188a-4d81-832f-51d505400cc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ddc9bd62-5673-43e5-9444-30584f7a4dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1059,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cbe5ed-cd15-4a99-a8ae-dfecc9e4fd14",
        "cursor": {
          "ref": "8c690532-6fe3-434d-90d6-e6c4b4a41ae3",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "21559b0b-f775-4157-8a40-852cd1e90006"
        },
        "item": {
          "id": "40cbe5ed-cd15-4a99-a8ae-dfecc9e4fd14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4591989e-ac9d-400d-b0bd-4267d87d0d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dbeaa2-8caf-4555-9cf5-9fc91ec70aea",
        "cursor": {
          "ref": "a18df9e5-f63e-4368-b676-7175583a75d8",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "681ffc1e-7108-475c-bf56-e741627864ac"
        },
        "item": {
          "id": "92dbeaa2-8caf-4555-9cf5-9fc91ec70aea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2c0389d9-4091-4c4a-90d8-8c93db4cd4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1247,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e85c122-b234-4548-84a6-a99df4822b69",
        "cursor": {
          "ref": "e21f38ce-d064-4111-abcd-7f1101727164",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "090e627e-f207-4f57-be4b-f4f42e878bf6"
        },
        "item": {
          "id": "0e85c122-b234-4548-84a6-a99df4822b69",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "96ba23dd-e213-4857-b774-4b923c843e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1219,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b899beb-a6c1-4519-bd06-28efe6fc79f3",
        "cursor": {
          "ref": "048ba8ba-e6f4-4358-a6d8-ff984daec805",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "69004f4a-e345-438b-8f78-cf45fd80c341"
        },
        "item": {
          "id": "9b899beb-a6c1-4519-bd06-28efe6fc79f3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d097ec29-04dd-404a-8d0d-a9eda6634895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1183,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31505c7a-7ef4-4306-94d3-fbe0da5ea861",
        "cursor": {
          "ref": "ae1525bc-fada-4cc8-aefd-dad62838a5de",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "172a7fce-400a-423e-bd0a-3dafda8aa67f"
        },
        "item": {
          "id": "31505c7a-7ef4-4306-94d3-fbe0da5ea861",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "20a5c32a-20f3-49d6-9142-41f75d078066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e83d7-21e4-44c8-a208-a645fe563ba2",
        "cursor": {
          "ref": "05398a50-40dc-42f9-bafb-613f32ce5f67",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e973fe90-1f0c-49b9-a9e6-b956ea12b242"
        },
        "item": {
          "id": "296e83d7-21e4-44c8-a208-a645fe563ba2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "121dbf8c-dfc1-4a86-a973-7b7b83a8b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c169c69-f114-466a-a22f-e3b8d3edc911",
        "cursor": {
          "ref": "206c7e6d-0cfd-47f1-b19d-f613a5ab35c2",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae59868c-5c5d-4314-b456-83ce5ade2d5b"
        },
        "item": {
          "id": "8c169c69-f114-466a-a22f-e3b8d3edc911",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3106840e-3789-420d-9cd9-5f910c6a5f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9facc6eb-8999-40b0-8767-04bd298d0e42",
        "cursor": {
          "ref": "998d1b6a-c5db-463c-8389-da0832064ccd",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f96ba873-75e7-4eb6-af60-29033ec970ea"
        },
        "item": {
          "id": "9facc6eb-8999-40b0-8767-04bd298d0e42",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4bc224aa-8e86-4624-928a-1ec927e6e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d4432-d8ff-4f67-ad11-392734a2a00a",
        "cursor": {
          "ref": "a5fe8cef-3707-4a93-ab3b-b76f18e843b0",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "392e20f1-4a69-438b-8ebe-09eee65ffdde"
        },
        "item": {
          "id": "591d4432-d8ff-4f67-ad11-392734a2a00a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a5dedc9e-7248-48cb-b754-1754225596da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed926b2-4a60-4feb-9f8c-018a7d22a882",
        "cursor": {
          "ref": "8314e15f-9f99-453c-b473-47d5f73e1f0b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ef40dea9-caf6-4cbd-bcbc-c3d1e814dfba"
        },
        "item": {
          "id": "7ed926b2-4a60-4feb-9f8c-018a7d22a882",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ccd64bfd-040c-47ee-98ee-3b8abc2cd4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048f39b7-dffd-4e8f-8e16-51d04cfd37a1",
        "cursor": {
          "ref": "71c6b711-68ee-4dbb-a03c-4dbdab2249ba",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d081954d-fcbe-4c4d-a474-79fa381dd573"
        },
        "item": {
          "id": "048f39b7-dffd-4e8f-8e16-51d04cfd37a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "34f163cc-a3bb-4808-ab73-67aa3f110797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4996b68-9745-4aaf-a839-f2e0ff11a8f4",
        "cursor": {
          "ref": "9b2ffd54-fb80-439c-b772-33713d0df185",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1c2f0413-c010-4c1c-98d7-03b93f57909c"
        },
        "item": {
          "id": "b4996b68-9745-4aaf-a839-f2e0ff11a8f4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54c1a0ed-f7d4-4272-9fed-fee9a58a730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4de043-b715-45c2-bb8c-0e7f7ed8a8a5",
        "cursor": {
          "ref": "c5e42fe8-0c0a-4cf3-84d9-c29fdf8f2049",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "571e026a-bbff-4add-a16b-2538c1d9b6c0"
        },
        "item": {
          "id": "ec4de043-b715-45c2-bb8c-0e7f7ed8a8a5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "27cd3c6c-5bd3-4d13-8457-1e487436ba10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757f13d1-ac6d-41d0-bd09-6c7d5dfaab0e",
        "cursor": {
          "ref": "5aff8690-8c2f-45eb-822f-85e8fc21a96d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ed6fd6bb-5bc8-4591-ae18-228836eac3e1"
        },
        "item": {
          "id": "757f13d1-ac6d-41d0-bd09-6c7d5dfaab0e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "68e03efc-874f-41c0-b826-6a456f501ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf876f1-ffb0-416b-ac48-03869a500d80",
        "cursor": {
          "ref": "b2108048-46ea-4f03-b89c-244f11c0fc52",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "04fbf3ec-927e-45d4-87ee-65f9a9405986"
        },
        "item": {
          "id": "adf876f1-ffb0-416b-ac48-03869a500d80",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6cea7414-7aaf-49cd-a589-5c75b71e6314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4bbd3-c247-4d43-98c0-53bc78d9036a",
        "cursor": {
          "ref": "1f91d247-2ceb-4b7d-a8ef-7780d1afd5b9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e6058b5-20c5-40d0-b5d7-2841deab56bc"
        },
        "item": {
          "id": "bdb4bbd3-c247-4d43-98c0-53bc78d9036a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c58a4fc-375e-4581-b13b-69b0d67a58a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3619ce5-c7da-4749-a54e-8d7c12f4bcc4",
        "cursor": {
          "ref": "30f7dfaa-7e7a-462c-b35a-3fb0abcb68e4",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b5f29fa5-2390-470c-a828-45101b8b6607"
        },
        "item": {
          "id": "b3619ce5-c7da-4749-a54e-8d7c12f4bcc4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e882a277-0a0d-4604-8570-d17ba37a60cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032d315-b07c-418f-8384-516d3e08d238",
        "cursor": {
          "ref": "a58d162f-4b8f-4486-8b6d-f6bd7a09b28f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4fbaf43-eb75-4731-8e71-57e4cfcd12e0"
        },
        "item": {
          "id": "4032d315-b07c-418f-8384-516d3e08d238",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "428cbbea-fceb-4818-a949-b18b000f154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2d18af-86de-4688-8a71-a0dd358cf0c3",
        "cursor": {
          "ref": "959c0814-fd17-40ad-ac0b-15e936552391",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "62eb7b37-68a0-44ee-bc98-8fe88a291993"
        },
        "item": {
          "id": "8f2d18af-86de-4688-8a71-a0dd358cf0c3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f54417b-cbee-457e-9543-2d1b396a4cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331c1fd-cbca-4c86-967c-111fe469030f",
        "cursor": {
          "ref": "2ef22cdc-0113-46e3-a8cb-c873bb6620bc",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9b754d5d-7f58-4b7a-a318-cb77f7be2cda"
        },
        "item": {
          "id": "f331c1fd-cbca-4c86-967c-111fe469030f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f85e19f-a39b-437a-8ce8-665293913839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43006f51-3c14-42c4-a5e3-af99a48ba672",
        "cursor": {
          "ref": "e0942d5e-d8e8-4442-99ce-0498add67a38",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5dd3f69b-abd4-4665-87a3-d787b7b31115"
        },
        "item": {
          "id": "43006f51-3c14-42c4-a5e3-af99a48ba672",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2efa9cac-b020-4b8c-8e8b-4c1155909c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5697a198-5595-4fbc-b70e-514cff62889a",
        "cursor": {
          "ref": "c9680232-d0f7-4859-a5d6-ef4362da27c9",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "88255513-6275-467f-9eb5-85a67db22ff1"
        },
        "item": {
          "id": "5697a198-5595-4fbc-b70e-514cff62889a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8d8bb051-256f-490d-b140-9863f31e468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f12545-cb63-4eaa-9e22-0006d8d4ad98",
        "cursor": {
          "ref": "73f109cc-97ee-4a6e-9d27-382583eaecc5",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c8467ff5-dd05-4a5f-85a3-7c083b959013"
        },
        "item": {
          "id": "36f12545-cb63-4eaa-9e22-0006d8d4ad98",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d65899a3-8a5d-4689-b620-d6ca1f017c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9abe9-6cc6-4cda-b714-fd6c72d17eab",
        "cursor": {
          "ref": "2a7d625a-70bf-4113-8d33-ebccdcef38f1",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9700a54-8963-44fb-8f4d-3a2a79714e12"
        },
        "item": {
          "id": "ddd9abe9-6cc6-4cda-b714-fd6c72d17eab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f68fa759-5490-405b-bdd8-183ef1ac7729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c77efda-f263-42d7-978e-f38c063bc8d8",
        "cursor": {
          "ref": "f3d8e6c5-192c-4766-9643-7ba22bdf3162",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ace0291-935b-43e6-8726-9c8f7ed470df"
        },
        "item": {
          "id": "5c77efda-f263-42d7-978e-f38c063bc8d8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9f7ed36d-f83b-4cfa-abdf-d7c500bcf73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bd5168-f2de-4f87-97ac-09d4df8de52d",
        "cursor": {
          "ref": "276ef22b-8ade-4e6a-af4a-45b90bb3675d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "385bb9bb-b1de-45ae-9d6e-6cfac36a2773"
        },
        "item": {
          "id": "22bd5168-f2de-4f87-97ac-09d4df8de52d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9c0e9f74-a17b-4aa2-b643-db78905b98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab650ee-c959-4b73-8c39-008ef0935aa7",
        "cursor": {
          "ref": "fe8b267c-1b7c-4429-9780-2caa3aaf6ace",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0871d3a4-3b2d-4f6d-a75b-92355888645a"
        },
        "item": {
          "id": "3ab650ee-c959-4b73-8c39-008ef0935aa7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "93a063e4-f571-420d-a178-042db1c1d349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11ccf0f-5917-42e8-9839-e75343e912d3",
        "cursor": {
          "ref": "872f4ee7-5f6a-4c91-b88b-1aaf9cc5ba25",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4457061-e966-4f7f-9308-256358f3f924"
        },
        "item": {
          "id": "e11ccf0f-5917-42e8-9839-e75343e912d3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fd62955d-0f6d-4004-85a1-72d84f6198ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417098a0-0b89-45fa-8b59-0551edacb37e",
        "cursor": {
          "ref": "abad207c-c9f5-4da2-b6b4-8a8c147a4f08",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c19405f2-db37-4aca-ada1-f4168c6af0e6"
        },
        "item": {
          "id": "417098a0-0b89-45fa-8b59-0551edacb37e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a6d76974-c6ec-4f2e-9966-12b6062bbb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310021b1-9180-4436-a285-7af57545f9b1",
        "cursor": {
          "ref": "b4cd6ae0-71de-41f0-8291-7f98906200d5",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aa8cd2d2-ee61-40b9-96f0-c3e0f6b30254"
        },
        "item": {
          "id": "310021b1-9180-4436-a285-7af57545f9b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a4b77d7b-302b-43af-b2b4-d653308dd4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff72c58-43ef-4f2f-8b30-2ff052b30532",
        "cursor": {
          "ref": "df6cd57e-4a8e-4476-b9ff-f2cd49e2cc0c",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d3e7c6b8-da7f-4a89-81f3-f45717bcddc5"
        },
        "item": {
          "id": "5ff72c58-43ef-4f2f-8b30-2ff052b30532",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f77048a-aba9-41ce-91ef-e86b97f4292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d34f3b0-9156-4b13-8a24-7f2a74383edb",
        "cursor": {
          "ref": "891ae232-169b-4a14-9fcc-ddf9712b437e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0565761b-6150-44d3-936d-4a4fc1f58181"
        },
        "item": {
          "id": "8d34f3b0-9156-4b13-8a24-7f2a74383edb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9d3aba0e-d8cc-49e5-978a-291d20964eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9835a5-209a-4105-8993-7e32096cfc9e",
        "cursor": {
          "ref": "793b2c4f-6bb2-420b-99dd-b57dcfdd96ca",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "31c8186c-4de1-4c05-9550-f132295e66f6"
        },
        "item": {
          "id": "3a9835a5-209a-4105-8993-7e32096cfc9e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "392f5f37-f964-4832-8738-67cf6ca75c0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01546e5-583c-45ea-96eb-01fc53d75798",
        "cursor": {
          "ref": "7b105edd-fbdb-4923-9064-8914e3e774de",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d8294dd3-2e9d-48b9-a634-94e204588778"
        },
        "item": {
          "id": "c01546e5-583c-45ea-96eb-01fc53d75798",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "eb41143a-5294-4613-b655-0ced15cbe519",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 706,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fda43d-229c-45d2-af65-bf72202754c6",
        "cursor": {
          "ref": "b5133d88-bffa-4cd1-b5e7-c0dae1c0a3fd",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "76cffd9b-fb19-45b8-a32a-1e933219ac4b"
        },
        "item": {
          "id": "57fda43d-229c-45d2-af65-bf72202754c6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72294cf2-6382-491e-98c4-39cb25fca083",
          "status": "Created",
          "code": 201,
          "responseTime": 6832,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea07460-eb9a-4d7f-95c9-e9f8abd5fa5c",
        "cursor": {
          "ref": "5efd4408-0610-4512-b92d-87a3b389da6d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d31323de-e39f-4eb4-bcf5-4fb7abb4fd91"
        },
        "item": {
          "id": "cea07460-eb9a-4d7f-95c9-e9f8abd5fa5c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d5bb186-1df6-4cd7-93fc-6e62f11d7977",
          "status": "Created",
          "code": 201,
          "responseTime": 6577,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c61c6c4-906a-4a2b-9331-34fe70bac978",
        "cursor": {
          "ref": "3a0ce53d-af32-4018-984d-347e3bda4284",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "338f1c8d-cfa1-430b-b0dc-22a4cde46e9f"
        },
        "item": {
          "id": "5c61c6c4-906a-4a2b-9331-34fe70bac978",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fd9a4b1f-2a4f-4d00-b0de-6a4c94dd4088",
          "status": "Created",
          "code": 201,
          "responseTime": 6069,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0657817-bc28-49ad-aac2-ab0ab1382ebe",
        "cursor": {
          "ref": "037ad819-0f30-43f4-bfbc-852c151d70f6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b0b79b0c-f0e3-45f3-a534-ff6b35131ee3"
        },
        "item": {
          "id": "c0657817-bc28-49ad-aac2-ab0ab1382ebe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78df9b1e-a612-4321-867a-0c386be2282d",
          "status": "Created",
          "code": 201,
          "responseTime": 5918,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d72ebee-3afe-41b2-bb85-51e319f33a9e",
        "cursor": {
          "ref": "8aa753cb-42b4-4284-8950-e22f0e9892ab",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6275c76c-8104-4cb4-8d74-8baf4df882c8"
        },
        "item": {
          "id": "2d72ebee-3afe-41b2-bb85-51e319f33a9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6f947403-5255-4b25-a78c-c431547027ee",
          "status": "Created",
          "code": 201,
          "responseTime": 6143,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0f2d9-c9dd-4639-beff-b522ad606b66",
        "cursor": {
          "ref": "f167e413-1af6-443b-b097-c3952417a775",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "822e12f6-62e5-4e47-acc6-7e2ed35ea5d7"
        },
        "item": {
          "id": "5eb0f2d9-c9dd-4639-beff-b522ad606b66",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d3c1ed2a-34e4-4e26-a478-23a762fab38c",
          "status": "Created",
          "code": 201,
          "responseTime": 7359,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f38c7b9-6bd9-4e89-bc34-3820fb526011",
        "cursor": {
          "ref": "82e59e5f-f391-422c-a2ab-b9e298eea916",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "88924319-7382-4bcf-b48c-0d62a38c0f9e"
        },
        "item": {
          "id": "3f38c7b9-6bd9-4e89-bc34-3820fb526011",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d906d0d-4352-4634-8af8-ac22bcc22f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f38c7b9-6bd9-4e89-bc34-3820fb526011",
        "cursor": {
          "ref": "82e59e5f-f391-422c-a2ab-b9e298eea916",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "88924319-7382-4bcf-b48c-0d62a38c0f9e"
        },
        "item": {
          "id": "3f38c7b9-6bd9-4e89-bc34-3820fb526011",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d906d0d-4352-4634-8af8-ac22bcc22f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a9ad42-0d28-40bc-9573-34060ae91f74",
        "cursor": {
          "ref": "a7890d50-2472-416e-b451-fedd1e441dc0",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "483709cc-c15f-433b-a152-b0fbf1cee5b1"
        },
        "item": {
          "id": "45a9ad42-0d28-40bc-9573-34060ae91f74",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2866154f-fb88-4cdb-a491-1cf966b4629b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01a91c1-c6e1-4379-96b6-22dbd34e0d5f",
        "cursor": {
          "ref": "85fa5059-a450-4d55-868c-2e93818d47a9",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0c6344c0-955b-499b-b98d-9ba20a406435"
        },
        "item": {
          "id": "c01a91c1-c6e1-4379-96b6-22dbd34e0d5f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c353438b-6de0-496d-a249-ce90a5b99dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259d8ee-496d-4fef-af75-549362d7a02c",
        "cursor": {
          "ref": "dc8935d5-cad1-4f9f-94d3-a7fbbcf133f7",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4733e542-0bfc-4b59-a0db-aeb155c027cf"
        },
        "item": {
          "id": "b259d8ee-496d-4fef-af75-549362d7a02c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba88ef75-cdb6-43ec-bc3d-6f45c88bd249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4de7e01-f98b-4fad-b644-1cf2867fe3ad",
        "cursor": {
          "ref": "892dc75e-608c-494d-a331-2c939313b4fd",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "796aa5d6-c836-46f7-9fed-dece3a6e5d49"
        },
        "item": {
          "id": "f4de7e01-f98b-4fad-b644-1cf2867fe3ad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9fc66049-2b09-4905-8cb6-7d88610a4ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3712587-419d-4225-ac94-f661e4c6e5da",
        "cursor": {
          "ref": "7432a315-c900-44f7-b0ad-61bbfdc17ab3",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b690c55a-eb91-4006-bb55-0a9952f06af6"
        },
        "item": {
          "id": "e3712587-419d-4225-ac94-f661e4c6e5da",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "339ca15f-90f6-4b70-a5d1-f85521a6cabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e0c1fa-0a34-4d4f-8408-fb0cfa0d15ae",
        "cursor": {
          "ref": "611cd785-1d74-4ca0-900e-746aa446f1a3",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c9d26b4c-588b-41a3-bcd6-2e06188fa453"
        },
        "item": {
          "id": "a7e0c1fa-0a34-4d4f-8408-fb0cfa0d15ae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42e89c2e-3283-4986-a340-648c9088b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a5f5b0-efb8-4d8f-b3a9-f7e58c86e541",
        "cursor": {
          "ref": "2f7195d0-95bf-4cb9-b619-5d75a4f197af",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "86d60309-b0d0-4b46-9f90-74485a228749"
        },
        "item": {
          "id": "75a5f5b0-efb8-4d8f-b3a9-f7e58c86e541",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f0fcb842-24ca-4297-9cae-654766bc22c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa1bb85-0051-4b7b-954f-3989df496713",
        "cursor": {
          "ref": "23e22309-7d92-4edc-b63c-d7d94ee89c19",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8bf23003-128f-4a6a-acfb-cf473b84e8e3"
        },
        "item": {
          "id": "2aa1bb85-0051-4b7b-954f-3989df496713",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "05010e9f-27ee-468e-abc0-1d521a4504ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484e381-753f-4f48-9947-91cdcd1603d5",
        "cursor": {
          "ref": "6ffee4c7-8cd9-4358-af15-b053443b6d03",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f6ca5c6-7169-4fd8-b598-a4d3324e86bc"
        },
        "item": {
          "id": "2484e381-753f-4f48-9947-91cdcd1603d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc67b9f0-a64f-4afb-b9b6-bc7d4f88a3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e744ca3e-d21b-4b91-ad4e-5b607277840e",
        "cursor": {
          "ref": "3fade828-c27e-464e-a3d1-c57871422c3e",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "be3135ea-f825-4aa5-801b-94c1fee9e257"
        },
        "item": {
          "id": "e744ca3e-d21b-4b91-ad4e-5b607277840e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8771cf03-1fca-4e69-a794-c94370e4d1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6bfbc3-ea11-4e5e-9bf7-148acf4d962a",
        "cursor": {
          "ref": "7b6ab685-a990-424c-97d7-3036428e48f1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c845df1c-36a4-49b2-b0b8-6a90d2901bdc"
        },
        "item": {
          "id": "ff6bfbc3-ea11-4e5e-9bf7-148acf4d962a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e950f0a5-3824-4a4a-bdbe-10e1f2498721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9590df07-d8c0-4981-9c11-4784a1eb92f7",
        "cursor": {
          "ref": "774de538-c236-49e6-b734-3731c5ba2e99",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3046d539-b5a6-4e0a-9c09-55d9ccc5c33e"
        },
        "item": {
          "id": "9590df07-d8c0-4981-9c11-4784a1eb92f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0b288e23-4268-4fcc-b3f2-bb67367f2200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab201565-fd6c-4977-8e7f-b684796ca763",
        "cursor": {
          "ref": "f67dd956-c99a-4136-9de5-7890c18c67d3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "65feeec1-571c-4f48-8f30-9b8531dc9429"
        },
        "item": {
          "id": "ab201565-fd6c-4977-8e7f-b684796ca763",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b47e6a9-5284-4e86-afc7-a9b0b84cf25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933266a7-8c98-4ebc-b73e-7c2d63669e82",
        "cursor": {
          "ref": "5705b299-35d9-4de6-8c32-9600b55b2b62",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4d2a263c-77ef-49a2-8a13-2f115532d309"
        },
        "item": {
          "id": "933266a7-8c98-4ebc-b73e-7c2d63669e82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a58375e-6bf1-46c2-8f14-cabaff13d49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f03a89-c900-427f-a6eb-58386a57919d",
        "cursor": {
          "ref": "52ed9af2-df9d-4e22-85ff-f315d53272c8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c2d9e9fc-a464-494d-9425-2028357d6035"
        },
        "item": {
          "id": "c7f03a89-c900-427f-a6eb-58386a57919d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aac6d84b-29eb-4626-8879-fd36f345832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a256e36-603e-486a-8b2d-ea9df66325c4",
        "cursor": {
          "ref": "b79d93c0-460b-48cf-bb23-4f15ec1a40b2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34e467f3-6614-4952-b676-f1d4298c5b9f"
        },
        "item": {
          "id": "3a256e36-603e-486a-8b2d-ea9df66325c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53483fa8-965d-45e0-9d32-d29574cfc46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce03ecc-f23e-42d6-aa3e-e62eec10e25c",
        "cursor": {
          "ref": "71c87db9-5e86-44b5-96c3-7e0c9448aa37",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "80b5c1d1-4fd5-40c8-b8bb-aa3a1a2fbe4c"
        },
        "item": {
          "id": "4ce03ecc-f23e-42d6-aa3e-e62eec10e25c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "735feee4-b6da-4125-9249-f5a98427bb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5a5716-8193-4762-9070-76e840666bbd",
        "cursor": {
          "ref": "bcf7cd7c-ccf6-4654-8e00-34855e02aae0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "840fb0de-b221-4b65-9847-585d2a7ffc3c"
        },
        "item": {
          "id": "8c5a5716-8193-4762-9070-76e840666bbd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b0e03b5a-8e12-4d9e-b439-46f4a30115eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e368cc-a4bf-4400-a10a-df6ba9bcc511",
        "cursor": {
          "ref": "ce8318fc-2aed-4da0-8a2d-0393fc1c8adf",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e1b0bc60-ae40-4e1b-8908-3bdb2e757395"
        },
        "item": {
          "id": "34e368cc-a4bf-4400-a10a-df6ba9bcc511",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f57c2c39-efdb-417e-8ff6-74e10fc91ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e24ca6-a2a0-437b-899a-9b550e44ff37",
        "cursor": {
          "ref": "8f78d4ce-2c80-4667-a968-4f5ee65ede7b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d7df1baf-722c-44e5-b4fa-04e0ac410948"
        },
        "item": {
          "id": "32e24ca6-a2a0-437b-899a-9b550e44ff37",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6eae7cfd-48e8-411b-bdf8-9188bce1bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cb7629-14af-470b-a32b-1c0224a1d975",
        "cursor": {
          "ref": "6ea00e4f-917d-454e-a22b-1c2e8e9826ab",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "16f8240f-e4a8-4033-94ad-dc64b7163d3f"
        },
        "item": {
          "id": "20cb7629-14af-470b-a32b-1c0224a1d975",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ca75936-ab62-42c7-9f8e-2328ab75d8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25051a2-ff7f-479e-9043-1699d6c4604a",
        "cursor": {
          "ref": "276313f9-ff38-4b3b-99a1-574112bad080",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e7528d41-0aed-45e3-8584-c134ad26df0b"
        },
        "item": {
          "id": "b25051a2-ff7f-479e-9043-1699d6c4604a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72b4ca6c-818a-4405-8d30-18cddd9a7f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10919279-ad43-4e56-b135-1a5c6a3e95c9",
        "cursor": {
          "ref": "f5aee30a-47a0-48cf-ae01-3428c4be3283",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81971fef-4fc9-4c0d-b3e9-8f00974f4b01"
        },
        "item": {
          "id": "10919279-ad43-4e56-b135-1a5c6a3e95c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e91b2dd7-e7e3-41a2-9e1d-697b34b48d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba6dd1-c496-4baa-b821-1d9b6ffcbe74",
        "cursor": {
          "ref": "2f159548-7290-41bf-9073-ba2e1af49a8c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "48f69abf-7bc1-4726-bf4b-2644bae6a46a"
        },
        "item": {
          "id": "08ba6dd1-c496-4baa-b821-1d9b6ffcbe74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76b6f1b0-f2d9-42f4-a3e5-7d17f8f4278e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf30b4e-56b0-4bae-8af7-7e5c3310b0f5",
        "cursor": {
          "ref": "26e4dbc9-ffc7-492f-984d-6067983b4356",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "86e746fc-1c9a-4e08-a999-7740d7cced7e"
        },
        "item": {
          "id": "ddf30b4e-56b0-4bae-8af7-7e5c3310b0f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "116b67cf-3fe2-4edc-bf30-19a2934a4efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b60b07-f9ab-4ed4-aca3-2eb5351cb73e",
        "cursor": {
          "ref": "71fa3a82-c55a-4bf3-9b20-5f78a0dc9857",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2c502ab5-114e-4ed4-9581-521337a80f16"
        },
        "item": {
          "id": "e1b60b07-f9ab-4ed4-aca3-2eb5351cb73e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "32e5081d-db77-4fa6-9017-fa8cc228efd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc80b020-6224-42a8-9c4e-1953dcff66b1",
        "cursor": {
          "ref": "a3ba45d5-4717-4325-9247-7c8ec27cfcc2",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b695f418-2874-4486-923f-4cf757a2b0b1"
        },
        "item": {
          "id": "dc80b020-6224-42a8-9c4e-1953dcff66b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "04310a32-bbe8-4423-a617-e4ca0807d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e41b9-9e16-46ef-b8ed-5a7cc80037be",
        "cursor": {
          "ref": "88cac4ec-6295-4f62-8cdd-1e5fadf7505e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60cdcfd4-4b94-41b8-bb7c-95f916462db6"
        },
        "item": {
          "id": "bd2e41b9-9e16-46ef-b8ed-5a7cc80037be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b31bfa88-711b-4486-a8e5-d0a81ea35b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e537640-bda0-4385-8b1d-ab32e3e68bf7",
        "cursor": {
          "ref": "8ef9f661-afe2-4fed-9417-254e6c334392",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cad5f478-8f47-4204-af6a-b1b256cf1b82"
        },
        "item": {
          "id": "1e537640-bda0-4385-8b1d-ab32e3e68bf7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c61946e-0a7f-4d20-8605-7dfc7417477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fb3779-3b90-47cd-9d43-94959ee3d004",
        "cursor": {
          "ref": "603b4859-33fe-4772-85d3-895472231b72",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0cae9495-0765-4fad-8172-ed348fe3e0f3"
        },
        "item": {
          "id": "d9fb3779-3b90-47cd-9d43-94959ee3d004",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "406716f2-f807-499e-b94e-7aedaef5c61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e010b51-8263-4110-ab6e-61321c97867b",
        "cursor": {
          "ref": "f18ef0ee-ee4d-48d8-ba42-4524298472c6",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c81c0b2-9c04-4654-a1d2-20302fcff101"
        },
        "item": {
          "id": "5e010b51-8263-4110-ab6e-61321c97867b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "efca3b44-5edf-413a-834a-5e8d3935239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24848b5-bf0e-4c2f-9c23-d07e8d081df3",
        "cursor": {
          "ref": "cbfd5541-3964-4eb1-80c5-1f8884bea27d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17aee84d-403b-44b0-b43d-18fe2ef5ac81"
        },
        "item": {
          "id": "b24848b5-bf0e-4c2f-9c23-d07e8d081df3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e266751c-0bcb-428d-9f68-37df0c9181e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc8fbce-3a51-4c9f-995e-708c8ee30cb6",
        "cursor": {
          "ref": "bb8ea752-7a0f-45f5-8b41-a8124a435603",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42ec3d0b-5384-43e4-95ea-5d7df321baa5"
        },
        "item": {
          "id": "5dc8fbce-3a51-4c9f-995e-708c8ee30cb6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a8ab305a-31ae-4b6e-9c12-3fbc09a5441e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 734,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7461c11f-bb9b-4c39-b81d-b3bc95694890",
        "cursor": {
          "ref": "24d2511b-9a46-449e-804b-3df38367ebd4",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dad64316-2f48-4ec8-adce-0ce4653e0233"
        },
        "item": {
          "id": "7461c11f-bb9b-4c39-b81d-b3bc95694890",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c5a02f0-649a-40b0-a650-67669949956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7461c11f-bb9b-4c39-b81d-b3bc95694890",
        "cursor": {
          "ref": "24d2511b-9a46-449e-804b-3df38367ebd4",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dad64316-2f48-4ec8-adce-0ce4653e0233"
        },
        "item": {
          "id": "7461c11f-bb9b-4c39-b81d-b3bc95694890",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c5a02f0-649a-40b0-a650-67669949956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb28df0-795a-4b6e-a0d8-6489ec9139a0",
        "cursor": {
          "ref": "8a3c0ed5-daf8-4df5-879b-3cf5d8c460d9",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0f51a78-e913-47df-9dc4-3cf2030ac0e9"
        },
        "item": {
          "id": "abb28df0-795a-4b6e-a0d8-6489ec9139a0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1cd7bac5-20f9-4218-a5a3-6ec81c2bcf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3a0187-d5db-4eb4-bd76-9e8a2e63f6db",
        "cursor": {
          "ref": "7d7fc807-cf89-4d8c-a86a-c38a5a0396fe",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dff2b48a-3c4e-4465-8164-69e9e78d7d63"
        },
        "item": {
          "id": "2d3a0187-d5db-4eb4-bd76-9e8a2e63f6db",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "425edf2b-dc56-46f9-a509-612c1e445445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b383b47-cd2c-4625-9642-b0b328dcd255",
        "cursor": {
          "ref": "51a93c00-b174-46f8-9b0d-2c6350ef7881",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9150fd51-a916-4471-bc64-4484938d20b4"
        },
        "item": {
          "id": "3b383b47-cd2c-4625-9642-b0b328dcd255",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "43ab59ee-5ab5-4c58-bd81-67673b119c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379de9d8-0d33-4db0-8fc1-96dcbf719ec5",
        "cursor": {
          "ref": "facfc1d3-efd8-400a-8acd-bb1cba4d5a42",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba6597dd-203b-493d-8cc5-e72fba23a393"
        },
        "item": {
          "id": "379de9d8-0d33-4db0-8fc1-96dcbf719ec5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f21fa1b-0f1d-4270-8d7e-37329c915a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8259ecc-5f24-4818-8fac-9e1f399ada72",
        "cursor": {
          "ref": "02b5bf34-51d8-4923-9c14-4c2b03431438",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0aec99bb-6891-427d-ad24-cd31d106e9a0"
        },
        "item": {
          "id": "e8259ecc-5f24-4818-8fac-9e1f399ada72",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2de1d4f0-c40c-483d-bc5b-0fe264abd047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bda1f6f-37e4-466f-81a7-c05313c0f2fe",
        "cursor": {
          "ref": "cbbbda79-ee89-400f-89cd-a4ef04ee45ad",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce8b02cf-39d6-4a88-9fe2-3389e14ccff5"
        },
        "item": {
          "id": "3bda1f6f-37e4-466f-81a7-c05313c0f2fe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9163a691-5cd0-4ab8-a301-f9e125530a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad00b8-1e2a-46ab-ade3-fdc38bcb6f99",
        "cursor": {
          "ref": "18d0ce63-0c3d-4bbb-822e-b22c1eb391f9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b1f1d3e1-f85a-445a-9d87-7d2008f5b8b5"
        },
        "item": {
          "id": "c3ad00b8-1e2a-46ab-ade3-fdc38bcb6f99",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "50003d4b-2224-4fee-9fa8-c69486227bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c88dd4-329a-4b67-bda9-6b68aec19ae2",
        "cursor": {
          "ref": "a132769c-0179-4d37-bb17-c76480c55102",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "28b5520d-5c2c-482e-8cf2-7916e8705ee9"
        },
        "item": {
          "id": "d2c88dd4-329a-4b67-bda9-6b68aec19ae2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7fab5aab-5057-4596-be8b-496668028490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0dccb7-81a5-4b3b-a48c-55d91a8be321",
        "cursor": {
          "ref": "bed1b3a0-30e0-4532-af43-59b934db5f53",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "47434a45-8f34-461b-90af-b82829041f70"
        },
        "item": {
          "id": "2c0dccb7-81a5-4b3b-a48c-55d91a8be321",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "50ab83ec-2076-4938-a9b5-faf7a64d326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54806908-28aa-4ee1-99d3-45dc5630757a",
        "cursor": {
          "ref": "c3009831-aa47-4d06-83d4-f3752378d886",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5ec6327d-d790-40d6-aa7b-ec331f709e98"
        },
        "item": {
          "id": "54806908-28aa-4ee1-99d3-45dc5630757a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0f64d16a-34d8-445f-89ea-a00df74fc7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f246eb-b03b-4a80-9788-03f11109fd49",
        "cursor": {
          "ref": "7c463341-d156-4bcb-8ce3-f888b0cde267",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6577f935-fedb-44e3-b0b1-410054a608ed"
        },
        "item": {
          "id": "71f246eb-b03b-4a80-9788-03f11109fd49",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c8f507dd-4323-4613-aac8-0a8a9c0e44ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37791ffe-7558-49b6-80b3-feabfa356437",
        "cursor": {
          "ref": "b2d53064-693f-4440-9c46-e07574c4d86a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7748e987-4377-4b63-83b5-9708f00af443"
        },
        "item": {
          "id": "37791ffe-7558-49b6-80b3-feabfa356437",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8da67971-aa27-4c80-a37f-84d641694e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06490f4b-2212-4513-ba29-e7974fd9c1d1",
        "cursor": {
          "ref": "14275971-78da-4f79-8483-44161a629630",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7c65fbfb-95f0-4db7-9dc3-ce61eca5cbcf"
        },
        "item": {
          "id": "06490f4b-2212-4513-ba29-e7974fd9c1d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e4ee56fa-de09-462b-a79a-9d0817a3487b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445b2868-ca65-40c7-a53a-68bbbab7458d",
        "cursor": {
          "ref": "231cf1c4-6f45-4462-806c-7e7abcb3050f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65d0ecd3-ac02-44e1-96df-4074044d3795"
        },
        "item": {
          "id": "445b2868-ca65-40c7-a53a-68bbbab7458d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "214fe98d-a2d1-4f4e-8acd-5ad046adc1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64d6e42-03b1-4b24-b6d0-ab729ff36e77",
        "cursor": {
          "ref": "52515e34-1199-462f-8199-22e6b955b25a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "07a01f8c-ce3a-4a9e-9dd1-421a3127f67c"
        },
        "item": {
          "id": "a64d6e42-03b1-4b24-b6d0-ab729ff36e77",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c00b99b-c3aa-491e-8b73-8b8feb766bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95ec05f-2654-4686-b1c7-5cd6cec1cae0",
        "cursor": {
          "ref": "b4f44749-7d7f-4bc0-ab87-96c1e9690cad",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4dd33c98-10e7-4df6-9d34-e1b0f72e8b4a"
        },
        "item": {
          "id": "a95ec05f-2654-4686-b1c7-5cd6cec1cae0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9efcba1d-8f55-415b-b597-463a75d1d63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbc56a-43d9-4380-8301-af8e36471e37",
        "cursor": {
          "ref": "be3399df-f00c-41e0-86cd-616cf182d4e7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cc28f4f5-fb82-4c74-9584-923bfe713ee0"
        },
        "item": {
          "id": "ffbbc56a-43d9-4380-8301-af8e36471e37",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6f82db1e-8152-4e9e-8caf-4db7f76ea3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff2b922-e7ee-495c-a8d7-ded2b9c3fab0",
        "cursor": {
          "ref": "564dd17f-d763-45bb-90ad-f7e19af740ac",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e99f7266-ca82-4915-bf03-068e4b4f5241"
        },
        "item": {
          "id": "aff2b922-e7ee-495c-a8d7-ded2b9c3fab0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ef84257-a435-4c32-879d-0138d8d35c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b73e4c-9bcc-442d-81ba-7633f2c27bab",
        "cursor": {
          "ref": "72b81f8a-9cf2-443c-b344-6391d80ad3e1",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b884f7a8-0fe4-453c-9b3e-65596a3286cd"
        },
        "item": {
          "id": "e4b73e4c-9bcc-442d-81ba-7633f2c27bab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3392f51f-738a-4974-9023-ad6415ec0224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67212b23-b9e7-417f-85b5-f8ef81269beb",
        "cursor": {
          "ref": "02b855bc-0c7c-458f-a03a-73e76cdb5317",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aaff2970-caf7-4589-bd54-3cf1e43d4b03"
        },
        "item": {
          "id": "67212b23-b9e7-417f-85b5-f8ef81269beb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "70bfda75-200c-4071-9a85-bc8ddc8d1f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f14f14-9c25-4a53-b5f4-35360c73bff6",
        "cursor": {
          "ref": "73a59456-0760-4161-96bd-d7980437a919",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6f3987ba-d1eb-4858-b15c-13188bc5996a"
        },
        "item": {
          "id": "d6f14f14-9c25-4a53-b5f4-35360c73bff6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "07e208e7-3499-4c91-a518-caa5cf3e5201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbb4582-5ba4-4a32-92ee-2b6451d309fe",
        "cursor": {
          "ref": "c1acced0-88a4-48e7-b3bc-15c10ed96e77",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1e9031a3-3b79-46c7-82bc-23dd69c80b28"
        },
        "item": {
          "id": "cdbb4582-5ba4-4a32-92ee-2b6451d309fe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3620c8ab-5253-4efd-ba60-a71641b3117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e63bff-2b45-4cde-81f2-cd545fef6b02",
        "cursor": {
          "ref": "3b997f04-186c-412e-8d2d-8547534520c2",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e11f2c93-ac06-48de-9ba8-f3664191d3a5"
        },
        "item": {
          "id": "e3e63bff-2b45-4cde-81f2-cd545fef6b02",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4326e75-35a4-47aa-a8eb-582b20ccdd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98556aa7-99e0-432e-b098-05138fde35d7",
        "cursor": {
          "ref": "e2902b08-54a9-4369-beae-f36dacbb5d4a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "93bd693c-1243-4b73-beba-5b45662f892f"
        },
        "item": {
          "id": "98556aa7-99e0-432e-b098-05138fde35d7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "01a46486-cf2b-48e0-87ad-61f6139cf7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64b22ab-fe45-4326-bc83-189f05221f26",
        "cursor": {
          "ref": "1b5c54f7-3be0-43ff-a146-54260d3cd57a",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "af4e633f-3744-42b5-b76d-84d118d3e2b8"
        },
        "item": {
          "id": "a64b22ab-fe45-4326-bc83-189f05221f26",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a2fa9c30-26ad-4d98-9463-d4dea4714368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5c847a-3790-4b16-828e-94ec7c7383ad",
        "cursor": {
          "ref": "ee5a29f5-dd8d-4cba-90b2-ad4f70007097",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "97573b05-caff-460c-b74d-01770d1cc500"
        },
        "item": {
          "id": "9f5c847a-3790-4b16-828e-94ec7c7383ad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dda4fcb3-1b75-45ff-902e-b117036de87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec41fc66-f721-4f2f-b25d-94f76fbbe5dd",
        "cursor": {
          "ref": "7bb3ad3c-c6cc-45f5-a8e4-11dd69eca557",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d230c0e5-bed1-4889-8e99-02c7564a5dc0"
        },
        "item": {
          "id": "ec41fc66-f721-4f2f-b25d-94f76fbbe5dd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e59ebcc0-86a0-405a-81c5-19fd9a1a82c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca63576-c2cc-4b75-ae7a-832a0471bcd0",
        "cursor": {
          "ref": "9e6d3bbb-778d-4131-ae92-d4e543e39793",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f8a0bc0c-1407-49ba-8fe9-cf6a5d6a382b"
        },
        "item": {
          "id": "8ca63576-c2cc-4b75-ae7a-832a0471bcd0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0f8fbc93-af32-4bc9-ad63-40f4f519523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bf80e1-7d0d-4cae-aca6-f964193fabfa",
        "cursor": {
          "ref": "b571332a-587b-4d9d-973a-c173a89a691b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62bb6771-66b9-4623-8369-2478948cddc1"
        },
        "item": {
          "id": "e6bf80e1-7d0d-4cae-aca6-f964193fabfa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "22ecfea2-e60d-48cf-bc60-7567c3ab1fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84aa466-a66e-4c6a-a130-d27ffe239475",
        "cursor": {
          "ref": "f8ee97ed-9280-41a7-ad60-88623c828c28",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a956ee92-05da-472b-aa50-4252f2cb54d2"
        },
        "item": {
          "id": "d84aa466-a66e-4c6a-a130-d27ffe239475",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c4f06d3f-7bcf-4ab5-b69f-f9a8f4e4508f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73638196-6a78-4748-9087-0ba48d2fdc8a",
        "cursor": {
          "ref": "f5676033-d906-4ea7-9219-867e6dc408e1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7933ec51-8975-49ad-889c-ae2ede5644c1"
        },
        "item": {
          "id": "73638196-6a78-4748-9087-0ba48d2fdc8a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2244b60-390e-43ee-b817-0ece9f5f47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5f01af-661e-4c7d-9426-7301c8d1d0dc",
        "cursor": {
          "ref": "338b68da-34f5-4f46-8101-f23094f78535",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "80631f8d-daa9-4956-b9b4-baa6811780ac"
        },
        "item": {
          "id": "2b5f01af-661e-4c7d-9426-7301c8d1d0dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "810fa1a7-f998-4640-9e4e-9c3b58c83eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2377d81-1d6e-4de0-8598-2f56bb0f338f",
        "cursor": {
          "ref": "10c44d21-7629-44d8-8868-7295fdf24b15",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8ac2b34f-9de3-4045-8783-5d6ed6ebbd29"
        },
        "item": {
          "id": "b2377d81-1d6e-4de0-8598-2f56bb0f338f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "97535091-44db-4b36-aa80-b6bb5ca0e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11129951-e613-4909-a6e8-3988edb87b69",
        "cursor": {
          "ref": "316c8098-b581-4b0d-9700-07da9532853b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1d6059a2-30dd-404c-971e-d4b7cb455fb0"
        },
        "item": {
          "id": "11129951-e613-4909-a6e8-3988edb87b69",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ad1d8c05-6f4c-4af1-bc21-2b48ebc34791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21176850-2532-4aec-9d4e-57b9f8392324",
        "cursor": {
          "ref": "3fb08da7-e7e8-4929-943b-d4bfbe060ccb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "39a5dd7e-3352-4045-9eb0-ccf613ec0b34"
        },
        "item": {
          "id": "21176850-2532-4aec-9d4e-57b9f8392324",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "889f78f3-3d14-4a23-af44-15b9195f5a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e718e0-86d2-4566-8c14-05e281e0db3d",
        "cursor": {
          "ref": "2a56ded7-e382-4e07-8375-2d6d4a0bb3c0",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dff00ace-1795-4663-8669-656bc2d0f48d"
        },
        "item": {
          "id": "44e718e0-86d2-4566-8c14-05e281e0db3d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d0dbe758-5a84-4d40-8f21-2ec16b292f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71b38ba-620f-49fd-bfe9-4cd55c6d9f83",
        "cursor": {
          "ref": "0ebf7658-2c9b-4f08-b849-46d07753e5c9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d6a706e2-4d3d-46e3-8098-a6ccc2466efa"
        },
        "item": {
          "id": "a71b38ba-620f-49fd-bfe9-4cd55c6d9f83",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e554188b-8bbd-4535-b671-28fcfd1fff27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8583dfd-0c33-4d72-bf95-17ac88407537",
        "cursor": {
          "ref": "e67950b6-90c5-49f6-84ba-cf86787d44b9",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6f2791a-b66b-47a1-b611-195bd9e157d7"
        },
        "item": {
          "id": "f8583dfd-0c33-4d72-bf95-17ac88407537",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d1add53-57e7-44ec-b020-68baeb50fa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17678ace-31ad-440f-aae7-308f1bd3f390",
        "cursor": {
          "ref": "c72707ae-cd03-4a01-b1dc-c0b8cddfb2ed",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "920e0cb6-8c96-4ca9-a5ed-69eedf88eb6e"
        },
        "item": {
          "id": "17678ace-31ad-440f-aae7-308f1bd3f390",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3846896d-f41c-475a-9328-d6e868491b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68991dc-3f29-4ef0-a3c8-d7ba4d4b8560",
        "cursor": {
          "ref": "06d0efee-dce3-4a3d-a53a-02f8bf43b212",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "65ce7c09-5320-40ba-942c-c651156faa5f"
        },
        "item": {
          "id": "e68991dc-3f29-4ef0-a3c8-d7ba4d4b8560",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "426d96e8-b4a3-43e3-8064-828683b387b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f3180c-30a8-4c88-b4e6-0d252718d987",
        "cursor": {
          "ref": "42367a1c-f83b-428b-85a3-6178acadd44b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "df553c19-4fb7-44ca-afc8-e0b4d46b77b7"
        },
        "item": {
          "id": "03f3180c-30a8-4c88-b4e6-0d252718d987",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2f15ace5-7588-4eca-9e7d-19f1273385bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10e32d-413b-4d46-9685-2d6d29ea81df",
        "cursor": {
          "ref": "230290e6-6d21-41a6-a7d4-275b1c8a29b7",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a638f290-5b29-4e25-b144-aed68ce23bcf"
        },
        "item": {
          "id": "9e10e32d-413b-4d46-9685-2d6d29ea81df",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1ee6049b-730b-4ad3-92b5-82621be88f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3627c2a6-0f42-44ec-94f0-4f15a8805013",
        "cursor": {
          "ref": "25e491a0-a9bc-47d4-97e7-74387e618da6",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4079628c-5fbc-461c-b0d0-5a8496cf9a51"
        },
        "item": {
          "id": "3627c2a6-0f42-44ec-94f0-4f15a8805013",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7dfedfb0-0f18-42c7-8103-2cb7e57fcd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591d5d8-b9d5-4619-8b9c-69f7f4cd5635",
        "cursor": {
          "ref": "85109899-7343-4650-a48f-b080348ce944",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2458ee1f-047c-4398-baf5-81f41c0506e7"
        },
        "item": {
          "id": "0591d5d8-b9d5-4619-8b9c-69f7f4cd5635",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "17cba230-f13e-449a-8f1a-f5011255e802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cae96c-8290-47f0-97e0-47188e0f6da2",
        "cursor": {
          "ref": "bd53ea2c-b62c-45c0-be55-3e5d2b0d0484",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e10c79b0-f493-4815-9b9b-647063a501c9"
        },
        "item": {
          "id": "38cae96c-8290-47f0-97e0-47188e0f6da2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d36948ea-dabd-408e-bdec-2bcf7deeab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17db43e-80dc-4140-814b-4b6bdd6763c3",
        "cursor": {
          "ref": "11a41602-f1ce-47e6-bb42-f6e442e23ec7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f679cc37-ee2c-4420-b522-eb98b11957a8"
        },
        "item": {
          "id": "f17db43e-80dc-4140-814b-4b6bdd6763c3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6a8eb302-3519-48b1-9e95-b03881b83ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bca03df-b979-42d0-bfaa-9a52c4e35410",
        "cursor": {
          "ref": "0aef409e-0d6a-4bc9-affd-fab839f60a1a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73b4865a-363a-4502-8073-5fcbc38994be"
        },
        "item": {
          "id": "3bca03df-b979-42d0-bfaa-9a52c4e35410",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8b37fdfb-35dd-4e12-86cf-a97271fc27c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39071330-30a8-47aa-8955-ec3024485d6d",
        "cursor": {
          "ref": "11df6f07-f0f7-4e62-911e-a9b7854a1868",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ff0bc500-d509-4c15-a64f-82cabc43588d"
        },
        "item": {
          "id": "39071330-30a8-47aa-8955-ec3024485d6d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1237df7d-ca30-44d3-930a-d5c9d7326d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eed6e8-cb5a-45f0-8a40-62a16cab9b78",
        "cursor": {
          "ref": "c4e96824-50ac-4cbb-b2dc-3956b42c0c3b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3a633e52-403e-40a8-82e1-da3265ae7ea8"
        },
        "item": {
          "id": "f5eed6e8-cb5a-45f0-8a40-62a16cab9b78",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "52e527a6-cad9-4bc7-bec8-993b4a11f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4809a5-fc29-4aa1-ab4a-c92ef379b634",
        "cursor": {
          "ref": "b1a70d66-08c7-48eb-8345-a81d8658a63f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "07a10654-b897-47f3-a1c8-ad25f800bb14"
        },
        "item": {
          "id": "7a4809a5-fc29-4aa1-ab4a-c92ef379b634",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0f1e876-66cc-4a78-922f-ace1d0e6523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74924d17-e39f-4978-8498-9fa1a7857700",
        "cursor": {
          "ref": "901bba47-0c41-48e5-bd72-8ccde3d19401",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2a12d874-f9b3-49b9-b7d1-9f710e31dff4"
        },
        "item": {
          "id": "74924d17-e39f-4978-8498-9fa1a7857700",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a2d20836-a1ac-4d0e-bc0b-138449b4d89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f495a022-6705-429f-886a-c0e15da9e2bd",
        "cursor": {
          "ref": "d3514dc5-9f51-4b77-9f7e-c2feb9fa552c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6b42f036-92c9-4fe9-91c8-b5b404427ece"
        },
        "item": {
          "id": "f495a022-6705-429f-886a-c0e15da9e2bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "15e9887e-6050-428c-94f0-b4a598e258e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9785ecf-8431-481b-a436-08f18ed61665",
        "cursor": {
          "ref": "a43e681b-841b-4bb7-bba6-94e1dddf222d",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "720cb032-10e3-4dce-95ea-5c8e6b8d30de"
        },
        "item": {
          "id": "e9785ecf-8431-481b-a436-08f18ed61665",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0b2d4fae-b9f2-4ba7-842c-7ce189619062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cad69ff-b0bc-4ab2-9ad5-21caa47d75cb",
        "cursor": {
          "ref": "1bf794e9-1252-4940-9e38-32084797ec63",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "36bf516e-a5d4-4048-9882-acc4f834800e"
        },
        "item": {
          "id": "6cad69ff-b0bc-4ab2-9ad5-21caa47d75cb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7b8574a1-3515-4986-bd4d-a04d78c7e0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee771e09-c5f5-4a8e-8828-58e7774b44e2",
        "cursor": {
          "ref": "b5d73f65-e230-4558-86f4-7d87ce603d14",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55bfa51c-f8d9-4cb6-b5c3-02a2bbd5a0dd"
        },
        "item": {
          "id": "ee771e09-c5f5-4a8e-8828-58e7774b44e2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3f9d1200-7ef7-4cca-9a3a-95f485e2b78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0f5dd7-2281-4687-880f-d6f0f7a7d929",
        "cursor": {
          "ref": "dfd43271-073a-4cf8-809b-8f5190d3a518",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3cabc590-9a0b-4630-b9ab-9ba37c10369b"
        },
        "item": {
          "id": "5d0f5dd7-2281-4687-880f-d6f0f7a7d929",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c61e591d-e19f-4ae0-85c9-88d5363a36e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb41ae7-f71b-421f-91ef-1bc8d0595e79",
        "cursor": {
          "ref": "c2785532-d615-4380-a0e7-e90f6ee086d6",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "645ac313-9b06-4adb-8e8d-2b06c7d415d8"
        },
        "item": {
          "id": "ffb41ae7-f71b-421f-91ef-1bc8d0595e79",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "379ba740-5012-440d-a668-a39b105c53b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ede9e02-aaa8-4e28-a5be-942e0bfb7a32",
        "cursor": {
          "ref": "1dcf8a86-3585-4816-9bc1-b9e14a692610",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0dee8e27-d2e6-477d-bc01-13b44b1b7278"
        },
        "item": {
          "id": "6ede9e02-aaa8-4e28-a5be-942e0bfb7a32",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4f4d3520-feec-469c-ab0c-5b4f143c72ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b8b6bc-c97c-4094-a1d2-8c286c02c625",
        "cursor": {
          "ref": "c9af0bdc-1dd1-4ba2-a039-6d8e09fca93b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "28e456a8-df92-4782-a335-5d858fced336"
        },
        "item": {
          "id": "30b8b6bc-c97c-4094-a1d2-8c286c02c625",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1ac9d03e-273a-4e54-959b-7e9b7230288f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66329acc-ba7b-4057-9242-ecbfa5115e10",
        "cursor": {
          "ref": "da6497fd-7e7e-4160-b285-b5b12436bad8",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1d9060b3-126b-4bbd-9ccc-e41d8c380ca7"
        },
        "item": {
          "id": "66329acc-ba7b-4057-9242-ecbfa5115e10",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f244a95-c3d5-4d69-8207-0f8810213749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f62905-5116-4be7-9a84-3c50b28a0e1c",
        "cursor": {
          "ref": "345e59c2-9b4d-477e-a229-cb5a00322aae",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c44c6547-c0ad-4d32-94f9-94f9aca7dd71"
        },
        "item": {
          "id": "c6f62905-5116-4be7-9a84-3c50b28a0e1c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8384f5d2-5cd9-43f7-8fbf-9f0150a4a27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0050e-e2d9-4d77-887b-c39e0289bf62",
        "cursor": {
          "ref": "0bef2cc7-e668-4644-afd6-e8dfd0ca0212",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7c52553-0d32-4ff0-badd-22acc1cd3e00"
        },
        "item": {
          "id": "fed0050e-e2d9-4d77-887b-c39e0289bf62",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e1bbef00-8736-4166-8d4a-bb8580c58303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94447137-035a-4205-82a5-52319427d4c4",
        "cursor": {
          "ref": "4fb226d6-50e8-40af-99b5-b637090ede82",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "469da65c-71f2-4236-9098-2cffc4561b34"
        },
        "item": {
          "id": "94447137-035a-4205-82a5-52319427d4c4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "01d62914-489f-4d94-95bf-b1ed62268d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7377fd0c-78a5-4d74-8532-2c38d0e3e34f",
        "cursor": {
          "ref": "c494ce78-ef26-465b-84d8-8b1a819fd4cc",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "13ce2926-e233-41d2-a85f-3f5e559abcda"
        },
        "item": {
          "id": "7377fd0c-78a5-4d74-8532-2c38d0e3e34f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b2366c47-11dd-4a25-87aa-12bea9acac5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739fd758-3ceb-4ad5-8124-02f23bcdbd93",
        "cursor": {
          "ref": "bcb7bfd8-1d53-4cd8-b465-32a005071ddd",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0355c9f2-ab4a-48e8-b0e0-c716a6e14e7a"
        },
        "item": {
          "id": "739fd758-3ceb-4ad5-8124-02f23bcdbd93",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a991447d-2978-41f5-bcbb-f7405c821b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42769def-0a81-4e56-96e7-ea59934ba15c",
        "cursor": {
          "ref": "1e722fb0-b63f-468d-ba2f-3848a8fc00ab",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "620db0e4-1e4c-4e22-a74f-a428806c1e17"
        },
        "item": {
          "id": "42769def-0a81-4e56-96e7-ea59934ba15c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8cac92bb-c24f-42f5-9528-58a20b504847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8af010-6705-46e7-bf5c-14e3662687af",
        "cursor": {
          "ref": "249eeef0-4e01-4ab9-bfed-68c640b9eae9",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6a9c0f00-0b9d-483e-a28f-92761fa9cf2b"
        },
        "item": {
          "id": "2d8af010-6705-46e7-bf5c-14e3662687af",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "125455ad-5cbb-432f-a253-931a0c87f85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71110181-ff82-4fe2-9ec4-dbfeb52f92fe",
        "cursor": {
          "ref": "1368abd9-e2d0-4a82-b008-34519418f206",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "905c1896-c6dd-4c2c-ac22-4e5c8324f686"
        },
        "item": {
          "id": "71110181-ff82-4fe2-9ec4-dbfeb52f92fe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e14e9a74-9c79-47a9-8347-9833c73df936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b6057c-9e93-42f0-b689-d69869ee1fd2",
        "cursor": {
          "ref": "433a2332-05ee-4823-9069-b8f79bcfc780",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6ad13938-b007-4463-b145-cc96af69ff3b"
        },
        "item": {
          "id": "16b6057c-9e93-42f0-b689-d69869ee1fd2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5d38585f-51f5-4369-9f7f-ba4d0b2018e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacebdf6-7636-4057-a0ef-7546512bb62a",
        "cursor": {
          "ref": "c94ba079-b4a0-4c57-bfd4-f392f972eb02",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82b7c665-2e36-4a57-8e7c-058ebd0350e2"
        },
        "item": {
          "id": "dacebdf6-7636-4057-a0ef-7546512bb62a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fc2a39ce-e1f2-4723-856a-fb3e5895d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f46539-177e-41a1-99e1-f7d98b209416",
        "cursor": {
          "ref": "d951e516-078f-40ec-80cb-e479f0968d56",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "504bbfcf-e961-421f-810a-acea1ae11d00"
        },
        "item": {
          "id": "98f46539-177e-41a1-99e1-f7d98b209416",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4c04d4fc-1a40-4d1c-914a-30356dca9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dcb1dd-6981-448d-894d-50eef8fffdd3",
        "cursor": {
          "ref": "437f1eba-2efa-4d70-941d-c05f33c2f703",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c3df0494-3b42-4262-87a6-bdfe04fd78c2"
        },
        "item": {
          "id": "f2dcb1dd-6981-448d-894d-50eef8fffdd3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4625a40d-9b00-474d-94f1-be500a8ed4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36fbaf4-8f60-480a-bc80-1dfd98bc31b7",
        "cursor": {
          "ref": "b2a477b5-a5fa-4318-b4bc-6fd2bbf98b2c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "14f7f232-f54b-4c26-945a-9ee7b766a431"
        },
        "item": {
          "id": "e36fbaf4-8f60-480a-bc80-1dfd98bc31b7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "51ed40a1-aa72-4ca9-bf8d-ea103dadfc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce25452-81ae-4050-97a4-729115d52f0c",
        "cursor": {
          "ref": "06b4d40f-ae68-444a-a6a7-eb486f6e2de0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "65cca78c-2aae-4b23-8e34-73bed83c9fae"
        },
        "item": {
          "id": "2ce25452-81ae-4050-97a4-729115d52f0c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "98c47da2-1f6e-486e-8174-60b05f884c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87142c0e-b882-48b7-867a-10f7c946ec31",
        "cursor": {
          "ref": "17884144-75d0-4360-aea1-c559fd4848bc",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc8a412c-ad0a-4165-b374-9de4021c330e"
        },
        "item": {
          "id": "87142c0e-b882-48b7-867a-10f7c946ec31",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "68a3591d-5416-4801-9389-866753c5f8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac193e7d-3d64-4259-bb6c-2f2fa89c8a69",
        "cursor": {
          "ref": "5c5c79f4-8863-48d5-b165-a8424dcebac4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ac301e6a-a60b-4621-845b-07ba74f6b7d8"
        },
        "item": {
          "id": "ac193e7d-3d64-4259-bb6c-2f2fa89c8a69",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7b041f10-ff38-4a71-8fec-e0e0437b7008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1f89ce-e7fd-4571-b91c-2e42f5737c46",
        "cursor": {
          "ref": "16f9d671-c60e-47a2-8ab0-e1e3b4c1eb8b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5da3a0d0-c712-4541-b36b-85e72e992d0d"
        },
        "item": {
          "id": "1a1f89ce-e7fd-4571-b91c-2e42f5737c46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b88a6b38-a101-4f2c-98de-e601b2b38b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b6024e-439b-4c29-bd9e-0b4351fa92db",
        "cursor": {
          "ref": "b8318b01-44c3-492a-a2f2-9563999340d3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f0fa5a1-07d0-4afa-b61c-90f1d34f8a38"
        },
        "item": {
          "id": "08b6024e-439b-4c29-bd9e-0b4351fa92db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "92bd7ef9-713b-41b7-97a8-ec0767598776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07c76c5-fc73-4e25-920c-49a243a9c68a",
        "cursor": {
          "ref": "b0559309-5b13-4914-9a4e-b75a9f57a14e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5407f99f-6b6c-4e0e-bd29-2d80a92876f7"
        },
        "item": {
          "id": "b07c76c5-fc73-4e25-920c-49a243a9c68a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e738d0cc-6743-4165-91a1-02c9a14a1834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7231a27-6ace-4a82-a8ed-c8cd36bf1f61",
        "cursor": {
          "ref": "dd77673e-c287-4f12-8901-17eb84ae8037",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cd2036f0-593a-498f-adc0-0d6b01eb645c"
        },
        "item": {
          "id": "e7231a27-6ace-4a82-a8ed-c8cd36bf1f61",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "78d9a41c-4f57-4dd3-a347-41499e9084c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3cf2fc-9173-415d-bccf-823348c69a46",
        "cursor": {
          "ref": "b721c546-682f-4298-8d0c-3045d781cc3e",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23332908-1c21-4d56-b6eb-d1cc5860f639"
        },
        "item": {
          "id": "4e3cf2fc-9173-415d-bccf-823348c69a46",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a640a24-9607-4dc1-ba8d-a5f5b24980ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bf4f83-7cbb-4619-ad6b-0fda7f477421",
        "cursor": {
          "ref": "68214b75-382e-46d8-b43c-5945196ae86b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d3030e9c-d908-4f68-ae66-a1ec26411c74"
        },
        "item": {
          "id": "70bf4f83-7cbb-4619-ad6b-0fda7f477421",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1e2ed2df-5e90-41b1-8b4c-4868f3a03524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9612cdc4-f16c-49e8-b774-debe8b4a40ac",
        "cursor": {
          "ref": "e1b6ec42-5954-43bc-ab80-e1fb1fbde8e1",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "99cb9c87-0f21-48f4-84b4-c64a6297f9a5"
        },
        "item": {
          "id": "9612cdc4-f16c-49e8-b774-debe8b4a40ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d748d97e-e180-4207-80c3-9e90ea46fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689d1c3e-4f21-4a91-8fca-fb18d812c559",
        "cursor": {
          "ref": "2a744208-7017-48c1-a315-b6ada633f7e3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2b24a800-50a7-42c4-83e1-a1b659254b5e"
        },
        "item": {
          "id": "689d1c3e-4f21-4a91-8fca-fb18d812c559",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c9d2e2f3-19f5-4964-a61e-0ac876761918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce76883e-64a4-4316-80f4-6e0229d2cb51",
        "cursor": {
          "ref": "c578a1a7-c229-4d8b-aa62-6db0b8e3f006",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "50e711a0-5e80-4043-9b38-afa7f5200918"
        },
        "item": {
          "id": "ce76883e-64a4-4316-80f4-6e0229d2cb51",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f0455d34-7644-4126-8e84-feff07371332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0739574f-65e8-425c-9c30-8d401130b8ee",
        "cursor": {
          "ref": "7672bc57-65f1-4600-8648-bce1a5d588b8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ebb4eefe-72d7-4d2f-a09c-4076306650eb"
        },
        "item": {
          "id": "0739574f-65e8-425c-9c30-8d401130b8ee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "20d12529-f650-4ef7-b6bd-d45627128407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a09f0-e7d6-49e3-abb7-c3f10ae24116",
        "cursor": {
          "ref": "28191054-270b-4648-a69f-3672c5fd12f3",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ed01e5f-7497-4957-a49a-d5d7aa89417b"
        },
        "item": {
          "id": "5a5a09f0-e7d6-49e3-abb7-c3f10ae24116",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2d69994d-a105-4992-9812-05a3a1448184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e346a7-80bf-41ff-be81-9265c60e3162",
        "cursor": {
          "ref": "26e55975-2d5c-4ebf-8bc0-ece47d006a28",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dba224ee-b8a2-4aeb-a29f-f545f29a5af8"
        },
        "item": {
          "id": "63e346a7-80bf-41ff-be81-9265c60e3162",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c31b680e-2128-487d-a298-69bb3b700987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3303834b-41d3-4229-b878-1ccfc5d6f264",
        "cursor": {
          "ref": "d3465a8f-4acd-405a-be1b-a66555da26cf",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1411c192-ce9c-4a65-8cb5-30f18677f70b"
        },
        "item": {
          "id": "3303834b-41d3-4229-b878-1ccfc5d6f264",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a1874402-1a53-4182-8586-37c29d4f9d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cb3bac-3195-4639-8763-fcd039e9f01e",
        "cursor": {
          "ref": "21d70ac7-85f4-4954-a94f-94acac3ed424",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0541362d-5d42-4f63-aadd-9ec74701ac78"
        },
        "item": {
          "id": "28cb3bac-3195-4639-8763-fcd039e9f01e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "923c04d3-b32c-4b4d-941e-3c49be3d97fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9300ff9-82b5-495a-8ac0-55c09fff812b",
        "cursor": {
          "ref": "7a1e9a61-f127-49e6-b1d6-1aad8c16ee7e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "64e7d3f4-71aa-4c77-b880-8b3f22186c7f"
        },
        "item": {
          "id": "f9300ff9-82b5-495a-8ac0-55c09fff812b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d9f21c25-ac24-4ccf-b1cb-cc3e4157df8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760226ed-6d55-4163-879d-ba71cd522cec",
        "cursor": {
          "ref": "9ff72c4d-a700-4c2b-a91d-0ab52875472d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d437e693-2a43-4b54-9e2d-4e8a03f49e51"
        },
        "item": {
          "id": "760226ed-6d55-4163-879d-ba71cd522cec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1c19dd86-a455-4430-9028-ce25374fc12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2370efd-36ef-4cc1-a966-2b0bc5a07248",
        "cursor": {
          "ref": "06b9e91a-917c-4cb0-88a2-faac2994fb9e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d0e50bc-e48d-4b41-8cd3-1f4f86e02396"
        },
        "item": {
          "id": "b2370efd-36ef-4cc1-a966-2b0bc5a07248",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "61f070c8-917e-4606-a8e0-17c5acca9fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea77103-e3c0-41c2-8b53-b7eea873ea7b",
        "cursor": {
          "ref": "15b84f64-15b5-4c86-adcc-1d3290034bb3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cd77b4f9-468f-486b-87b6-d52f9ea85e55"
        },
        "item": {
          "id": "fea77103-e3c0-41c2-8b53-b7eea873ea7b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ab42b189-1270-4e46-8414-ccbff70d4765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e70637-ed9d-4c87-a976-dffb0e9b475f",
        "cursor": {
          "ref": "44144880-f733-4454-9f3b-387f2a9c5516",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d51d45bd-4db2-44f4-b1d8-9ca09e338ce4"
        },
        "item": {
          "id": "c1e70637-ed9d-4c87-a976-dffb0e9b475f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b3ec9401-bfd6-4e63-ad85-6a94c1c642f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b110872-87ee-4769-b0b9-17ad75ebceb3",
        "cursor": {
          "ref": "294599fb-d4a0-4557-8d4f-1791c5814203",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a36a910a-cb7b-4fae-988d-0dba3c615c63"
        },
        "item": {
          "id": "8b110872-87ee-4769-b0b9-17ad75ebceb3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "17e37bb9-27a2-493c-927a-fb963d21a24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e4f3a-6b74-4c8f-81c7-265b9ecea959",
        "cursor": {
          "ref": "027ee18b-83b1-48f9-832b-59dc5a1af850",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a733f2d7-54c7-47e9-bc9e-e52097aa904d"
        },
        "item": {
          "id": "196e4f3a-6b74-4c8f-81c7-265b9ecea959",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "18d0c93c-1dfe-49db-85a4-e40789ea3912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d16653d-8d62-4ca1-98a2-de3f74d4a7d0",
        "cursor": {
          "ref": "e13cab80-2957-4412-8d3b-2bce07517c99",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "afd05ace-8290-451d-ba2a-08ada7687088"
        },
        "item": {
          "id": "8d16653d-8d62-4ca1-98a2-de3f74d4a7d0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4c0c3c11-c60c-4aa1-a4bf-7277014d99d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f3c01e-1e63-4d86-a4f5-adc0b0ce1125",
        "cursor": {
          "ref": "0c0c25fe-1f66-440d-9d95-42806501f8f6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "087ae478-3151-4381-86d6-1c709691574c"
        },
        "item": {
          "id": "60f3c01e-1e63-4d86-a4f5-adc0b0ce1125",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "926d3e51-ccde-4931-a854-27ded6ec0189",
          "status": "OK",
          "code": 200,
          "responseTime": 596,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "286cb9d2-4b77-4992-bc24-c0e2c7ae0cbc",
        "cursor": {
          "ref": "5b8b146b-1447-4829-8961-f3de7f043b7f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "58a8f6f9-441f-466a-b535-d54575e8d3e0"
        },
        "item": {
          "id": "286cb9d2-4b77-4992-bc24-c0e2c7ae0cbc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c80d2790-e14f-428d-a485-2b0d5aff57f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1720,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9172d5c5-f677-4b45-883b-e9e9d23ae2dc",
        "cursor": {
          "ref": "ffc0c004-0748-4d91-8fe3-18c8c9b740e1",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3b4012e3-a07e-49ab-96b1-08dc491bc6ef"
        },
        "item": {
          "id": "9172d5c5-f677-4b45-883b-e9e9d23ae2dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3dae74e7-5279-45ec-a9b7-ce2b338339fe",
          "status": "OK",
          "code": 200,
          "responseTime": 1417,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
        "cursor": {
          "ref": "dca033f9-78e6-417b-a7c0-4ae6ef941c0b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "11b2b9eb-dba5-454d-8ff4-dbebb210e6c0"
        },
        "item": {
          "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "441c49a1-bb61-4abb-8470-e70623c2bc41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
        "cursor": {
          "ref": "dca033f9-78e6-417b-a7c0-4ae6ef941c0b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "11b2b9eb-dba5-454d-8ff4-dbebb210e6c0"
        },
        "item": {
          "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "441c49a1-bb61-4abb-8470-e70623c2bc41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
        "cursor": {
          "ref": "dca033f9-78e6-417b-a7c0-4ae6ef941c0b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "11b2b9eb-dba5-454d-8ff4-dbebb210e6c0"
        },
        "item": {
          "id": "d99c0db4-7221-47a6-8c8f-79023d250645",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "441c49a1-bb61-4abb-8470-e70623c2bc41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b759242-a555-4bcb-a99b-8c48d2d80b5a",
        "cursor": {
          "ref": "f362ec6b-cb8d-46c8-a279-1278ee92fa51",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7f095196-a799-45df-bc4b-01632a35b612"
        },
        "item": {
          "id": "2b759242-a555-4bcb-a99b-8c48d2d80b5a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "712e783b-2531-4d9e-af3b-871e5c1fb83c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8118e1-414f-4c65-aa7b-3e055fe926f9",
        "cursor": {
          "ref": "27029408-a2a9-4d04-8fcc-9ce204a118ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc1dc403-77fe-4bce-afcd-512f13511245"
        },
        "item": {
          "id": "0f8118e1-414f-4c65-aa7b-3e055fe926f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "06cd4587-44df-475e-b315-2b18f012de74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8118e1-414f-4c65-aa7b-3e055fe926f9",
        "cursor": {
          "ref": "27029408-a2a9-4d04-8fcc-9ce204a118ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc1dc403-77fe-4bce-afcd-512f13511245"
        },
        "item": {
          "id": "0f8118e1-414f-4c65-aa7b-3e055fe926f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "06cd4587-44df-475e-b315-2b18f012de74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9510a3-ab18-4ee0-960c-b1e910c474b8",
        "cursor": {
          "ref": "ff478d20-7754-4db2-93b4-d42281bfe277",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f121f949-035f-46b3-b741-e34a3d447ed2"
        },
        "item": {
          "id": "3c9510a3-ab18-4ee0-960c-b1e910c474b8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d99773fa-f6f2-49be-bd57-ca616825bee7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 713,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711fcd2f-2341-4e23-abb9-50f48d480892",
        "cursor": {
          "ref": "4a1b6346-e2ed-40bd-82f9-270db0b85c2a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ef9324a-df0b-4ca1-8c7e-c6b607550d17"
        },
        "item": {
          "id": "711fcd2f-2341-4e23-abb9-50f48d480892",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0cc4ce0-234d-4156-a170-dbbee0786bb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711fcd2f-2341-4e23-abb9-50f48d480892",
        "cursor": {
          "ref": "4a1b6346-e2ed-40bd-82f9-270db0b85c2a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ef9324a-df0b-4ca1-8c7e-c6b607550d17"
        },
        "item": {
          "id": "711fcd2f-2341-4e23-abb9-50f48d480892",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0cc4ce0-234d-4156-a170-dbbee0786bb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3fa7dc-54ce-493b-9a61-c7b27c0fedd6",
        "cursor": {
          "ref": "05c2b07a-277b-4d82-bae0-047481c4db7c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0aa14d79-a40a-4ae2-af46-d5e93e1dd725"
        },
        "item": {
          "id": "ef3fa7dc-54ce-493b-9a61-c7b27c0fedd6",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1812d271-cccd-4afe-89bd-c12c96b57bff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 689,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}