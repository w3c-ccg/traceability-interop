{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b1c89854-4e3e-43fa-80b2-d362cb760365",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cd897555-44cb-4e63-baa0-87db4b897f14",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d448ae6d-ccd4-40b8-929e-db2f9d0d09e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27426e42-7f93-47bd-a228-eeab7b5c6051"
                }
              }
            ]
          },
          {
            "id": "2a593f54-c57a-417e-8ba8-89b22f646232",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f03be5b-6a9d-4619-933e-20d12cf5fc4c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "97f6fd9e-8259-4ba0-a3d0-f2916c2ba504"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a91daf50-a86b-40ae-a78e-a8d3e0d499e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0e1f3247-d5f3-473e-8718-623a17df0f69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2261b0c6-40ab-42a7-b32d-183aa79fcb19",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cff8a57-0700-42bb-a988-e83d388b2852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "015c546a-cb89-4780-9489-ef761b3ca823"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92367bdf-b3b7-4f61-9c21-04ecb85051ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "555881c3-a796-4701-93ce-6e526e2e0738"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13ff794f-0007-4738-837e-147e642ffa1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd77167d-d9b8-4111-9136-c73d70e986bc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dfae55e-cdc3-447e-9f2f-fe93ff01679b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ff2eb72b-6eef-49c1-8fcf-e732655da824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "266e6124-ed9a-44ad-a1e6-c5c6bbb4ec00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d58b967-2115-408b-968b-18f6cb3c7bcc"
            }
          }
        ]
      },
      {
        "id": "194a8c34-3c6d-48fa-b225-4393dea92cc5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4f067ee9-26a3-4731-816b-4e735ee1e090",
            "name": "Negative Testing",
            "item": [
              {
                "id": "028595e5-37c3-4f7f-b455-644c69103687",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "849ac6c4-c5c9-462d-8321-248da4592a4a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e045ca9-47fc-46b2-b793-60b63d8e133d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22af1706-bd98-4f4d-b99a-677b51176aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399d2fcd-ffa2-4f56-869d-5c1fbe10107f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e936a7a-9bdf-4c4b-8652-2ec26b210d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ba74888-987b-4ecf-8b1c-06788d81d266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65a7a92-5bfa-45ce-9c8d-08e08c894762",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee79348-139e-4a2f-bcdb-7e3f22b3492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8479623-8a09-454d-aa4c-3aba240f3cf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "acaacd34-091e-4236-a627-192d60b2383b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1d5c5e9-d6b9-4e0f-bcd9-ff623282f898",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c72a1-6762-4bec-9a0d-7afebbb95659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "425d3e8a-b287-4a03-86b8-47325377d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4df874-a07f-40fd-9e14-119480601b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dc7b69-8311-4dd0-b721-91b95910571b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "13142026-4cee-4ef3-9171-1f6f8e46f07a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ce034dd-910b-41c3-985e-96a7f0471892",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c4f0fa-197f-460e-b148-8585e6df0330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a1d45589-dc40-472e-8396-1952933c2dd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "129b6efe-0ab8-4524-a6d5-83ca4d56282f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "57a35bcd-9fd9-480d-bd8d-0c5b17e17b75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "895c7a7c-6e8b-4817-a314-32c407bb9bb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00d58903-2f80-4a77-b32a-10cd29ef455f"
            }
          }
        ]
      },
      {
        "id": "7da9512c-10aa-4c4f-b03d-619c83abe362",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6238b372-ad8f-4c9b-89c1-06a9e3a4af63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "906aa0fc-2235-4e6e-8250-f4588c287769",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d75f1803-0560-41ee-aa13-116cc37dd614",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a1f090-afd9-43fe-a49e-acb394d5eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c7c52d-bb12-48b3-9fa5-251514ab9e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0963df7-0a95-4900-b8f3-cd58ff531dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4f3f37-eff3-4d1d-b7a4-97bf40909355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d010108-520d-4b41-98cd-66146395166d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebede06-21ce-49bb-8ab9-a417e880dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64878901-3124-4fb7-bf77-b6371f7c7fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddb68e4-3ef1-4050-bec4-56f26be4edaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb4e76d-7fc4-4239-b543-33f5d833fc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c5a21-5a2f-454a-9222-ec1e8db2016f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeccfeb5-ee83-4bbb-bcaa-b8c3786f2771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb006f6-96f2-495a-bff7-4bde237ae31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d15f36a-1b54-40f2-be10-55897e80bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82722c4a-44ba-4a4d-b777-9ac2ffb3c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbccabdf-b64b-416f-9b69-ffbbacc7a24f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7226f484-7135-48bb-9096-99f0d559ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460a4c79-46aa-472f-98c0-eb20a84805be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884dda4f-93c3-4370-b9a5-be5d27495887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4598a4-8ca2-46b8-9090-aed3da0103e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc23e382-7558-460a-a0e5-4a5c35362a27",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf3015-6873-45f5-b84b-934390d6ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28507c0-3fac-4fe1-92ea-754163a3653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0512934c-aa8d-46ca-8fc1-41174e5baa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151d83c3-fd6d-4608-99c9-a316ebae5dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a25b14-e47e-4a11-9989-b8f9b953ccfb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad348e42-1629-4f51-b6f8-b38702e2f591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12bded9-6e74-4e49-8f3f-434567f82021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac97ff0-d863-4d50-bb45-1c17d0bf1f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbf2e881-9e5a-4cd0-850e-d2434c44af8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc44b30-5d2c-48a9-98df-e520004aea2e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6e941f-d78f-4d90-99ef-22dc2ae54db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0f602b-cde2-4b05-90a3-43d67e1e4c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c251d051-20c1-42da-9d6b-02cfca572ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21373f36-6d43-4717-8748-dd73fb24b716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c1e100-321d-4836-8ce7-3950a822ed0b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce93405-c0f1-476b-826f-f3e1545dd130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f3ef17-5480-440a-bd2d-ac17bfdd0e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4287af33-7f2b-46b1-a99d-45312c7146ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a839915a-f7cc-4a03-b689-596f6485360d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c9a42a-ff8f-4c27-a3e7-be0a2040e184",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6c6d9-ce16-4dfb-bdc0-bf0b99cbf6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146df5c1-9a55-48a1-a2c8-42f88b0bef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0d633a-32c6-4f65-b6bd-d7634368b91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2cd3b2-1caf-4242-b221-60844fb8cd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6321dda2-ac19-4981-a1dc-b948bc683351",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a17bed6-d424-4aff-835f-8686d9077af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e9eb76-85b4-4394-897f-29905dfc04ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4927c290-2aaa-47fb-b079-4a33b848edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53d56587-7e5b-4cb2-80ec-8bb1121ee05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c921f-0c3a-4cd8-b34c-b99e4447c075",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8309b60-d88f-412a-811a-e1394ae3fb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe38d85-ac4b-4611-b7c7-5e4b98e20441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581cfa89-36d1-44e4-90ef-cd65a225ed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9aa6fd-fbad-4f3b-80a0-fc4faac42bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc9f10-4993-4dc3-a6b7-c16e62fea08a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cbde96-1514-4a66-9a63-92b7f6734c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1c3303-a066-4239-b9a1-399758cf4ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af53f8dc-3692-4b96-8de7-dc8720237b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39004d7e-eb2b-4939-b47a-ead49f7b8109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c2020e-5dab-42aa-b781-2ef8a4443ac3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b274d1e-9e80-4082-975f-0b996c0a2804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5b9025-4e6f-4373-a219-59390b952a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb0d71-0bc5-46b9-b1fd-4a582ff4044a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d84b7353-f25e-4901-ad28-5680ff47bc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236fcf93-c4d4-4197-8e78-2c788104f7fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b793d517-4be3-4fab-a0e5-0ae63030adb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2027ec0-95c0-4203-8cd0-3e4239c130ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7268be00-1b05-4a43-913c-9dcebe167f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "920df7f9-fb42-4bd6-ad55-d19c1eb86edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b211b-ce16-4859-a2a4-432b0ca233d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9f069b-cf53-49ce-95bc-70d772a53a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65369aef-b04b-4fe2-9ac1-80789af5760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0752ff8-3ef4-49c5-af01-85954ac1328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c9a3c95-3918-4231-88ef-1b453a7fe5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35385a5-2711-43f7-b333-51f640185edb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e2730-cba7-432e-af6d-380686ab2b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a318550-8083-4f74-b01e-a6e289d9a3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0ba064-ff20-4c41-bb23-6c156e656500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c83055-444a-41da-a8f7-f2b44c808040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc819aad-7969-47b9-944e-608ce63ec5a0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea164d91-7b6c-48b7-a24b-068673b6f827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bc7e3a-24be-4e33-86aa-df169c674945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f21440-a2f6-4cb2-b4b6-c8c1ae8d0a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e067bb59-f784-4339-bacd-b4f202e76c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce83a46-c947-4fa7-b086-02d81e4277b3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ea52f2-9697-4786-b4a0-72ab5b1055e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15442680-8198-444b-bdfb-839a39962ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de8c260-fbba-4b5f-918a-622bae6a6044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5121b2b9-c2c1-4f73-88ae-614367cde089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031de54c-b930-4ea2-84b8-44db335d2fcb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee56153-4fbf-48ca-816d-31e744076124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00ba8d0-d36f-4544-9811-84e3e302983b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dba364-02f2-4bcd-a2ef-5240b2775dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf4ecde-8964-40b8-9ed9-8ef477ea3cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ee52bb-e557-4c00-9ddd-438ef8029fd5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccec712-f875-4dbe-861e-bef17cf581f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993ed2cc-9f12-422f-b471-fb7d0dd631e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3c685-e769-4282-a1d8-0fe043a9b51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc615037-abd2-4fd2-be2b-85058bcb9df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb661029-e138-4e46-a6a0-5a52e21b28db",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439c7a07-8154-4f1f-8fdd-31f28a9bed14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e83a98-023f-4e02-b811-f97d1435fe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c19d82-f600-45e5-8802-78c212d5c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3913e8-bf33-4aa3-a6b1-73ecd2dff031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394906e5-3d20-4949-aa6e-70acd3405dd6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db64bebd-9853-4f97-a871-6aa95e8f21b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d84d32-0f62-45dd-90a6-dc4995d5eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a535b4-8087-49be-b2ae-c0ae1490db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eda4a971-4212-4d4b-a044-7ba0e8a3b48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072457eb-ec5f-4060-8922-3cdd34214971",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2024e045-2103-496d-8165-0a50ef6dc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ed1fc4-acc3-4d30-8774-6b696e9cf999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76a22e9-5faa-47fa-a495-3515405b2541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8be96fb6-9f62-4138-8a2e-b28a0f495878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d5aea6-59b5-4e4b-864a-70f93f04ce67",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676e94ed-1bb4-494a-acfc-8be4781d33c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f8a375-0966-45ca-a1b4-8cb3609f9499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde62cc4-a0b0-4636-8c1a-5b7911dcd9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "473f6204-816e-4674-9273-c3e958092f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecea4644-89ec-4639-b76d-6aac94ee0077",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5ec454-9ae5-4400-aca1-2dea19b7abaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61e1273-95c2-4151-a5f1-cbfb82c35df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8782f12-e973-4443-9c20-1754f446bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3872ae93-5654-4246-8ab5-a66c74c825a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326e1bea-93a5-4b27-a068-b4c8242ca0d0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3382bce4-3dc2-443e-8f32-811bd3bf5cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7022ac-d69f-4dda-ac3d-cc48a8742ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd51cc24-58e8-4469-9900-9b9c45d9222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3489d30-dea1-46f9-8235-22f0c160b924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd476d5-3b04-4a2e-b722-1808333b068d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7257378d-0605-449a-9c99-6ec746b68232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fad718-ee5b-438d-a8df-46f327d49b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8fa9cb-2406-4e83-a3ca-9115073c37ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da45ee08-8b50-45dd-9988-857991877b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29000dc-c1be-4a97-8bc8-ca09623a0e66",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c520b4-324f-4b36-95b0-bec5d9bc8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e679cd3-9e90-423f-b683-5494bdaa7991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6298b77-81a3-4a4e-8c7e-cb5b17f60045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "049c3360-3c41-4e72-86a2-6c0666377b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2722064-5150-4394-9e96-97f0c25280c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b017b9-2f96-457f-8620-0fa93f515681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b139785b-2ef7-473a-8e31-2b3a6b152d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da45253-c46b-4f14-8613-32e0fa7c407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b248e1-f4aa-46e4-adca-1c740e67b489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478426c-9ec4-4f94-82ca-e28e1dd96906",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1e53bb-25c7-4505-af45-9d06634437bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a50348-1e93-4428-8aee-153b9cf4979e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4c5c67-d7c2-4359-9db0-e6cee201efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d59390d-2405-4db3-9453-8eced2e3b437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5762dd-798e-4638-88fc-36147e4b3b53",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe718916-12e6-4657-95ef-efb9aceccaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c991733-b31d-4bf6-bc96-c92c08cf04ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e158c3-27c6-4c57-9695-098c4601d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a58aa79-62f7-4e85-815a-514d48445b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda3589f-aca1-48c5-89e3-eaffdbbeede6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd54027-cbd6-4712-bea0-729de10ccc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea0609a-cf68-4f51-895f-98011f550173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff523586-dee1-40ff-9193-bf5114c8f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9b3b97-2134-4780-beab-c9a71fb04dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7562bf64-0a58-45c2-aef9-43b7f9f51143",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3dc4bb-07bd-4335-bf00-a275e543e741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda7b1b8-7769-4c43-a54c-1c4c2e4ecfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778f9c45-e1d9-40de-9262-dcb67e12424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc7da6a-65fb-4ba5-beca-2c0168cb2476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87334daa-1b4f-4b21-b612-08e6f907c8a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e018e2-b961-4d5f-94c9-d4e3ba0d0ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c65446-3699-460a-aca7-12183813314e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd20b54e-77a4-4e47-b8b8-87bb7dfe8851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6f1ade-0d78-4361-ba65-2c6e44b35c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6985b5-2537-45aa-be6f-029f57ce7e72",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7d870f-a419-414a-a538-5df2b864ec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ef3f45-91f7-49b4-809c-c3e3ecc6e0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e6458-2478-4112-8761-141c1c3faf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fb44942d-7a0f-49eb-afa9-71a86b1227c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7e83f8-1e22-4924-a764-9dafaa7de792",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51a930d-dc91-41c8-9fff-4c01537fa46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a96e739f-ee12-4193-a615-ec830b9f72b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1514d3-eb72-498e-a152-0a7e8c225426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3045acb8-908b-49f2-a2a2-bbd96b694d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fcbaa3-7ca5-4152-80ba-74b77f0eeaa2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b549ec-5312-458b-96c3-5d58ed0b445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f337409-c79b-4a1d-aca8-64543283e2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4077ece9-e62d-4e09-99cc-2a035940f934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6068a40-7798-48c2-a7bf-da237a3900a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb90b416-305f-4e81-abb1-456777ca5b4a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c30cf60-258a-4bed-83e9-45a0ccc195e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3b0802-33ab-4d36-b353-c4e97ccae386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a082df1-7378-49bf-be2c-1efca3144205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e95fcc-5ff2-4616-9834-daebfb94cd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f332073-e445-4eda-9899-730d8ba4299e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deea74f4-21df-4b14-854d-6979d68fdb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288b44f6-cafe-4706-9635-2bb7e373fab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf638a-9b69-4f51-85ef-c806f8b6d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b817f89-77ac-4000-9bb4-f9283e2add5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385460f1-c5bb-409e-8f5d-bdd7ac1c892a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2ebffa-b018-428d-9b52-598fc06b024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21064ea-4b9c-4bf5-b819-83e8925d96f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51df032-93e2-43d0-910c-87619d5cf166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6022eb5-af40-42de-8a06-ccd7cf48c605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9af5c-1dd2-4633-a36c-0b0c7f3ff6fe",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae3edfa-97ca-4f12-9b3c-35aed7c88f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60059124-3806-4cb4-a012-5eb5f9436d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21b98b1-d953-4dff-a670-8b2c67a3e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c633a054-446a-44cf-b1a4-abd24e1da9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016be7d4-58a9-49b2-96f9-94d5f21f3aba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c36202-9a6e-43d9-851d-7667634dbaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e8d5ec-656c-4c65-a623-5315f945d8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ce9479-3bf9-46ea-81ea-1c4705dced65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "561f14d2-58bb-4e80-92ed-56c6452f7f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef1692f-6715-44bf-862c-c617c1b65932",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9353cdd0-a16b-4d47-9416-b3693361db1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9581197a-6d44-4a7d-821e-a54081c83705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198b8585-1ea1-4b65-82de-a3cb09692ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "686296b8-5a17-46fd-90a3-9930b35b7f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a8fbaf-fb01-43bc-8eaf-fb50263e7724",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b19b507-76c2-445f-9d84-20c734698c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c8e298-e4f5-4698-bcb1-aeb01306e645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55f100e-bc01-4536-b6ec-fa8fc8984d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cca88f-6e77-4fa0-9839-5bca0f52df10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126bba63-fa2d-4619-a13b-ac7dd696cb96",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667a438-3297-4822-8a48-0fe812106ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d588e58a-1e15-488a-ba10-bd9d16079abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0211ecd8-196a-471f-9789-ebd869ddeaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "300f7b71-0a28-451a-8737-852abfdb450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6655c6-2a3d-4e0e-871a-665956d9248d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568e2f59-0631-4b8b-b1b1-5bcd15b5a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443be1c2-714e-45d2-8c48-cf5e32f29484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef96332-c6e8-44bb-b7c3-752c3cb716f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb94aa9-f4a7-4d65-9e59-f447a4387bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de25cc4a-7187-4755-8572-1efdcbf9cf2c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96653226-90b2-42a1-be69-d36dcb4ff4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c10ad8-53f7-414d-8fa6-dae3fc51a20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007a03ca-2679-4b6a-8d0b-b03098239264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccec685e-f608-4357-a2d3-ffd6ef91c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8e7401-b7de-4f3a-823a-aeaf9dfa59c7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee82de-2982-4749-b6e6-05851aac0836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2978922-a67f-4c4e-964b-911ac0ad9089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000813d3-c011-435e-acf6-4691bb61215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "272b7ebf-59ae-4cc0-b9d6-ea5a9247c82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1079cdb3-08d1-45e8-8a6f-92763137178e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b05a89-0a8f-42c2-88bd-46e470dea60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e25a63-b426-4192-9e32-c56fff59fa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488fc5f8-9e19-4f85-bbd4-26cc63550ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6fae7-b4b2-4210-82d8-bd093e36ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2dd8fa-2126-4e47-a12e-7bece6bddab1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9896337f-f866-46a7-942f-124bd3ae4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f579093a-0290-4127-90fe-75e9543babad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3c16a6-c28a-4cb5-a693-d87d59e5b885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c165bff3-768f-40bc-9c36-2d903307d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233f3ca0-f148-4034-a18b-5ce87529eeab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9f369c-ab14-4c14-a34f-d727e41e726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8df1a7b-de94-4176-b670-ba73c447caa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f120855b-0b4e-47cc-9bb1-7023876172ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81df32e-a918-4d1a-a223-7ebed7bbf87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3469d3b0-47fa-4744-95a3-212c499af34e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de93179-c887-4fc2-8385-526abe5fbc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1642f4f3-d089-4210-98c1-de4a21d47ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca467d0-9df4-4756-abe0-667ff684e97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "effbc894-ce2e-4efa-93bf-e3a1c1a38f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d14160-4676-4ab4-88ac-52e3d3b2204e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e72573b-7d23-4843-a4fd-ede2e166c9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9edb46-a5e9-4982-bfa8-01ccbfc64399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bab895-e557-413c-85ae-29e346f010bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e5d268-2bd2-4d3b-b8f6-632024526c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa17be5-6ef9-4495-8da6-3a746fb3401d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab319baa-a74c-408c-bb71-89e8848838e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82747463-201a-4388-977c-7f7a400e0c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1864f28a-a5f5-4bc1-9447-5c6112dcdc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e5263e-b0e7-43e3-bb2c-74dd6b10c59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e19014-f507-4f13-aa12-61467ed1bee7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e92c9c-69b9-4b8c-b397-b33a22ae3f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8433b89-a8f8-4bdb-9dda-3dfbbaf0035a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1e7d13-5ddf-426a-903e-22123f7d3c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa84bce-8f02-4ed6-84d2-172a6a5f4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f266b9-3f36-43ec-86a5-07a402ef8ec9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489c92c2-7c93-4f3c-a3e2-939613a4d41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e03f47-dca0-46c5-82e4-683847fe993d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae2d952-b679-45e5-b559-435e5c734687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd5fa63-ac04-4ad6-9e0c-3f886582e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a48ecc-9341-477c-8b2a-71921a4dc2b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648d940c-ea59-440a-bbf5-c0921f0a4f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af967c0f-cd70-4c22-a435-391c6a911adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ff3d0d-2bea-4dc2-a460-89a05ab270c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8604678c-6cf1-4f03-88a4-f08849b9fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a7c3db-601b-4492-bc6c-369977c3f435",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841cc418-c788-4423-af53-8c04e337348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51635f64-2b27-4d46-9998-70559206d45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270edab6-0ca9-48b0-9180-c331662bfd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "351e2e15-7d73-4ce7-9948-fcf51ae87c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e748ec-deaf-4ae2-93d8-3dbd5c2f741e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d423ae4-723e-43bb-921b-8c9b1d29e612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83a0711-66f4-40b8-8f79-a1d5ddc77929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55b67db-652a-4aa5-9569-6f239531ec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a534c571-c2c2-47da-abcb-4910ab81b557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925efa98-583a-42ef-a297-eada2745ffea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95adcb1-abd0-4ea0-86b5-63240e608e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ee9a36-638a-4812-a28a-8d7295303655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68931d4-72c4-41c7-80f8-03ad155cc429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f27f456-97bb-4e01-8446-c390884e11e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88590be-db31-46ab-99f6-90f622505b63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825fec9-aa1c-41a3-b4b8-ab6aa5ba7642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13887d7-c815-4ed4-a072-d4bb71864f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b657b37-81f9-4c07-9d6d-1936a0d6a9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f554a74f-fef1-452d-b97d-b2f59d2e5c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150c9976-9e3a-429d-bcfd-7ce1aa771224",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed10e1c-7f09-407f-9a91-da6e963afe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b22803-6040-4eed-8915-ef151db218ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc718e7-c0ef-4897-9813-d8ccdf78ff74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5c9d74-a096-4fec-8c7a-4f307c65241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9c655e-3957-47f9-ac73-18748937347a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31121b7b-1992-4989-9c1b-b103b4e76029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6035de9-bc3d-4df7-b1b0-f477c2a8a332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ca280e-8459-4c22-82c8-db64e68db501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3432a21-6eb4-4bed-97ea-54bb078a69b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c365658-d0b6-4820-8b00-baf842ead0b6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991bef22-6c12-4513-80d3-22d1300462f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2682fa14-bfa3-45de-99f5-b3b1692a50e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e93c8be-f235-4caf-b582-c14169b32164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6efdcac-a508-4332-9353-ccdc1404f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2750cf9-503f-42dd-a3b1-523dcdbdf9fc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb06d6a-7b3f-4391-a482-fc704e51ede7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c49528-6214-421c-9258-f33942a7f5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7fecca-1a9e-4720-8015-186f4158aca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9974dff2-ea4c-422b-b1b7-a52e5b3595c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003ec38e-4e14-47fc-9eaa-63a976e74f70",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e084682-45e1-4f56-89b9-8f0165277377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d73e83-0023-4578-97d5-c4733e7524d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d68b1a-b4ed-4896-82d5-106588075f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e45f2a0-672e-43bb-b295-608ded5af786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb0c21d-c3b1-4c04-972a-bb134be95241",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65158b3e-f443-485d-8189-7dab8f3ebe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3b8c08-3160-4bb5-8f61-9a2ef8f78b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04176b59-a3cb-4c4a-9884-16353c39939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a071e9f2-cb1a-4746-9e23-bfd4046cdb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438d6447-68a9-409e-b82a-186e3f15b5f3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03957942-7855-4bfb-8553-505fb8875cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fd49a8-665b-48e3-9aa7-e292fd4d0d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74441c2-856c-40ba-9347-77cfea21ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b93ab1-645c-4fce-a47f-597391e8d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c584d227-4631-4d48-a0b8-741ce3202816",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a403dabc-db2b-44db-ba2e-14d10fc75b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56c6e3d-6701-44c8-bdb8-5388bb63ebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc85a912-51bf-4a41-ba18-affef207cade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d08ba5-2b98-4981-be69-65734b718307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc323e25-f53c-447b-b24d-fe7b2a8488a1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b9c8a1-2f8d-4892-9bd7-20e1314aa376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee683462-5b2b-4177-83a3-bba1270772c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b800da9-6f4c-4555-a788-a9fc834a6801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ec2eb4-a89b-4735-9943-ec999510dd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3480e3bd-9b1b-4fe8-9036-0b48646773ae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5635590-2b94-4305-a1f9-83b257c9701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee948b-a8a1-4462-8695-2c340a08fdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c1e0e3-3b54-499f-aaf8-1a1e915d88cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ffd94b-45be-4d91-8155-36a4e003ef7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee076660-f4a7-4e58-a249-34852abfc43b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c8c74-85b1-411f-83f6-5e5dafe58ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61519fe-89a0-40ac-ae58-e78604186a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a4be64-fc5d-45e3-8c5b-62a44dfd4637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13cea5f-f105-478c-874e-319d86d61d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9560505e-3dd4-4444-addc-e476ef37cfb5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef761d5a-e011-4298-bebf-47601c8f8bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c361370-faef-41a7-95db-73fca3200dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d614dfba-1750-4c63-a658-bef226045e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a7b7d-2d9b-4adc-8c2b-9cc03ea7bb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c0e26-e8c0-4623-9d87-e8c74a31c484",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f454f9-f2ac-4244-91c2-112fbaba6b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da54ba1-2dd1-4bc9-a23a-c6ec1bbdf108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97156456-c2ef-4ae9-b9c2-c1bb3018cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b427d379-e4d0-4afd-97d3-d28f3b730421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8222bb7a-2158-4864-807b-9a774b13070e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3515affa-2a05-4808-935d-102cf98353a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69dd031-198a-469a-a9ce-7ed55da6a205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5483d-0894-468a-9827-169652ba2c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4e70d9-6f69-4ae2-b3c1-5a6526c5b7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3046dec-9cbb-46d9-862f-a10b7b388e5b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd70b1b9-bae0-4c0d-b223-02e896d15ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ebc81b-adda-4a96-b0df-8cb430dc44ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba19a7d-7e68-4056-a47c-cdd47b6b51ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78b701d-3ee8-498e-892f-29227ffbebf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2c6b7b-d012-47fd-aae2-18717010e359",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972e2437-fa24-40a1-a856-74e40660b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6bc893-9a32-4841-b31a-8ef490853cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d6935a-c0d0-4543-b6a0-e66f96c7f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d859314-6bbf-40ab-b014-b74033d8bb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd4a788-d88b-49df-bd16-11d8b2b0ac16",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3da54-9ffe-4c46-a09c-0f2ebaa81685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaef35f7-0095-4191-8035-17cfbb946651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d24384-aaa7-4a18-a921-658f63444462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7b4ac7-6dc7-44ca-8e90-40a417f7f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7422eb7a-8dec-4906-9c4f-a97f6cac2e44",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919af983-d071-4179-b27a-3b4459173b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b832f716-52f0-4e0f-a692-68ae7b62e57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3a2091-0d25-4413-a0bb-ad4aa2504154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dafa9867-517f-4dc0-926e-bb4f96c19661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcd7703-ae7d-4f62-83d4-61304c42097b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b578e03-c90f-4247-96d6-c1c851016b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415b0803-f40c-40e1-82b6-3474d93c3708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aef634f-4519-42a7-a349-ab820e12c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28f6004d-d20d-4467-acf1-fa8cc9e578bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f69f71-249a-4d3e-8636-270149a364ff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f0000a-293e-40de-8a33-f9606651dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2b9830-dd47-4599-91c6-28d3c424d93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2887552-7f4f-4882-a83d-52a9de34dd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "976cb278-d43a-4222-bd8b-441e468f0658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969f7064-18d5-48a5-8e80-3bbcd4b67a82",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85f663-2f62-484b-8eee-8f56703eca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a84152-8c11-40fc-a3e8-c17dcafe990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d216a5-37bf-4ed0-8fc9-c903119a71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dec05b4-19bb-42b6-98ae-a467d9bd7176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531d2fae-298e-44bb-986f-dd8e6e58cfdc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5220115-f2fa-4b1e-9b37-a0e52c00506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098bb5ab-1db9-48ae-9461-406fcc9feab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b40fa3-2b8f-40fa-8f93-cf23f20bcb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad8702c-4c6b-4b1d-a756-34357b5ca3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b9a6b-264c-4a29-9a85-7ac2bfd0d674",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99dfb87-4e75-449e-b952-700178be78d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12f858f-7900-4963-895c-bd9075365485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054cecd-542e-42e6-81d6-dd04e235c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aeb183e-21af-4c43-95b1-b932a97f9c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b78e8e-5913-4130-9386-45930ad42e9d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f050b4-d598-43ef-9a37-fd3f09fd2d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c6fa6a-0a20-4a0c-938a-b042836b3134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a863436-2408-4152-92e8-d3a5c7e8f9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0405b0c-386b-49bc-90ab-fa50d689f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c1ae77-5001-48ce-ad21-1de3cc4b391f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95105c9-5542-4a46-94cc-263490bcef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca13c8d-9e19-411f-9484-2a53b142695a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c551b9-b8e0-4ff6-b035-a1014c2854d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad85e2-f10f-49b8-84a3-3179bcae5cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1833f60d-bd56-494d-8a98-317b7263c907",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001b32e-448a-4b20-9ca5-e31fdc55a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f578966d-5465-45ab-ace7-f9fbd6aef2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7bc452-59c7-422c-92e1-fca788f26d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1855ec7-7bb0-4e23-8a20-67629845cee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5ac203-8b6c-4c3d-97da-0f8e6cd07fee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f4e05f-a7f7-414b-8d0c-a22b4958921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30071e2c-1087-4da4-aeea-c3a3c71d4701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f7da29-790c-4242-bc72-2fe17102f5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b958622d-8575-4659-b30a-4680580581ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6e3de4-2b42-4943-b454-5211dc64c493",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaca7ae-0e89-4856-88e6-ec69bceec417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de63d49-a720-4482-ac41-10cc135233e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e5210-4140-494d-947a-8186de16e9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b935f17-c9c6-4136-8825-93d4f1d91d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f1137-0fb9-43f4-914e-ed98cc49ab57",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e971b21-40f1-4992-affb-24d39ba528c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a46c02-70bf-43d7-a441-2b98c74bbf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aa0925-7cba-47e5-aa62-18a0137c0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a222be0e-efc2-4c0a-92eb-e0a930021667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54f94bb-0a9c-4e88-92d2-31fc5d1cd7a1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0418f0a-83c9-4755-aa99-5331514a9309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23648276-4e96-40e8-b42d-7f5ab8a1fbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee4ce6-546e-413a-925f-617daa591f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcded40-7cfe-4ac3-b859-40bf0c3b922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e67f87e-e10c-4b88-b8e5-7da3ddfc40a9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31692f44-c0d0-445d-bfd7-0bb1ca98ce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d31332c1-d8ad-4cb5-8d9b-c69936ab35c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65e8e73-2135-4115-bbef-982f191c0268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "504f6a49-3634-4a7d-8f17-1821cec3992d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "398c650b-90ff-49a4-8f18-44520de90af7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d4aaaf1-8d75-43bc-ae76-3cf0b47173d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a097b1-e11f-41c0-8788-5ec89b316273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b5ef78-50df-45ef-8480-5ef6383330df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e494426-5adf-4a84-969b-3ba60dfaaa98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2856d53f-7611-4f69-8597-2f7ab8899b35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ac6afb6-58c4-4eb6-b748-c267ee589e55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90b3ae5a-c726-4459-bbf3-27f7251b4077"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "867a6ffe-d6d7-4dc7-a7a0-32e7db752d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3daf258-818f-4468-84e3-682ba336ac6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1318c3b-bf18-4fa8-a596-5ecfab3eec83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "196735e3-f324-4e1c-9eb0-361e80f63e82"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8be4b6af-df2d-41fa-b758-fc38d373c505",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb8cf099-f490-4f88-b9f4-6f691c3207c8"
                }
              }
            ]
          },
          {
            "id": "dfc7ba89-2f45-448d-9b31-42c1acd7b1cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab5bf83e-5ce3-43e8-b084-9cffade2204e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ea9c633-75ba-46b8-8972-4f671c179121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0addc85-e8a0-44e4-a828-401cfce02070"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "340dafa8-930e-4c54-9980-5b1b23c4fdd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f537c15-3e3f-4c5e-a278-79f0ddf7bd68"
                    }
                  }
                ]
              },
              {
                "id": "2b510c92-c213-4528-9832-dfd9e5b22474",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2edfd967-d23d-49cb-9097-43e4a95682ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1dbf012-2790-4d19-858c-bdf252db97ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "814ed01a-bf48-42f3-8ed4-9df53c00f79b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df203056-8c45-4a8c-8869-adbc7a1817ca"
                    }
                  }
                ]
              },
              {
                "id": "33bef838-24e9-4d72-9e4d-7a7a231b45eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1938f1a-ec13-477e-83a0-ab282326e50e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1318b599-e565-49b5-9039-29bab9b24d63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caf8ae85-58fe-4fc9-94b0-060cb3b8e9d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f6c567a-da07-4eb5-a5c4-d4f021b392e6"
                    }
                  }
                ]
              },
              {
                "id": "7643624c-fc03-478c-ab08-ff0a2e2634ca",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0287cd34-52eb-4674-981e-789c7081d27a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c5c9f18-1115-4644-b87c-83bfea32700e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e00b0c89-e99b-4750-a8a5-23cd463241c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d6936cd2-f54c-4846-806e-f77fbb8a0a9d"
                    }
                  }
                ]
              },
              {
                "id": "e48ad852-0718-492f-ae70-54d7236930f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f654bd0-ae6e-4088-95db-27d44277b2fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "befe7c86-9575-447c-bfca-69bdef9484a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55d38cb3-0118-4678-aa50-e80793346495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "97d06a25-6e44-4300-b3c2-012e1cee8629"
                    }
                  }
                ]
              },
              {
                "id": "0445f3d7-3d47-4fa6-b3e1-e52175e53230",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a1955b-501e-41cd-81c2-55ffa8c6cbd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "773a166c-1c37-4d4e-a033-ebc1abc262e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "988d8220-6b26-4097-9d31-82d4895eba4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f1b2828-25a0-40c1-b54d-d9c0abfbbf6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75792874-adc3-4b1c-8a3d-f377d13e6cbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7aa5b4af-5a34-4ec9-b2df-5fa846d6b4dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c03370c-ff37-4fc2-b046-12d1aef14e15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f661288-2ab9-48df-855b-6c60830491c8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11fc42ea-0d8b-47ba-9d11-48999c90f5f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ada8d46-8837-4ea0-afcd-9fe372b8d9a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3934f661-e849-4700-911b-c30ac5e7becd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c49044b-3e1b-45d2-8563-8bf1f06cf043"
            }
          }
        ]
      },
      {
        "id": "a807c8e7-f762-4593-8e72-6eab2141bb49",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6dda2590-a293-418b-ab97-2e933c19a656",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67e78ec7-dc4e-4db8-9c77-497fafbe84db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20ecde0d-0c29-416f-9434-09789850e52d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc52cf06-f62b-4ee6-98d8-2944ca2c69fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cb4827-5e84-4e52-a69f-348261e64063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bbb81b-72c4-4496-a64c-0810ede93092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf260bd-32f1-41bf-a2a2-f989afbb1469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99077a6a-f7b7-42a8-b019-8990f9461e9a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31fb59a-521c-4df2-84f8-cfe4c505f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f98433c-2fab-4425-aca5-df829c6ee470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac8679f-0b63-47a6-a66f-ad52d3611eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1999d8-a424-437d-ba3c-6ef0c35c3c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34b62a4-a1ef-4c81-8c6a-5d46fc849348",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36effac-d198-4530-9bcc-9a6a32ee7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff62d7-c7cc-4d8f-80e2-8e420cdfd712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282bb12c-7e5e-4d23-922f-c3e377714b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad54dce9-a9a1-4c59-8753-fda58851edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00c1262-1d25-40ff-802f-8cfdca352b19",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb91c5-69ae-4d23-93e7-4f6aad4c4057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56037601-f8d2-430c-b4a3-a7291f50b823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e7a91b-c8c9-42b4-ad54-035ee60f66df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd0de6b-9d38-425a-b6fa-baac7d3662ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20f38f8-1551-4ec4-80ca-015226d8f3a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c4b14d-3163-4200-81cc-bad078afd1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50d5375-3caf-444b-abe0-792dacc297b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aece9f-408a-47d2-a41a-5f92b904f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabf5cc7-0fc0-4edc-9ce9-06542d48aed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78d47f1-f434-48c9-9f61-afa299274e33",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07514a2-c0b0-40ce-9a4f-ffdf02a6523a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16ac332-035f-45b0-8e07-40404716efa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f198802-aad3-492f-98ed-6acbc6cd045a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "837ede06-6599-4b6c-8315-6be5c8a7df4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e09994-9765-4244-94fe-fb040f92a716",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b946d4-560f-47d5-873b-b5f59205b142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821c95b-8744-4303-9e4a-07db4f97699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7d34e0-d538-4a97-bd26-0136aec47194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2a18b2-e48c-47f1-b561-620555c06b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485d2347-bb7f-474a-acec-e4f751ed41e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdce2cf-0805-428f-ad12-d5698e6efbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137fe98e-183e-4705-b75c-36a8d9e31a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3818389-4931-49a7-84b5-e274892b08af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2de4ef0-fb94-43a5-ba36-bb6a0bd3b47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2ae2b5-0779-40d4-9192-ba8cd26597dc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb0747b-b781-4876-a9c0-2ed0e72a4794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052d601e-5ad9-4b4a-8ac1-1a55b29ac53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdd39b6-0d92-4a85-8d48-13a8447aebb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76edfb71-329d-4cdd-a9e7-bc667e89f774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09893d5e-ce08-40b2-89ae-72843159a060",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ccac93-c7bc-44e0-8165-eeac187144c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc40341b-6c80-4636-bd93-690b1a73cfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48024553-16eb-424d-9d43-0982fc5ea6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "688619d3-6519-4446-8728-95a7251116e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3d4587-759c-4cb6-a1b2-54cb31c2c85c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa5011e-1df8-4e9c-94b9-f4608bb44eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd18d5e-14e3-4ff5-988f-8c3cbbb7fb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62281baa-0680-49a2-beef-589ab7aae7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "50fbdd35-89ca-4789-8599-5d66afcc0983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a7a89-046a-49d0-bf0f-5f99a35d497f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcf55f1-416c-40da-97f7-e9b018fb9c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b531bf-dea4-42d2-b24c-ca78ce2acdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603d471c-5e59-49c0-9952-1b61814cbfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53e4871e-820c-45ef-bfbb-1f63fa53e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf9dbeb-b9a0-40ce-a6b8-bfa8956e4208",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e25d5ec-c9e6-4694-b1c8-0778000f0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b16b9a-bbfd-404a-84b1-8e240be8345d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad752f1a-c999-412e-b345-f5f7cf772d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5708d7-679b-4529-bef0-f63829cf4c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c84595-93d7-4343-bf78-41869b398590",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48273961-46d3-485a-af67-c634681d0240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda27fe2-ded9-4542-9e78-4ac902fdc036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066cc88-211d-4952-be28-afc744d515a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "47704f47-f036-43a3-aad4-bd101ea2e590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6452d0-3eec-48c2-a21a-5956b635f882",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128b66b3-8b3e-4fb3-aad0-dda30356a2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88475124-f491-4eed-a8ae-bb6e117b8ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab5c50c-f948-4651-8d97-41ec066acce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92235bd-8354-42a8-aff3-17d0d55e1a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c385339a-8a26-48b7-9c8b-918ad8924687",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b29ee3-e8d0-4104-bf38-ab2ceced3dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9a517d-1aec-44f0-add6-db10c089d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39dd77a-5dac-4aba-b9eb-750072b066bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8958b8b4-7666-4689-a90e-ee5bf0365e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e568a0f5-df96-4c29-a9f3-44374c4e56cd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb20d1-5bfd-44d1-9963-37efea563f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d49768b-de30-4d0d-95eb-b23dcdc2b6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10002d9d-5c10-40ea-ac75-5f5023cf3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1300559e-0e96-40df-87fd-c93bef46cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e7b2ce-f84c-4f53-a5f0-64320bb6d0c6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ea363a-99dd-48c4-af23-313fa92f1441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5fc01d-4e13-49bf-a0d7-2b61bb8a7c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154620a1-933e-49bd-a727-e3f5530bc06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f594e822-e554-4d2d-a1da-5feffdc1fde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7641f9-6378-4c6e-aff9-5fe6c6195881",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f96cf0-6ecc-49fc-8d70-88bf53364de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23acfba8-e8cf-437e-a31b-08d30e16e27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ea2af9-0885-4271-870e-84e5f237fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27720c33-e239-4a51-af07-91f4731b24a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8e2258-f4a2-4407-9329-4c9724c887bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c8f01c-0983-4cfa-8868-e7751375ba22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9814549-c8e6-4dca-af08-d59a0a22a5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b99377-4a08-4278-a39d-506f850720f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb01c395-b037-441d-80fd-826ae8ec4baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1387864-fd0b-4d14-9fb5-0b290b2775d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f334b4-231d-4930-9575-a5b8ef611fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a8a402-7172-45a9-85bc-e47d50c208e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3c99ae-92a5-4c12-a004-a83bf3731c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a02908dc-01bf-4fc1-939e-f3afa143bb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f03dd5f-f7c5-4f12-8e85-58485884b7a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8cf1c8-0bb6-4c2c-b72d-5da5b8401f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf69061b-917f-40d2-9cd9-ea1a3644edc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da4f263-86fb-4945-ba92-778b501bb96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68781a4-9496-47bb-bac9-dd04eaf07a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9703c8ab-2422-47c8-96fe-56d76719031f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49bc4e3-4cd1-49e8-a7a0-f69508067a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff04ac88-463a-4312-9230-46a714a2fb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5758698b-1aa8-4bdd-a13c-3931a18faac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9dee09-e172-4d5b-aa5a-2159bd560f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ffc05-c553-4921-9a82-1197894e62aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64ef37a-3133-49ce-9b1e-ec41c760764e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5257d42-9477-4a99-94e6-0b77a7d43d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb49bf7c-c74d-43d9-ba5c-169248ef8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80846fe1-bf0e-444f-a236-bb2c1f087380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c833c59c-81c1-4b08-9a93-6810414726b0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160a30a1-a524-4ece-9325-e7b355c2849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f5e232-c5e8-4f0e-b8cf-94c36e1b13bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af4ed5-c10e-4921-8c98-4059bbde4845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fd8505-14ad-41fb-9c66-604f00fa8d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03b5961-a742-45d4-abf8-1951c4282ded",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31fa02-ed7a-4fe1-ad68-b5ddb79f5e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b98198-a560-409d-a4aa-5be9ebc65354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfed5ae-dac1-4328-b708-ca251890738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da7a5ac-58d4-456c-8797-a9c926f2a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db60ea67-de1c-4a39-9d79-79974be495e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7346600-55bf-41a5-97f6-f38d93a1c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9313c339-76d2-46c1-a1d3-e927555112e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da306f5a-4b5e-419b-8774-986579a40c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c3d094-8dbf-44ba-9bee-f519a9d816ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb44dd51-8c2d-42bf-9ab0-0c5eae474c9a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32758e-7bb4-43e0-b771-39ae49f9a22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0d8320-a0ab-4645-838e-9f1d353a2f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd02863-1135-4290-973d-bf508ad5ef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94953bb9-ff5e-494f-a8d1-7b6473484829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519d3147-34bc-4883-afdc-e862cb5b7852",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8aea3b-e1e3-4724-b906-9d984bf1a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22f6883-97bb-44cb-bbd4-b8caf14f7059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8241c80f-84ed-4de6-9bf0-298de0922130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d361105-f536-4b9e-bcc8-98bd4ffeb05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b542c-6bc7-473a-be29-b3dabd6b8045",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7492c-2166-4ab6-bbe2-9a4cf9ac1d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d72d9e-950b-49fb-8e33-d2bf8b9c02d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e54fdd9-0756-4c01-a616-401df4fd6771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3967e9-9206-43f9-87ec-4fef1b98f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b55521-7f7c-4aa8-bc77-1d0e70dc994a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de0131b-455c-4b04-b16f-2ff7465cce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c7ab1d-2cb4-44d1-96c7-031d0f48e24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fe1dbc-387a-404d-9e61-7af65ce217a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f313682e-861b-4f0e-8f35-08bd3bbde747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838485ec-50c5-4f84-9193-693a60b65ad1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb393f4-4ad6-4ee5-9c9e-15d4a7571da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9ab046-c807-4fc7-a334-d614f8e7fef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b24b1-32c9-428c-841c-6f9afd97acf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da45937-408e-4744-84f5-eb8d09b85ea6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d0a4c20-e60e-447c-a134-f63cee4c4a7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "314ccf89-2d0a-4458-87d3-6a8198224a69",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1977a5-a6ad-4634-8a2d-5df01b42fa25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4eebe941-271c-4fc1-badd-8b13f27b588d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b301f2-bd82-4e59-96fc-d941de9143e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d045c9b9-a5b0-468f-a081-a533dd60e120"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82690ea5-1ae0-4a9a-b990-6e43d6f8aaba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7541a283-750f-4421-86ec-e1d6dac2c46c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de2e7c6-a958-498e-8ae1-79d24c61b0e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6632943-94de-4784-bf75-a5fcb81e801b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a727aff-5d3d-46fa-a335-3b993324e88a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d93f8f0-9e48-4845-8073-90b1c2741a33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afbef5ec-7eef-42e3-a50d-bb423ab7dd65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c0b255f-cdfd-43a8-b311-29ba4b4b8cdd"
            }
          }
        ]
      },
      {
        "id": "9e67e9d4-c62d-4e31-bae4-4bdeea5c542b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "45cecc78-6d6b-413e-a861-d64ef48497b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d96d17c-1201-4d3d-9a19-9e4685233867",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0651e101-e7b8-4458-9f42-e5fe12f2d61b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec695b59-8d19-4660-955d-af109f3549d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985b898f-6a1b-4d07-ba85-b59928cad777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcf1bc6-77e0-4707-8156-40cce22bdfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53be62d7-74da-42c1-8fa3-b6259bfd31d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efad0a2c-d192-4d89-9465-8fd7f21cca86",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369b45d4-c209-40ca-b80e-a08d05c6ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37741562-da7a-4d2d-8275-b6665ea414cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d864d-b779-49ff-85a1-4a8f94bfcc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d016c057-0fb4-4102-af41-309cc273cc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d48677a-e123-4fe8-8440-6bd469e7baf6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d945bda2-4b6d-4a71-b320-e350d9a263be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0743d8-ddae-4494-8496-e3383e9cf2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f4d1c-5cc0-4b33-85e6-d35f5458bb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52de30ca-3c49-4a57-8d0e-c1bb8462d974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e966af-10fe-49d3-9318-d73931ae87ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01abdddb-d522-45bf-919d-02450a741b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d5d6b8-6526-411b-9d66-5a22b85de514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911567d2-e790-41c3-a1b3-19f50f65f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0070194-1621-4859-b492-f6d9a8216c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c13bf91-8da2-4774-b364-7545f85475dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9dc3e1-627f-4020-b669-0ba07a7bd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9ef9d4-1a23-4f5c-9cfc-6ad58813523e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb9f587-df3a-46d5-83ee-37ac98d8982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d905ec6-2b4a-44d4-9808-1b5352996fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d28065d-2dc8-4793-8f10-59b8f9265290",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b3fb24-5529-43f0-a077-ef683a73e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a159a2-d6f4-4edc-9c29-80630c840b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbaa8cd-204f-4f8e-a08c-b267878afdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "323f4b21-735b-4259-a322-27d8146ea065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606226e-84c5-4031-b40e-9b69b3d55385",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686bcf6a-53e5-4694-a5f5-6608c74062ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994e98c5-1eea-42d8-a605-aab980409872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58dba6a-b024-4e11-b1ee-630989533ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0539ad2f-cb17-4eb1-bda9-f04980888567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f647e8f8-3ecc-4511-bdf5-7816194edcc2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d3db95-f710-46e7-8939-48e1c0232095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd04641-8638-475d-99dc-08c08a11475c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d763a3fb-bb26-411e-91f4-9ac8db1988b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e8ffe1-8965-45b5-ab12-5994b24ce444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dfb1a5-32d5-4406-932a-96a1cb0f4514",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3719a9-c891-4e7c-9195-e032b57316cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8032b5-0771-44db-af5d-2dfb21ae7c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6514cc3d-c7e5-406d-9e4e-2e058ac3945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48fb2b1-d3b8-4d89-a6ec-32f0da288484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500943d2-0917-4197-85b8-ff31a9a6d43d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f5457e-b1de-4229-ac9f-e8292732275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4dcbdd-88a4-459d-a3fe-84bb6a45ecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02026d4-7bd8-4d50-93d3-8718b932908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4d6c99-b4ad-4315-a618-62ebf78b7cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e26ad5b-0092-491c-9843-da01e30c2faa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3838c9-85e9-4bcc-8971-623443c21c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae8cc8b-32bb-46b0-a314-4f8ecf12787c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4555aac-40a9-473e-83bc-b885c20121b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c421b5ad-fa0b-43a8-a836-3596ccd0cb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f575c99-3ba6-4abd-850f-2fc0c383b1d2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea6574d-9fe1-45e5-9aaf-05e962fbec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea296443-39ec-4ffe-b55b-b44635307c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c83aa91-8879-4247-a49d-55bac111ccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f08a7b01-f81a-4a14-ad05-8eea618f8a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c6c87f-26d8-492e-a642-b16d4d9421f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3947f75-a097-443e-be26-f1106ae5fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945b169f-88b8-425b-8db7-796e5ea052d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837182a3-251c-4b00-b1b2-8fe852e86eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51ab1d8-d89d-4c7a-8838-cb3572d4734c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d5726-c94f-49fd-bc14-96d709d439c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb6d7f-9fa3-44e2-bf5b-7e1424b0b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc27693-98aa-4c1c-a7e2-dc02cc71aca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edf5351-017e-49da-ba7b-5f8cb8f0d68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86539cfa-9aa3-4228-9ccd-42c8350787ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee3c67e-0488-49e8-bd19-0b8411eb62d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd85bcde-980e-47b5-935d-fa7c6148ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073bffc2-d7e9-4651-a5f0-af766839980f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee695e-dac2-4331-a6c5-72584474b4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "884456ea-fdd3-4805-ac2c-3c7374b5d88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271b9268-93f8-4f04-aa30-776671d056e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6688ede-16f9-4e18-988e-b22711755d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ebc253-1736-42b3-ac65-5ed2171c5277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc7964-9795-4e72-9385-083cb21f7666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c411ca-027e-4cde-92cc-6e872a4e843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2914e728-96d4-478d-8efd-6204a30bcdaf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb40ade6-7d97-416e-8bfb-5f5350624d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332daa8c-fae9-489a-9763-3241166a565f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96fce6b-66e5-482b-95ee-2d718072e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22d62ba-63c3-4ca8-8646-9d860bf74723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d1faaa-35f2-4ac3-b200-d2283dc6a4af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f33b74-ac91-47d8-9d5c-be147b5c3979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a083fa6b-eab2-4f11-b586-4890ee4ccf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11745027-a331-4aa7-8e5c-b6fb8aa9c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "285f91ca-50b6-41d6-8c05-07e61fdf50cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae21c8e-4c98-403c-b53f-5c96d1428a35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a3e0a3-d2d1-46c0-a720-ee5cc3d0be74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9758fad8-4c26-4f47-9e3e-e1ff61e7b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5c283-7e53-4d6c-999c-205e9854b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c9493f-0a52-4cd4-b1f2-497f11b55ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a251a461-90ad-4f7a-95e5-0f8fea321c02",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7dd285-d619-4a3d-80be-1362b1b18b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367e6a94-9c62-4094-9705-4b2241910af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e99ec-931e-4702-a279-749c8090ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa073c8-5273-4ebc-b8c6-761adf841847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf9f6da-9521-407e-8a5e-4cb8979df924",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca57626-8094-4270-bd32-7c87e24b2f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb3c09e-4981-4c62-9211-b9d346d6844b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738644b2-9f8e-4f3e-bf7f-328dd4522ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a7365c-fe08-4eb1-8fea-d76abf713f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fbaa0d-f6ce-40c3-8999-2f5cf5940934",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8163b575-dca7-4aef-8ac8-71ac5044a747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0bf14e-2877-4019-b08d-9ae3b2b5b767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5780a210-fcb8-44f7-acda-ff8aa5638f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e6b784-3e8c-420c-8882-cfec372cab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ab4f9-4234-4651-aa33-e66e16ead46d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7564b430-048c-4f79-b4d0-7c700a159725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c371c4-d573-4fe7-b24a-ef56f7815c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac45348-8e9e-40e8-a5c6-6eaf251ce0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2012cd27-4561-4c7f-9fb1-4590abf718f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7491f1-3292-4450-b8b9-00b298815d3f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f7386-a77f-414d-9fe8-5c8b9ac8671f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da7cbb7-3eba-44cc-857f-7a0b125e50d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca361f81-8c8d-4a67-b159-06137f2e5c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "311c3f3c-d229-44c9-96ca-985745977c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec0eeaa-e179-4d85-8201-acc94fec6ecf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37154fa1-9836-4e3a-a46f-410d1d63b1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43368a3-57e7-4e58-8cc6-ef81a2df164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7291c1f-fb52-466a-844b-f73142aa19b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1cd935-2fad-475f-a4fe-487a84191ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3cea39-1e21-4d0c-b0b8-7558a120578f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9d1f0f-571f-437b-ae97-8ac71a5b2c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256844f2-1af6-4455-92f5-fd0e6e30cda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bc5b51-8b3d-49b6-b33a-40b158736af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82dcfde-7802-4dbd-9af7-4e1b6fd781e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f56a15-a220-47fb-bb57-319b09f6148f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e99eb9a-d384-49d4-b90a-0497455ea346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4b23df-0294-4882-bca9-6500921b011e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8caf5a-82e0-41c4-b0fa-3b0239ee71f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "092c810d-acea-4765-93e6-37ea587e7198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c9e294-0c09-43fb-8a0d-e1956b3733dd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b2003a-2fc6-47c2-bae7-837237c902b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8c8d3f-c1bc-4986-b026-7688cfd1d2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7bd5d4-0771-4d4d-b9b0-1e99def44840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4537d023-07fb-48dd-9d6a-c406de4d92d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064e4018-4731-4591-9698-0723c1430910",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f383380c-697d-4076-b32d-13a662987964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67c0c91-bd7f-4d99-97f2-75b06fcb4628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834ef42e-5ed7-4bc0-863d-4d7cd7adab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d445292b-0b41-47c4-838a-1b9820973da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3573d205-251c-4fab-97a6-df914e3e2bdc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0c9c37-87c5-4ee3-902d-264fb264a8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2074a7af-1875-48db-b4ff-73720a264ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fdfa4f-e893-4b26-83f9-7fc5b7308769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c124a2-9af2-4ee8-b852-81dd9b79e460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4866b5c1-989b-44bf-bee8-8eea1c46efec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11892d67-1d54-4422-ba01-d67ba416114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01eec4d-a3bf-429e-9038-1c2adc6a9fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccc5308-530c-43dd-9b1f-2e3255d30df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f88be80-ccf1-4eca-bb03-9a6d1afa2b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee1b9db-c66f-4e3f-bfad-f444e9b44f77",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2479a9-2a21-45c6-84b4-14c5f07bb728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa81998-a872-42fb-ab02-ccab8b99a134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b175d68-8b10-47b8-911d-1e3a6a14137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8eebe7-5fd8-4c0a-962e-f52edc58e5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44dc73a-d688-48f4-83fd-706c7ca218c6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c501ed-1608-4b20-a68a-5154855fe733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd0cbd5-5bd7-4789-9f7a-5862bef578fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e6fade-cceb-479a-ad78-e1d032a8d401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31abb95c-6fad-46a5-af7c-775266bb1708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad8a49a-8ed7-4dc5-ba60-9699ec25a8a1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58735ae1-6c5b-466d-aee6-4cfa84913610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdaf923-a9d9-4a9e-800b-8f673965bc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d5cf44-9d32-43ad-99d7-caeb832ec298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cb450c-5af5-4df1-94f3-d3fb117c6331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eedbe5d-a5bf-4303-98d7-a6e3e2b18cb5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba27697-4042-4fa9-915d-fa04ceeed83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b724ddc-be3e-4d26-b997-5e251958d118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003731a5-e97e-40e4-811f-a99e8d51430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f41ccf-ef34-4bed-8b8c-6467a6e72a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8855a7c2-1fff-46ae-93de-9abed389c789",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9474fabd-8852-4552-a3fb-c757169246a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933998b3-61ce-4450-810c-dfa8576e00ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a11e69-a73e-4b05-88d7-ed79a6d069d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f5df4a-7570-4458-8404-f5fbcf183aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafb49c1-14ea-4a31-96c8-9ed84fc8b978",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2949bef-3002-4cf9-9a6f-f9e8ef424969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d68940-701b-4fb4-98e6-af59fdf30912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fee8aac-9c7f-4754-8c7c-56dc55f2bd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7f1425-5cc0-4865-a881-aef2c4c753a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "448a1cb6-a513-4377-8b33-e8b13fb26e34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95d15d2c-9e4a-4ba1-aca8-e6e0aa01c3d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195374d-5dad-4f47-8e17-5224dc3b3326",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d21edc0-971c-4bb7-a224-6a092a255c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3557bbe1-c1fd-4712-8fc9-02695479bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feb8ea5d-99a2-4a8e-b8d4-45a09fad766e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6703c3-2ffc-4d56-9faa-bf0e01e1ccc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dd2b8a3-848f-4463-b458-8a974956c9b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc30cece-475d-46d9-87db-fa9dbb3c99c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44899841-4460-4d7e-855a-38a35f31d49b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b447dde2-3082-4216-82dd-de2e95885255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6289ccb-4075-4e56-b1f2-6a0c2cab3f4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9df8f5f5-561e-4ea7-a867-09be12b7a2a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0e44460-0738-46ae-b631-4322bc725132"
            }
          }
        ]
      },
      {
        "id": "8ad1c1ed-28e3-4880-b228-b40c73afd6de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f1b1e3e0-97ae-42bc-b095-661c9a54e2a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39887736-1beb-4429-9a8c-9a9ad7aa5ed1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2557773-bac3-470c-87e3-cb40b334c8af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360abda7-20ac-4640-ab02-b75abd8dd04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b38e8a-7fea-4314-a85a-d87b325ec2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eec90b-947d-4adf-b9b6-8fba995c4a20",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b7431c-091e-4e42-9e58-9e9130b5ebcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8030558a-f859-4091-90ec-c536f79c6dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c53cffa-63c0-4598-b537-1aba047e7bca",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57fc9ff-9594-43ed-93b4-9c38d9d64ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23525e6c-99de-4824-bd14-ede33e032f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c087f8-0439-42ef-a491-12e39ebe6cce",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba602cf-8d39-4ef1-af9d-b33c955f2f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1a007f-ec0d-45cc-8392-70041a547696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc519b43-d6ef-466f-835e-3bebe8a4ec63",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903b8ad1-fd44-486b-83ca-ece370bb2e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3774283-03e1-46ae-b779-2af6170a2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0f28f6-7e81-4417-979e-e51e7f5a2f6f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1e5d0a-9961-4bbf-b9d8-e07b44caa004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dd3347-f0bc-468e-a5da-beb0797c0e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cca59e1-5c3a-41ec-9829-8c567233dea8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ee9e40-972a-4462-90aa-44283d5f4302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b3e925-9eeb-4677-aa26-8c114f953387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfefaca-5c91-4c07-8ce4-fe8023331b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55597ed-7593-4f3f-bebe-417d37c1b4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b4502f-7ba6-4642-a01b-0fa2fbef6358",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc54e554-b9e2-4661-a379-5bf600239478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e9a504-8366-478d-8ca3-bb547e268ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6801b2b-e1ce-403d-b460-75fecf7fe7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad409998-9c77-40cb-bc37-2b81f09e9745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a52a075-2b58-4d06-bcd8-24452134d896",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d94ff9-e3ab-4dee-ad61-68bcc71699e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f88f8e-309b-4992-be43-b79877c2ecfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cef0743-3128-49e4-91cf-7e21b5826dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02115707-e7e1-4f83-9d1b-04e01a4eb00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19806113-f836-4d86-bcd8-1375b18c0110",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60778f66-c17f-4643-9039-5273a2b524fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f764245d-3fc6-4391-9dfd-777ad2c99996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bf842e-4574-45bf-b31d-ba5f2c92e490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a35a550-90c7-4119-9750-9f967e6bc3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29483b5-d7f2-4688-aacf-23681332e9d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb414526-2d3c-4db7-87a7-63bc815094a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099705df-96ed-4630-b968-3114e40d816d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75437ef-4c9e-4ea7-a3f5-99ed29d0f214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814b7cf4-287d-456f-8ac1-c276058fd537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa536b-a3db-4378-a872-4a86df18e45d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e7ae96-1c2e-4155-920f-62a564bfb431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c202e81-dd79-4a75-9edc-29da092f4de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcb83dd-d471-47da-9868-78bc97ca243d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88528668-711d-482f-9455-14d2d6df2b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97460b0-36a0-415e-831d-5e3de0e68328",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d349d6fe-04f8-491f-abb8-1f997d23df16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f883e921-37ac-4c9a-8f1a-5d27e4bda90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde4c4d3-a076-469e-8213-34baf9e11ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5477c2ea-5b94-43a2-b7a3-2450aa66db20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31629042-7e6a-40de-b7f5-2adf101ed5ee",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6e2efa-6915-4c26-a448-0998a4f7be86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058ad0f2-0779-48ab-adda-4bc3750e79db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ad491e-0e1e-4370-8897-8a035e8c1594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7a9c6f-30d1-4113-8621-4a83a2d284a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266f4414-945a-4ccf-a94c-df3f5c90d031",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac7604-6892-482f-bcf2-d9c28f88a62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d2caa9-c8bc-464a-925e-99cae8f236c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708cb778-1c26-4e1a-9b1a-43cc08e2238f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48385ba7-b26d-4933-a0e1-8a2fea8cf5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10345acf-5442-4cd1-bf0a-14326bf7b108",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd7f536-9eb6-4cc7-8e4c-ece5fad763e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1f556a-7324-41c2-b482-3619d9109f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9e181-d43c-4513-87f3-827ecea122c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d371b553-205b-4c85-b008-704621715291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a912db-5658-45b7-bcb8-9b9c1029c94d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b83593-df25-4cd3-a8fb-33493892260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d57df2-d548-486d-99f4-42d9fd3f4dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb8992f-7629-49f8-865f-47de74e5edee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc211c50-6276-448e-b6a5-8b11fb2355ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86622ce-f587-4af4-bc65-9448d9d65259",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7832039-279b-44bf-9d3b-ea4b7b272e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117aa8ce-203c-4385-9593-f35abcefdb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2a9b5a-db26-4d7c-a1da-67de7e1dec77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0b59ea-b858-47be-8de7-b49bdf564a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f5dd93-75da-4e79-8029-5f6fd9c0efa0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09868e7e-d486-45e8-86d0-290655fdcd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e08e70-7751-4b2e-a7d7-0a8b7c7757ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bd6c3c-b974-4e70-b43a-947ac5bce355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a193411d-5082-4462-87f9-eea3a6eab87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81daa7-a324-4177-907a-394fa3774137",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e490218-ea7b-460e-928e-6578d72a22f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ca9157-2135-48e8-a6f9-d7c09b394d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6574c901-15a4-4a3d-b5de-9d6e224d52cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ed3e97-1ffb-48b7-ba14-dc0741028958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf998a55-e5fd-4c8e-bdad-19cfc7d1842f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1f7c11-4ee6-473f-bd3b-fd7eb32427eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf4cfa6-d4af-440f-86a9-5c1ad11fdc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0823ee89-05fd-47f9-beda-c063695d9034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc2ca04-349c-4342-a7d5-96fa1c7ec48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a482feaa-1952-46cd-8daa-4173c6819b77",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202139e9-fba9-464b-be43-af7bccaa31dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2375999-a6a6-4d7f-af0d-9c98085ec10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f50b73b-9d9f-4f81-8b6f-9db7c5084c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cde1e68-e4f9-4d4e-ae24-a496108132d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67ad016-a5b5-4552-acbc-7a1c398be991",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19974e2d-42f6-4db8-81ce-8f3ebda8a0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e161dcdd-bc86-4598-80c9-f3b772161456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed2cf55-09f2-455b-9ada-2369ed3b460c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ad2343-0735-4606-ab4f-97f48fd3f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d184230b-4835-49c2-bd82-9e2458d72172",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e3ff94-f03e-4b3b-877d-0b1600e0d80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d7d933-ee7a-4b86-b6c5-06aa1f577e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f03824-0ed0-41be-8ed8-e80f2657c3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e373093-721b-4173-9e05-6ced636de722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2a38f3-9a41-4a6c-8426-578c94ad58ce",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a170d4c-f8d5-426c-b5ca-9c7f76630fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d362e0c-42c6-4021-bf98-2e46028f9348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a427dc-99b8-49f1-82a1-66fa9ce269cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4d937a-adb7-4b5f-9055-52c04d3fb11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c29a4e-45e2-484e-ac24-b315740c11ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbec801-7976-432c-8628-891b1e31f7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc0eecd-09fc-45fc-8933-015f2b2ee536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4807a2-751c-40fd-a6c5-647f0847319e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ead369-d4e7-4bcc-9496-447b1cba1a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef032fae-3409-4487-a2ff-539f64527793",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5e439-5206-4099-a7ce-c1d71c132b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf25a8b6-c527-4640-93d2-677b82cea2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab76f230-dfd7-4216-9f6b-de5e6c288573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff7ea33-9893-47bc-8e08-430fd407ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac98b6f-ca97-48df-a9df-dbb5689a2541",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96444de-551a-4e3a-8b7b-ccb9b84b3de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a2e38-3b4b-437a-9fad-81fbdae3feb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70157a9-84b0-4c0b-a3f2-5ff51a105500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ce845c-4c55-4798-90bb-f2837f508a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4933673e-28c3-44da-9e7a-5e2453a1991d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f886bea4-416d-4677-9f83-e371b857475c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a31b9d-2cb7-4ee3-bc68-4dea49c5dd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78697976-f97c-4ff5-b12e-b9d87d49c57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6985510c-9051-47f1-a25b-12a11b9fbc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6272152a-e692-47c1-9971-a4e9e6a37e56",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186d388c-f987-4b8c-b695-2c355abcce40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7260fd-dac5-4ca8-b38f-570421205ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94f23db-a8fd-469e-8e6b-d1c65487f0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3ca263-9a41-4200-a73e-7e34c14a4532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0ab420-2725-469e-9522-b86de1a1e20c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599081b1-903d-468d-9540-47cddb2eddae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb170a48-69bb-4962-b3b5-6b3665363ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a5d191-a7ee-44cb-ad5c-e498c40537dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18af0577-3300-4e47-8fa0-6b7f054bd1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9eb870-a0dc-4267-9cee-a8307349ffa6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cff60e1-6b06-4b13-b413-c5e3c125678e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4598eaf0-0af3-4e0f-8c08-cbfb4bb6fea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f300bcb6-7082-4880-a44b-b1000bbf18c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba63e8ac-9845-4cd2-8ee5-6ae76de81c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10419a79-8ed2-4d36-9eae-2dbc8efed5da",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84548593-cd25-437d-85e4-cb5300f7342b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1323ec90-f79a-47d3-966b-87e7dcd7039b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a39bcc9-15ea-459b-90d3-8c3c33767475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7842348-1f28-4eb6-a958-a3a5c2ef4100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06d6dc5-89e5-41ed-8893-4e9e37e92642",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293a2639-93b7-4814-94bb-f5910818e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0b3178-f48b-4fe1-90fa-e68ed8180529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ac1dc-9ac1-4ac2-9174-37a948e91c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453328bf-afb9-4a9a-ba0c-017fc0e3d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aed22a-9259-49cc-89ad-55a41413e54c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe653cbf-9bd6-455c-8eeb-9d18f4addb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a9b1fa-ee69-4ffc-907d-06b8d26fd740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fdfc93-9fd7-4ad8-b660-e43a17b668dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f753386e-9c37-4a99-b693-3979f24f04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d743afc-6710-4d5a-a370-ae76048219ce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9696ab-7e2c-4db2-b75d-a51bc6b413f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852e40a4-60d8-48a5-b485-487d40e4cf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc32d33f-154e-4e94-aaf9-4dd366a982ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90523654-c983-4b7f-b41f-e0ce05a8c039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2b1a1c-4669-4bbb-a546-834e664a6aa2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0052589-ff8c-4ad0-9cde-bd261d12591d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa18a16-e0e1-4ce8-9e36-694fedb5cee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54af706b-04b6-42cf-b48e-2c90eefe0fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9db1a9-eaa7-4093-acef-3c878e5b550c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10157928-8386-42b4-aaec-d0d96e7e40b4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa6f5f-04bb-4761-80d1-56a17f61f538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbd56e1-df70-4703-a8ea-f55d524d2d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c262b11b-0448-47ca-9569-47c9778459b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed7aeda-5cb4-49ac-bf0a-802267905f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ef755-3fff-4913-ac2b-d6200eab6914",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100fef09-0614-44d8-b739-1d1d1f46d3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97340416-3b55-4a43-a362-b1b89eb5404f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de5d9ab-63cf-4e81-a0e4-69ccbeebf6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a6523f-ff09-4cef-a5d5-c438c70fadf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac257a23-476e-4b02-8fa2-17962589dbdb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d66643-f956-4e9e-a9ab-c01c6c023f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d396692-1760-4799-b601-c29fd156339e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1a7b69-15c6-4b80-a453-060ab4db9c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ceaca6-ffd8-48a0-b0d1-bbc7052c9127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebf4ae7-8a21-440c-8b3a-55fb7b95f7fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e2e8c-25e8-4eca-9a39-5b9deebeaead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b9e55a-a9bb-4ae0-b772-88884ec759e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d449d3e1-38a0-41f7-a33c-e15f0c8b1be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d055f0a1-8739-423b-9fcf-63cc70478c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e49ece2-4547-43e8-ab15-dd2983172084",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d0e795-b88e-47ff-a1cc-672c314ceb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411b931a-990c-4cb0-8a5c-d3a023ce7fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882feba1-0a1f-4e17-b9bd-f2fa053b1a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f580dc9-2b2f-4b8c-bf8c-39f64c1588d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea73035-7cc0-465e-ba10-f09caafd0d09",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa695180-0027-40da-bc5b-3be6ab1fa88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5eb088-ba5a-47c8-9725-e04271c11282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411cff71-7615-46ac-912f-19d9be750b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c590fcf4-649a-4bba-8e7d-ae1e12053f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a93096-f57a-47f8-b95e-57deb20a6351",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2fb548-ec89-4456-8071-cd716902a625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b158b86-ed3a-47fd-82eb-6e97d84a9ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc0d76-617a-42ee-9e12-f878b338eb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac592be-332a-4628-bda0-42a93d40490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b822cf-c91f-44a8-a97d-3138c06cfa43",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2fd200-f537-47c1-b425-e5a956b69dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e023a83c-aede-4391-8401-290453174a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da60b13-e030-4e1e-90e2-7c2ff0d51b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b34473-5e5a-4aa5-95ec-91c1461215b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03a2ad-cd6b-4ef8-a466-723617eeb836",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20b0132-cddd-4cc2-93c2-d454e7eb2721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1326b76-e9d5-44b0-8fd0-884a16438824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f23e8e-3b58-4b6c-ba9e-d772c2e2cc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f0394f-350d-4b3b-a727-8cab8b39451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb70d3f9-8a17-4304-8972-bdaf945b4964",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb86e0f-963c-4bde-bda7-6708594ed4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a3c6bb-f285-470d-a4c4-03e98394213c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fedf8a-7610-44de-b97a-b55a5be1e914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eb0510-d8e0-4586-b22b-280f4d7274f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0dc91f-ecd1-497f-a926-7fdb7661e4fd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5c15fa-5661-4797-af8b-fa0f116369b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae456508-4815-4b4a-a337-d3d1880017e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15fb383-367a-49b3-b362-926bb4e3b3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc16e364-0163-442a-9335-8e3913094726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafadff5-b704-4e60-95fe-c99d63750228",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b0a7d0-748a-4709-8608-3fa8d89d2952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8409c60-ef04-40d3-bf99-89f69390a6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f7a03f-faff-42cd-80fc-64e51689d18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3024e225-0803-4143-81f8-de559c6d311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c534b79a-506f-4f5d-b341-0f4e74dccd5d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f34a774-78d4-47b9-9b92-2f7ef17681cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6bf378-5af8-4c9d-8fcf-3c21ec07b7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a65fb4-75f0-43c2-88da-e8f93a0615ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590879b4-3cf6-40d5-be43-95dcdb5dc1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f2f400-b32d-4cb8-a83e-922f2fe235df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da28139-eb56-416a-8bcf-d3cbb517fd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c920bce-dcbd-4a58-8041-f604bb33ad17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce853c0d-488f-4757-b723-f9685c14cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9791c8-182e-48eb-8c59-de6195e6ed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25951fe-f61c-4361-988d-0823f2654aea",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf228f70-812a-4b32-a6a2-26f5e050f32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76b0991-f065-4d8b-8bb6-c565d930bfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c636e61-9afe-4898-ae7b-6ee8401a030b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90f1d7a-b7ce-42dd-95c3-1cafc558a518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45de97eb-ff8e-49c2-896e-0f0ef9b4acfa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a8df43-dde9-45c1-880f-df0c77dce02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f7cbb0-4049-4c85-a3ea-abce2fa807c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c78632-75fb-4ff7-a82d-18f0a3935dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68887235-c783-46bc-867f-d83d504c4c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b754f2-1913-4637-b5b9-f63db44a8255",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77199779-0a48-4d47-9214-911c7b80c330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07114470-bdf1-40fe-83ff-36e940fad4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1d7c41-d920-4ea8-afea-5e24f53f3e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4424e776-007a-43cb-9364-168425b131ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bdc211-e883-4f51-b3dd-f0ad90816254",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d01056e-7eb8-474d-93cc-f6a3131241b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c9ba8e-6217-4457-8396-e3b4361e9750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10ee982-ee02-4c4b-8e00-fc94b168b0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca6dad6-5bd0-4e45-b4a4-664236f62a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac888b-8636-4dc1-b65b-b14da0ab958a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168fd8d0-ae54-4c10-bd13-22b2a96bfbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1bfd61-7ab6-404d-9f11-165f51ce73e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fab1c1e-b768-435e-b38d-52e16e9b3127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d841fee6-73dd-442a-9fa1-8ef8f0ba25fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b48742f-dd59-48f2-b684-2305e471aab0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecd7b8c-5d2b-4dcf-9299-997f051c12b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249b3d80-05fa-4d0c-a17a-02787c271820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cea333-6bef-4687-884c-6aaf08d8f842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bbabdf-f9fd-4a7c-a515-2dcb0f771138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8552902-ed9e-4b00-ba2d-55c0b45b09e3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17c6eb-b10c-4df0-9882-ecde6626e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078018f3-bbc1-491d-8bea-c3fe931e089e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d2c0c-7bcc-428e-9003-5793783d0029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37579328-6ea8-4e82-9502-df054ce5a2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bacff71-9906-4bd0-89f6-947251c38cf0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d9974c-f967-41b3-9d4c-197f6e8dc2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57e6aed-c208-4bd9-bca4-4a7cd1187d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e2b0c1-5c24-4cae-bf04-bfcc4cc7e1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3435b-d80b-4005-98dc-e4d9bb0930c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2767913e-d45b-4dc6-800b-fe9aa278d44c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf51da-37f6-458f-9dae-4f0b0b58bf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fad016-dc4d-4e1c-a974-7e83f835ff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcd6673-27e6-478b-bed8-8a39ee496ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383b698c-6750-4aed-962b-3bc3051c3ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dc5632-91e1-4a2c-9daa-79b25cb44b10",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcb9824-8d2f-4756-a9c5-160b610c5cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac74b2c-a8ce-467b-ae19-08b3eea1a542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b98d0-824f-4ab9-9abb-778d9961d88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8225914c-e56c-4cad-9001-4ad566c0dfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe169b9-d218-4b1e-8e2a-3599bf111605",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e8e596-546c-47ec-bf0d-1ec3aa24e361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4097769c-a7b4-4bce-879a-54af28a42ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a759a580-9e8c-404b-b676-ab4a3bedc43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4f504d-e226-4727-9bf9-61f495b010ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc26dc5a-e3a8-49ee-988d-041a712eff0c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be29cdb4-91d1-46a0-948a-699c31237fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fa63a7-7cd6-48ae-82e5-048ae7271b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87126aa6-811f-4fb3-bb6a-9a8a1285e649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf2bd29-1562-4167-a668-414bd5c6a00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2293c545-0eaf-4737-844b-4cd2f56025c7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231a2aa6-137d-4850-8b09-45e26eb9267a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da62651-64f1-479d-96fe-666933f98381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c634b-018b-44e3-8c71-1d98271633ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb7b485-8e95-4437-b9a5-abcaa690805d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afecdc0-98fc-4bdd-9274-0db1746c7f88",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f9ec3-6018-479d-b9f8-b179451e96b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59972d4f-fdd2-4da9-bf48-a353727ead7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfddb4b3-225d-45dc-8310-ecb6b6963b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e0db53-97db-4dbb-a0b3-4af046ca1e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a961fbb-16ca-425a-85fc-2df1cbe57f61",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3bdfc3-62f3-4176-aa54-bb5d9ba7e114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f40aa98-f6b5-42ef-a5b5-99d37b20ae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d403b6f-3050-486d-9e95-2daf429cba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e2b8ed-d2fa-4560-a52a-2836d0eda782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bfdca-8778-4670-a10f-173583bd5a62",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978c023-6d0c-405f-8058-df25aedff966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f904a3-8415-463a-b166-fc27b9b35afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6796f141-9fea-4490-a235-a18a90938f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcada78a-517d-4b50-9276-80806460c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ebb25c-dde4-4efc-a9d8-6a6b23e01469",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea1cba5-2895-49f1-a935-4533791257d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf27c943-64ee-4869-a308-4512476f3ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29278e3-cdfa-42da-a1fa-95a639506b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7a0cc6-0e18-46bf-94ce-22004cb4dcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0b5e01-c55d-477b-9de1-df9a0206df7a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b11d976-0127-4223-a60d-3334b228326d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31767e70-6454-4c29-81da-65fe335022f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f2152-1e5e-4790-a3f7-3077464bea5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738c7c3d-3863-427d-a078-012860243aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54972c8-ab48-41a3-bade-9377a01d724f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e8cca5-ba86-4c48-b37d-fe467e71eb7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e39e7d0-c569-4af3-be4f-c599676a8bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cab6bb6-3271-422e-8244-9dcaa6aa3a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ce6e2a-5fde-4b25-a3cb-34ee50156932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161252c3-fdf5-4c6d-aa5a-6e565cce2f6a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3862b4-7c6a-4a2b-bd5d-55777c731a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b41e5f0-eae8-4d7f-a5ef-f21f2b1600b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faf9c0d-3d50-4ec7-aca3-248e2a50dea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752f1657-0ac6-4408-a855-654f78ff0369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e16eadd-7d4c-48d5-b423-ee49b8eec43d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cb4ff9-a44f-4341-977d-e00cc7760767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e66de0-29ba-4c0e-9588-f4b85aeaf8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e63a38-edec-44f9-949c-2eadc193f4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3cf97b-6b75-43b0-bc70-0a5807e536ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869f321-dc61-4ca5-9edf-8dd281d302a4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96095f10-aa71-4034-8fdf-fcd31fb434e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2981a6-784e-4985-9936-cbb2cf56a7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf98153-cfdf-44d9-bf38-badb845385cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d0e1d5-8144-46f8-a137-ce3ab1bda3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a62129-4fb0-44f6-8010-3c76d50d8120",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad6aee4-cc44-4c64-a4be-958f594eaf90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96485ae-aa00-4097-9ffa-20497a0cadfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7205be6-8199-4e43-8d5c-98ffaa73ab76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d155530e-7d1c-488d-b528-891315397b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440fe876-301a-43bf-bf69-9c5b26a554dc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1328e2a6-083d-4325-ab05-4f6f6d463df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cd5074-3774-42ef-be24-ae3c526691fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a12376-65fc-4498-b43d-da1cd18ff98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fba006-bab3-47d6-a3f6-4a6a7a0e8b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13048cab-282e-483c-a547-661f8441fb65",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a12dfb-2754-4201-8376-a7a51b216cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e943da97-549f-4ef5-ae25-1ccfccad0b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971734d2-90e8-405e-bc8e-e70b47d279b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b114fcfc-60eb-43ea-aa5a-eaa55457c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dfa593-e377-4e8f-a0b7-d001eacd404c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969cd68c-30a5-4d07-83d5-371574e24e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753ce5d7-db7e-4f87-8344-ea2cb045952e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6299a6ba-e8a9-48fa-8be6-2ca1592ca8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438aed17-73b8-4def-b916-69726a49caaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b21d9a-d16f-4969-b477-d9502a011954",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae6de4f-b90f-4a57-81ed-26cf0d679271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d246e2-323d-4806-a654-b186d77b94d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a127142-eb3a-485d-b58d-472bc105eb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa01ae4-4ba8-4d01-b889-d2c62462fe08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68872b3d-deda-4801-93ec-903aac37251a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adb9358-ac89-4131-bb4a-4bba50e155ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7972ed-7b78-45e4-9677-31dd0c466503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4c3439-6305-4149-b92e-12d780a6ff28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b444b78-501f-43dc-ab87-e13e81a789ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9f6fc2-c07c-4435-af7c-87dfa6953c76",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f5d6e1-4db4-4ba1-b85e-012108fd2ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d74635c-fa19-4369-b166-9ccd4deada0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a40fd18-31c0-4457-9d97-bbf119eca9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1df348-64e5-42ca-8340-b59b4d23eeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71adadb-599e-4f7a-96c9-395c58e6d17b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25930ef-b0e0-467b-9c4b-d75929ff8081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610efd29-4c3f-434b-ab9a-bb621d70301c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ab037c-0e1b-4219-83e5-f3eaa6501be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dd1a6c-30e9-4302-b27c-b15b5103c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ed070-d882-4edc-a75c-ce1f046a1522",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b012b0af-a068-4584-8cd5-a7da98666de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cae8b0e-1924-4012-b2ae-b86e7805995a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3b5e74-f086-4381-b32d-4e8bc4a80241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e060d76-bce9-4112-97d9-1f79620d7e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3af1b-8ed4-44e2-b421-b4c4d1052956",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc03a8af-9b62-4811-b55d-f137cafa5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0cb88db-5990-422c-bf91-e6e930248356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699c50b9-ba90-43ec-921f-8b59107df83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac83d5f5-5874-4b04-8022-15277243aecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92694586-c692-4f98-8122-48cb27bf1f74",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6751350b-159c-4297-9b52-45303cd14fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b731afd1-660d-4bf6-bfad-1226908bd9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3794c57d-c786-41a3-b72f-3d92fd1f3375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0820cf33-96a5-4e81-bb66-9a94b7929038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b8916-4ec3-4a03-ad62-b6e8bec8d963",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4d79fe-0b2d-47b1-8d9a-47099aba33cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282bc379-7010-48fb-ba6a-913cd5e6895c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4899fe02-a840-482d-9bc1-684bfe655ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ac0ed3-a43f-41c0-a16a-814cdb4424e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c90059-6811-45f6-8a72-69c5c587e9d3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a15f6c8-1d3d-43e0-bfbe-10db77c31364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e34de6b-c939-4384-a02a-f809fd940b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157e42f7-6f71-48be-82ac-6a0ef92aef0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3ea248-75ec-4f45-8fda-1a3573c46223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9044806-013d-4dd8-89ca-1fb62653d199",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dcdbdf-458e-4757-8876-4fe3152a8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbe1abf-ac5b-451c-9cd9-caf7937ddc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50eb278-55fa-4d08-b0ef-e3af0306319d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8dfa04-0a23-4868-be79-530cd231bc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6626aad5-17d9-4a7f-a4f9-dabba3b67d4b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144a5f37-565e-43bf-b86f-e612fcf6c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1da427-8652-420f-8c92-db3aedbaffe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cccd476-e693-432f-bdfb-e9c95adfcc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352fda90-74c4-4bc9-b85b-1100a10a496f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027ee075-a13c-4734-a5ef-6beb8c1f45c5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2b0bd1-7e56-4df5-af7d-4007a174a525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a707c4-b370-43a7-98c6-d0039b9e0a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d8756b-2d95-46f7-8719-86cf0cf5005c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603b11f4-0c31-4661-959c-1933ce01d228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c8e2c6-a9dd-4070-8052-7675d32a7953",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842c8732-f0af-47a0-98cc-fd2505f6eed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2740b67-5732-45c6-945f-89b2a014eca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83741336-37ac-4245-b5d9-55c9ab26ceae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309eaada-36c8-4287-a862-df3ca1f3ebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57953d6d-19bc-4ae6-88c6-9d9924b85bcc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df616f7-2166-4428-a76c-7b13d8edd824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fae9b5b-cef7-46b1-b560-46e08665de28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397fd68d-e3ad-4710-a453-18da5288176a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7dde42-b90d-4235-a35b-afb73734e5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b946c847-f637-4cdd-8764-7d7267ac7c68",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1f144a-998f-4773-983c-126cbd7a5aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42ed399-2a11-49da-805e-40ee2d760267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b6df0-6f2c-41a7-9cce-3b7a052f5613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a2cda0-919c-42c5-943b-1af88c6a9acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecbb95e-3603-484f-abdd-27bd979b8fc9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5c4697-2d85-49b4-8679-1e98f4fbec6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7960b880-efbb-4c24-a1ff-fd92a343d01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0c46a7-0086-4c31-8373-8c2b8b03f0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2168e773-c71b-4e85-8ead-baf59fd70c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbec965-2c3d-48f4-a9dd-4f456df143ed",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0fc6c9-4ddd-4890-9542-7f9dfbd462b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214e3bd3-5748-478c-95c4-ced5057b2ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50d320d-41d4-4700-af61-e766acdf41da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4424c141-f5e5-45bd-b8b9-4f7d2f30728a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beb2708-17e3-417c-abe1-b18a105d1c41",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063af87b-c6d9-4542-9ad9-26abb56b02b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429ae38d-3ed9-4881-8b7f-e6b8bf9cd0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02de57e-6bc2-455f-85f0-f8bfde9796b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90dd775-9554-4e6d-9bd9-19d823c55e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4723ed-6716-4de2-a23b-39aeb7ad2732",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee863739-76c0-444f-bdce-7d2a59327f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd584a11-458e-472c-931a-2443146e2e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f62b017-9cc2-40af-809e-a69f899bdb41",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2302c4b4-4b21-441a-a576-580a1b97a033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90da888e-bf8d-4bc1-82ac-17fdc32d0b12",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c844fd63-9248-4a74-8b71-256a8dc1c1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4f03c7-f2d6-45dd-acf1-edfde3b77ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9840f22-977d-4bb2-85e8-bc1712c31e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97607cfe-cddb-4270-96f2-5dd981ec234c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9299dce5-f4b0-4560-b08e-2c8b4c87c695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70766851-f0da-4203-b466-151a1af80b58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "077c3929-971a-4a66-a46d-d844cfc53c40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "692ce5a7-f7db-4a8e-b751-5256af3605f5"
                    }
                  }
                ]
              },
              {
                "id": "4eac1e23-0296-48db-b498-3451410dd268",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6b2756-3817-443c-9391-279e2cab3ccf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828ffa5-60fa-44d6-bc5f-cf82f3c13084",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e43caf0b-cc59-4034-8226-98ddeb7eadab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c5774d-8071-4fd3-ae5c-92a1023d63d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f70a113f-9931-4af8-af22-04f69a557356"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b11c239-ac8f-4bad-8424-463a78f81856",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e5e8189-be6f-483f-b503-6195dedfa5e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "808bda67-ccce-40cb-84ca-1252dcbd9b26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eca86e28-d793-4769-a632-b31f99911248"
                    }
                  }
                ]
              },
              {
                "id": "d58ac825-e7e6-422f-b4d7-1337dcb0e91c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "129dfa10-aea9-4054-a298-6d5fbec713fa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148af753-8a9a-41c7-b62e-f3feb37e61c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f464382a-16a0-401f-9b5b-4652664cf85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5bff81-a118-42b5-96f6-b17b88ce04d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7f21ac-d708-4b10-bb50-7495be2447b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66bf99a8-a090-4f0f-8ea8-bca6c56e7bef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b36c999-652c-4d83-8e72-ce0f2a45041b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "864e34a6-b8aa-4da7-99ae-ca46ac1facec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5fb545d0-a06d-4f2b-8ffb-b102ed034ec0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b15995-f622-42ee-9832-9a935464e101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44c4a7bb-64ea-4729-a9ba-d6bfd9444289"
                    }
                  }
                ]
              },
              {
                "id": "42d36307-4b40-429b-a0ac-425dfd252421",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8224b08-41c7-4051-80e9-26e932a1ad7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd6bef80-df3b-449b-948a-dbbaf289cf2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6d10da3-d464-4be1-8344-46451e6309b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "705a3f47-5249-4386-b866-b82912414c9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d59af2d-501d-4a7a-a168-f4518f551df8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9937aa94-c6bc-4ef9-85d7-fa059ff3c105"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc1df7d-dfd7-4b8e-8ffd-d36c4fec1bf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f5c4817-3186-4cc9-aed8-1e9dd81b7bb3"
            }
          }
        ]
      },
      {
        "id": "a8eaecd4-4b57-408f-b948-e0a0bac96ee3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "74ef25ea-3e90-40ed-a2b9-e6325305639a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "225c23c7-c62b-4d73-968a-dbda9403b28a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cfb62ae-ef70-4cdf-bc4f-e3027016dada",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c4f320-372c-49a9-96e1-67b07547e968",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c0370b74-26ca-413c-a325-4de129e320cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f0360-af3d-4e80-bb55-b183609c527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47c1d47a-00ea-4753-9adb-91305aed18ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6d3de5b-c26e-4043-968d-3ab6f1d8d033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efe68059-846b-4459-a368-c839cb0e08c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d23a245-3897-424f-972a-64530c116a80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b8891c1-28bb-46e1-a8ed-157fc8517b52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a8c15fd-1628-4a50-8d8f-5f0377d432e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dca52e49-d436-4649-909b-419c66ee4d49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0e52b27-5912-4406-9232-80c8821ce07b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fe37de3-676a-456f-81bb-379d1b1050ec"
            }
          }
        ]
      },
      {
        "id": "3a453b09-a8d3-4e4a-afa4-24eb57ba8665",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a193008d-9080-4cbf-9297-572d8ef5a344",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00e1c325-e02e-47da-931d-82e3a0b3ebb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "612d7963-f8f5-4b93-b505-3b28fa142cc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a0ca7-06b3-47d4-9dfa-e4d751754426",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "239694c3-e607-4c6c-bb35-390ff7a6c6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb813c68-4788-4ce8-a036-0e24fef38ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7b222d0-5661-4cc8-8539-a96446c1cf4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d2a24b0-f0d1-4e0e-9fde-049f0fc9794b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6945e0ea-42db-4a7e-8d9a-29c60011d29d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ae886b-210d-43f4-a410-0347edfc9363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "467d8573-a478-4614-a9db-920d9d356e0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff700c8d-f053-423c-903b-4df8e0526002",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cde46bb-32d2-40fa-9c10-94beaa20e661"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a8fd1df-a47e-48b4-821e-a3e55c087858",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8498987d-56f8-4cf3-b1a6-1f2d7c893f06"
            }
          }
        ]
      },
      {
        "id": "5b32bfb3-e686-4cf6-a384-c5a43a1ccd4a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "116c415b-2142-4912-984e-726937634ebc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1438bf4f-b331-4327-b35a-1c9f59cd2761",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40e72efb-f038-4262-a055-97cb49143feb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d4bd29-948c-4826-ba28-afef4bef2ee9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c486f74-f385-4215-8c68-04b9ec3f7703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dffd02-4967-4d09-93a3-19d91077a4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a88bb618-a488-41a6-b8f8-20e34581725d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93e26179-1e52-4cd5-8598-df7f0100a12c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "940cf14c-8f57-438c-a366-f176ecd654b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "729bae3a-cb50-4f5c-84b5-e4c88b3ecc8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e37bfe26-6146-4849-98f4-f801b862198b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70aa5699-a749-44c3-976d-baebcb174f20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ed1175e-901a-4ad6-a424-f54c02472c8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "444a9d3a-3bbe-4d0d-b3e4-ddda307cd1a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee782121-e5c7-4d04-93ed-99c6da5b0bb7"
            }
          }
        ]
      },
      {
        "id": "a26d4eed-b74c-480c-a592-6d92f4e80698",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f2201a3-8026-4acd-8ecd-7df3ce9c4e27",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffa2744-94cd-491c-b2c2-395740ec292a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eab80c01-e6ef-4d35-a924-548f218e295f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "003f9ac1-f229-4d00-82a0-3f87e5703e12",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cdd7ee7-56d6-4cd8-b80b-4d8fffcef50d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.637323943661975,
      "responseMin": 3,
      "responseMax": 289,
      "responseSd": 20.768987949448935,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697070702460,
      "completed": 1697070716142
    },
    "executions": [
      {
        "id": "cd897555-44cb-4e63-baa0-87db4b897f14",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b3cad099-5cc2-475f-a0dd-7a42e44bd1b9",
          "httpRequestId": "77a11f46-5b71-40a2-b697-95e3f1939f5b"
        },
        "item": {
          "id": "cd897555-44cb-4e63-baa0-87db4b897f14",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b838d44e-477b-42dd-90a3-2efdcdd0a95b",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "2a593f54-c57a-417e-8ba8-89b22f646232",
        "cursor": {
          "ref": "9c750bdf-0423-44cd-a736-a1096f3b0846",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b03408ea-1287-4f5c-b453-3677bd2ab706"
        },
        "item": {
          "id": "2a593f54-c57a-417e-8ba8-89b22f646232",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9c46510c-002d-4d2d-9e20-1e1cb8170bd1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2261b0c6-40ab-42a7-b32d-183aa79fcb19",
        "cursor": {
          "ref": "eae82482-ff48-4846-8c22-b924d199bdc0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b1e8f66a-b5ae-4167-a1d4-587a60e886e7"
        },
        "item": {
          "id": "2261b0c6-40ab-42a7-b32d-183aa79fcb19",
          "name": "did_json"
        },
        "response": {
          "id": "4e232e31-5321-4892-8bbb-f03e23a87019",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ac6c4-c5c9-462d-8321-248da4592a4a",
        "cursor": {
          "ref": "82c81a37-e032-4730-a233-56a449f6248d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a2c179f6-fb87-40a0-82f4-ebfa4c78487a"
        },
        "item": {
          "id": "849ac6c4-c5c9-462d-8321-248da4592a4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c8f262f-50de-4fba-8392-191630e56dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ac6c4-c5c9-462d-8321-248da4592a4a",
        "cursor": {
          "ref": "82c81a37-e032-4730-a233-56a449f6248d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a2c179f6-fb87-40a0-82f4-ebfa4c78487a"
        },
        "item": {
          "id": "849ac6c4-c5c9-462d-8321-248da4592a4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c8f262f-50de-4fba-8392-191630e56dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399d2fcd-ffa2-4f56-869d-5c1fbe10107f",
        "cursor": {
          "ref": "760e955a-67cd-4174-8b9c-e9b54ff1e3e1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c03818f6-424f-4f4a-afdd-bd97a4bdf737"
        },
        "item": {
          "id": "399d2fcd-ffa2-4f56-869d-5c1fbe10107f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "904dd6e1-bbe3-4caf-8208-cc6009625fa6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a7a92-5bfa-45ce-9c8d-08e08c894762",
        "cursor": {
          "ref": "2bfd6d36-1bdb-4c59-bb9b-668fafef2bd6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9bdf584f-e570-481d-9965-e8231cbeacc1"
        },
        "item": {
          "id": "d65a7a92-5bfa-45ce-9c8d-08e08c894762",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8c8e0ec6-93e0-4da4-9d9c-3ccab9e542e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d5c5e9-d6b9-4e0f-bcd9-ff623282f898",
        "cursor": {
          "ref": "02efe801-1a8a-4fd9-9a7a-ba54dda4f938",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "915746d9-546b-4a06-8e37-9cdcdfb254ba"
        },
        "item": {
          "id": "e1d5c5e9-d6b9-4e0f-bcd9-ff623282f898",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "255e8c40-8949-4b77-baff-e329fdac1077",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce034dd-910b-41c3-985e-96a7f0471892",
        "cursor": {
          "ref": "45ba5a77-65d9-482a-a89c-74862edbab32",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9adf55a3-3632-4b90-a640-5db23bba89c9"
        },
        "item": {
          "id": "3ce034dd-910b-41c3-985e-96a7f0471892",
          "name": "identifiers"
        },
        "response": {
          "id": "abdfb35b-6137-4910-86b1-354a1694befe",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75f1803-0560-41ee-aa13-116cc37dd614",
        "cursor": {
          "ref": "3b2238b5-8d98-4c9f-88eb-706f5815365e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10160923-c538-4659-b62e-385669868b4c"
        },
        "item": {
          "id": "d75f1803-0560-41ee-aa13-116cc37dd614",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c8dafc4d-0c1e-49a0-8e1c-149fd9fd8862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d010108-520d-4b41-98cd-66146395166d",
        "cursor": {
          "ref": "f9ca9ba2-6d91-4857-b3c8-76419a04ef20",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7076e35-c83d-44cd-a88a-17d83d149320"
        },
        "item": {
          "id": "4d010108-520d-4b41-98cd-66146395166d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "da15807f-e9c3-487c-addb-8f55cbf4b37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c5a21-5a2f-454a-9222-ec1e8db2016f",
        "cursor": {
          "ref": "203eaeb7-8486-41e3-b1ee-637664f68422",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a722b453-bfb0-49a8-bd63-e8b906665055"
        },
        "item": {
          "id": "741c5a21-5a2f-454a-9222-ec1e8db2016f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f68a60b4-8c47-4517-99fe-63d04f9d66b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbccabdf-b64b-416f-9b69-ffbbacc7a24f",
        "cursor": {
          "ref": "c02a1bd7-fed0-4a35-8f61-ab3d35bafe5d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9f9f6c67-483e-4557-b929-9fe7e84fe37a"
        },
        "item": {
          "id": "fbccabdf-b64b-416f-9b69-ffbbacc7a24f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ea628a00-b333-448c-bab9-ba01cf9aaf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc23e382-7558-460a-a0e5-4a5c35362a27",
        "cursor": {
          "ref": "0831d735-dec6-4b45-89c9-527ef3e39635",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1da84294-4bc8-4f65-a551-3cd728470a9f"
        },
        "item": {
          "id": "bc23e382-7558-460a-a0e5-4a5c35362a27",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2e5c27d5-1c3d-4d25-b02d-63b18f9429a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a25b14-e47e-4a11-9989-b8f9b953ccfb",
        "cursor": {
          "ref": "b8c21391-eeb0-42fa-aad9-604660e61ce5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb656c78-4833-457d-a5d0-89e1d6d89c9a"
        },
        "item": {
          "id": "f9a25b14-e47e-4a11-9989-b8f9b953ccfb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "de287aee-59db-4261-aa78-858db7263afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc44b30-5d2c-48a9-98df-e520004aea2e",
        "cursor": {
          "ref": "17c14417-3250-435d-9cdb-2d8bf72a9497",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6a5174d5-f3e6-4511-be22-08a8a4871ed9"
        },
        "item": {
          "id": "0bc44b30-5d2c-48a9-98df-e520004aea2e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "06001c43-b5ad-4456-9010-2af0ea113d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1e100-321d-4836-8ce7-3950a822ed0b",
        "cursor": {
          "ref": "486e9069-189e-4f43-8a16-4c1a3a481bac",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "47b0c00c-34b3-42ed-9e5d-1d880f20f630"
        },
        "item": {
          "id": "a1c1e100-321d-4836-8ce7-3950a822ed0b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cc6976a-8492-44fa-bcd2-34e4a2f7f73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c9a42a-ff8f-4c27-a3e7-be0a2040e184",
        "cursor": {
          "ref": "327f2e0b-3334-42c5-93b1-7225145476a0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98debb3f-71d3-456d-8397-bf4283b311ae"
        },
        "item": {
          "id": "60c9a42a-ff8f-4c27-a3e7-be0a2040e184",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e6670da7-4432-490e-8483-d03cd37882b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6321dda2-ac19-4981-a1dc-b948bc683351",
        "cursor": {
          "ref": "60787368-aa36-41e9-a22a-a738219e7493",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4919dd3-8a92-4c87-abe8-4d0e317b8f6e"
        },
        "item": {
          "id": "6321dda2-ac19-4981-a1dc-b948bc683351",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5ceda30f-0518-442d-b542-40171f14f31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c921f-0c3a-4cd8-b34c-b99e4447c075",
        "cursor": {
          "ref": "6771ad4c-8fcf-4f80-a716-1901ffc58ae5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89f0be2f-e652-4495-aa76-645c4eb9b98c"
        },
        "item": {
          "id": "839c921f-0c3a-4cd8-b34c-b99e4447c075",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f0d2fae5-b0ae-4be8-a852-7b5e0124451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc9f10-4993-4dc3-a6b7-c16e62fea08a",
        "cursor": {
          "ref": "b8902357-dc8c-4238-bf20-1a39fefa6776",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7a701605-fd57-4480-93d4-59beca7c1558"
        },
        "item": {
          "id": "11fc9f10-4993-4dc3-a6b7-c16e62fea08a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cf66448e-1504-4ac4-be73-e4fcd6d4c607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c2020e-5dab-42aa-b781-2ef8a4443ac3",
        "cursor": {
          "ref": "e28b6659-1f3f-4c10-b954-a3c728d7f925",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "989e7374-8d3d-46fd-b74d-1a12ed8e6a83"
        },
        "item": {
          "id": "82c2020e-5dab-42aa-b781-2ef8a4443ac3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b5714e36-67c7-4f96-9429-536b91cc026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236fcf93-c4d4-4197-8e78-2c788104f7fb",
        "cursor": {
          "ref": "2ded3370-267b-4c8b-a70b-4449c9b69294",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "987fcb4f-a3c6-4b6d-af51-474715bdd838"
        },
        "item": {
          "id": "236fcf93-c4d4-4197-8e78-2c788104f7fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "713505ef-1584-4746-a306-cb35b17413f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b211b-ce16-4859-a2a4-432b0ca233d7",
        "cursor": {
          "ref": "9d867048-1586-4f15-ad14-e961c2ac23b3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2230681a-7bad-422e-96f6-d66f08cc2ccc"
        },
        "item": {
          "id": "8a9b211b-ce16-4859-a2a4-432b0ca233d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d947a8ff-dd77-43fb-bf8a-ff8aee94e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35385a5-2711-43f7-b333-51f640185edb",
        "cursor": {
          "ref": "16fd2818-2097-4b80-8eb8-1930246eb679",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c97a4879-5675-47e9-8024-9e8f0d1cb0a9"
        },
        "item": {
          "id": "a35385a5-2711-43f7-b333-51f640185edb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8bff731e-7fda-4c78-920d-081890c40812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc819aad-7969-47b9-944e-608ce63ec5a0",
        "cursor": {
          "ref": "7b7f4197-aba3-4807-a1f7-7da025f01f3d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c3e9e6d6-de53-4b8a-97b4-0a12564c76b3"
        },
        "item": {
          "id": "bc819aad-7969-47b9-944e-608ce63ec5a0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c989686-e5d3-4b4b-a435-fa410d346f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce83a46-c947-4fa7-b086-02d81e4277b3",
        "cursor": {
          "ref": "4dd18ca0-5691-4635-83f5-1849cee6ffa1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "843e4a3c-d767-48ca-9e0c-0ed0a3446680"
        },
        "item": {
          "id": "4ce83a46-c947-4fa7-b086-02d81e4277b3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4998b758-db0f-413d-8d07-1d51ccf01eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031de54c-b930-4ea2-84b8-44db335d2fcb",
        "cursor": {
          "ref": "f95f0713-fcdc-42cf-a2a8-96935f5484d0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6503926e-0c7d-4022-ad7d-fb597c19b3c9"
        },
        "item": {
          "id": "031de54c-b930-4ea2-84b8-44db335d2fcb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "19e874cf-2872-409e-870a-709ceb708437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ee52bb-e557-4c00-9ddd-438ef8029fd5",
        "cursor": {
          "ref": "aab10bbe-452c-4bef-b9f5-6b472a68d0fc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bc97c785-99d0-4466-80ab-b903f4758762"
        },
        "item": {
          "id": "28ee52bb-e557-4c00-9ddd-438ef8029fd5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f70cd1c4-6649-437d-8c61-7714b4a939a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb661029-e138-4e46-a6a0-5a52e21b28db",
        "cursor": {
          "ref": "7eb54aa8-352e-45f3-b188-36cf56248e92",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9c2244b7-c2bf-41bc-b4a6-0501630c3449"
        },
        "item": {
          "id": "eb661029-e138-4e46-a6a0-5a52e21b28db",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "667bb423-a597-409e-8d06-218f888b73a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394906e5-3d20-4949-aa6e-70acd3405dd6",
        "cursor": {
          "ref": "7985ac43-095b-4b08-9514-3f8c6f26d08a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d3ee59aa-a586-4e40-b860-4c0803cb5ca3"
        },
        "item": {
          "id": "394906e5-3d20-4949-aa6e-70acd3405dd6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2544009-421a-4ad3-8377-b715e0fbf4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072457eb-ec5f-4060-8922-3cdd34214971",
        "cursor": {
          "ref": "93ef879b-3502-47cb-8f8e-fe99b60d285d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "42590b00-48c9-4637-8689-d1d21b086ddd"
        },
        "item": {
          "id": "072457eb-ec5f-4060-8922-3cdd34214971",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "02e4c811-d16e-402b-b866-dcc9c26460a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d5aea6-59b5-4e4b-864a-70f93f04ce67",
        "cursor": {
          "ref": "088b8d88-1b4d-4cb7-9fb1-267869a523ad",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1582b745-8653-457c-a508-459589d88504"
        },
        "item": {
          "id": "e9d5aea6-59b5-4e4b-864a-70f93f04ce67",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b31d00da-c75b-466f-845f-37d01fa3be09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea4644-89ec-4639-b76d-6aac94ee0077",
        "cursor": {
          "ref": "57f181d1-d00c-4765-afd6-183936d3ab88",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b27d11b0-b03b-47c0-b1f8-f5d0ae03f314"
        },
        "item": {
          "id": "ecea4644-89ec-4639-b76d-6aac94ee0077",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd20ea84-6dd9-4ba8-84f7-6185ad5d2792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326e1bea-93a5-4b27-a068-b4c8242ca0d0",
        "cursor": {
          "ref": "fd4e1d57-79ca-45b8-a071-c87d0c040daf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b962264b-8537-4138-bb4e-5e33d61555ef"
        },
        "item": {
          "id": "326e1bea-93a5-4b27-a068-b4c8242ca0d0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2bac718c-d2c5-435a-b125-842a82be95ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd476d5-3b04-4a2e-b722-1808333b068d",
        "cursor": {
          "ref": "8ad8445f-267c-4330-912d-b3ae026825a3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ed49dd75-ee2c-464d-a52d-0db3afb2412d"
        },
        "item": {
          "id": "3dd476d5-3b04-4a2e-b722-1808333b068d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "213ca6c8-f2a4-4bac-bad7-f3927540654a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29000dc-c1be-4a97-8bc8-ca09623a0e66",
        "cursor": {
          "ref": "df790061-349d-4fb9-8949-936d8bbb63ab",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "382c1a76-f56c-443e-a033-ba3da19108d3"
        },
        "item": {
          "id": "a29000dc-c1be-4a97-8bc8-ca09623a0e66",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "777fbe8d-8d1b-401f-8712-1eb57ed091bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2722064-5150-4394-9e96-97f0c25280c1",
        "cursor": {
          "ref": "b659cecc-0964-4739-98b3-5586d6f41e98",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "53c71396-68cb-477b-8860-4825e5f5dee4"
        },
        "item": {
          "id": "b2722064-5150-4394-9e96-97f0c25280c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5bc68f96-9868-4857-9aeb-ed8d8b2e0fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478426c-9ec4-4f94-82ca-e28e1dd96906",
        "cursor": {
          "ref": "2da5f774-3198-4906-bd51-64afd60b161f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b144865-ee4e-404b-9229-8dec65927ac5"
        },
        "item": {
          "id": "e478426c-9ec4-4f94-82ca-e28e1dd96906",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d5e6334b-a4ea-4204-acc8-f9f719114c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5762dd-798e-4638-88fc-36147e4b3b53",
        "cursor": {
          "ref": "e4dc18e9-035b-47e2-a99d-2f7eb924582d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d5b850e-49ba-4282-b1e4-88381f2ae370"
        },
        "item": {
          "id": "4f5762dd-798e-4638-88fc-36147e4b3b53",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "37cd0cae-4e0d-4bda-9235-bba272d6e3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda3589f-aca1-48c5-89e3-eaffdbbeede6",
        "cursor": {
          "ref": "0cfecd39-da5b-44d6-a863-ea12387866d7",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42f98668-bd73-4495-87f0-4a73de22da78"
        },
        "item": {
          "id": "eda3589f-aca1-48c5-89e3-eaffdbbeede6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "44217787-61f2-42d2-89c1-54ac8225af89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7562bf64-0a58-45c2-aef9-43b7f9f51143",
        "cursor": {
          "ref": "ba06b95d-18f4-4c76-a457-92dda8a1bb71",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bff8584-920b-4212-8957-214492512642"
        },
        "item": {
          "id": "7562bf64-0a58-45c2-aef9-43b7f9f51143",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c25c5430-0f5f-4755-9e85-3bce6465fb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87334daa-1b4f-4b21-b612-08e6f907c8a9",
        "cursor": {
          "ref": "d7440b6a-a9f9-4587-aa4f-e6e2ef385776",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09ffbdef-c9ad-4a59-b4ed-e59dd28a1935"
        },
        "item": {
          "id": "87334daa-1b4f-4b21-b612-08e6f907c8a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "87326609-8e06-43f8-a99b-c880a276c9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6985b5-2537-45aa-be6f-029f57ce7e72",
        "cursor": {
          "ref": "ec3fb436-443d-4ab8-ba4a-01706bf6b86b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4efa8d3f-bef9-41f3-8801-163ad6b2acda"
        },
        "item": {
          "id": "fa6985b5-2537-45aa-be6f-029f57ce7e72",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5feee6e4-7466-495f-901e-4896d9ea37c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7e83f8-1e22-4924-a764-9dafaa7de792",
        "cursor": {
          "ref": "c8d2a8ff-bcb4-478e-b2ee-556854588ebb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fdd96c6d-fca6-450c-bc96-4681c288f54c"
        },
        "item": {
          "id": "ed7e83f8-1e22-4924-a764-9dafaa7de792",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "61353d42-2ad9-4221-8a8e-63547f350f64",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fcbaa3-7ca5-4152-80ba-74b77f0eeaa2",
        "cursor": {
          "ref": "462e15cf-d639-4043-bb64-5fa7727cde68",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "40aff547-6626-45c6-83b5-625ecf84bfa2"
        },
        "item": {
          "id": "09fcbaa3-7ca5-4152-80ba-74b77f0eeaa2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e01dc7a6-83d3-4412-b7fa-51d88ccb8e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb90b416-305f-4e81-abb1-456777ca5b4a",
        "cursor": {
          "ref": "2b7cd036-0112-4a2e-8b91-ac96da7d3040",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f99c992a-c364-4248-85a3-1f98a5e2f5b6"
        },
        "item": {
          "id": "eb90b416-305f-4e81-abb1-456777ca5b4a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a4f4854-2971-4183-872f-359469c3e4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f332073-e445-4eda-9899-730d8ba4299e",
        "cursor": {
          "ref": "b56f653e-52b5-4dae-ae80-d5498aebeb67",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bd6394b8-94a7-437b-b293-f65a2edf05e9"
        },
        "item": {
          "id": "0f332073-e445-4eda-9899-730d8ba4299e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b863d645-9b8b-4f2b-80c9-43a78f9f28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385460f1-c5bb-409e-8f5d-bdd7ac1c892a",
        "cursor": {
          "ref": "e3310950-03ca-47a3-80b5-2fcc4548a859",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "85590a0f-4737-4323-95f5-4bc0c80e98bb"
        },
        "item": {
          "id": "385460f1-c5bb-409e-8f5d-bdd7ac1c892a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "270cb065-5d60-49ec-bdef-0324e88e043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9af5c-1dd2-4633-a36c-0b0c7f3ff6fe",
        "cursor": {
          "ref": "13d9902c-9ee6-48de-a22d-53ca5d9fdc44",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "be90d563-6863-4d63-b4ec-2e08b157d7c9"
        },
        "item": {
          "id": "6af9af5c-1dd2-4633-a36c-0b0c7f3ff6fe",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c50d69c-253b-4b44-b761-65734f9e02d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016be7d4-58a9-49b2-96f9-94d5f21f3aba",
        "cursor": {
          "ref": "2e5551b8-0cba-4aa0-b28c-e42d65f151b5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f7fb522-69ca-4727-a356-a085bf649747"
        },
        "item": {
          "id": "016be7d4-58a9-49b2-96f9-94d5f21f3aba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dd83e9bc-a5c4-4155-aa35-8c47170cb546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef1692f-6715-44bf-862c-c617c1b65932",
        "cursor": {
          "ref": "6c26d8c3-a534-4bbe-9f92-42a7e24b5fa2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d82c505e-8000-4d24-b4ef-016fcfaa1c2c"
        },
        "item": {
          "id": "5ef1692f-6715-44bf-862c-c617c1b65932",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e45a9b98-2dca-4d05-8e90-7677d866ed8b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a8fbaf-fb01-43bc-8eaf-fb50263e7724",
        "cursor": {
          "ref": "69073954-b92c-4442-ad9b-a303f148355b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5935e467-3a12-4556-8411-cd01d06c6b90"
        },
        "item": {
          "id": "26a8fbaf-fb01-43bc-8eaf-fb50263e7724",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ff7d5013-0691-40c6-abbe-709b3dfb09ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126bba63-fa2d-4619-a13b-ac7dd696cb96",
        "cursor": {
          "ref": "aba1b0e8-ccda-4f04-8392-a824fd58deea",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a6573bc8-21dc-4f9f-b8d2-20572326b133"
        },
        "item": {
          "id": "126bba63-fa2d-4619-a13b-ac7dd696cb96",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "850f8419-dd2e-4cdc-83c9-5452e198284d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6655c6-2a3d-4e0e-871a-665956d9248d",
        "cursor": {
          "ref": "682d3776-47b2-45cd-9d25-8141bc87929c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "baf98577-8a0b-4cdc-a022-e98ac27790f2"
        },
        "item": {
          "id": "7f6655c6-2a3d-4e0e-871a-665956d9248d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "02607594-1bf0-40e5-8af7-d42925122942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de25cc4a-7187-4755-8572-1efdcbf9cf2c",
        "cursor": {
          "ref": "bf4f52b5-6528-46b4-9fce-71d86c36d335",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "370d4aa3-d8da-4110-8e6e-9e19595553cb"
        },
        "item": {
          "id": "de25cc4a-7187-4755-8572-1efdcbf9cf2c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea3d45d6-474a-4090-85cb-b9bb57a98511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8e7401-b7de-4f3a-823a-aeaf9dfa59c7",
        "cursor": {
          "ref": "6d3a6125-130a-4ca4-b0d0-66d6947c7194",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bec10df7-588c-4400-9a4e-ab62ac225eea"
        },
        "item": {
          "id": "6c8e7401-b7de-4f3a-823a-aeaf9dfa59c7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9413cd7a-9aa0-4ab7-9afd-be6a920c0908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079cdb3-08d1-45e8-8a6f-92763137178e",
        "cursor": {
          "ref": "33e400eb-e07b-4aaf-afb2-af167aac1940",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9b8d5270-39a3-4698-a9ec-c0ff98fa4d76"
        },
        "item": {
          "id": "1079cdb3-08d1-45e8-8a6f-92763137178e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ffd88cc0-53e5-4889-9acc-08d817c773ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2dd8fa-2126-4e47-a12e-7bece6bddab1",
        "cursor": {
          "ref": "be009a1b-796f-40cd-a9c0-a140f85066cd",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "28758110-f7a7-4d15-96a0-ad07de09ca8e"
        },
        "item": {
          "id": "2d2dd8fa-2126-4e47-a12e-7bece6bddab1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "73a5637f-124c-4552-be9f-957421f16d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233f3ca0-f148-4034-a18b-5ce87529eeab",
        "cursor": {
          "ref": "39bf979b-44fd-496c-8e22-db6587d60761",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "69b681f1-2916-43c7-b805-d9d013a3bec3"
        },
        "item": {
          "id": "233f3ca0-f148-4034-a18b-5ce87529eeab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6a35711-f84a-4ee3-beb3-cd1b8801bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3469d3b0-47fa-4744-95a3-212c499af34e",
        "cursor": {
          "ref": "1dd9934f-0b97-4ef4-95b5-fa2dbc803f9d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4560dec6-7092-489c-a05b-f4321175f5bc"
        },
        "item": {
          "id": "3469d3b0-47fa-4744-95a3-212c499af34e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a431c043-42d2-4975-a4b3-b2d3e1063544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d14160-4676-4ab4-88ac-52e3d3b2204e",
        "cursor": {
          "ref": "bd7a2695-d58c-44f7-b85a-5aec002129f2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16e0183a-dd9d-4c2c-ba9f-d53ffee27c20"
        },
        "item": {
          "id": "81d14160-4676-4ab4-88ac-52e3d3b2204e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1f18484-de8e-4bc8-892e-730bbd704ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa17be5-6ef9-4495-8da6-3a746fb3401d",
        "cursor": {
          "ref": "868f6fdd-0861-40a8-a890-a5537740185c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66f6c65b-d58f-404f-a92b-4166d5b3d759"
        },
        "item": {
          "id": "3aa17be5-6ef9-4495-8da6-3a746fb3401d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f20d7e44-8b73-4863-a5c1-ae10f5b76281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e19014-f507-4f13-aa12-61467ed1bee7",
        "cursor": {
          "ref": "b4a7f0ba-f1a9-41aa-b203-a8b6ff06ce2c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a841caf4-dba3-4b1b-84c1-eeb9db03c5f6"
        },
        "item": {
          "id": "57e19014-f507-4f13-aa12-61467ed1bee7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4242a425-f567-4859-8558-ce6fc1af866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f266b9-3f36-43ec-86a5-07a402ef8ec9",
        "cursor": {
          "ref": "3f74f025-b434-4e66-9b54-ca5cf51e2ff3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6f60a4c4-9c0d-43a0-8c2e-5a77f35b50a0"
        },
        "item": {
          "id": "a3f266b9-3f36-43ec-86a5-07a402ef8ec9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bec8a27d-922a-48af-868c-5da0c94baa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a48ecc-9341-477c-8b2a-71921a4dc2b7",
        "cursor": {
          "ref": "b1d34c27-422e-48be-8b41-849ae9f70681",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "983f7979-d0d2-4f1b-be47-2c1ef38f1972"
        },
        "item": {
          "id": "d0a48ecc-9341-477c-8b2a-71921a4dc2b7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0dabfe9b-1d04-447f-b6ec-881600929814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a7c3db-601b-4492-bc6c-369977c3f435",
        "cursor": {
          "ref": "9133bef5-de21-4d28-8a89-5c059293c456",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4a363943-6b1e-4e41-acbe-5644fe2d9d14"
        },
        "item": {
          "id": "e3a7c3db-601b-4492-bc6c-369977c3f435",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c6ea4968-1cd6-441e-823b-3dc213fe48d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e748ec-deaf-4ae2-93d8-3dbd5c2f741e",
        "cursor": {
          "ref": "c97bfc6c-bb8d-4e1b-b5a8-7606e98e3657",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c60dec0d-a43a-4b98-8a5a-5aa879a59ea5"
        },
        "item": {
          "id": "53e748ec-deaf-4ae2-93d8-3dbd5c2f741e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "727a1a8c-c65a-4e68-a846-14081cd33a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925efa98-583a-42ef-a297-eada2745ffea",
        "cursor": {
          "ref": "a21049e7-119f-47fc-965d-83d0506460f2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "06873a77-24a4-40ff-9098-2ce02d463ba1"
        },
        "item": {
          "id": "925efa98-583a-42ef-a297-eada2745ffea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2270155a-3b63-4aa0-980d-ca79059c6cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88590be-db31-46ab-99f6-90f622505b63",
        "cursor": {
          "ref": "3ea15f76-7599-4d79-b6eb-00b05157520c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2d55e3f-5f7d-4534-ba1b-781ce2a59227"
        },
        "item": {
          "id": "b88590be-db31-46ab-99f6-90f622505b63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b4e34de0-3800-4fbd-95d5-62c2b96f9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150c9976-9e3a-429d-bcfd-7ce1aa771224",
        "cursor": {
          "ref": "800826da-5554-46b7-81b8-17e99b286ba7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "303526d2-0431-4470-aa4f-0dbf946cd43e"
        },
        "item": {
          "id": "150c9976-9e3a-429d-bcfd-7ce1aa771224",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3d29de0f-80dc-475e-9ac2-0466db8643fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9c655e-3957-47f9-ac73-18748937347a",
        "cursor": {
          "ref": "90bcabcd-2fab-4743-be21-cbcf9c97afb6",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e987aa90-6d76-4f26-bf72-cf2ce63cd3e9"
        },
        "item": {
          "id": "bd9c655e-3957-47f9-ac73-18748937347a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3e201012-3644-4572-bccd-d33252b05ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c365658-d0b6-4820-8b00-baf842ead0b6",
        "cursor": {
          "ref": "1ebc4662-74d1-48f3-ad3a-104a06416b11",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2aecead7-82c7-4825-bbae-31cb504fae7d"
        },
        "item": {
          "id": "4c365658-d0b6-4820-8b00-baf842ead0b6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8852939-f72c-4d4f-8f8f-46004edaddec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2750cf9-503f-42dd-a3b1-523dcdbdf9fc",
        "cursor": {
          "ref": "8a28f3cb-7881-44e4-9bf9-37eff2fc6cb2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d3173b8-a6ce-4c58-9cf3-1c144af03848"
        },
        "item": {
          "id": "e2750cf9-503f-42dd-a3b1-523dcdbdf9fc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b320e3b5-d535-4c73-b9e7-ba673275519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003ec38e-4e14-47fc-9eaa-63a976e74f70",
        "cursor": {
          "ref": "db7b6e5e-5793-4659-b4bd-5649e967ad91",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "250fd10f-5473-48a7-b52f-fe32283997c7"
        },
        "item": {
          "id": "003ec38e-4e14-47fc-9eaa-63a976e74f70",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "15714efe-c333-430e-8f1c-21c92455e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb0c21d-c3b1-4c04-972a-bb134be95241",
        "cursor": {
          "ref": "191c1a82-ac77-4e70-8534-119c4bba81ad",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dcc50879-bdd8-4fc7-bf38-276412c60533"
        },
        "item": {
          "id": "ffb0c21d-c3b1-4c04-972a-bb134be95241",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9fd7397a-fef5-4084-894d-1250a656b22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438d6447-68a9-409e-b82a-186e3f15b5f3",
        "cursor": {
          "ref": "e8505c42-2a58-4856-a0dc-f0c9b4758d48",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "026e5907-e63d-4c30-bcc3-46301fe80557"
        },
        "item": {
          "id": "438d6447-68a9-409e-b82a-186e3f15b5f3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2da4739-e773-4ea2-a68e-6973b9a94929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c584d227-4631-4d48-a0b8-741ce3202816",
        "cursor": {
          "ref": "7a6801c1-698f-4fe3-8bca-424cb8408b3d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3da503bc-8f3d-4694-bd93-75757a8effcf"
        },
        "item": {
          "id": "c584d227-4631-4d48-a0b8-741ce3202816",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "449b84aa-f8e2-4b9a-83e4-94ad540b8ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc323e25-f53c-447b-b24d-fe7b2a8488a1",
        "cursor": {
          "ref": "9367867e-a3ca-4278-a93e-995623353353",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "84a93b8f-8777-4671-962f-0290c45cadbe"
        },
        "item": {
          "id": "dc323e25-f53c-447b-b24d-fe7b2a8488a1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b30eed9d-a4ec-4f87-b78b-4c50fec82a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3480e3bd-9b1b-4fe8-9036-0b48646773ae",
        "cursor": {
          "ref": "d7c6f679-389c-4b85-8bb4-414e0482152a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4aeb8f19-61a4-474d-ad63-64a80efef8a2"
        },
        "item": {
          "id": "3480e3bd-9b1b-4fe8-9036-0b48646773ae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "637407dd-2542-4b20-99c4-eb3cef4ba6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee076660-f4a7-4e58-a249-34852abfc43b",
        "cursor": {
          "ref": "6fbe5d63-d737-4b7e-8488-576022b39e60",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "24420baa-0163-4cb2-904b-2f90736326fa"
        },
        "item": {
          "id": "ee076660-f4a7-4e58-a249-34852abfc43b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "56ea2941-4107-4ff6-81b9-19a8a6f70e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9560505e-3dd4-4444-addc-e476ef37cfb5",
        "cursor": {
          "ref": "b6c7d4ff-ff7b-44eb-bf0c-dc00b827c9dd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aa6f0d1f-3f05-4777-8d53-f886ca72ad06"
        },
        "item": {
          "id": "9560505e-3dd4-4444-addc-e476ef37cfb5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4fbcef29-92b6-44f1-a8c6-bf79844ed1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c0e26-e8c0-4623-9d87-e8c74a31c484",
        "cursor": {
          "ref": "5e0582f2-9847-466e-b498-d71d857c9450",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "99ffa9eb-799f-4d58-8e32-f870e8c7c68f"
        },
        "item": {
          "id": "741c0e26-e8c0-4623-9d87-e8c74a31c484",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af4cb2a0-de5f-47f5-b350-4326808bef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8222bb7a-2158-4864-807b-9a774b13070e",
        "cursor": {
          "ref": "1219a54d-78c0-4f44-b959-793be844381b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fc014369-0b0a-418f-b92a-df670ddad429"
        },
        "item": {
          "id": "8222bb7a-2158-4864-807b-9a774b13070e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd96c94b-40ed-446d-a0fb-cf33a15f5315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3046dec-9cbb-46d9-862f-a10b7b388e5b",
        "cursor": {
          "ref": "09e844dd-e995-4f32-826d-1934252d28cc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d743eae8-9bcf-406b-b586-98d17791e267"
        },
        "item": {
          "id": "a3046dec-9cbb-46d9-862f-a10b7b388e5b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "87e5601b-5497-4d59-a2ad-d8cd9e04fe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2c6b7b-d012-47fd-aae2-18717010e359",
        "cursor": {
          "ref": "517b7301-6206-47d4-bf32-f33a4eb6324b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc665a50-8f4c-4212-960e-35b18be33c99"
        },
        "item": {
          "id": "5d2c6b7b-d012-47fd-aae2-18717010e359",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0d1142bf-5697-4cf4-90d4-9d1182e522b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd4a788-d88b-49df-bd16-11d8b2b0ac16",
        "cursor": {
          "ref": "4b39ab3a-52ca-4dbd-af6c-aca3326cf830",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "47aecce5-c56f-49a3-82cc-ef6960d137e9"
        },
        "item": {
          "id": "4fd4a788-d88b-49df-bd16-11d8b2b0ac16",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f097d40f-b4a7-4f66-b250-a3f8b7c4ecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7422eb7a-8dec-4906-9c4f-a97f6cac2e44",
        "cursor": {
          "ref": "86e94aec-4b0a-4242-9043-e1b98ba47c13",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0d92d5f5-763e-4bd5-8443-db2cb85c67ef"
        },
        "item": {
          "id": "7422eb7a-8dec-4906-9c4f-a97f6cac2e44",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f3e27f8-f491-40d3-8a18-064c4a76d4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcd7703-ae7d-4f62-83d4-61304c42097b",
        "cursor": {
          "ref": "c1e7ec68-8635-4577-b075-4ef5b6b45a6a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3c6f484b-5afb-4ec7-8bf0-f804943840c1"
        },
        "item": {
          "id": "afcd7703-ae7d-4f62-83d4-61304c42097b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "89693dd5-a898-4250-ba78-deff5bbbf477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f69f71-249a-4d3e-8636-270149a364ff",
        "cursor": {
          "ref": "ad72a8f9-f413-461d-b631-1a6bb6ed7f9c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "190142e3-5c6d-419b-8fd8-66bb752282d6"
        },
        "item": {
          "id": "86f69f71-249a-4d3e-8636-270149a364ff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed049d21-6cbb-4f3c-b94b-b5c4b4ccd8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969f7064-18d5-48a5-8e80-3bbcd4b67a82",
        "cursor": {
          "ref": "7f37aad4-0a4f-4dee-8b87-af6163954b5c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92820ee8-91f7-448f-96b6-0da50b14eaa6"
        },
        "item": {
          "id": "969f7064-18d5-48a5-8e80-3bbcd4b67a82",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "79239728-1bc8-4e7c-a226-c58db4bdc430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531d2fae-298e-44bb-986f-dd8e6e58cfdc",
        "cursor": {
          "ref": "00bdc983-3a73-4128-b252-b4ad26e57f72",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0ca2a2f4-c777-4e9c-aad1-d704f9716e04"
        },
        "item": {
          "id": "531d2fae-298e-44bb-986f-dd8e6e58cfdc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2aa3b0fe-cbe4-4e6d-a923-25e5579e6816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b9a6b-264c-4a29-9a85-7ac2bfd0d674",
        "cursor": {
          "ref": "53efbe95-7bf2-4cc6-9104-4bfd831578a2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "db99b8a2-0809-4a0d-b7f2-d7dc8c1fd155"
        },
        "item": {
          "id": "818b9a6b-264c-4a29-9a85-7ac2bfd0d674",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b9da4657-41dd-45a1-8dad-1e323da264d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b78e8e-5913-4130-9386-45930ad42e9d",
        "cursor": {
          "ref": "3ceaddff-7a1c-4e35-9e5f-3aa63cb8b0b3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c4c72cf8-139e-4b61-8fcd-30e76a28eaa2"
        },
        "item": {
          "id": "d4b78e8e-5913-4130-9386-45930ad42e9d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8da0d753-38c3-4600-bf56-8e728092ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c1ae77-5001-48ce-ad21-1de3cc4b391f",
        "cursor": {
          "ref": "22609555-a607-4148-8edb-de2bfe90d426",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f24d9ae0-4826-473c-9ede-39aa0f516a71"
        },
        "item": {
          "id": "23c1ae77-5001-48ce-ad21-1de3cc4b391f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb7b610c-81ba-4471-af81-dd237175e96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1833f60d-bd56-494d-8a98-317b7263c907",
        "cursor": {
          "ref": "049872a1-3630-43d5-8f53-947e09878bf7",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f6ac0efc-9ee8-4390-abe6-54fae22807ef"
        },
        "item": {
          "id": "1833f60d-bd56-494d-8a98-317b7263c907",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b50eab4-0ee3-4ad0-9b6a-aa2f7f6236b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5ac203-8b6c-4c3d-97da-0f8e6cd07fee",
        "cursor": {
          "ref": "70d87117-ba0e-434d-bdf8-320e74d9d6b9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f21593bd-bea3-45f9-a83e-29567456f305"
        },
        "item": {
          "id": "2d5ac203-8b6c-4c3d-97da-0f8e6cd07fee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7aeaacf5-7ddc-4785-854b-f636bf699350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6e3de4-2b42-4943-b454-5211dc64c493",
        "cursor": {
          "ref": "e53909de-afd4-44b3-bc45-7990a0f16ebc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c0cd26bc-2c77-419a-b21e-0ba703eca718"
        },
        "item": {
          "id": "eb6e3de4-2b42-4943-b454-5211dc64c493",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "895c52f6-5594-486d-9fbf-ee1eb2e8184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f1137-0fb9-43f4-914e-ed98cc49ab57",
        "cursor": {
          "ref": "6017aa06-84d6-4d3c-9961-af5eaa3d9862",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dce3b67d-a4f9-4a20-832e-f84eb44f35a2"
        },
        "item": {
          "id": "dd6f1137-0fb9-43f4-914e-ed98cc49ab57",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6e820419-442c-44a6-b662-6e55736e8260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54f94bb-0a9c-4e88-92d2-31fc5d1cd7a1",
        "cursor": {
          "ref": "594e6bf0-aa59-4f05-8906-63ceccfdd66c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "25d9bee4-556c-4867-97d9-a2ed66cb7084"
        },
        "item": {
          "id": "e54f94bb-0a9c-4e88-92d2-31fc5d1cd7a1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "52951c00-a7f2-4a2a-af91-3bdd5f9548a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e67f87e-e10c-4b88-b8e5-7da3ddfc40a9",
        "cursor": {
          "ref": "b2b49d84-cf04-4e0d-a042-2feb09fa104f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "22d70822-1f1e-4f18-942f-4b155e4db8a4"
        },
        "item": {
          "id": "8e67f87e-e10c-4b88-b8e5-7da3ddfc40a9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2129448d-03a5-4ece-8f9e-f57191cfacc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4aaaf1-8d75-43bc-ae76-3cf0b47173d8",
        "cursor": {
          "ref": "8251cca0-5c66-4c60-b4ff-4421d3c97678",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2898f2d5-9e3f-45a7-b873-1f1722f2b90a"
        },
        "item": {
          "id": "3d4aaaf1-8d75-43bc-ae76-3cf0b47173d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "682c019e-1972-4398-8ad9-e6fd061f4760",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5bf83e-5ce3-43e8-b084-9cffade2204e",
        "cursor": {
          "ref": "9e3acc39-c170-4e82-8df4-75b9956d6a43",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "94f6b91c-97d9-452b-8c31-dd991eb0b59a"
        },
        "item": {
          "id": "ab5bf83e-5ce3-43e8-b084-9cffade2204e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c78152c1-a434-4b54-bc9d-054c0c7b8072",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b510c92-c213-4528-9832-dfd9e5b22474",
        "cursor": {
          "ref": "f0fd885c-d173-4a40-9b6d-e2799e4280cb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "055593b8-bcd6-49e9-8096-907d113ed7b4"
        },
        "item": {
          "id": "2b510c92-c213-4528-9832-dfd9e5b22474",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b32ee73c-d795-4828-aa86-d94e935982b0",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bef838-24e9-4d72-9e4d-7a7a231b45eb",
        "cursor": {
          "ref": "23ccd3d9-431c-48b8-9a05-d87c8c47c8c6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0777f073-1077-4b7e-bf8b-e4f4d8d04ea8"
        },
        "item": {
          "id": "33bef838-24e9-4d72-9e4d-7a7a231b45eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "28f2c85e-e1f4-4ab0-88b7-aa7078e776e7",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7643624c-fc03-478c-ab08-ff0a2e2634ca",
        "cursor": {
          "ref": "40263492-20c7-45fb-beaf-f5bf6212fd20",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e4f3b76b-b315-4945-88c4-8090d64acc68"
        },
        "item": {
          "id": "7643624c-fc03-478c-ab08-ff0a2e2634ca",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "12174973-7e10-4beb-86d2-50610d71cc1b",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ad852-0718-492f-ae70-54d7236930f1",
        "cursor": {
          "ref": "51e4dfca-0b6a-4b63-9d78-57b58ba965a3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dcf79885-3704-4b2a-96ab-3072473717d9"
        },
        "item": {
          "id": "e48ad852-0718-492f-ae70-54d7236930f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "42491cba-67a4-4588-8644-5325c1c0ddf5",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445f3d7-3d47-4fa6-b3e1-e52175e53230",
        "cursor": {
          "ref": "95bf4828-03f5-4408-acd7-62fd4cc4d168",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "78bcfebb-e7de-42f1-b796-19e59f74a04a"
        },
        "item": {
          "id": "0445f3d7-3d47-4fa6-b3e1-e52175e53230",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5041f5a9-99c9-4218-a73a-8fef31a5c07b",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ecde0d-0c29-416f-9434-09789850e52d",
        "cursor": {
          "ref": "87de3ce2-b584-4ea4-a5ee-75bf8e053d82",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67ffc5a1-1389-4fc9-8d18-00e021da238d"
        },
        "item": {
          "id": "20ecde0d-0c29-416f-9434-09789850e52d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb9e85b5-fbea-4dd1-a176-5888202a8805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99077a6a-f7b7-42a8-b019-8990f9461e9a",
        "cursor": {
          "ref": "47302ae7-fe62-45cf-a7c9-4a17ae9f818f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94a3f3ab-27f8-4b4a-a60a-476937ec42b4"
        },
        "item": {
          "id": "99077a6a-f7b7-42a8-b019-8990f9461e9a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b238cdb-1dd4-4d06-acda-b26e83b483d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34b62a4-a1ef-4c81-8c6a-5d46fc849348",
        "cursor": {
          "ref": "d48f9210-97f4-4b29-a323-cc3c4b8f646f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce39b519-539c-4f71-9deb-32442f91c4f6"
        },
        "item": {
          "id": "c34b62a4-a1ef-4c81-8c6a-5d46fc849348",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5507b153-7c59-4eee-ac73-3e67591d751e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00c1262-1d25-40ff-802f-8cfdca352b19",
        "cursor": {
          "ref": "97aa0eeb-393b-410f-85b4-ecedadf66fd9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0d999dae-6211-4f83-9d2c-192efe0f61c5"
        },
        "item": {
          "id": "d00c1262-1d25-40ff-802f-8cfdca352b19",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cd112a11-f45a-44d7-801f-23d82b0d571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20f38f8-1551-4ec4-80ca-015226d8f3a1",
        "cursor": {
          "ref": "8fdfec83-40c6-440f-b55b-c7e961e824d5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc102a52-a3bb-4416-a1c1-41c9aa4565c4"
        },
        "item": {
          "id": "c20f38f8-1551-4ec4-80ca-015226d8f3a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7d989439-97dd-4ab9-bfc6-9e0e3242d857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78d47f1-f434-48c9-9f61-afa299274e33",
        "cursor": {
          "ref": "237f936f-12a1-4991-9e57-5ee31005c3fc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "741d7089-d0aa-41ec-b9c2-7ef72d736c3e"
        },
        "item": {
          "id": "e78d47f1-f434-48c9-9f61-afa299274e33",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d165551-2897-4fa6-a0c0-6bcae932ff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e09994-9765-4244-94fe-fb040f92a716",
        "cursor": {
          "ref": "bce30aac-3620-4647-b097-4153211b5757",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7f8078b4-cda5-4a77-b59d-c3a8c0befab3"
        },
        "item": {
          "id": "e1e09994-9765-4244-94fe-fb040f92a716",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "221ad1bd-a31e-4487-b550-d6c70c36bef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485d2347-bb7f-474a-acec-e4f751ed41e8",
        "cursor": {
          "ref": "2f65ae71-07fa-4fdf-88b3-6149ca7b216e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e5a235eb-d0ef-47a8-8ccf-f2a5064e687a"
        },
        "item": {
          "id": "485d2347-bb7f-474a-acec-e4f751ed41e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a81be44c-1b89-46f9-a13b-8c5018b0d586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2ae2b5-0779-40d4-9192-ba8cd26597dc",
        "cursor": {
          "ref": "5725c1e1-7808-4b78-b3f4-b81f4e6b495c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b7d95c17-235e-4a4e-a80a-7f741e4b1922"
        },
        "item": {
          "id": "5a2ae2b5-0779-40d4-9192-ba8cd26597dc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2e823605-429e-4798-8fed-5b5385559551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09893d5e-ce08-40b2-89ae-72843159a060",
        "cursor": {
          "ref": "19186332-01b8-4994-a28d-0ab5ea42ac32",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "074bd2dd-80c8-4ebb-bbc9-fc0736c12d7a"
        },
        "item": {
          "id": "09893d5e-ce08-40b2-89ae-72843159a060",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d7081311-803f-4104-bf92-d8edac1db784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3d4587-759c-4cb6-a1b2-54cb31c2c85c",
        "cursor": {
          "ref": "74a0f058-eeec-4d60-81cb-bf36ffae8b4a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c7ceddc7-2e9e-4a5f-bb49-b0fe458569f2"
        },
        "item": {
          "id": "be3d4587-759c-4cb6-a1b2-54cb31c2c85c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0fbc145f-e458-4177-9188-8c02a04d2357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a7a89-046a-49d0-bf0f-5f99a35d497f",
        "cursor": {
          "ref": "1f86b34c-b8d5-4d55-bc1c-e9230b0562cd",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dbc0022b-d250-4ee0-8d48-24dcb5b8215d"
        },
        "item": {
          "id": "917a7a89-046a-49d0-bf0f-5f99a35d497f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f772254-8720-43a7-914c-6ccd8f5cc663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf9dbeb-b9a0-40ce-a6b8-bfa8956e4208",
        "cursor": {
          "ref": "4202516d-4d85-46ce-a320-47f7c7454b5d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f19739d2-d14c-4355-bb57-4b2013b23883"
        },
        "item": {
          "id": "9bf9dbeb-b9a0-40ce-a6b8-bfa8956e4208",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2d53f0ad-4103-47ff-8fc2-8bf21bef62b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c84595-93d7-4343-bf78-41869b398590",
        "cursor": {
          "ref": "f108430d-aa63-4d1a-b06a-0f290151086f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d507d015-49d2-4a86-9c48-e21783d3acde"
        },
        "item": {
          "id": "43c84595-93d7-4343-bf78-41869b398590",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "30124506-6093-4301-80ec-3e0a915a7a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6452d0-3eec-48c2-a21a-5956b635f882",
        "cursor": {
          "ref": "1a178adb-fd8b-492f-a528-b103c3c45e74",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f674318e-22ee-4fe5-ae83-af552b6583a5"
        },
        "item": {
          "id": "1f6452d0-3eec-48c2-a21a-5956b635f882",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc160e62-c1d6-4ba0-9850-e7e902ca134a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c385339a-8a26-48b7-9c8b-918ad8924687",
        "cursor": {
          "ref": "33ff4082-e02c-4de6-a36b-1091f1725cef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4f1c893b-fcfa-4e31-80cf-6d1509272ec3"
        },
        "item": {
          "id": "c385339a-8a26-48b7-9c8b-918ad8924687",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "66d624bf-b558-4d3a-8d2c-90819e60fb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e568a0f5-df96-4c29-a9f3-44374c4e56cd",
        "cursor": {
          "ref": "c1e78d8b-3764-4c9e-ac4d-f3f3cec4be26",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6303aa17-6ca6-4a9e-b0e7-279693d702b7"
        },
        "item": {
          "id": "e568a0f5-df96-4c29-a9f3-44374c4e56cd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f0b72ba-a27e-49ba-873f-27f0c7d39866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e7b2ce-f84c-4f53-a5f0-64320bb6d0c6",
        "cursor": {
          "ref": "c6c7874c-7be8-4b84-b429-91d14008d5a3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "535a4c5e-9291-4def-9aa3-cbe54f7bc7fd"
        },
        "item": {
          "id": "a3e7b2ce-f84c-4f53-a5f0-64320bb6d0c6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0b6176ab-6c7b-48d1-9dc7-822c1b7b69c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7641f9-6378-4c6e-aff9-5fe6c6195881",
        "cursor": {
          "ref": "4e15bcd4-401e-4a34-9b10-271315fc3a1c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b6850918-bc8f-4a04-94ad-0ce45f6d3b9e"
        },
        "item": {
          "id": "fe7641f9-6378-4c6e-aff9-5fe6c6195881",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e702b7d-62d2-4628-aabb-b819bf8157ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e2258-f4a2-4407-9329-4c9724c887bd",
        "cursor": {
          "ref": "f96e5383-6f84-4cb2-b8d6-2f73ec7949eb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5806dd0d-0322-468b-9d35-d46b4555d3ce"
        },
        "item": {
          "id": "6e8e2258-f4a2-4407-9329-4c9724c887bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "47beb4d3-c630-4e1a-a5a6-1f1d38944194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1387864-fd0b-4d14-9fb5-0b290b2775d8",
        "cursor": {
          "ref": "0ed6d0cc-e9f8-4b2b-a29e-9d675317a865",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b0329ea7-c9c5-4435-881f-d776923532f9"
        },
        "item": {
          "id": "f1387864-fd0b-4d14-9fb5-0b290b2775d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6aa25738-a16b-4651-bdf7-a2fa54d59f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03dd5f-f7c5-4f12-8e85-58485884b7a7",
        "cursor": {
          "ref": "5a155031-1faf-4876-b348-e30c0fd44d0c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6b3861e4-e833-4867-a4ae-2c9b678cda7d"
        },
        "item": {
          "id": "3f03dd5f-f7c5-4f12-8e85-58485884b7a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5beee426-d4d7-4a3a-9955-930c44c3f575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9703c8ab-2422-47c8-96fe-56d76719031f",
        "cursor": {
          "ref": "eb23643b-0b1f-467d-bef1-1ec7ee364852",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ae95342c-1d05-433e-8869-08a6b807f391"
        },
        "item": {
          "id": "9703c8ab-2422-47c8-96fe-56d76719031f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2096f24c-80ed-4e31-88d5-e87a48669c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ffc05-c553-4921-9a82-1197894e62aa",
        "cursor": {
          "ref": "4eb73e67-3303-4301-adae-a724f0ae3b31",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a6859b1e-252e-4f7f-8d7b-417c05d2411e"
        },
        "item": {
          "id": "e73ffc05-c553-4921-9a82-1197894e62aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f4438b0c-e028-457f-885e-fb3904f67822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c833c59c-81c1-4b08-9a93-6810414726b0",
        "cursor": {
          "ref": "cb684fbe-2502-452c-b801-55529efe0602",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9d456335-e1e1-4711-bc34-37efdb9baafd"
        },
        "item": {
          "id": "c833c59c-81c1-4b08-9a93-6810414726b0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c5c8cd01-b90f-4bee-95fa-3be4b761623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b5961-a742-45d4-abf8-1951c4282ded",
        "cursor": {
          "ref": "479347de-d6fd-45ab-a293-67699f9590b9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fb42535c-a855-42d7-a3b8-0fb1e0890521"
        },
        "item": {
          "id": "c03b5961-a742-45d4-abf8-1951c4282ded",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e29b7ea2-81c0-4780-897d-030f90ef9fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db60ea67-de1c-4a39-9d79-79974be495e2",
        "cursor": {
          "ref": "b79a40c9-94f3-4adf-9a70-ea778206ca06",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2460fb5f-46a9-41b3-9c60-317ec89e709b"
        },
        "item": {
          "id": "db60ea67-de1c-4a39-9d79-79974be495e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "19ae8489-8d2a-413b-a2c5-e3a812e050bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb44dd51-8c2d-42bf-9ab0-0c5eae474c9a",
        "cursor": {
          "ref": "cacdc614-4696-4f2d-8cf8-41ab4470f6de",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e90718a7-a043-455c-b3b4-237ad5c5880f"
        },
        "item": {
          "id": "cb44dd51-8c2d-42bf-9ab0-0c5eae474c9a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "775d036a-3fe0-4761-b39e-d1c43d35f258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519d3147-34bc-4883-afdc-e862cb5b7852",
        "cursor": {
          "ref": "7cd9f2ff-f534-4386-a0c3-07f05357dd71",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a7cbe815-c53e-4339-ab94-12673d51275b"
        },
        "item": {
          "id": "519d3147-34bc-4883-afdc-e862cb5b7852",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eef27e9e-b84e-46dc-b39f-75f1130130ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b542c-6bc7-473a-be29-b3dabd6b8045",
        "cursor": {
          "ref": "4afbd7fc-018d-4ab8-81a5-122a3eb28aef",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f63231f-6c48-4339-a434-8186ce1160d3"
        },
        "item": {
          "id": "648b542c-6bc7-473a-be29-b3dabd6b8045",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "630135ab-1a0a-4b7d-ace4-789193b61bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b55521-7f7c-4aa8-bc77-1d0e70dc994a",
        "cursor": {
          "ref": "6b01b560-7b43-4e7e-8896-262c47e43aa4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3d91f024-004b-41a6-a54e-6eb13232768e"
        },
        "item": {
          "id": "65b55521-7f7c-4aa8-bc77-1d0e70dc994a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e4e49e20-fd1a-4b19-be6a-7a1e375b7def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838485ec-50c5-4f84-9193-693a60b65ad1",
        "cursor": {
          "ref": "6dd30e22-49e7-43c9-a2b1-c29372ab55a4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "194f5bbf-15f8-4418-bcd3-cace0f670a48"
        },
        "item": {
          "id": "838485ec-50c5-4f84-9193-693a60b65ad1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "21586c33-0f55-4af4-93c7-2aca3a2b10a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314ccf89-2d0a-4458-87d3-6a8198224a69",
        "cursor": {
          "ref": "fd0833a4-f3a4-439b-a617-14fc307e47a7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c376a22a-e3c9-4fc8-aa83-08ad057cfcdf"
        },
        "item": {
          "id": "314ccf89-2d0a-4458-87d3-6a8198224a69",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df12fca7-e3d1-4e7a-8165-0e761e823c34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0651e101-e7b8-4458-9f42-e5fe12f2d61b",
        "cursor": {
          "ref": "17ccd511-d9c8-42d1-b4fc-23eb4b0c9dd2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "45ca3320-8011-4b9e-9f69-4d467e881428"
        },
        "item": {
          "id": "0651e101-e7b8-4458-9f42-e5fe12f2d61b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "321f3f4b-8d5d-406f-9138-d7dbaa01c698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efad0a2c-d192-4d89-9465-8fd7f21cca86",
        "cursor": {
          "ref": "3bc1274a-5255-43a3-91f0-446e171f3b8e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eeb4e4f1-4213-48c8-a7bb-d1e65b2687ff"
        },
        "item": {
          "id": "efad0a2c-d192-4d89-9465-8fd7f21cca86",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f925ef1-63b4-4d8a-8438-13959601e981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d48677a-e123-4fe8-8440-6bd469e7baf6",
        "cursor": {
          "ref": "7bd9aff2-1886-48b4-822e-cc55e790ca96",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d53b714-cd6f-4893-8aa2-293a1110e98a"
        },
        "item": {
          "id": "8d48677a-e123-4fe8-8440-6bd469e7baf6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87fa641d-44fa-4de9-8d77-eeaf5dea744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e966af-10fe-49d3-9318-d73931ae87ed",
        "cursor": {
          "ref": "11eb8e5b-24d3-4947-a94c-e46533750673",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0e6b25c0-358d-4a20-abe9-dc45cfeada32"
        },
        "item": {
          "id": "31e966af-10fe-49d3-9318-d73931ae87ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce602114-3be1-4122-b491-dd6dd1cdca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c13bf91-8da2-4774-b364-7545f85475dc",
        "cursor": {
          "ref": "ab4e5980-b372-4489-8509-8d242b744ac4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "805f601e-a9b5-4a6f-a2fe-8211035f43f7"
        },
        "item": {
          "id": "0c13bf91-8da2-4774-b364-7545f85475dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf04b2ba-2bf0-4e3c-8cdd-fba0b91de43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d28065d-2dc8-4793-8f10-59b8f9265290",
        "cursor": {
          "ref": "bf612637-8647-4315-9a0f-1ce3b72437e6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8ae2d7a7-0ff4-46c8-a739-326edea90bbd"
        },
        "item": {
          "id": "5d28065d-2dc8-4793-8f10-59b8f9265290",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "63c1fe79-ef51-4552-823e-315c3fd1cd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606226e-84c5-4031-b40e-9b69b3d55385",
        "cursor": {
          "ref": "5ab7fa2c-8287-4422-b6f1-bc52bca85e52",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ad3a62b7-b2c0-46b4-b218-618163e5fbbe"
        },
        "item": {
          "id": "2606226e-84c5-4031-b40e-9b69b3d55385",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c8c6570-7803-47ca-81b7-ccb9c551a2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f647e8f8-3ecc-4511-bdf5-7816194edcc2",
        "cursor": {
          "ref": "e3b0f9f0-92a0-420e-9f60-9d872f17965c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ee27cfe0-13c7-41bb-8127-a68b037a24db"
        },
        "item": {
          "id": "f647e8f8-3ecc-4511-bdf5-7816194edcc2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bdc7361f-e7be-4600-a392-b1dfefe326ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dfb1a5-32d5-4406-932a-96a1cb0f4514",
        "cursor": {
          "ref": "2d457f07-b541-433c-be69-fa975725871f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "482209a8-4404-4d4d-b365-f76c4d3229b9"
        },
        "item": {
          "id": "d7dfb1a5-32d5-4406-932a-96a1cb0f4514",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da9b1599-8851-45d3-adc5-6a0b3736f98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500943d2-0917-4197-85b8-ff31a9a6d43d",
        "cursor": {
          "ref": "c93e1559-f881-4a68-93af-2418d135d8b2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f7da8acd-50dd-4dfd-9d08-290be8de2aa6"
        },
        "item": {
          "id": "500943d2-0917-4197-85b8-ff31a9a6d43d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b2cb4930-78ff-4584-89e0-44e2c1875404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e26ad5b-0092-491c-9843-da01e30c2faa",
        "cursor": {
          "ref": "8aa72798-3bf8-4a08-961f-b93060c59ec7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3d77ccf3-c561-4071-93d0-f9cd90f1c1b8"
        },
        "item": {
          "id": "6e26ad5b-0092-491c-9843-da01e30c2faa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "51fed09b-6ddc-49ce-8fa8-b4e26f9b552f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f575c99-3ba6-4abd-850f-2fc0c383b1d2",
        "cursor": {
          "ref": "d3ef8057-5d51-422f-a0d8-0b19dd03b243",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3b8a5e5b-623d-49e2-b92b-795e1089dff8"
        },
        "item": {
          "id": "3f575c99-3ba6-4abd-850f-2fc0c383b1d2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f43b849e-56a9-443d-b269-084ccb98cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c6c87f-26d8-492e-a642-b16d4d9421f6",
        "cursor": {
          "ref": "a251cc22-8afb-4368-94ac-538dab3a0315",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7201f318-e5eb-4a1e-b232-51dbbfa207d4"
        },
        "item": {
          "id": "36c6c87f-26d8-492e-a642-b16d4d9421f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "baa1830c-641b-4727-a18e-a5c7dbab8593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d5726-c94f-49fd-bc14-96d709d439c7",
        "cursor": {
          "ref": "f7a4b14d-e9e8-45b2-a6bf-9e93e49b9faf",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "22d3b603-5432-48e8-bad2-2e38e185d602"
        },
        "item": {
          "id": "748d5726-c94f-49fd-bc14-96d709d439c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "708a64e3-5859-4d9e-8c66-3f2d49273f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee3c67e-0488-49e8-bd19-0b8411eb62d6",
        "cursor": {
          "ref": "52d988b3-2b02-41a8-9568-e0f3e67534e0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e9a58ea1-6e64-411a-9538-4a51b8422003"
        },
        "item": {
          "id": "aee3c67e-0488-49e8-bd19-0b8411eb62d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f7325db3-7df3-4379-ac8f-4a0ffe1d3e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271b9268-93f8-4f04-aa30-776671d056e1",
        "cursor": {
          "ref": "3510ed8a-dea7-47fd-95b5-e3f3b03c1b62",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f083c04e-1241-4053-a4f3-37dec066a0d6"
        },
        "item": {
          "id": "271b9268-93f8-4f04-aa30-776671d056e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f12e60fe-2f40-4f2e-8705-0ff09b594f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2914e728-96d4-478d-8efd-6204a30bcdaf",
        "cursor": {
          "ref": "787e40b4-9ca0-4842-9e75-d6ecbbda4ec2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "730e0921-3cd8-4067-9e0a-d3ef2e8df42f"
        },
        "item": {
          "id": "2914e728-96d4-478d-8efd-6204a30bcdaf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9fca293e-ff11-4a29-9753-08e1c40ea3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d1faaa-35f2-4ac3-b200-d2283dc6a4af",
        "cursor": {
          "ref": "b415497e-d561-43d1-b9b0-f6cd3e34403a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b2f6ab23-09ad-4211-9481-a051b115104c"
        },
        "item": {
          "id": "67d1faaa-35f2-4ac3-b200-d2283dc6a4af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc0f3633-605c-4b10-87f9-afe376b465dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae21c8e-4c98-403c-b53f-5c96d1428a35",
        "cursor": {
          "ref": "59de68bf-abd0-4c73-8f5f-ea179461e168",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "68bbd00d-91b2-4c6e-95de-ae4aab28db5d"
        },
        "item": {
          "id": "0ae21c8e-4c98-403c-b53f-5c96d1428a35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dac839cf-a4e1-4e70-b37a-7239bb491dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a251a461-90ad-4f7a-95e5-0f8fea321c02",
        "cursor": {
          "ref": "6d6efac4-186d-4322-a1e1-7bd5e1d9a545",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0195d59a-ba99-4bec-85c1-8453ea478800"
        },
        "item": {
          "id": "a251a461-90ad-4f7a-95e5-0f8fea321c02",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01486b92-e6fd-4099-9cff-e5143c4cb6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf9f6da-9521-407e-8a5e-4cb8979df924",
        "cursor": {
          "ref": "84c20447-8858-4f66-b24b-1836babee33b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "29e5f660-717e-418e-ac14-5434b7721544"
        },
        "item": {
          "id": "aaf9f6da-9521-407e-8a5e-4cb8979df924",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9e2d6c71-aa94-4c02-9552-34c46c43d478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fbaa0d-f6ce-40c3-8999-2f5cf5940934",
        "cursor": {
          "ref": "c4823263-e5a8-4057-a12e-ec43f7b1e160",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ee2988b-cddc-4cdb-a3b2-acf4f260b2a1"
        },
        "item": {
          "id": "f5fbaa0d-f6ce-40c3-8999-2f5cf5940934",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1814a3dc-28ba-4e25-aaf6-4960f0d736f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ab4f9-4234-4651-aa33-e66e16ead46d",
        "cursor": {
          "ref": "f63ff87c-cdfe-40a5-934e-958824f690ed",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "03ef0f69-847a-4bcf-875a-3bb7603071a2"
        },
        "item": {
          "id": "1d7ab4f9-4234-4651-aa33-e66e16ead46d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "40933827-47bc-44ee-a166-b3f9d4c5bdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7491f1-3292-4450-b8b9-00b298815d3f",
        "cursor": {
          "ref": "945f473c-c8fe-47d4-b686-d10dc245be63",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "95615112-d3d0-4664-b4c8-009cef6aa72b"
        },
        "item": {
          "id": "5c7491f1-3292-4450-b8b9-00b298815d3f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "220628be-4712-4d04-876e-8b526ac803a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec0eeaa-e179-4d85-8201-acc94fec6ecf",
        "cursor": {
          "ref": "6956ebfc-0ad3-4b18-9519-7c83fed64a65",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05ea9542-25d1-4047-a523-39b2dabf9fd7"
        },
        "item": {
          "id": "5ec0eeaa-e179-4d85-8201-acc94fec6ecf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c60c2720-d9e0-480a-86f5-6381f2d168ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3cea39-1e21-4d0c-b0b8-7558a120578f",
        "cursor": {
          "ref": "7dea519b-d655-42f0-8ae3-958e7bc20a42",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f19b8ce-38b8-43a1-b70f-09959c912b15"
        },
        "item": {
          "id": "2a3cea39-1e21-4d0c-b0b8-7558a120578f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "23c2bf96-eafe-4ca0-8363-9950285a0eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f56a15-a220-47fb-bb57-319b09f6148f",
        "cursor": {
          "ref": "725f7244-f758-499b-b0d8-e7aca393eb8d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e6e99b28-3ec5-4eb5-b1b9-4c320e30bb32"
        },
        "item": {
          "id": "b7f56a15-a220-47fb-bb57-319b09f6148f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "465a88c7-721e-4800-8b16-75c79d1f0419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c9e294-0c09-43fb-8a0d-e1956b3733dd",
        "cursor": {
          "ref": "dca5bf34-e538-4a75-9084-8f73d0844134",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3cc548b9-3be6-4b50-921e-2cfcdc3c0420"
        },
        "item": {
          "id": "85c9e294-0c09-43fb-8a0d-e1956b3733dd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b6fdc43-96a1-4b00-8f80-30d2d29bcd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064e4018-4731-4591-9698-0723c1430910",
        "cursor": {
          "ref": "c6fb36aa-e7d1-40cf-9ada-25eaf7977aa6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1a274888-ccb8-46ad-ba99-8c80848b2173"
        },
        "item": {
          "id": "064e4018-4731-4591-9698-0723c1430910",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0e55fe4e-3c19-4704-84bb-a182e2b41e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3573d205-251c-4fab-97a6-df914e3e2bdc",
        "cursor": {
          "ref": "d3b9d161-c7dd-4895-9c36-0fad0f5546d7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a2be1e7a-4420-44ab-a39c-ed7ac8ae1790"
        },
        "item": {
          "id": "3573d205-251c-4fab-97a6-df914e3e2bdc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8397e72d-856a-4182-b6bd-6fcf6c54ecdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4866b5c1-989b-44bf-bee8-8eea1c46efec",
        "cursor": {
          "ref": "7d3d2b21-476c-407b-894b-e7e327af736c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2bb31df4-4ecf-46ef-9875-85fb0391ebfb"
        },
        "item": {
          "id": "4866b5c1-989b-44bf-bee8-8eea1c46efec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d07babbe-e7c2-44db-b0c0-e1ddea8f4c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee1b9db-c66f-4e3f-bfad-f444e9b44f77",
        "cursor": {
          "ref": "1ba0ba41-a596-4a9d-b3ac-97ff4b7b62e4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "26bd525a-b9b9-4c3c-b76a-70eb1efd3066"
        },
        "item": {
          "id": "0ee1b9db-c66f-4e3f-bfad-f444e9b44f77",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d1d91646-cdf5-4509-b2e2-5649900ce554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44dc73a-d688-48f4-83fd-706c7ca218c6",
        "cursor": {
          "ref": "1a14297e-f530-4518-8d19-b46a2333ebeb",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "784f069f-9714-4719-bc6e-cc471d67eedd"
        },
        "item": {
          "id": "d44dc73a-d688-48f4-83fd-706c7ca218c6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "69b6e3c4-2ffc-468d-89e3-973d792efa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad8a49a-8ed7-4dc5-ba60-9699ec25a8a1",
        "cursor": {
          "ref": "46f59d8a-c6a3-4930-9ce3-d26c8971ad9f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e851035-9d1e-4b8c-ae19-62ffad273610"
        },
        "item": {
          "id": "fad8a49a-8ed7-4dc5-ba60-9699ec25a8a1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "94836529-8395-447d-9c98-661546c27272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eedbe5d-a5bf-4303-98d7-a6e3e2b18cb5",
        "cursor": {
          "ref": "5e3c9ec6-2b9b-4397-92a2-0e67f1d221a9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3dc5419a-da0c-4258-9183-f954caeda4a5"
        },
        "item": {
          "id": "5eedbe5d-a5bf-4303-98d7-a6e3e2b18cb5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "77b416f7-790d-4230-a898-7ffcfd3b77a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8855a7c2-1fff-46ae-93de-9abed389c789",
        "cursor": {
          "ref": "bb85aac0-78b3-425d-a19b-631cda7bd42e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44024ac2-87b5-462b-9d56-e8cc6b8af024"
        },
        "item": {
          "id": "8855a7c2-1fff-46ae-93de-9abed389c789",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "45e27f5c-dfe3-45b4-b687-6b7104d4a252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafb49c1-14ea-4a31-96c8-9ed84fc8b978",
        "cursor": {
          "ref": "3595ce5f-c845-4c54-a42f-4a501f37c991",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e86ee463-ec39-4e80-8b82-73fe2fa50cc5"
        },
        "item": {
          "id": "bafb49c1-14ea-4a31-96c8-9ed84fc8b978",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3ee99661-c518-4269-9e3b-bf60b264359e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d15d2c-9e4a-4ba1-aca8-e6e0aa01c3d1",
        "cursor": {
          "ref": "99cc467a-71ef-4a2d-a0c2-c38daf0942f0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3518480e-8af5-41f5-ac12-d7bd8b34a6a1"
        },
        "item": {
          "id": "95d15d2c-9e4a-4ba1-aca8-e6e0aa01c3d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "433209c0-67bd-4d27-9be4-e0cc81119d2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2557773-bac3-470c-87e3-cb40b334c8af",
        "cursor": {
          "ref": "d28ff5f0-181d-465a-8989-7330bd8dc1fc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "93b7459b-14a1-4e00-9437-c453e79da4f9"
        },
        "item": {
          "id": "b2557773-bac3-470c-87e3-cb40b334c8af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d955f207-e5cc-497b-ac59-88088d73e88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eec90b-947d-4adf-b9b6-8fba995c4a20",
        "cursor": {
          "ref": "10b42af4-d2e2-41d5-beab-b40f322470ed",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "681df326-a893-41c8-b796-3bc0a93105db"
        },
        "item": {
          "id": "d6eec90b-947d-4adf-b9b6-8fba995c4a20",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9c251cf7-1abd-44bd-9359-59ff22040f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c53cffa-63c0-4598-b537-1aba047e7bca",
        "cursor": {
          "ref": "855fc407-76d1-4163-af4f-30198435c5cd",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "20d7dbb2-58f1-46a3-aa29-ea38cf11c50f"
        },
        "item": {
          "id": "8c53cffa-63c0-4598-b537-1aba047e7bca",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "61f7d8f9-f2ed-4ab5-985b-37c31c0d878d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c087f8-0439-42ef-a491-12e39ebe6cce",
        "cursor": {
          "ref": "6cb52e18-bdfa-493c-828e-ef90c6019459",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9700eb60-1303-430a-b7fa-feda163f4db8"
        },
        "item": {
          "id": "69c087f8-0439-42ef-a491-12e39ebe6cce",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d38f5b97-e909-4a61-8070-3f9184e5872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc519b43-d6ef-466f-835e-3bebe8a4ec63",
        "cursor": {
          "ref": "7b19828c-d327-4424-a8f7-f1b2099f3348",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e138be9e-c714-4499-9959-e3d3a1c1efd7"
        },
        "item": {
          "id": "dc519b43-d6ef-466f-835e-3bebe8a4ec63",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9f06f172-f713-4831-9e23-c47c3f6d67ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0f28f6-7e81-4417-979e-e51e7f5a2f6f",
        "cursor": {
          "ref": "48ac6647-e8ba-4694-8c70-7b420e624d16",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "771ffb91-ae91-43c0-a2f9-74336694fa63"
        },
        "item": {
          "id": "8e0f28f6-7e81-4417-979e-e51e7f5a2f6f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4bd91337-8132-4ae7-b1f7-0c7f51aa3c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cca59e1-5c3a-41ec-9829-8c567233dea8",
        "cursor": {
          "ref": "eb2c1477-7034-49b6-9d86-1ff54c2f03cf",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54e7d514-3145-4f38-8764-1d2ee9e81ffc"
        },
        "item": {
          "id": "3cca59e1-5c3a-41ec-9829-8c567233dea8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f984a9c0-8249-4e05-8341-53f9996948e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b4502f-7ba6-4642-a01b-0fa2fbef6358",
        "cursor": {
          "ref": "ee2e0e12-1d5f-4fd2-ac4c-91d5dc2af86c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c836063a-c7d6-4104-8931-c0e45cd2ec78"
        },
        "item": {
          "id": "d5b4502f-7ba6-4642-a01b-0fa2fbef6358",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4a7324c1-dbe6-4e8b-b8ae-eaefded8341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a52a075-2b58-4d06-bcd8-24452134d896",
        "cursor": {
          "ref": "c27e90d1-6143-4130-8f69-a323da03d7b7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c74fabfc-5a93-4097-96e0-f7d664c6ed85"
        },
        "item": {
          "id": "3a52a075-2b58-4d06-bcd8-24452134d896",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "97afa2b1-d6eb-421f-a927-93310249f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19806113-f836-4d86-bcd8-1375b18c0110",
        "cursor": {
          "ref": "68ab6a19-d9d1-4378-8916-05e7952e7a86",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b91d5729-abf3-4b45-86d8-73c9a47cd495"
        },
        "item": {
          "id": "19806113-f836-4d86-bcd8-1375b18c0110",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30b1d32b-2074-4aa1-9b99-63105ddf1b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29483b5-d7f2-4688-aacf-23681332e9d9",
        "cursor": {
          "ref": "4f809a9c-6789-4f92-8f44-4095cfdbc840",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed40f9ef-0547-4b48-aa85-a5a50a11655a"
        },
        "item": {
          "id": "d29483b5-d7f2-4688-aacf-23681332e9d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bb09735c-3d21-4cf9-98e1-bbf06a0b1c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa536b-a3db-4378-a872-4a86df18e45d",
        "cursor": {
          "ref": "edcb2c22-f0e7-49b7-b953-a0890e6bff97",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "96cedf85-c100-4ba1-a971-a8767a8e4092"
        },
        "item": {
          "id": "6bfa536b-a3db-4378-a872-4a86df18e45d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bc7ae233-785c-4e68-9de2-993ece866bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97460b0-36a0-415e-831d-5e3de0e68328",
        "cursor": {
          "ref": "962400c0-3140-4475-9c85-7476be1b94ef",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c1b1b9a2-e29e-4fde-aee7-e8ade01a78f5"
        },
        "item": {
          "id": "a97460b0-36a0-415e-831d-5e3de0e68328",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9296ec76-01f7-44d4-8837-80fbf9b922bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31629042-7e6a-40de-b7f5-2adf101ed5ee",
        "cursor": {
          "ref": "2e5a8198-e59f-4f58-af5f-cdcf09c804a1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c57cf359-6926-4a4f-8bba-6a84e3693fe1"
        },
        "item": {
          "id": "31629042-7e6a-40de-b7f5-2adf101ed5ee",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ae28c571-629f-41c6-9001-ce52ff65ae9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266f4414-945a-4ccf-a94c-df3f5c90d031",
        "cursor": {
          "ref": "052e2e6d-3ae5-4baa-aba9-3238cf0c2b95",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "db272021-d90c-4a15-95c9-ef6355adad56"
        },
        "item": {
          "id": "266f4414-945a-4ccf-a94c-df3f5c90d031",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f4d60457-5d74-452d-8889-87030f78c77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10345acf-5442-4cd1-bf0a-14326bf7b108",
        "cursor": {
          "ref": "535b055b-6227-4a8c-88be-c8729dab666e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8a64a3ee-df45-4758-a4b4-056b070bb289"
        },
        "item": {
          "id": "10345acf-5442-4cd1-bf0a-14326bf7b108",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f298f09c-c05e-4a41-a89f-bc99a2b15772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a912db-5658-45b7-bcb8-9b9c1029c94d",
        "cursor": {
          "ref": "20347898-1513-4016-94d4-652e405cd914",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e1054bde-4501-41f2-87ef-38218fab8128"
        },
        "item": {
          "id": "e5a912db-5658-45b7-bcb8-9b9c1029c94d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0a77383d-4168-4249-b8b0-3566de168fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86622ce-f587-4af4-bc65-9448d9d65259",
        "cursor": {
          "ref": "94f45dc4-63e9-42be-b22f-7f7174f5efa2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a049b068-ce69-4bfc-92e5-b5d7af4c5a20"
        },
        "item": {
          "id": "c86622ce-f587-4af4-bc65-9448d9d65259",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d3f79782-e586-4788-8752-85c4253d1437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f5dd93-75da-4e79-8029-5f6fd9c0efa0",
        "cursor": {
          "ref": "b66b028d-6704-4043-a976-134a4b60ef6c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9e5ee11b-456d-432c-a846-9ed1af293769"
        },
        "item": {
          "id": "b3f5dd93-75da-4e79-8029-5f6fd9c0efa0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ac65bf2-5e8c-45e7-8e80-944de779d46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81daa7-a324-4177-907a-394fa3774137",
        "cursor": {
          "ref": "fc2dd2b2-3698-4fd0-a772-5fd1bcbeefd3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c9665c9b-1370-4128-92d8-dba7282c366c"
        },
        "item": {
          "id": "db81daa7-a324-4177-907a-394fa3774137",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "95d32ac3-fd2d-4fcb-b646-45e5da4fbd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf998a55-e5fd-4c8e-bdad-19cfc7d1842f",
        "cursor": {
          "ref": "9fd7d1f9-4f29-4965-bd92-acc40a0e4fac",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c9ae80fd-ec50-4e97-9725-7bf5d16bbfcb"
        },
        "item": {
          "id": "bf998a55-e5fd-4c8e-bdad-19cfc7d1842f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6142d670-280f-4cc3-b9db-b62d22aff49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a482feaa-1952-46cd-8daa-4173c6819b77",
        "cursor": {
          "ref": "af516942-c593-49ea-89c4-e0a26dc44a1d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e556100f-d4ee-4b7d-86b9-e142cadbe065"
        },
        "item": {
          "id": "a482feaa-1952-46cd-8daa-4173c6819b77",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "17bbfddc-c52e-43a7-b82c-a9a7d530e0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67ad016-a5b5-4552-acbc-7a1c398be991",
        "cursor": {
          "ref": "7fab2636-8577-4300-be7b-fe3b67384492",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d6bdb32c-da6f-4930-94d1-7f4d5ac44770"
        },
        "item": {
          "id": "c67ad016-a5b5-4552-acbc-7a1c398be991",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0a6618e9-fd6a-49f9-be60-c258b6f312a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d184230b-4835-49c2-bd82-9e2458d72172",
        "cursor": {
          "ref": "dab51683-ea3d-482e-8712-2a7290e01235",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9f556fef-da4e-41ac-818e-7133b06bef0e"
        },
        "item": {
          "id": "d184230b-4835-49c2-bd82-9e2458d72172",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "248ff1aa-11ee-42b5-9f09-37b6cee98ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2a38f3-9a41-4a6c-8426-578c94ad58ce",
        "cursor": {
          "ref": "0fa82e89-a550-4eef-8a2b-0478765356e8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d978accc-b8b0-471e-a9ae-4ad1d6cdc2e8"
        },
        "item": {
          "id": "1f2a38f3-9a41-4a6c-8426-578c94ad58ce",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "65beb54a-92a1-4b65-8d7f-3bff797a55a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c29a4e-45e2-484e-ac24-b315740c11ad",
        "cursor": {
          "ref": "bc44b8a1-c7ab-4aad-a393-25176a04ffb0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "31c5dfd8-c9be-4907-9662-f097b0385fdf"
        },
        "item": {
          "id": "c8c29a4e-45e2-484e-ac24-b315740c11ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "650f82d4-abdd-42e9-9d4a-d38b33e3794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef032fae-3409-4487-a2ff-539f64527793",
        "cursor": {
          "ref": "91f92867-4919-4756-b2ab-d98f5af669bb",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0993f18-2925-43ce-9fad-9bcc8f423504"
        },
        "item": {
          "id": "ef032fae-3409-4487-a2ff-539f64527793",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "99c7df38-009a-4dcc-9051-c1ad235a8a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac98b6f-ca97-48df-a9df-dbb5689a2541",
        "cursor": {
          "ref": "0d2983a5-d01b-41e3-b96d-a19e41b241b3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1d5e8762-06ba-417a-81a9-d071fee74cbd"
        },
        "item": {
          "id": "dac98b6f-ca97-48df-a9df-dbb5689a2541",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f3efa41f-8906-4882-ab96-922d91ec6ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4933673e-28c3-44da-9e7a-5e2453a1991d",
        "cursor": {
          "ref": "3a1418c5-a0f3-491c-aeb8-b927f6c41024",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "351a4f3b-2ea3-4c4e-a7ba-444663a5e08a"
        },
        "item": {
          "id": "4933673e-28c3-44da-9e7a-5e2453a1991d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b94eae05-a9a8-4ccf-b37a-52c94494f2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6272152a-e692-47c1-9971-a4e9e6a37e56",
        "cursor": {
          "ref": "0d7acf37-9468-4bea-bb93-2011c4edf8a4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ce90bf87-e3c9-4160-8cca-b6b099c460fe"
        },
        "item": {
          "id": "6272152a-e692-47c1-9971-a4e9e6a37e56",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69f28dba-6a6b-4d3f-aae7-1a265a811dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ab420-2725-469e-9522-b86de1a1e20c",
        "cursor": {
          "ref": "6b68e1b3-219f-4b8f-8a6f-ea7783e63de8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "64f6e20f-393c-40f9-a652-262f4328cc9e"
        },
        "item": {
          "id": "9d0ab420-2725-469e-9522-b86de1a1e20c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3aa3dbf9-36d1-4a00-8064-889be47a3432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9eb870-a0dc-4267-9cee-a8307349ffa6",
        "cursor": {
          "ref": "05c016ea-6aa6-4305-b7d9-ea2355168e0e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d2fe3f1-80ab-4ebd-9125-63292d110719"
        },
        "item": {
          "id": "3a9eb870-a0dc-4267-9cee-a8307349ffa6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1c3baf7a-fa28-476d-9a83-2bbb8cfdfbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10419a79-8ed2-4d36-9eae-2dbc8efed5da",
        "cursor": {
          "ref": "d4898840-5458-4059-9c24-1a0687fe1358",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c401120-1520-4383-8b5d-d85c10f790e3"
        },
        "item": {
          "id": "10419a79-8ed2-4d36-9eae-2dbc8efed5da",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95ffecd9-da13-45b8-9772-c81f7c3c55b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06d6dc5-89e5-41ed-8893-4e9e37e92642",
        "cursor": {
          "ref": "75f4c195-ca59-4c82-a78b-b586dd8a537b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "156211d0-6d4c-43fa-8c62-27098152499d"
        },
        "item": {
          "id": "c06d6dc5-89e5-41ed-8893-4e9e37e92642",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7cac6c9a-0ba9-482f-a7e0-18541c024d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aed22a-9259-49cc-89ad-55a41413e54c",
        "cursor": {
          "ref": "7cfb6e7d-dab5-4571-b709-a7a0c491092b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0be2627b-391b-4edc-a440-a4891da13129"
        },
        "item": {
          "id": "d5aed22a-9259-49cc-89ad-55a41413e54c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c5c131c0-dc25-4f3f-8a89-3ddb64c26cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d743afc-6710-4d5a-a370-ae76048219ce",
        "cursor": {
          "ref": "6011def3-f07d-4a09-8378-1b0baf4231f3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b3dbb24-4dc2-4e0f-bdef-9668a568f603"
        },
        "item": {
          "id": "3d743afc-6710-4d5a-a370-ae76048219ce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2d82ae82-9723-4470-ab5a-652f917c77c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2b1a1c-4669-4bbb-a546-834e664a6aa2",
        "cursor": {
          "ref": "21020775-294a-4bb5-b953-a35c54696f2b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4e9be91f-8706-41cb-afd8-e1c95f6dda6a"
        },
        "item": {
          "id": "2c2b1a1c-4669-4bbb-a546-834e664a6aa2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "72ac640f-58f2-472e-b70f-e9b0f1e4b640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10157928-8386-42b4-aaec-d0d96e7e40b4",
        "cursor": {
          "ref": "a132df02-4e77-4543-b8b8-47a756bd67dc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b294320c-888e-4709-b33b-b256167fccce"
        },
        "item": {
          "id": "10157928-8386-42b4-aaec-d0d96e7e40b4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a8674573-3d05-43ab-bbc6-f9cc7a4b482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ef755-3fff-4913-ac2b-d6200eab6914",
        "cursor": {
          "ref": "1b92d57e-a36a-455a-b7f7-b99629530806",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d86101dc-3562-4323-b719-7fa97321b47f"
        },
        "item": {
          "id": "478ef755-3fff-4913-ac2b-d6200eab6914",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bce11290-420b-4aa2-a2ab-1c368a9b789a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac257a23-476e-4b02-8fa2-17962589dbdb",
        "cursor": {
          "ref": "b8aa4ae3-7bbb-49b3-850c-d9a14daabe47",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0ac50069-c4d2-4170-bd20-91baf2a25c20"
        },
        "item": {
          "id": "ac257a23-476e-4b02-8fa2-17962589dbdb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b8485032-e2f4-4a2f-89b3-e85a4d7ea066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebf4ae7-8a21-440c-8b3a-55fb7b95f7fa",
        "cursor": {
          "ref": "384ff775-548c-4fab-8a05-2af52ea1da1f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2c3d456-21df-4a4d-b9e4-817d15d48aeb"
        },
        "item": {
          "id": "0ebf4ae7-8a21-440c-8b3a-55fb7b95f7fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "08091718-00ed-42bb-bfc5-2d28119ad6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e49ece2-4547-43e8-ab15-dd2983172084",
        "cursor": {
          "ref": "90ace7e5-e07d-463d-9b5e-e8b216e7cc5d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "828edf28-78b4-4e87-99c1-9d20940b03a6"
        },
        "item": {
          "id": "1e49ece2-4547-43e8-ab15-dd2983172084",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cd8e7138-b82a-45c9-b9c9-e2416b7df31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea73035-7cc0-465e-ba10-f09caafd0d09",
        "cursor": {
          "ref": "f9d4b027-c89c-44ba-b8e7-f06ad4b8bd19",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3e3ee92f-7e54-42a9-9d57-b4751ee9026f"
        },
        "item": {
          "id": "0ea73035-7cc0-465e-ba10-f09caafd0d09",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8caba62d-7d34-4528-99fe-f789339ee32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a93096-f57a-47f8-b95e-57deb20a6351",
        "cursor": {
          "ref": "b58f2b9e-a3f0-4756-b6c3-f94b00b8f473",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5edb7ddf-408e-40c5-b742-a9fd6813c119"
        },
        "item": {
          "id": "d8a93096-f57a-47f8-b95e-57deb20a6351",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b2aeb22b-8fe1-4440-8ad3-a6742552d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b822cf-c91f-44a8-a97d-3138c06cfa43",
        "cursor": {
          "ref": "59dd691c-75fb-4f7e-bf7e-509157b92f53",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cb7b6eab-3bb0-477f-9bc9-f69aabbe2338"
        },
        "item": {
          "id": "e3b822cf-c91f-44a8-a97d-3138c06cfa43",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cab95b22-29c3-4db6-acfc-e7ba52a7c253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03a2ad-cd6b-4ef8-a466-723617eeb836",
        "cursor": {
          "ref": "e0271910-9a88-44a9-9d18-fa669f88a2d6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "635265a1-3156-44f6-8027-78465fb4d136"
        },
        "item": {
          "id": "aa03a2ad-cd6b-4ef8-a466-723617eeb836",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ed19d2c-aab9-48d9-a6a9-06dc40673515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb70d3f9-8a17-4304-8972-bdaf945b4964",
        "cursor": {
          "ref": "5c1c58ae-0b52-4bd2-8546-6992ec0c4ee5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1772de13-7c20-4ece-bb90-dad96b434f1b"
        },
        "item": {
          "id": "bb70d3f9-8a17-4304-8972-bdaf945b4964",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4a694086-b7b9-48b9-aca8-0a083d98cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0dc91f-ecd1-497f-a926-7fdb7661e4fd",
        "cursor": {
          "ref": "c9138fd7-5ed5-4897-b182-ccef670843f0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "af94a5b9-0ae1-4c24-8c09-0049bac15dfc"
        },
        "item": {
          "id": "3a0dc91f-ecd1-497f-a926-7fdb7661e4fd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "76bffe18-d9f0-4c53-bc27-e4858b56e104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafadff5-b704-4e60-95fe-c99d63750228",
        "cursor": {
          "ref": "41b3d71b-db27-4c44-95a8-be5ff64e9019",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a642aeba-fd5b-4bcb-a86c-577a7cdf08c6"
        },
        "item": {
          "id": "aafadff5-b704-4e60-95fe-c99d63750228",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "00a8c811-81e6-4615-884c-1a39c54e29d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534b79a-506f-4f5d-b341-0f4e74dccd5d",
        "cursor": {
          "ref": "da0251c1-2906-44d7-8fb1-8b14bfbbb54e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91d631bd-445b-43cf-a4a3-62ab6d8cf06d"
        },
        "item": {
          "id": "c534b79a-506f-4f5d-b341-0f4e74dccd5d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e830dbf9-a312-4ed6-8c42-688a7ea5c3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f2f400-b32d-4cb8-a83e-922f2fe235df",
        "cursor": {
          "ref": "da53bacf-f459-4876-be71-1ae3ea8bf5ac",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "942e26aa-fd58-4db8-bf89-d0cd054e0039"
        },
        "item": {
          "id": "41f2f400-b32d-4cb8-a83e-922f2fe235df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cb84f6a6-e6d9-4f0f-8e1d-df360bee57a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25951fe-f61c-4361-988d-0823f2654aea",
        "cursor": {
          "ref": "0ffab581-6bc1-4233-82e1-cea8a3573498",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "938a4494-e909-4511-b593-33cb4250f4dc"
        },
        "item": {
          "id": "a25951fe-f61c-4361-988d-0823f2654aea",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7b091382-0506-4721-87d4-f7ecfe9dfafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45de97eb-ff8e-49c2-896e-0f0ef9b4acfa",
        "cursor": {
          "ref": "37f8d975-07f9-4b2c-ae8d-7452cd7476f1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "adc5f97f-0e5b-40c8-8f61-1df55aa120ab"
        },
        "item": {
          "id": "45de97eb-ff8e-49c2-896e-0f0ef9b4acfa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "617d14d3-542a-4edd-8c4c-ed394d3a8253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b754f2-1913-4637-b5b9-f63db44a8255",
        "cursor": {
          "ref": "343d693b-7f78-4300-b9ca-0789ad7b772a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0ab6c86a-a7c6-42b0-9ba0-9d809dffb1cd"
        },
        "item": {
          "id": "80b754f2-1913-4637-b5b9-f63db44a8255",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1a13c654-249e-41c9-a1ed-48ce0182f843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bdc211-e883-4f51-b3dd-f0ad90816254",
        "cursor": {
          "ref": "52de92b0-4284-4777-9c5f-fc028d36ef7c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2f755a3-d172-4051-824b-64db97620d53"
        },
        "item": {
          "id": "e5bdc211-e883-4f51-b3dd-f0ad90816254",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8fe7ff23-ad40-4302-a525-8b24874a4348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac888b-8636-4dc1-b65b-b14da0ab958a",
        "cursor": {
          "ref": "2deba2bf-1f9a-40bc-840e-c117303b6d05",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f49493a9-ee20-4362-a9db-408e29b5bd74"
        },
        "item": {
          "id": "5bac888b-8636-4dc1-b65b-b14da0ab958a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bbecef12-3158-4ad8-9f9d-7836f67392bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b48742f-dd59-48f2-b684-2305e471aab0",
        "cursor": {
          "ref": "83916229-d781-477f-9fa1-de590dbcf151",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7e9c33bc-482c-4ef5-9b24-0fb2caa3b7bc"
        },
        "item": {
          "id": "0b48742f-dd59-48f2-b684-2305e471aab0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b49e4edc-bcd2-45cf-8740-42cced589769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8552902-ed9e-4b00-ba2d-55c0b45b09e3",
        "cursor": {
          "ref": "bf6f6921-27e4-4aea-bb43-f2770c000beb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "573a0329-7a10-4909-9d3e-676b82d738c6"
        },
        "item": {
          "id": "d8552902-ed9e-4b00-ba2d-55c0b45b09e3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc259b56-6599-4497-b5b1-c46c8b1f20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bacff71-9906-4bd0-89f6-947251c38cf0",
        "cursor": {
          "ref": "d7446cc4-0486-42f0-9a87-cab8ab732af1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bae63141-0a20-4521-9104-691725cc182d"
        },
        "item": {
          "id": "9bacff71-9906-4bd0-89f6-947251c38cf0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3b58c316-7b56-4b50-ad01-80317a59bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2767913e-d45b-4dc6-800b-fe9aa278d44c",
        "cursor": {
          "ref": "645c559f-35a3-44c5-bba1-5040ecd22a49",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "671b9c80-6e54-4b42-a175-3ed71c96501f"
        },
        "item": {
          "id": "2767913e-d45b-4dc6-800b-fe9aa278d44c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a995499a-85d9-4285-afa8-8232a2e2a36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dc5632-91e1-4a2c-9daa-79b25cb44b10",
        "cursor": {
          "ref": "b0c16967-6a7c-4af1-b4b8-fcf753d5f406",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "38d35b7d-8cad-415d-8bbe-8137473ff11b"
        },
        "item": {
          "id": "22dc5632-91e1-4a2c-9daa-79b25cb44b10",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2d520f3-e27f-482c-81bc-fc5b50b056a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe169b9-d218-4b1e-8e2a-3599bf111605",
        "cursor": {
          "ref": "572272e2-6fd8-49cf-b85f-d269ec001aec",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c3c2047-5e8a-4d0e-95dd-d3cb26454dfb"
        },
        "item": {
          "id": "cfe169b9-d218-4b1e-8e2a-3599bf111605",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "42f46e2f-c1c1-4c96-8bc2-33b016048664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc26dc5a-e3a8-49ee-988d-041a712eff0c",
        "cursor": {
          "ref": "774bf21f-1e92-49d6-a437-f84c7eb4810a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1e8e849-05b0-40d0-bd44-2cd01581f5c5"
        },
        "item": {
          "id": "cc26dc5a-e3a8-49ee-988d-041a712eff0c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95ae0c8b-9078-43a9-80e9-b7e6bc89c699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2293c545-0eaf-4737-844b-4cd2f56025c7",
        "cursor": {
          "ref": "c5c8d618-21b3-4d4f-bcc9-09072836e02c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d900976b-b945-4c23-b671-c491104f7227"
        },
        "item": {
          "id": "2293c545-0eaf-4737-844b-4cd2f56025c7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "02b150d0-36d9-42b3-a817-9480501f9143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afecdc0-98fc-4bdd-9274-0db1746c7f88",
        "cursor": {
          "ref": "0ac7c213-97d1-46cf-9e62-9ab4488599bb",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "81acb49a-14ec-485f-9879-f2fe5d163cf8"
        },
        "item": {
          "id": "6afecdc0-98fc-4bdd-9274-0db1746c7f88",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1950fdd2-4e7c-4b36-a8c1-b466c7dabaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a961fbb-16ca-425a-85fc-2df1cbe57f61",
        "cursor": {
          "ref": "75873e48-a0f1-4523-81ce-4f1bee4e1bdc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6e944b14-284c-4fa1-8683-dc48f2b3d877"
        },
        "item": {
          "id": "2a961fbb-16ca-425a-85fc-2df1cbe57f61",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1c0d7fc4-be0e-4a5a-85ed-527e252fb3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bfdca-8778-4670-a10f-173583bd5a62",
        "cursor": {
          "ref": "bf938552-3ccc-4ce4-a901-ce5502f3875d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "795324f4-4bff-4433-945c-bf04ad5c4835"
        },
        "item": {
          "id": "dc3bfdca-8778-4670-a10f-173583bd5a62",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3302d5ad-b060-4055-bf24-30b7cd3d5270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ebb25c-dde4-4efc-a9d8-6a6b23e01469",
        "cursor": {
          "ref": "64c5f7f1-7de1-4262-8b6a-7f7c46353365",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6087802a-40d5-4289-9f72-bd17f658f1f4"
        },
        "item": {
          "id": "66ebb25c-dde4-4efc-a9d8-6a6b23e01469",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c4def5c8-d1ed-4499-844e-e001fee5cf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0b5e01-c55d-477b-9de1-df9a0206df7a",
        "cursor": {
          "ref": "f74185c2-09d4-4ac6-8d83-69df7c6d5763",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8db53be-03a7-42b0-bda0-996c32d8888a"
        },
        "item": {
          "id": "1e0b5e01-c55d-477b-9de1-df9a0206df7a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "56db6394-d006-45ab-b2bc-1b410dec66d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54972c8-ab48-41a3-bade-9377a01d724f",
        "cursor": {
          "ref": "75c3aaef-3a2c-4aae-bcce-d3922ebeb7e1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e9c6698d-2f50-4da4-ac90-8bcb222fe7bf"
        },
        "item": {
          "id": "d54972c8-ab48-41a3-bade-9377a01d724f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aba71d43-6eaa-45a4-86ff-62fef3a29ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161252c3-fdf5-4c6d-aa5a-6e565cce2f6a",
        "cursor": {
          "ref": "f19d0fdb-72a7-4fe9-9ea2-15cfda8a71d8",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3396c2d5-c9a9-405c-8d09-1b250290c10b"
        },
        "item": {
          "id": "161252c3-fdf5-4c6d-aa5a-6e565cce2f6a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "92b8c918-9096-4ac7-a3a6-a2297d9f9c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e16eadd-7d4c-48d5-b423-ee49b8eec43d",
        "cursor": {
          "ref": "7965280d-41d3-458e-b021-42785be468a8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9b03eca-4dfe-4681-b82f-d709251ea0fd"
        },
        "item": {
          "id": "5e16eadd-7d4c-48d5-b423-ee49b8eec43d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7dca14c8-72f7-43e8-a6a1-46145ec2dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869f321-dc61-4ca5-9edf-8dd281d302a4",
        "cursor": {
          "ref": "0b9ed7fa-ac19-4310-b873-fe8b2acd3561",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "007647ed-45c2-48ca-abb8-b4c3e1b1a15d"
        },
        "item": {
          "id": "c869f321-dc61-4ca5-9edf-8dd281d302a4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3513e5bc-234e-42d0-8b2b-14115890d12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a62129-4fb0-44f6-8010-3c76d50d8120",
        "cursor": {
          "ref": "101af429-a50e-487b-8791-c577546127bb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6acd29b5-1dfd-473e-bf12-b1c1e0175c9c"
        },
        "item": {
          "id": "30a62129-4fb0-44f6-8010-3c76d50d8120",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9b1930b4-f32d-4842-953f-15e69ef1a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440fe876-301a-43bf-bf69-9c5b26a554dc",
        "cursor": {
          "ref": "698e3338-a36b-403a-b973-277368b3454a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "77aa0758-c0cc-4fa2-95a3-de429630e8e5"
        },
        "item": {
          "id": "440fe876-301a-43bf-bf69-9c5b26a554dc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ef1033ad-1336-4714-a5e5-ec0f41e1a7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13048cab-282e-483c-a547-661f8441fb65",
        "cursor": {
          "ref": "b43721f8-9aff-49d3-9c5c-0e8f8b64a1bf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f82cb9cb-f00d-4970-a401-d8edd2f1b79e"
        },
        "item": {
          "id": "13048cab-282e-483c-a547-661f8441fb65",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d636d14e-2e3e-49fc-bf12-f4b596bbaa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dfa593-e377-4e8f-a0b7-d001eacd404c",
        "cursor": {
          "ref": "a4c38e88-ad11-4576-9a78-4987efc0fd96",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "79343555-33cd-4663-adad-c6478b2673ab"
        },
        "item": {
          "id": "b8dfa593-e377-4e8f-a0b7-d001eacd404c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2feba096-ff52-4e43-bcc0-a43f5db23ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b21d9a-d16f-4969-b477-d9502a011954",
        "cursor": {
          "ref": "a3fda14c-9f4c-4dee-a245-4bd15fbce26c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2a0e4ab1-7946-412a-946a-389eeeface0b"
        },
        "item": {
          "id": "a8b21d9a-d16f-4969-b477-d9502a011954",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "71b2640d-ec6a-4a89-8997-9b72fa6095cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68872b3d-deda-4801-93ec-903aac37251a",
        "cursor": {
          "ref": "221efa0d-0361-4d9e-a8db-3abb54a12db6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a380ae9f-3961-4c97-9726-c983fd7530ea"
        },
        "item": {
          "id": "68872b3d-deda-4801-93ec-903aac37251a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ad671085-6701-4db8-8b1c-5fa6aecd3279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9f6fc2-c07c-4435-af7c-87dfa6953c76",
        "cursor": {
          "ref": "0ac4a3c9-e63a-4fa3-97e3-3e88538dc4b8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "517eaf55-3334-47e6-8874-30bccf82fd2a"
        },
        "item": {
          "id": "cf9f6fc2-c07c-4435-af7c-87dfa6953c76",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "90517a6b-b6fa-4974-9de0-a50f6f6d8aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71adadb-599e-4f7a-96c9-395c58e6d17b",
        "cursor": {
          "ref": "de6de3a5-b7be-4229-8c07-5518617579df",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "49037510-2245-4883-9519-c21b8a22cb28"
        },
        "item": {
          "id": "c71adadb-599e-4f7a-96c9-395c58e6d17b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "119dae07-c6ac-4245-b4d7-e71051fd44be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ed070-d882-4edc-a75c-ce1f046a1522",
        "cursor": {
          "ref": "37504823-e7c0-4f50-b9ca-0706f075b244",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "786a1246-753f-4c05-a43f-e98b84cbc1eb"
        },
        "item": {
          "id": "ad4ed070-d882-4edc-a75c-ce1f046a1522",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "53a01ae9-41b1-4307-9225-02de7100ca01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3af1b-8ed4-44e2-b421-b4c4d1052956",
        "cursor": {
          "ref": "00f02781-b281-4b75-8da0-d19726201766",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "007b9ef9-7546-4049-a3a9-41f9614543f1"
        },
        "item": {
          "id": "7fa3af1b-8ed4-44e2-b421-b4c4d1052956",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "100676d4-da66-4bc3-a2cf-d7453d070610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92694586-c692-4f98-8122-48cb27bf1f74",
        "cursor": {
          "ref": "78e42c28-50ec-4fce-b1ba-ccc7d67210b6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "25bd2ab2-f0de-4338-9927-8c6f7e6d31ac"
        },
        "item": {
          "id": "92694586-c692-4f98-8122-48cb27bf1f74",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d4cfec38-3895-49ed-8e91-aea4a02b42cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b8916-4ec3-4a03-ad62-b6e8bec8d963",
        "cursor": {
          "ref": "5c904ce4-9d68-4518-a34f-186b7ec96aaa",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "23d4eb71-5976-4221-9d93-584b14d38f41"
        },
        "item": {
          "id": "2e8b8916-4ec3-4a03-ad62-b6e8bec8d963",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4346dad-a225-4d6d-bc07-715a070cd9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c90059-6811-45f6-8a72-69c5c587e9d3",
        "cursor": {
          "ref": "a859a359-a90e-41cf-8d5e-32ae085ab7ea",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1309e8f1-2349-423f-8695-0ffa986f3389"
        },
        "item": {
          "id": "31c90059-6811-45f6-8a72-69c5c587e9d3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "62532053-ecce-480d-8fbd-55e7e2fe833b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9044806-013d-4dd8-89ca-1fb62653d199",
        "cursor": {
          "ref": "a016e993-c98e-4ed4-aa09-3b65ed14d44a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ba681b67-1d16-435e-91c0-986e9a96bd7e"
        },
        "item": {
          "id": "a9044806-013d-4dd8-89ca-1fb62653d199",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3c239346-ca93-42ee-8d63-57454b668ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6626aad5-17d9-4a7f-a4f9-dabba3b67d4b",
        "cursor": {
          "ref": "1820de67-ab58-4cc2-b36a-eaae7fd792a5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "26939bb5-8ca7-49f6-aa40-666e582e2c5e"
        },
        "item": {
          "id": "6626aad5-17d9-4a7f-a4f9-dabba3b67d4b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8f797e69-e82a-4f28-8628-3d8553d9ea7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027ee075-a13c-4734-a5ef-6beb8c1f45c5",
        "cursor": {
          "ref": "dcb2c9cd-7c37-4f92-b927-cf83cc364973",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d5195feb-303b-4dea-89d9-d0e22e77bb1c"
        },
        "item": {
          "id": "027ee075-a13c-4734-a5ef-6beb8c1f45c5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b635b977-863c-459b-bd35-918b3dce981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c8e2c6-a9dd-4070-8052-7675d32a7953",
        "cursor": {
          "ref": "38d2d82c-eced-431f-89d3-c4bb70be3075",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "adb3c437-8e89-4879-ad90-2d478ad8e931"
        },
        "item": {
          "id": "d1c8e2c6-a9dd-4070-8052-7675d32a7953",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e585e98b-a7c9-4735-abf9-aa3d6ce1436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57953d6d-19bc-4ae6-88c6-9d9924b85bcc",
        "cursor": {
          "ref": "c459dd5f-72f7-41e1-a39e-a1e60639b345",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2f2e6d48-02e1-41ac-a282-eced0eca5118"
        },
        "item": {
          "id": "57953d6d-19bc-4ae6-88c6-9d9924b85bcc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b5088925-0ae8-4a18-86e2-91b6ca48ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b946c847-f637-4cdd-8764-7d7267ac7c68",
        "cursor": {
          "ref": "90cdbb1e-8e75-4290-b321-bb610085fbf8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2c7c991e-ecdd-45dc-a752-77e1efb4630f"
        },
        "item": {
          "id": "b946c847-f637-4cdd-8764-7d7267ac7c68",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "018b6bac-8a92-4d82-ba88-bf1bb6b132fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecbb95e-3603-484f-abdd-27bd979b8fc9",
        "cursor": {
          "ref": "ee067905-54b4-4382-85a6-ea91a6ba3c81",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cf864594-e2be-4e87-89a6-6b9c536c57c5"
        },
        "item": {
          "id": "eecbb95e-3603-484f-abdd-27bd979b8fc9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cdd5f27c-51e2-4962-8bd6-59385828cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbec965-2c3d-48f4-a9dd-4f456df143ed",
        "cursor": {
          "ref": "a5359fe6-dea7-4664-ac66-8defef5f38ff",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d15b122b-4bb8-485f-af05-059036907843"
        },
        "item": {
          "id": "bdbec965-2c3d-48f4-a9dd-4f456df143ed",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3f6e0ea8-9260-4989-9ef3-f296f063f26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beb2708-17e3-417c-abe1-b18a105d1c41",
        "cursor": {
          "ref": "7beac61e-e89c-4cf7-8f95-ad454ebd8a2c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "61838c43-2272-4464-8cb5-c6386569288e"
        },
        "item": {
          "id": "6beb2708-17e3-417c-abe1-b18a105d1c41",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ed4aeca9-edc5-4948-8c43-32a0ada4a5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4723ed-6716-4de2-a23b-39aeb7ad2732",
        "cursor": {
          "ref": "63ee03b4-6efa-462a-ae7a-0315cbcfcd6c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b452c5c1-57bb-4c55-953d-88f81ace5454"
        },
        "item": {
          "id": "4f4723ed-6716-4de2-a23b-39aeb7ad2732",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d4b96fbf-97fe-4a6c-8af1-e27c5b148aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90da888e-bf8d-4bc1-82ac-17fdc32d0b12",
        "cursor": {
          "ref": "7ce53ae4-e52a-4005-ad68-27022c7585c8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aee9553f-648e-4af7-bd2c-eb1f31c60835"
        },
        "item": {
          "id": "90da888e-bf8d-4bc1-82ac-17fdc32d0b12",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "308c0742-8f2c-4359-99bb-a1cde2dbc950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6b2756-3817-443c-9391-279e2cab3ccf",
        "cursor": {
          "ref": "9a5e7f1a-106f-4e33-87b3-19005c543728",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f76ffed4-4318-4227-b2bb-8ae191aeec5c"
        },
        "item": {
          "id": "1c6b2756-3817-443c-9391-279e2cab3ccf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e7a2b270-7df1-411c-aceb-68e249916aae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129dfa10-aea9-4054-a298-6d5fbec713fa",
        "cursor": {
          "ref": "e4490804-9c8c-444e-a080-5b8ad4165461",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c783cc88-716b-428c-9a71-7bef0303e7a9"
        },
        "item": {
          "id": "129dfa10-aea9-4054-a298-6d5fbec713fa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1b1caaf0-9f34-4a67-aace-468bb62c73ce",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b36c999-652c-4d83-8e72-ce0f2a45041b",
        "cursor": {
          "ref": "b5112f2e-9856-43d1-8546-02dba6ea2496",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4e768313-923b-4e67-b73b-ba79fbae0777"
        },
        "item": {
          "id": "6b36c999-652c-4d83-8e72-ce0f2a45041b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fff2c254-f451-43c0-a3a3-ff24461d1e01",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d36307-4b40-429b-a0ac-425dfd252421",
        "cursor": {
          "ref": "da7319a2-cae2-4d75-93e9-9579f8555d49",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "71847b19-3b9f-445c-8fbe-b12eacfdfc4e"
        },
        "item": {
          "id": "42d36307-4b40-429b-a0ac-425dfd252421",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "551ce8b2-d404-48e3-8329-5a33724ff9a8",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfb62ae-ef70-4cdf-bc4f-e3027016dada",
        "cursor": {
          "ref": "4977e8be-f0b7-424c-95d7-937399698b00",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b5ce3b28-8c42-4cb9-aaeb-2d8c2e22fd34"
        },
        "item": {
          "id": "8cfb62ae-ef70-4cdf-bc4f-e3027016dada",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63a2d6da-c4aa-4df9-aeea-56ecb63735da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfb62ae-ef70-4cdf-bc4f-e3027016dada",
        "cursor": {
          "ref": "4977e8be-f0b7-424c-95d7-937399698b00",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b5ce3b28-8c42-4cb9-aaeb-2d8c2e22fd34"
        },
        "item": {
          "id": "8cfb62ae-ef70-4cdf-bc4f-e3027016dada",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63a2d6da-c4aa-4df9-aeea-56ecb63735da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612d7963-f8f5-4b93-b505-3b28fa142cc0",
        "cursor": {
          "ref": "fe0cfcee-6c6b-4ca9-a358-6f9469bd0779",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "48eeb180-a570-4cd7-ab7a-f0070a8c59bc"
        },
        "item": {
          "id": "612d7963-f8f5-4b93-b505-3b28fa142cc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6f2c1787-ff5d-4b1e-8dbe-1d90a44419eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e72efb-f038-4262-a055-97cb49143feb",
        "cursor": {
          "ref": "faadbad5-8a80-4ad7-ac16-451849fd70ab",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "65085d06-4ddd-401c-8a3e-730a4964541d"
        },
        "item": {
          "id": "40e72efb-f038-4262-a055-97cb49143feb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86e90fdb-cf22-462c-966f-488a74caf370",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}