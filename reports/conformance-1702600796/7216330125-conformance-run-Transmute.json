{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e667815c-bdf9-425c-85a9-5aece94ddf1e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9bcadced-7046-4b06-8d5a-f8e08959e45a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "094b2a0d-128d-4953-956c-a8d1c54089b8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42559644-e0c4-4649-884f-3d670ac3f458"
                }
              }
            ]
          },
          {
            "id": "cfb5ddf0-8eb4-4b36-aac1-53406011d6ec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66264bfe-087f-42ea-9607-5e3872b470e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b48d2e15-5a15-4e48-8954-6a0682d95f39"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6e3ad36-d143-4798-9811-1886918d7b35",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9e1203d3-f25f-441c-a6e1-956acbe3fc5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "068236b2-e29a-4062-8189-a03f8450e1d3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6466e471-568f-4a78-93b9-b0c0095448fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b91002f0-1174-4e39-b764-1a8257bdee27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f44981dd-136a-4c83-af55-5177c1ea4b70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f56b460-6bef-481f-b0a3-52697cb8f1fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8d99d3c-88d8-435c-8e0d-7827d9eadf67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b2c85f4-640c-4ca2-9d67-b5999d1658bc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89f51626-caee-489f-a744-a04bb53dc51c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e642df6-1b17-47e7-a714-b80bfd03eaf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5c9e9d1-0d4a-47d4-8435-6efa871c2d18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9abd7bf-ce24-4ce4-ae34-97213a207e18"
            }
          }
        ]
      },
      {
        "id": "0dc629ac-8457-4b5d-83fc-175af3e94cd8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bf482e73-b28d-438b-abe5-8f00ed3ec0ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "284072ef-bfd8-45e7-814e-180ac1638caa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc4e4635-c7b0-4205-bead-f2ad32195090",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291bf8f3-d1a7-41a3-843f-03c45518a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce39bd44-2a15-4e95-98c4-06dac172d325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ed31fd-c1a1-415c-92f0-ff0ea7af3058",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565cb38-633e-4185-9967-c2162697a7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cad48cf-f448-4583-8db6-d0a22c7e7b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb9f6e1-6b4a-41dc-a3ce-c3002495282f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f5fa5e-b10f-4396-adb2-25503b793088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f588bf46-26b7-47fd-af88-7367be96caec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9400b5a0-7b3d-44d0-a8a6-df02336a99de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9876260c-21fe-4bd2-8a1c-6223fb9c464a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cea1aae-907b-4457-9943-a0149cefba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdcd81a5-d435-41e6-bc23-afc6a47922f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60431bea-644b-4d2a-8f91-b1788b23ba82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0256dea9-a8e8-413b-8097-6001f03125e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "948854da-bac0-4f87-a349-546132e5dd1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8bbdbd22-dd85-472e-92b4-6ef1246fa40c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "683f4235-9a23-49a0-bac7-f4a6bc551fd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d4ab08c0-bb05-4dc8-8570-6b44c270b9fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45e9ab29-13bf-48cd-8daa-435a7bf5f8e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0e661917-026b-4009-9462-391799589162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c9ec7a3-0709-4456-a341-fb55ca3732c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7c29ee3-d025-4b00-a626-5b427d930887"
            }
          }
        ]
      },
      {
        "id": "ed8ddac9-866f-4b36-b5f2-6b3d6d6ed9ec",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ddbdb71f-c41b-4166-86b2-5aed9b815dc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ead139c0-7706-4278-a864-40e9b018cbe0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cacdf978-31cc-4811-8eee-db5462ed5d76",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de4fe5f-07d0-481e-9eda-26804d76761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f9ca73-1387-4312-b81c-268f7726700b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b50c6d-0576-4f5b-a938-670c5f6add88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac4303d-2083-49b6-9de7-457cc3acf010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094331c7-4d13-4a85-9a01-d284a65c0024",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555a63c8-2f5e-4cd2-bc2c-dc1b695b6bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619236d8-c2a2-415e-8954-6021c8881cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1568d6d-10e8-4869-81af-0cdd23d4bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c467530-f1b4-46fd-8557-6fdb73115ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8fb72a-9767-499c-b16b-c0d11d33df8b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d096ae3-3732-4698-bb10-573bed5c9f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb49175-6ac3-41ee-a222-afd78f13dda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1958e0b-257b-4063-9616-ed8f4f4a0f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66814146-784b-4df5-b502-edb8ed96f288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f9ed24-a4de-4ecc-9639-d4bf7c208b0f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed696c7a-fdb7-4467-adbb-603fa60d15ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17164e5e-48c3-4ec0-95c3-dd87560c4297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c9f0be-734c-4317-b1ce-cb5ecf730240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c99d81-8d48-4514-907d-3f5c7a74b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb41d6-a5dc-4687-8fcf-3587ddf55824",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d14d9ee-0c2b-45a0-8739-8512439ddfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c461676a-8ae6-4387-bf5c-bb9a4712fdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a56ed8-430a-4f3a-8372-9c61894f31c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b898a458-a567-455a-b856-9414e0e81571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dbd8b0-9107-42bb-965a-82a1540380d2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ee0d43-726b-4f8a-9bd1-b04ffc3b6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571a2207-2861-45f7-bf8a-fb37e7fe91fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c0dee8-667e-4f5b-a729-86e3d839c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bca1abd6-993c-4508-ae59-a7ddd52828b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e576e4b-b4cb-4bbe-a95a-72b88d2ed77c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2af6fd4-72e5-4d77-8d5b-4f33cbfbd2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb968f6e-7942-45e5-b4e2-fb3318406b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2afff01-a68f-4fc2-82d8-6c7fea34c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d86be0be-acb8-4af4-9b16-f2c57d808476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9044add4-b18d-4a0b-a8f4-6dc122661a98",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02d01bb-33b2-4bc3-ad72-43f41aca725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ecc3e2-b7a7-4096-b394-4e5c6b3927ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98082df-2b97-4ec5-be85-e1e72f285a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c44a5fba-710a-43cd-a94c-1b352aa79dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abeced8-3df8-4682-814d-c90d8f7861ab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1cb028-6812-461b-a15e-4b6c3dc68449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedafec4-b367-4aa3-9d3d-c96022987bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751a0c83-05bc-4d0a-a37b-f1536de79cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94f119e5-7dc3-4dda-8794-bb6bed1b88fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab924ad6-aa4b-4b0c-9475-1d2407a67e05",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff1e5f7-5523-40fd-a468-8018589b05fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d935acf-a8e0-4e7d-a5f3-4966fae47ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afa5517-9c0e-425a-8f26-8e230294b77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ae8ac51-9bf6-4ecb-9207-182b7a6624d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc303b-4cef-4663-9725-6667d26667df",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800ad780-c5bf-4fbc-a551-7f9f8788c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71954fc2-f327-4efa-8761-46fad87cbf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43481885-cdf3-4d92-99bf-d5f7d8830578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19755146-6bac-432e-af7a-4805ddf782dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febfcfaa-b057-4c82-b588-1ea81bc9763b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db89b6-a280-4948-b233-c32a69ab066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb5559c-af47-48b4-a0ca-77d1db210dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790f4321-995d-45c1-adb8-486f14d24226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f94b3422-1e89-4abd-80a7-ab516b01cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbedf18b-ff92-44ff-a43c-91097e1ff127",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea08c63-a739-4c15-99c4-4d72c78a7b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056129b2-2e84-4760-8b31-62360260f924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632ae3d-87ca-4165-9963-83118e53852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ada9912d-dc24-4489-943d-d9da3ac4f1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d18813-6d52-4268-bc25-d42f604a2e1c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b900ad-bf5d-49ae-b07b-3db6c4f13884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a69c2-fc0f-47ab-a700-089dd03d2c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b33356c-fccf-4930-835f-ee5a06849cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01921a6-b880-4ad4-8a41-67f585567b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55293a2-469f-4533-b6f0-826334c82350",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1818148-eeed-4b0b-bf21-8832d3cf0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6986722-e1e3-4737-8946-46ebdf5b6082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075d6767-fc7b-4666-923a-466762deba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b663c684-e129-47a7-95ac-c41c701c4b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f92248-48fc-419d-aa67-8bec4d265a99",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff460ea7-8db1-4556-8edd-c55f1da22f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5fa589-7a8f-4151-9b25-a04902d36225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdf03ca-6e03-4ecf-af85-16107a25d22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd0a449f-ddc3-45fe-a15d-9fe29a6b7215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9608ced3-3ee8-48b7-8ffc-14dba8c497e7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8822f5-f67d-44a5-8587-38c277898ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80027f92-c5ce-41cd-9c0a-56ad3e587d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc9bcba-3608-4d3d-9e92-204e0dc5ba93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ee6550b-5016-4e55-a6b2-a69d2548e470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9db386-bd67-4fd2-aeb5-ae2eee90ec58",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95cd832-a6a2-4888-9734-7a9569aa8562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45b4826-d343-4f44-aa49-61d2b7094daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8671250-ba19-49db-9620-61c0f4794e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1c806d-2a39-46f9-ac7a-e1addd36e1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec53f5cf-5739-465e-94b1-db74ba9c08a8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1441fa6c-3dde-451a-9619-be4d617b1744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0016673-cd04-45b3-aaf2-5a38f26f0772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94defba7-c8bc-4379-a446-26f90290bb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8d1e4-9647-4e3f-9f28-699013bd04d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e08bec-ce84-43ea-b590-bac92ccfe0d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861d71a2-b61f-4081-973a-a83daf854753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249ae9c8-acf5-45f3-a12a-1faa24340881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf489c3-bde5-4323-8c54-e54601ca8ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4912e-b704-46eb-9a1a-d7d00a6ace18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c6a57-3e67-4958-82f5-1b9d2f938494",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4468dd7f-9940-46f5-b4b5-60322fc5f48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c346b0e8-067c-422e-9d5b-efef61472b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cfc01f-84df-4e57-af66-29bdb7c122ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2f9a95-a1a8-4342-ab4b-34e5652eba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a6288e-8265-45b6-8ac6-778759b67dde",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982d5236-aa4d-4315-81b4-508ee0bfe467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c246fd-5ea1-40f1-8a0d-898803d150d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc40815e-1912-4454-be82-196a636605cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "329b196c-575c-4a50-bb06-cf7a4ac1c38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aea86f-d752-49b7-95ab-fe730e7683bc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23bb60-b6b8-483b-96d7-7b9948a8b959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb23a1af-a2b2-41d0-adfd-2a7827928ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956df2b-cd75-4d6b-a684-9c7e7de8b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29dcfe1a-b901-40c8-8451-96f55b9c2611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d850cec-16bf-4e7e-806b-0b270fe36821",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ef1524-0d27-4b05-9bdf-608bd8e7a7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2943063d-319d-4a41-8a2c-5450c784945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf6ef8d-0dba-4513-9982-5850c9c841e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2b081f-29aa-494f-9874-479805a57eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f4a49-856e-4e99-913f-b6470e8786de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8462cb17-650c-4f92-8e75-28bd5cb38858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcb4965-3ed2-4a6e-8c26-bd135de8202c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f544c6c6-086d-49e6-902b-886cc081f08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ab7fe7-c5e3-4f9d-a593-6355a6d7a97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d30814-46d4-4728-9b48-052de4af1e86",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe3c38-b7d2-4d42-a337-ec1ed83f323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a0194e-144b-4d15-ae0d-4211b8a4ce86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c7cc6-440d-4931-bfe3-a969330777a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f285c6f-4d8e-4431-8c29-578263d258e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fd2291-aba7-404a-a42f-de37c09ff9b0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ac14da-863a-4857-bc09-52a1c1cf6a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a62c7ab-b50e-488b-b1c7-35335ed777cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5108bf8a-0ded-4fa9-aaa8-194fe1b6adb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecf18ad-38c4-4857-9fbd-af446529afc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb458e0d-ad88-4f78-8db0-5f07b911dca9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758039e2-274b-4834-a142-e6e350fc42b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa9c24b-81de-4383-918d-42b1b782fa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82953a59-a8fa-4cba-a24b-94d69a623f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d51722-d17f-4137-8014-eb843ace2390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095494a3-b180-450e-838c-1064949bfe25",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b0d7d5-0827-4763-8fb8-558c13660a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c1cf8f-6fb3-4675-b85b-099998fcaada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6405403f-7290-4522-8b56-659b1b8c7c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d62dc12e-a3c0-4812-abdd-015afc2d5436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcc1b24-7f65-4952-9ff6-914d895341f9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5def9949-4efd-4b65-ae20-d7d242b6cce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83e0e31-d392-413b-b1a0-1b87b88e88e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1ef1d0-5840-4292-a330-3b6763fe3cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2bbaa1-aa80-4701-97b4-8ac1e8334789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d765ab-f27f-46f9-8458-4649c1c46245",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e82688-faba-457f-a191-3f0229648637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99a84c1-8c19-4001-8553-9438a026253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c826ae8-878e-4191-b111-13daae94901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5def0267-0f46-447a-8d53-471d0ec42c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874bf94-f2bd-4514-88e8-4bef8c7cf8bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ad254b-b294-4fad-831d-e8e4cf055efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a60f51-ac0b-4136-b77f-990f037fa7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c35fda-8213-468e-bf9a-0e56c56a7d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7738cc85-b096-4ea1-9c77-cd4f27c4ff69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc87c56-5b39-4752-8994-a9d71317b64f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b296e1e5-b90a-4969-b0e4-4a311f8804ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a97bac-64ee-4744-b16c-cfeba2eb6871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f439078-4874-4400-b9b7-2733d97d77ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1240b1-1d8d-4082-8193-bd424c5382f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113768a7-d39f-4513-acef-fe64276eb95b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaffa1b-2773-4f08-b1ee-56c1f464aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951327bb-f864-4954-bd99-cee123ff390b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95566d12-04ff-4892-a4ef-3cfa72eb3c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7399d33c-bd1e-4c82-b521-66f66be7db44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83893c1-f007-4ce5-bc95-2948a40a2254",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd94e8e-80b9-4f54-9889-bcf48e908e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead07179-dcbd-47d4-b19f-f63b5e1d1d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68546511-3d72-4faf-b66c-03a7b7d8b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4812e0f9-4437-4061-b929-c81bcac581ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be71a8-cf1e-4362-99dd-09acea882bbd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20963df8-472d-481c-9ace-121135e146f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a3cf90-eddb-4487-a5f5-86ef03c683c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174f041-edbf-4da6-8e65-28c554eec343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfc7553-010d-4c24-bef1-6bcd6d42b416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af18109-d673-4de0-8f6a-7e97f4a8c28a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f04e43-f8e2-4e19-8ab3-0cf64968c036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c6f628-0648-4fe7-90c4-a8d8bfc8593e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2cccd0-ed55-4fac-a41b-055f354d7496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91af8616-f5bf-4136-81c2-9c2a8fe41e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939de1a7-bf1c-4fe0-826e-fc67ddc8d8d9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785bfc41-24d5-4e21-a131-ae2bac763344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4665ca14-8353-4323-a258-426bc0e12609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fdf341-3027-49d8-be5b-35712ee00935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f2360e-b62c-4ea4-bb59-363ec24790c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4513119d-1ca0-4889-8fce-88eb870b36d3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd021a-0dcb-48c2-baf0-3750f660acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a92b01a-5bbb-4404-8953-ece7f18e075a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f7da0-8a8f-4c7d-9159-88f40c04aa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bed3b5-6bab-4ca2-98aa-b62b0e719aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b079758-8afd-44ae-a922-cb7b4f9f2abb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f8740c-9cb5-4190-9940-61ef06577fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac9cd63-c168-4e31-8ee0-d9830711d757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c1be22-8928-4d17-96cd-13f3156eb3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bde75dd-5a6b-4cff-b452-1e8d547f80b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f2a529-8e27-4913-849b-b2bc313310ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b2d25-3a5d-4f99-904d-60dcada543a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8131b44-6d2d-497c-baad-ee7a8ff40786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021374d-9b69-48a2-b8b4-b33f735f8092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5519528c-cd4f-46ac-ae93-aca8711d5689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a90cc5-4db0-40f3-ad60-1c8995474e79",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b1fd2-9c23-4319-9a78-7caffa945c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bd8752-7098-446b-93e7-8c59f6d2eb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15522e3-bd2c-4db5-96c5-d4bf52225a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "38c89a87-a9d0-4e27-bc4d-8986d0477b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084f2c53-c999-44b2-9e18-b9f488fb4a29",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87781b9e-9132-48a7-b703-15fda4a875a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79e8c1c-d2c0-4578-81fe-2ab98257ab48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2527dcd7-a0e6-4947-8359-3173a223561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "45dee1fb-8978-4356-9a4c-79b4ba3dc60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2f9aa4-f1d5-4d38-a2da-4d1562168183",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bf2400-af48-47ed-8e3c-1b4357afb10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87011c2-22c8-48b1-985a-4faed0a0547d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe502b8-ecf8-4fc9-98c6-397aa1bafe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e027c898-c541-4526-ac40-b509288974d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d436d378-61f4-4011-990d-173849f808a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ece9f-9043-4692-946d-343bd89d272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7eb36a-641d-4e7a-925d-b0b0794d6c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6646b44a-b81c-4b34-87b5-e40d2d243e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fcbaa7-dd74-481c-9023-3eecc84c6290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da628111-6a2d-440c-8cb2-5ff7714af817",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33ec855-e9a4-4658-b79e-40556ea5ed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d560a8-3b6a-4d02-b136-8b79dbc6b79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548dde8b-8fc7-4773-b681-b74371abb55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b52d16-2256-43ee-a441-b1d605ea4745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b6b2f0-e666-43dd-8c34-0b9e3b90162b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d67d1-11e5-4832-903f-90f41dea2999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe62078-4572-4f8a-9d0a-ca917ec540e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0763d459-39d8-49bf-8428-cfbc84ed7e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ca76a-3008-4855-a91c-18bd0815fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2c587-fc4a-4d9f-b7be-8d5aef2e771f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fa1620-1817-4d76-970c-5d1c39e824b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabcf325-151e-4183-a358-f639811747ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce768f-e34e-4d20-9190-02ddff1acdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea63fcd0-9697-425c-a4ba-6d600bc61a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c9d2a2-dec5-498f-84b6-8a351a993ccf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e831440-4ec4-4d00-84fd-a454905aabb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2775f696-2987-43a0-b202-f56a7472a22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6f927-55fc-4a67-a9ef-4588e2e4b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e96026-966d-40fe-a266-8d2fc62da2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150c5d7f-6296-453a-8d61-59811d84112b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e62bac4-c34c-4d50-9495-ea7966001ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3910f90e-e15d-4326-8ea2-c902d21fdb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eada48d-7f10-48fe-84c7-7b6a47d238ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02975611-8380-4c4f-bb48-35b303322c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79948554-c17c-4c51-b8ff-a351cd86c287",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81df66d2-704e-4efa-bc59-f58b4ebea375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd22d14-03d7-42a5-a888-20365ec015ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385bde2e-a87f-475d-bf3a-d319862a0455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d71376-85ad-4159-b84b-136c71a6c823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658add36-0342-4067-bab8-094463c71f01",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4971bb-6e8c-4bb8-a51a-85911a1e29f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b752061-f93c-489c-8118-7b8ffb26b334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85ddf9f-3ce3-4bc9-99ba-de43c65fd0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efdf8028-fb27-4cdc-953a-342e04d88cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c26ad4-b6e8-4aea-8a4a-a1216b0cd985",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276989aa-0bd8-4524-bd73-7e03deb520f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e40108-18af-4941-8651-fdf658a5fede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f69eaf-7461-4d3b-918c-ae0fd2fd30ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f92ca55-8a86-456b-bc9e-427acdbc16ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab4b8e4-0968-4b0e-921b-4db0e26dff47",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaac9316-d14f-4948-ab29-a98fedc4859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9cf29c-1dff-4653-a2e8-8e36b836d73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dc522d-7499-4c5b-a016-674d907cebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a0146f-5b54-40d1-843a-5db2b0a89440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04f910-173e-438b-8b32-f3b26eb40f26",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402f35e-9e7f-45b7-802c-69b9229ba9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7a1630-e179-486f-89a9-d9f89fcb9f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827b08a4-eb68-4f97-ba20-f61b2e773b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9a7708-566a-4e26-ab1c-99318b9c830e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f1cfb-876b-4b19-ac2e-fa218812962d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8a03f0-53eb-4dc6-a4a0-9a607b3477bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78230ffc-808b-4823-b7e1-bf8812c57ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179b9cb6-7bf9-4586-92f4-19945cb9921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf5da8e-2a75-4b2d-8dc4-53a2395518aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206e543c-49fb-45a1-9dc0-0766734f0f51",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04e5b65-474c-45a0-a6a8-78db9c1922a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a0098a-5315-4170-ac01-cd5225bcbdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59904bae-3216-4f90-b23d-3cbd31269e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca045ba8-849d-4d22-8fd3-19071722a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392b8140-025e-44b2-bd3a-c49d2950a970",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265514d8-805d-4ed6-959f-f0d9681a45da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6d6ecd-6daa-451a-a4a2-7e025d778247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdc4c77-95d1-44e0-961c-b980132957a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2230623-144e-4ef9-819d-0c0d4e2669a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d3555-b848-412b-822f-1696d24e0a47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790c9687-e789-4fb7-b670-f03c26c54f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5af438-666f-46f4-8bdd-c550106cb8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf55917-c405-4acd-be7d-1a9a773be6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3283bb83-4ed3-4acb-a311-4fb6d0f3f19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcacc93-fc57-455c-bada-8ccda12ad053",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b57f0-c0e4-4a83-8062-284c62b7d31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ab1678-33ff-4984-a57f-665e0040cbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70a135c-1f1d-4578-9f73-a4bfa3e2c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2beaef-c240-441e-8ea0-9a60506f6a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab050c9-d394-47bd-ae7b-9d682044fdaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe4cf62-cbf5-4ab0-8489-78d163bd4904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e046bcc4-9ab6-4d6b-9d5f-6a28fc7a829e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cad5b93-66b4-49fd-8658-22bc4ecc5d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f5e47c-8866-40c0-b440-1d2833075b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621f320d-2d7a-423d-b59c-835c7476767a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952beb95-0dce-4b66-9387-78fe05755ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a19612b-a3e7-4563-934c-5ef5064d50cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f131f3b3-d48f-4e52-8297-de28c15b6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a601d8db-5221-4e8a-81a4-525afd9f6ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038cdbff-aefa-44c0-9c19-6bbdbfb4ee57",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ec2c75-7ad2-4b8a-bddd-c4e75464a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847344cc-79d2-4183-b45e-5e3eff43ce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c09fa8-d968-419f-8f1f-c74fc1b90bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32570a5-0fe4-43b8-8c1a-5368153efee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b48394-1a14-4ce1-9c4f-d56d869006ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05268e8f-2460-488b-8261-a0fe4c7d9826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f547c5-23b1-4185-a97a-88c6141f5910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d56f21a-96e3-4527-9835-a829bc0d35cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "431301b4-c43b-4c58-a20e-5f50582d8e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53938de4-8dd7-43c8-aa74-165d67fb50aa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef66f95-e698-4529-9280-3e6183d5a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc9f54a-3b30-4e75-8a98-8ea115c7f748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5dba5b-b9c1-41d1-a720-115065a46ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e74a11-a160-430c-9fce-d6bb90c3a064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578879bd-2081-46ba-b198-a16cd5f12736",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5892d8f5-aef0-43d7-bd42-19a777ae32c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78df3e26-198c-4179-b70c-e3f49be2c90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87eaec1-580d-4e2a-91f3-871a06ad91d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6885a3-3eff-4b54-bcd0-6b53135f3ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb360a37-3482-4da5-9a78-918cdb928dea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63419a20-0246-4657-b477-1be5dd06b6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848b99c4-d899-4403-a14d-31c79f708dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eedc70a-aaef-4912-b51c-142f61b3d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed6e849-601a-47d4-9e29-04723fdf8889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421ad884-56b9-470f-adf2-bc3f1db06c08",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32249806-ab29-47c5-84da-9ce18a235ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bbb68b-843e-45be-b174-854f75a6a093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c03fef3-f978-4bca-b662-4944096c82a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57ed84a-4d2d-4af9-955c-61f2c7615eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a735d245-f5b8-4b72-a9c2-0e33cf7a9f9e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fadf9c-944c-43ff-bd64-7a828fce544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d451e8-eaa2-44a1-809b-dd883981712d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762ed0a3-6fef-4945-b61b-09dc60eedbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9ea59e-baa6-4a2f-8dff-4f9d09d76155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bdb367-c492-45fe-82d2-359465eb1776",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24d2eea-fc73-41fd-8772-9fd4fc70cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a044ac-3cf6-4a23-9fa6-9a6bde71a5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a02464c-8b7f-40c9-b2d4-8725d687541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c97d94a-b67f-4083-b100-392939fb04e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1427d7e7-8c0d-4fce-b840-dde80542b9f3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fa2fcb-5b19-4360-a62f-057bbd42dece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e6ccf2-42a0-4985-bd58-aadc722151a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da033d81-178e-481a-865b-329a3c308728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcb737b-34fa-41c6-af9e-fb8c99b8fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff264f3-3384-4fa5-b1ac-ed032c9b692d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9039f4-eb9b-4d0a-8947-5be5a05ed9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d753f0c4-b8fb-41bf-8cd0-1ae769c2302a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba51431-813e-4873-bf45-af64abf304b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54f523e-591d-406a-88a5-ceaa6ab54d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e09a4-2787-44e5-a0e3-6444855b07fc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c35ff5-030a-4952-9223-5c7f01818737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2b6910-ee96-4978-bd96-8f918da05b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604bdf09-c361-4e13-8664-01d2187a77db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e62b59f-2873-45d9-b239-d7304518be45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1afc2e-817d-4e56-a7c1-63473663fa30",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25833a8-cc54-48fd-a5bd-6bed7db3ecdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10978338-4f9d-45ee-8a0e-c8ae56e21e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b40b8e-c332-4049-a93c-2e343344857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47220ba1-865e-44f6-8d65-448b1f98e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f012c9-e72c-4b5a-945d-e6be9caceedb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a71d8b-7c7b-496e-be76-cb26a626660d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c2c96a-6e89-4c46-a9e6-170965156509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103d9598-2561-4006-8aba-21ad70043a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe4b272-2f0e-48db-9976-e74094b27ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a045bc1-c354-4707-9a89-2a1544150b40",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89c674b-6988-4692-89fb-33a02f26f0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe72d95e-8168-4b44-ae25-08d2ef578c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c06b6f-c46f-461e-92df-78bef8829318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1753ce1-4e50-48ca-9001-3eb6d98db1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7339161-8d67-4e2a-9927-acfea65e1c7b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173eec8f-f1ee-42ad-b664-86a47e329159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01faac18-9c22-475e-a905-117c446e271f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f28a43-2e57-475e-8300-453fe37d6479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5017cd4a-63c5-4966-9356-1df9f62aaf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e8668-db23-46c0-9c1c-bbf4c5c5e52c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06095e40-3647-4d15-896f-7f8f8ab1ff83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbf78f6-40e0-460d-9679-3a796f728b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8263f6-0b55-4baf-bc7e-c22c593c33d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0661eba5-6ac0-4711-b622-da9a2da1ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cb06e2-f0c0-4a19-9b99-34df00c22105",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c69f2e0-8610-4cc3-a828-d12115e39b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856933eb-d9bf-46f0-8cfe-7018b9809447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fe94e4-01c4-43bf-8a1b-7dd3b0b76431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d56b847e-8539-4b38-9d2f-2926c585c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f83aa81-0561-47ed-a792-090346e8d548",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf21ec-62de-49d7-b255-deedbd5c4dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2b3680-cf78-4827-9ace-44581e228935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611fc6a0-a412-4c1a-be89-c4f1a4a0bb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c04e7e2-ee22-45e8-870c-c23b5001e204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca24ffc-ba62-409a-9aad-078b419d6959",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6967bc9-014b-477b-84cb-e1c51f8f5a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab5530b-bc26-4b69-88a0-f93f399994f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33d8fca-beb2-457f-97a5-71954b635a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dd6f37-cf8a-4a4f-8e94-51be753bf742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d886354-74d4-4df0-992f-ee85d7a26118",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399a94de-5f64-4bc7-9c3f-497c51e864ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc836b75-a2d8-499c-9a54-6c3f0ef0abf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd18f68c-e8e9-4961-abbd-d4a4bd32cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b8968f-08e7-484f-836a-8145647f49f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58da9a25-75b4-4904-86cd-0c881eac1dca",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1901784b-2d94-4c42-aeed-ec7f263f5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c907b32-08c5-4a6d-b4f4-ab9c26247858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc235f4-2561-46bc-b8c3-7e8277dc3916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d2cfd1-af3f-46d2-b278-cd43492ebbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea00d2dc-dd19-4418-a418-530557fc98c4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85bc1d2-6fe2-44a7-8870-acd892d387c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2285224b-27a6-45b5-a8bc-e6133c43181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b89e14b-9aa9-41b1-aca6-bc4ba54f8148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f603c7-2e79-4378-b1c9-b7885b4e8799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b2ad2c-c672-43ab-9865-5f8b93d6bfb6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a151f1-0e87-4c11-8814-cef1596d654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f784d1-2f26-4e59-9427-03819ea74739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4274f0-acfd-4e92-a258-28fd2c6cbf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7466c6-004d-4a9f-a7aa-d37a7f4e4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62355c90-7774-4df1-b273-3e17d9f35903",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b7af8a-a7b4-4b86-9f32-4d1a57f328cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de01d5eb-635e-4ca1-a0ba-b46879b23995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8623ba-0860-4766-b9c3-43fb74a30c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea1fe13-6703-4938-934d-d53812a863db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01dc8c7-0943-4d0c-8f88-acb782e4b24a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c73833-82db-4429-a39f-0cf322b2a086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b722cff-8c05-4a1c-87c8-ea0970916eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20249f1a-ed1b-4300-b57e-2aca4a313d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "752a9860-a706-41a0-b18e-bed4c4b594d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f155ba54-50b9-4d44-a39e-94230bc7bd07",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dc8054-d1d5-4f4d-817c-cecb0dcac7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bba5e5e-a8f6-4077-ae45-6431204ca38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafe0df8-f8ee-4ef5-8cdc-f8a4ab20d4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4387ebc3-8fcb-4a3f-9c0b-3f8834430881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289f503f-e9b2-4f61-a08f-96a589e495f6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce541c1-9811-46a0-ac5b-0f102bfa8942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09e79d4-e930-48cf-94bd-33777b6957ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830809fa-2a94-45fe-b6ce-155ae1e81c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "247f1065-2215-4505-a3b5-9430e34ebb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba856b53-8bf3-46d1-b41b-0458ae0064b4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c6906-9641-4064-9793-5c6cfd2ef156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d0e0dd-d8ac-48b7-be8c-ff68a2747379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1723fd4-9c2a-4957-b78e-a87a21d7b50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c77f614a-7537-4658-952a-a2163d662d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2c6544-66d0-4043-bd8d-5c3d9db6598a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51a5797-4048-4df0-8fe0-bee2bee6092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9deba3ac-dfcb-496c-8220-040c91d86312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84e50d5-d217-43c8-84d3-0dc6576a3a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc9dca5-f66b-4840-9c94-fa25b09927a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e38804-19a6-4b42-ac6e-2e55775773da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97935ff-495a-45e9-8a69-93385e752c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a68945a-658e-49e5-8b63-cfa82dcaefae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15bce56-464d-4b29-9dc0-fdeb4e9da6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d391db6f-0c46-4ded-a7f5-77559ef848ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87bae724-0f34-42bc-8fe0-f3ae160a73d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "891efab9-a59b-4188-a5c1-637587c7bfd9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329716d2-6700-43ca-9a7c-2781c8846cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73d87c2-7567-4fff-8da3-52935528bb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204abab-c7cc-4f49-aef5-b657639e2cfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f7772c-7a3b-46f3-9285-a86a7219ad7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96d16617-37dc-4307-95c7-1c198da462df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ff48ee5-7fbc-47dd-843f-4e1430e76fba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08108751-d80f-4332-93ad-4adb9e3c3834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7923e1-aba6-4079-8713-f455174fa334"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f78c9a8c-dc09-43d5-b27c-e1ca7d179daa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f89f417-33e9-4175-b69c-20529f004ae4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3381d71-83c4-4c9a-844a-568e9637b744",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ead3cc7-7c24-4e67-a47e-6cf12d2fddcf"
                }
              }
            ]
          },
          {
            "id": "05f6e1ee-8b27-48f6-b7ee-61f62d3a80f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17fb6197-4dcd-4555-b427-7a1ade0b80bd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c9b57587-9223-44cd-b222-97aa03d1bfea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53c61a0-eaad-45fb-8899-adec901dbc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9fb84db1-e5fe-41f2-b8b5-0326ae6f7a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0db2b8-5e32-4ac8-b84a-029b9fa0899a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4974fce1-9384-4eec-8681-b4d27afc79fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85b9959b-fed8-43c9-8fb7-2256e0d21a36",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c58d8f2-690b-4feb-97b5-0e6dee03ca14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a1290da-6fdb-406c-8c18-d73a5677ce83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "483a07a3-90a4-4c3d-866b-316b17a6b669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e78a4f8d-1776-435e-a90d-be2b6d55c5bb"
                    }
                  }
                ]
              },
              {
                "id": "34849392-2e7a-4618-a0f2-e341ab54f8f5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efa95246-9db2-4428-a7ae-d35d8f8ef3f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a311b71-fb18-4e35-85de-903ce8e2beb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e962403a-9cae-4072-9f3b-2c955e384fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71721bcd-9875-48fa-9b7e-d1dd07593dfd"
                    }
                  }
                ]
              },
              {
                "id": "525d4cc2-9c9b-4e00-b4d5-005168ebd1b1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "448efd0e-5cc7-4197-8009-85cb99faddb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c38cab88-638f-4c4e-ab0d-fcb0d58f51f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86d01ed-45eb-4c30-bff0-cb07a432d900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "daeb9893-da1c-4038-9f53-3c0568ffe0f3"
                    }
                  }
                ]
              },
              {
                "id": "0f80a6f9-cd13-4c61-815e-690f14d30935",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8198b07e-5952-48cd-aa87-8a2c442af9c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9da6c187-1c6f-4872-bcbc-84173f62e76f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c64263e-6d16-4904-85c0-7cb7a62b84d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61d9a67f-39dd-445c-88ab-0ebe1df44dcb"
                    }
                  }
                ]
              },
              {
                "id": "ea7284cf-7f01-4f9c-9053-20c73b31a10c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2f8da1e-49db-4f22-a0c7-df41a8250d7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6510451-7035-4b60-8cb1-599cc7926e55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36bdfa24-4f34-4860-97e8-08a06b1ba12c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "229d893f-afe1-422e-91c2-15517cc1390d"
                    }
                  }
                ]
              },
              {
                "id": "e4d8a0a5-9504-4b1a-a38c-f5c0aa7ef8b7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2e59d45-55b6-4a7e-b835-fee809009cbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eff0efd5-4b6b-4709-aca4-fa9ae0883b69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7b6f4dc-c306-454a-b4d5-4c5156026f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cbf32ce-22fe-4391-bb5a-c4c93e166e26"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f34006bb-d1a3-4fd2-9f9f-acb486a5d275",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bf71822-c3b3-4c39-8e7a-8198877feaf7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b38823f4-b2ef-4640-97f1-28995e777a73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a956a20-22da-470b-be9f-cd8145e2827e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19e2663b-1894-4635-9de2-0f41aeb90ebc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1371cce6-5d62-4217-a22e-45b17ae708bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df18ff31-4bfb-419c-b646-736f3cbbd0bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4eeb387-8327-4dc5-803e-943213e8978b"
            }
          }
        ]
      },
      {
        "id": "afd7c1c4-f639-47f3-807b-a1b107e6bf5a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3e04475-f958-4578-a731-a2b6474871e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2efaa7ff-b615-4c3b-a7ba-d1224d20710a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f69ec46-fa74-4a98-ad41-d9b746ed8fa9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91101458-f9ba-43dd-bb27-63864764bbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece8e927-d758-462c-ab9a-fd11d2b6ff0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5851f4-243f-4726-9dd2-a28f9c81a4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c3f237-dd88-4194-b5a1-cc097373ae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bd48aa-2793-4515-bbc7-ce9bf8382b4b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f6c20d-5c31-470e-b5ea-4a39f93577b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951aeaef-7949-4a18-9b3f-4c8601f5bb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bd36f2-764f-4ab8-94b8-58a7acf1481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a3913f-774a-4f91-bf20-879a977581fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc52ea85-ac41-4542-97b4-2d029f5894ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37894b-96eb-4e0e-8f42-26c55500f30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746eb2e0-fb77-4881-add3-ce12a4811dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32a8f69-4076-414a-a8df-d549c1c39f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3691ac57-fab7-46c5-90b6-143285db34a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61caeede-adfe-49b8-99a0-fc6e7e582670",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35bf576-73f3-4215-bc33-45feb8c5fb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb38f41a-eeed-42dd-a488-8e2bd6648270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91f4bfe-fc6a-483d-bb60-da08a104b4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc7631e-228a-4d2c-9657-8da44795353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff757449-8a02-40ad-89c9-2d4ef482e294",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4e4a3a-3100-4c10-9a8a-a5facfe714a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cefedb0-324d-48b1-806d-f014e20f75ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b127905-169c-44de-b3d2-7ff98f3be6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "951a8dc7-e420-4720-b602-38c1aa21722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d9584a-478b-4e16-bee5-2e65c01ab933",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bdb337-b304-4eb9-9101-ae3c76b22ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3ce6b2-50f5-4f3e-9c15-8b5c74bd984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ba184d-db22-49de-940b-131d93453b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c438b152-6c20-42d1-b325-dd24d7f055ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fef9b1-9cd7-42fd-882d-64132b773af2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b66e10-2cdd-40c9-8451-84faedf8e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e3d010-37c4-4938-b779-c9e19809ff97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b7f939-fbe5-45e2-b1ee-807f99a9a3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe40226-36df-4d26-9d40-a92a4cb19a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5663744f-76d9-4133-ba54-79019375aab8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c7c4f-ffe3-47c5-96dc-2680fa60e592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df61560c-65c6-4a3a-adeb-e3ba75733661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f33bc1-6b7b-439e-9320-73d86accd285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1f917b-9369-4c2c-a95e-7f1f375a6e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a5dfd-d901-4ae6-914d-cf25040c6781",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1a2eb2-5f12-4309-8afd-b70b3abe34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07d2846-cc79-431c-a214-ff7f524e4d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b0143b-a76e-4fc3-bdb9-90f60e9f9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc235c40-6fc3-4408-b7a9-1d42b1017c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55070024-553c-4cde-90ac-d9c5d34ce55d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb89b291-6174-4083-b727-b992526e0831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d65c2fc-61ce-4232-b858-e502e8091083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75edfad1-6bc3-4825-a44a-9a391ca77b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc55519-5be1-4a27-925b-288eae1ceb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb97936a-ce30-4cc4-9d88-832cb7b5dd37",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c280b-df76-42f9-b130-fa89af0b9900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3893df74-2229-464f-9869-9861b48a0226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15af9063-777e-4e5b-a776-75463fe83e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b960efcd-5cb6-4976-bda8-8d8dbf5bf63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2698f17-a5bb-44a3-a2c4-e83081f151f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bc8105-71c9-4d22-ac5a-f1120d79eab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb1a07a-9f8e-4773-a7cc-93276123ef9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcff402-29fe-40d2-abd9-d6e7f0e55d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92c14c7f-2f5e-4480-bb9a-c58942b4838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce368d4-8a89-4f8a-8921-406977e50c5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c461413f-564f-4634-b711-6fc48311cd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aaf13a-6b7b-4e2d-a64e-f98d36bdf3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95327f6e-eda3-438e-b90b-72ff62cef29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59681816-b184-40bc-b0b5-c0d2d1dd2dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943f3089-2498-441f-95f0-3a6871fbb2be",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7754cfd-29bf-4cf7-89ea-6e58276da345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c17236-3c2c-40ec-97a0-079d6fbce2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca9132e-82c8-41b8-a8ee-94fcabf22f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f87f0e-3c1a-48e2-9390-c81c053fac0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19cd384-75cc-4e2b-a6d3-a1d0d946de3d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c63a8-32cc-4ab4-9cdb-d4edf2746811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73ea246-394e-4d0a-b894-611ac78aca1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95336b8a-6d4d-4be8-893d-59b34bac0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ef18cb-1f04-4de3-b37c-74e651b332a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b2029-e2ea-4140-960a-3e90e1d12c00",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab10e2e-f6b6-47cc-a78e-e7deee71064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723a1d4a-75b9-45d8-b0a3-a5871f17aa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0eb349-46e5-4823-9e67-a541c85be072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9c793c-cbb1-4ee0-86bd-c5945541fabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56380fe-2aed-4b2f-9cdc-6be32da95559",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f9aead-14e5-4a1b-bc1b-8afcf23652f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3460c5-99db-453c-a845-5a7d5da2a858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c595a22-1484-4271-a599-851235785f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "660db666-4838-461c-aa4d-bea79d10d7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180074a3-ec2a-46d3-9d07-77d0b000fb79",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdfaa27-4f81-4982-b5a2-4eaec0bf51b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16d96f2-7d68-45b1-9ce6-efca477a5f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915aff39-69e7-4b47-aac0-3802e19452ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1656ea-774a-492c-8ebe-c1631403ec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b07395-f9d6-4618-86c6-57b03030c73a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6665fa-e7e8-4d05-850d-d42aefe5ae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909329a3-7497-4645-b8cf-6323d8f3f999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3021aa-94b3-49ee-ae5f-ff46bab8fbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65fc3b8-b24f-4edf-a098-8d353f720ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c286afd-8541-4255-91be-b2a3b758fedc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90532d85-bbaf-4876-a5b5-70b29791ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feffcfab-c57b-4b5f-89d8-c140b087b2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e8df1f-e376-4247-8563-6d02f66ffb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb939785-b0a2-4ef3-bbf9-10485178ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e733b041-6254-4ae3-aef7-f4ee18bb5e2d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab75c1ee-3fa7-4fc4-a6d1-49c2ecb53b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0869e073-39cb-4971-81d5-00777c82bec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e62aef-8304-49f9-8580-6e1c6d16d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd541d6-5e12-4b69-a5c1-4cc9464fffa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2409d5-ac24-4d71-a1ca-7fd19ca45aa2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448fd665-6487-42e6-83a7-6c301eb7ba20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ac9de-a260-4622-a582-ab1efe50a204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52e5ef9-4458-4fd1-8b52-d58def92a3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55288ce3-d75e-4c56-9ada-bc73e93c560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a1a5fc-1c57-4c54-ae02-7e61e71520b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b4a4cc-b675-47fe-a576-91eea1c268c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbebb2f-a548-4ed3-bb30-1fcb410403c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567893ab-7984-419d-9321-d9e6d1024055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2c9749-6aa8-4aeb-b3fb-3f6bf82f1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a7afa0-08ab-472e-b03e-5207b9f2296b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470040b6-5e07-434b-827b-3b63823da7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a20edc-347d-429e-856b-3a5d3d06df70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f17c0bd-7da8-4e52-9858-f97f9cf4ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f68c1e-1f1c-4c0b-8404-c947e2e7d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d914db1c-b5fc-43f7-91ce-dcab84cb74fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49dcf7f-8655-4e2e-b9d0-8e3b4775a791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3875373e-89b5-4139-a930-32882df732d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2ceca5-f7cc-41a3-9d6c-23fa111b71aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc46ebb-8999-458f-9fc5-72f55156f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038cc33-8014-4c94-93aa-6091cac88b7f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cd5783-3b47-4dd6-8637-53531e564e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d27119b-b076-44e5-9c76-322b5bbc45e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c8e89-71d4-4aa0-b3ce-a0ae551b920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61674fa8-d8d1-490e-99a3-054c4f93c1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b9746b-68a3-47fe-90bc-3e1682d0efe2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ba886-0742-45e4-a775-264aa9b1f66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff94e148-fad8-462e-87d4-e688690ede05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd99ccab-e54c-4beb-93d0-da810b1167fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d42398-0a9c-407f-95c3-e523be55e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cd4324-f567-4c8d-a258-945163864856",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c99989-4353-49af-a016-141bbd7f55b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d664f945-5bd1-48e0-8344-05b3aefbad5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f519d4-5f43-4b1d-bfe4-8f085178f83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8fd1b0-5d32-4017-9225-4dc3cb736371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d60f505-8313-4860-bdc0-dce4c317c627",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a97d7-1f41-499a-8fe1-f792c4347b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac54513c-80eb-485e-a292-bec1f16cca86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08834f0c-5a61-4de9-bca9-2c0b60bf9011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a6c6a8-4d25-4d6a-8c84-68a1581245ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0430c9-2953-456e-8770-f265cae98e82",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35eeb56-3dd4-4b60-8689-2ab6bd61802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a7de8-e460-48a5-bc4e-c000dcd3eaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0fc10b-eb94-4463-988d-b628e2f1e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640e03f4-06e1-42dd-a8ff-36bbff115454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245c4f38-5e2d-4e37-b26c-cdaeeeb2f9d3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a95ce2-e2db-4976-932a-6d047217f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d9e7e7-0431-4cd4-bfed-84f7c25d33a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ebd842-6c30-43bd-9092-21608b017da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dad5c81-50cc-4e56-8fc5-38f298e46d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46883408-29b6-4f3c-9f03-9391a08ba9f7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064d8fa5-4c77-4ba9-8b6e-8fc35819333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6be46a-c474-48a9-9575-4c033625b8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d200bb3b-5689-48fe-a409-b065f09374d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762deb2a-e6e9-4c6e-a932-b3327134b79f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a592942-b996-4b1f-993c-a59951228ea5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "230ebae6-d03f-4b00-a3cc-78ac36519e6c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba56e207-d744-4ded-9f97-b64572d82807",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c395aef7-ee03-4816-8f54-f856c766f055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87132fa5-5a6d-4fe8-a6b8-d25a33ac33b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d03817-ac83-4a9d-ba6f-8ecb0ca62b6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "924cdb6e-b2e0-4bb6-9318-ac0ec78581e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac831e2e-35e0-4ee7-8889-81b73506225f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3ece46e-f10a-4687-ba47-487acb5a34f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c77c914d-6598-4b41-ae28-65ff3d76f329"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33d0f231-8f10-42f9-8d63-417357e3fa66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bd792c1-ad0e-49ae-be42-7410daa6222e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0d33bbd-dcd1-4f98-abd7-d762b6b48101",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8c0d106-8112-4e95-a849-b0fd5330f9a0"
            }
          }
        ]
      },
      {
        "id": "498f1f6e-ca22-4eac-8c69-f2d91ee56a44",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c0ad4497-51f2-40f1-b9ba-07ab596ac911",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4d0c720-bd3f-4587-9503-4e801a1a49a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a2a5537-c21f-41a1-944b-47bd7068c066",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279496d7-e855-4b0c-b609-c570033bbfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f00de1-c59e-4d9a-a3cf-987c194ba60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17401bbc-c591-4ac2-b1ff-f4f054485a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "989eed38-394a-4410-9ea5-e07d80750733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dcfb1e-b56f-4d03-a970-c536cc53ac86",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a46a2c0-59b3-41cb-b015-edc13a3dc839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c2143c-987c-48d8-a551-fa2ddf8e62bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd3594-899a-4e98-90dc-bc4e26ab15c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be6fb0a-d3fd-4017-b5dc-a5e2e52ec55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080551ea-5553-4ca9-ae1d-3969f26f18f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fe0098-69b7-471d-9ccb-269bddf5d669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ede41-120f-4867-933c-8b98b4a25004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c790e0-5bf4-4ca8-bbe3-906bfceea3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db370cf-e279-464d-bc6c-ada0f5ce9dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164d1ad8-abe9-46ae-a1de-5893a3272634",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b686574-3d24-43df-9ca5-aa47712203ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200d25f7-ce67-4ba1-ade0-805b633f7ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785a13c5-0126-42e6-88d4-486b4f9b8b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77decbeb-a104-41e1-a516-761414ab0326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6c0212-2c4b-4dd3-955f-077c7a135a3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a51832-d11a-4d59-9ee4-46f26b0daf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14d6c04-3fbd-44b2-95d2-bf6fab09f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294b2896-23c0-44cf-b4aa-b5a0d9f254e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93635566-b647-4fef-82c4-1224ba4fcd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17746ed5-9578-439e-84bf-dcb157706a90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9097790-3fd6-41d4-9d57-3d099761413d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644cdf5e-149e-479b-82a4-56e65a66acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d02451-1453-450f-b9d4-e8e4aa313046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16d66b7-978c-4d2a-b352-614c28794d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce36090-9eb1-47c4-bff2-2430cb6cd242",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c2d80c-6d32-4c19-8c20-a1c410210ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928e369b-efd0-47a5-b48e-5d034b42e422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae540de-4214-4e48-8e4d-7d2bef3d9470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f052e63b-e341-4b97-9d19-3f351abdd119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6108fccd-2cab-4592-b2c6-f4bd0df1ac1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae5d4b-d81c-42e0-858d-24325ad1a529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6b697b-b9c7-492c-90c3-57276cd4f154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f944bb1-37f3-45e3-b25e-16fd44b62578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a520ad5-e42e-47af-85ce-c5cd59d8bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff3fd2e-a198-4ffd-9e3c-558856d1fb5c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74790b3-61b3-4092-a8eb-71ed583920e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0279974-5f54-4ff2-8568-46b3db081a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e498bc5-5987-47d9-9728-edb4b14aba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db5adf8-63f6-417c-b7fb-fa4535964609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab81642-e45e-46a2-9a0e-4ea792fda24b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f8422a-5cc8-465a-9baa-569dc48e5301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f151dd47-510d-4b6b-acd6-f0afe5112e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a3f21f-cbdd-4220-b281-e5486047a90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4daccb1d-9468-4aed-80cf-1d3de8c733d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4389dadd-cda3-4d30-b27e-7251b7f6d447",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4255e60a-cda5-4159-99e8-eeb79b810a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7daaeff-6ed9-445a-9d6e-9bb5d2c02d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ace92b3-b3c2-41ed-aca3-4fd9994e2c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cd11b272-c089-406b-ab7b-636b83114c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032f1115-c943-4fbe-8ecd-3aab034b664e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4315bef7-c11c-43da-b923-1e4d8381e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c987bc-4c40-46a8-af45-e18468c6fb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab04fd5-0fdd-4c15-9921-d0757276e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01bc8bd3-b4c5-4121-adcc-5594483f78e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2faac56-49a5-4ece-ac26-42108ae00736",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a1add-c6fa-462b-8250-bafc9ca8b8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ff95a-49af-47af-9919-d934776705ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416a3a06-fd6b-4e71-8de7-81fc314810c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a12ed01-4550-415d-8220-a48c7ea4ba9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c11985-ba8b-4624-9622-57c3cb2f606a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19092378-4930-4263-988f-35b06c58b5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5189c835-3666-49d0-a7f9-f191984ee23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da685d25-8d39-4b26-ad27-b47a03509e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81380f-c78e-4746-b109-491e5946968b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4cb9dd-e38e-497a-bbc1-d4cfd6cb66a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b8d68e-0ce7-4c37-94b0-b13f432cb4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317b597e-e872-4e55-aa2f-83025f24a154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4da61a7-fecf-4841-a7ca-120b0f33fadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e806c37a-1b18-4108-b53a-543e14d85c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164ebb46-3f80-49b7-befa-c103c210a335",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35cb7ec-38aa-43d5-ac6b-ecaffebf84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c845ad76-5c9e-4f04-89c3-338958eb6a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac79915d-14e5-4e46-b2c5-128e089bd334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0876f99-81ab-4167-9173-853e37d8164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a8a19e-4406-4396-8d59-a02c1db0e5d0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581eb04-8401-4147-a2de-6f7539f2d202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d328ea1-b9a1-4757-a786-897b9b733b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729353de-897d-4a4d-98b3-fa00b23b1f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "895514af-942f-4eee-ae33-d71fe35abae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d31d43-70ca-4a3d-8474-3bdbb07615a1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f996ac67-39b8-4abd-9a7d-4683561c2609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5525e4-507e-4b98-bd48-b7aefbde2a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78af2eba-1d2e-4766-af75-f257aea8d80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb821b84-3972-463d-9e87-2115cb154339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2778dc6a-99c1-404a-96a2-cfeb8b500cc8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79978cfa-1c4d-4e0f-b401-65903b765cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3aa597-d9b5-4548-9874-b562c9c9d3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71e31ea-af39-46a7-9fcb-2002a49d7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c167e79c-d645-4528-841d-8d44e0a29fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e11087-5066-4a4b-8732-253cd5c35ebe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8242f32e-7e1e-4550-917e-bfaeef61c0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9ed63b-d875-4b06-8af6-876419b7fc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c7c9e-5bc5-4d03-8071-8e0ebc6ec050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e3de7f-869e-40bf-beea-7f953b757a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa31bd-aff2-45a7-80b8-5e33fb95c34a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed28cd-c3e0-4988-b2b2-6a2c2895668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5e2a85-b7a1-4c79-9174-eb8898d2eda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6af3d61-f09c-484c-b97e-33c5f765d24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca130f6-6072-4283-9126-6993527dcbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c56b67-af13-4c15-8ae9-a4f12b10ce52",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea4e12c-7366-4561-8268-33d939496e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0e567f-2931-4005-bdf5-9ea0d5584a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce10f20-6757-4b7d-9cb4-89c8c4cf74a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70f4580-e319-4e50-8e0c-575cce645fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370806c3-6475-40d1-813f-8cc0f2ed7819",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6808056-3938-4b0a-99c9-a91af2a3d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b012ed0-6ae9-44a1-b723-3ba3b8a34690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b76490-8e57-4943-9bd5-618a749eb3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b56a30a-148d-474f-bf10-f636f7d3e6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa9e428-e280-45dc-b1c2-8cc3c62e7a50",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26beb972-e76b-49e3-923a-0ea037fb6280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de306294-8896-4521-98b4-440f1c26be48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6156a9f9-f1c6-4d05-af00-283ed31d318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5561ff68-e3de-4c63-b671-e14959cc1a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd36b60-03bf-47f1-8486-719b14c5761e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f208ec-ca57-4f5e-b200-7eece13a8ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0de5c4b-ae38-4d3b-aed0-fb812c476578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fade8acd-22da-4ddd-b41a-e435867d0b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f72c4c6-545a-4e61-b7fd-9293603a9018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ae219-7279-42fa-bce0-61c38fee87e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917ffa1b-f9ea-470e-bdb2-5d92a4dee8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a10e0b-b6f8-4408-ad79-2475e93e91ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c9fe4f-99b9-4b8b-b769-bd82e6660e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9c554e-43cb-4c37-a642-d874a44fd1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1ec4f8-e9fe-460c-9ed4-67021d9ab277",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac444e85-be36-476a-8442-f9d4a3b977e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a2ee65-2a91-4e0f-9c79-2daa8e4cf2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2670beea-e5e8-40aa-b90f-d503817fa580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b15a8a0-43af-4c1d-9414-88ee538d11fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3aa402-32f9-4449-9a69-74084b316446",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8defcf-928b-4e56-964e-39095ca6e083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa895126-8b5d-4e25-bcdd-af338f968e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef17549-61c1-468c-abcf-97948c78ff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46fa7b06-906d-49ea-b7ae-ea95332a3fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da1579c-cb55-4d0b-be7b-abfb8766e501",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8a5004-f15c-4fc2-9253-5bd7fc36c32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9941d6d-a702-414c-8f23-7a090dc9fe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd9d664-d69b-40e0-9c0e-2deedada34fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1c04eb-6cc8-45f7-bb07-1ab3b6bb14f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b3b8e8-9019-496d-87b3-62e47e0a5871",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb65fb62-e2a8-4bc1-955f-03361e212d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2d47c9-5ba9-4fd7-808c-08dde877c5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b97d121-87eb-4a76-95dd-89ab7a78fcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0b846e-6779-4aa1-ac94-b5221345c011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbad78a-74bf-444b-bf01-d96672e7b245",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186649ac-cd47-453e-9ec6-46afe0430490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0281b770-5060-45a0-b935-396c4e93a6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b232fef6-b121-4910-84f8-01ca581dc2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61eadf07-9a92-44f8-baf7-7a589b1e9865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46409231-a958-4ff9-8dab-ca91a6c25381",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c592e78c-ab53-420a-8c8b-22f412c618dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e103d9f-e12f-42e8-8835-ba5be99aaaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649b7402-72fa-456d-9a99-6ebf00ad461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614fec3e-259c-42df-8111-af8d13b9db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7db6f98-a441-4b1e-aa88-363e4d1e6d06",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4929701-9595-4bf9-b993-fc779e71791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf04dcb-10e2-4185-8da0-b1e9874b861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03685027-0a09-4ea3-ae13-e3651a05ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133cedd4-3560-4b17-8ca4-4bc27b70749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86593d2d-726f-4c5a-b58b-6883c688e092",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f653b-f2cb-483a-9a1a-3eb6e3390bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5721903-763b-4dca-a1ce-f3fa8848ce68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0ea8b7-606f-4fe8-bc29-f1ee4996436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30829535-06e8-48d5-ba8d-e25dc0eebde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25218ef-39ff-45c5-ae19-667df7a4d73a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e69d72-a093-446d-902f-171bbcd08162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5785b2a1-b9f9-41ca-ae81-a68a77eefd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d7cc16-5555-4bf5-bfd4-4abb21404f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a330fe42-7a3c-4b94-bf8a-e33bbeabb071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa94ac2-d3da-4e31-a2c1-7b0269b24e4d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864311d0-6d88-4607-aacc-cfad0e090cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeac619-64c4-4c1f-b844-6e5fea3588fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3052c98a-ac2b-4e26-8c12-dafd66503835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f153f288-5260-4bf8-99d1-2db56c047edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239331e7-f29c-478c-9d3e-1e999d49e49a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ca0153-5ecb-4059-942c-26d6a6efc38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065f7c7d-6a53-4c30-8fca-3689f56d0ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1dd9b0-725f-4d9b-ab93-f9422b20fdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a31a8f-6542-4c2d-9c91-b5b7d8d5d5fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0717427e-dbcf-4d8b-b909-9a6dabc43274",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "683ad914-20a0-4078-93d7-33cda7363f8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33749a6a-4326-4dd6-b2be-541fcea9fb60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "52c1afd4-a438-4f37-aaeb-436b6b9add1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa46824-a5e5-4bab-a1c1-2822df4d45fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f61282b3-bc0e-4df9-b881-f7aa69fecd50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82c41355-e28d-458e-9de6-7af0951c2407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94fab65d-2eb7-4b94-bf02-dc58186f35a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c476848a-d8ae-46f6-87cd-4f74effc216d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2978bcd8-11d0-49a1-8ce5-0caf0050a580"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "195ee488-c3a0-45e0-a76e-2c7ce1669cea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d366596d-c5b1-4efa-b4c5-35a8ee18b904"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68ed9137-2af6-4ecd-9cb5-bcdf988ee03e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8556a82-524f-4f90-88d0-bc8041814ff2"
            }
          }
        ]
      },
      {
        "id": "1c124e1d-7b07-4631-9adb-3236c512e5a3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a32a4a49-d524-400a-85b9-a5ef2781c7dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73f32bcb-6750-4045-a3ca-7279b93c3b80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b79dbca2-0360-4cf0-ae4f-43ec8e9544ba",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699b9dca-cb52-431a-9e72-b697c91797b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781a7c2c-3d99-431e-8841-e0165f63ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03f66f2-08fc-42ac-9fbf-42f00bc651c9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8982b25-104d-4467-9836-3ccb58375801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37a454f-60f9-4f1a-a7c0-891ab7a46582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9224dd5f-138f-40f9-a7b0-3e78372b7388",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb0231-3499-4221-9de3-9bef0c17ee82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f088db-175c-499d-b706-56408dfce61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b56829-5955-4c0a-8ab2-51c508134e10",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374f4785-d726-4bab-83db-0e844b5c4f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc73395-8abe-424f-8c4f-03ec1cedc50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c72d17-bb77-489e-9d5b-20c8e6358ffe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6a1775-83f0-45cc-be13-700c6596b76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fc8b0f-27a5-4ac7-aa54-9ac641287d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9af0fdd-9d69-48d0-9088-8f3a68e2d033",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26558fad-5c22-4b4a-88a7-fe08e6b1de79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f16ec2-f00c-48b9-900d-d8af638e37d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b232c4e8-6121-4c54-9ae0-161c4603d4e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6317fe-2cc8-442d-8e4e-5e53c7bb620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee21156-a907-46af-a2c3-1f6b7fd418e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707aa1ce-8a58-4b82-977e-3ae45383492f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b5ea5e-be3c-495d-99ad-53313e0b5b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ddc79f-6894-4a2f-ac2f-5a27cb01448c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f231dbae-8b57-4bbd-bdf6-ad708c647044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71451048-9f55-4c52-a278-ba373d3d64b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983cfa1b-8273-475f-a949-ebbd439ab042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1692216-49a6-4caf-8119-9aa3c3d92d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a1a58c-3d9a-4d23-a8e9-04cf3c52729c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6412a292-c063-4ae0-a42f-336008c62914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb528e64-7b35-40ff-a0d0-873b8af7b1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0a70d4-f6f5-44d7-a39a-5e55094d81e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e408e2-3902-420b-b698-8e751ecb980d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7e69a1-c6fe-461d-aaf9-108ecd22c5b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b807b-aea7-41b1-9911-d8199f92281a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ed8b7e-6c4a-4091-88f1-0906f2d816fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7038e480-481a-4e9e-8fee-b192e9e50ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01709ff1-92cc-4a90-8497-079cd4bddeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698fa59c-1dac-47bd-bdb1-b9abaa1ab7ed",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a9f96-92e6-4ddd-832f-e0af9c62e5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566e393c-019b-4f6c-9da8-136b39f3b85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f5add1-2b4e-4b25-873a-30c1152abe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fc412a-973d-458c-bf4f-73f1a6ebbe85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc982e84-eed2-4ee2-a61e-0423898663de",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2c0c61-8199-4255-8954-9757b1943ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445cec1d-c707-403b-af0a-aeef75d31893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea55b20-bd8d-441f-bd04-9f8da4eaf1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a6a7c-f196-4145-8d7b-91de5874093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179528e8-44b8-459b-b64b-b57df95060b7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b5c58-1ad2-4c4c-8b6d-ca1064390698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c0dcf5-bfe8-4f09-93e8-86bb348ad653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636da1a3-ba12-4d58-af48-db0b667ca453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08edd26f-2b9e-48ff-a1a9-a90a3896fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5413d025-833f-43f8-960a-b68020241e81",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7ac60e-61be-4a70-a028-dec39ed46fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f1b299-5dbc-43e7-9d2a-a42c9357a317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c7773a-ff91-408a-842f-c72acbd70244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf2d67f-dc8d-4dc8-b089-79fea1c638cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff8f453-9f7f-42f0-94db-3b170d78976f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0871db-f874-4a27-8c46-8dc36492750f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f116c5-2578-4e9a-b41a-88e600d99ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99a23e0-752a-484a-a772-a0309d85d8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96062f1-c673-4823-8f48-c272d46b6858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cd7246-5a83-4a2b-a6ba-83edc4a91743",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758fa128-6f5d-41b3-abe8-5a6b3242c1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703dc4a1-d03e-4abc-99f6-d2e156a4cb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74112951-f25e-47f3-b0db-173033cc4c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8411ae2a-5fe9-46dd-9f67-04c01d155af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1fcdef-d1ac-42b9-bbfe-99a36dc5eab3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66d7980-dbcf-4c31-9a5c-b25a017df06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d93172-2a17-4e58-bb02-98d6948ccf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf3563e-cabc-472a-a139-096b4385f6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38dcbf26-c896-43ca-8fb2-9f0265ef728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57c54a0-cbcf-4b47-871f-6f0c623e882f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c07d4f8-9738-44fe-ba85-4ff7081c8a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e646cd-afc3-4e3a-8956-7968b266f072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa4deea-f05b-467b-93e5-99de5de948ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c99cd74-167e-4c45-aba8-b11db9cdb28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9164ac14-d3a6-4d94-b9c8-2f5e5c3f00da",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0340ef91-5056-45de-bbd2-b1f08e77d5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4327eb43-ed62-495a-8a7a-b764f8625156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3333ef3b-c43a-4797-8fac-822500596a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b2d85c-d3f5-4b6a-b477-72a6f8a2c484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0558f7-48fd-4714-9272-3c9001fb7e4d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cee2a2-d4d0-4eb4-91a7-429086076f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc57831d-1ce4-4393-8640-9257d9dbab2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cd6eb4-8de5-47cc-8be0-cd3df671373b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20706713-88af-480c-b0c9-2357a2ab9ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8741429-f2f9-433e-8b16-de30017d89cb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfa014-e7ed-41ad-81c4-5fd5c20e94c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44df2287-135d-4ce1-9a3b-3451380f669b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b83cf1a-1b34-4743-a7d0-a5227c163b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3bb321-ad21-4ae2-872e-1a4ea1f86c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3690d64-8e38-4059-9866-bfe835b2ad70",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1663a04a-73d1-4161-bb2a-72a09fb6b8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ef78ae-edf7-4d8a-8e9e-0928cc58e29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd4805-a4ed-4d35-9456-2bee88d49cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f42dcc9-54b6-45c9-a88e-8926d2ad3d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a2e0f-2640-4bf9-a001-65144014200d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1e93b-e147-4546-98d3-7479a0717505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e4ad2a-10e6-4ab8-af42-4b079805a5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807ef7a9-f66f-41a4-95d3-51c34a522651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e165bb29-7793-4760-b62f-4e2e91951b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f31326-d581-4a34-bc72-7c2c12a2133f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5fe9f2-0b22-4939-8118-f2c8de3bfe22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61d94be-40d0-4be7-9136-6c706e408632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729462a0-3b82-4c49-b1d2-a1fa75ad3c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97329b3a-28c2-445a-bd93-baddfbd9fa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820d0074-03b9-43a1-85d3-7b6e04764910",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a371ff3-e5fc-4b75-859a-48c4d444b16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c1c37b-da9c-4d94-ab95-b04191461af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf90d7a-5799-4830-9418-8ebe956bca16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89c666b-1d7c-4b8c-9aff-40766d0b43a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f909d-9b13-45fe-99bd-c32c2d3d64bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496b67ac-786f-4350-95fa-755febee76c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c75323-4aa8-4cb4-adb8-d73cece52491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12675310-fd83-4734-a918-c114130e2ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1455df8-5916-4b70-9b5c-f0a39d277fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfa22a1-1d84-4589-be33-a1163ddee72f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7fe65a-e960-43ba-977b-0337677e5a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89271cb4-690c-47d4-adb3-ab74bd954afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f549178f-536b-44fe-8d3a-1a5947cc8a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526710fc-6643-4480-b417-f21c191571e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e27991-dabb-4446-8e37-62b917a18a9c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916628bc-8c95-472f-994c-caa1ae0fe744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de83af41-2487-4652-8788-270a137ee430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f157f5ca-9faa-4c14-9769-74d77893a3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e405c27-37e3-4274-b592-e548dd3fed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d5ff2d-0504-4653-9818-df35453a844c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc6c941-ccad-4a87-bcf2-58d27fadd73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27db4a9-1cad-414b-8386-e04524cbdff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19dad16-a055-471a-a844-d2ee3c3867b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d523d80-bae2-4aad-abcc-726e8eebdd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f7b2f8-51df-429c-ae94-4efd9841bdaf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408c040c-ce01-4a6e-a6a5-4ad2bb5bf0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bf12e9-6807-438e-9b6f-bf7e5bf9b7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51aa869-ce2f-42ab-88a0-0ece49b56301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb893e26-4f19-485f-8d95-8c1225c02d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e09f2-d1d4-4994-b574-3ab48ab77f85",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e5a0cc-1a2a-43b6-9665-c380c24e9881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd90635-8dfa-444d-82be-99e8317f2731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a1612-1dd0-4245-b039-02c755ea2405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78b5763-d0db-4bf5-9494-a4aa960afa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746d894f-7fe0-46c5-87c9-39dc13d95fa6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ea533-5e87-419f-86f9-7dbaf6178cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be9d898-9b78-4d22-a5d8-15db67e4381b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7c3c6e-f115-4762-a604-c7e6e843996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a53a9fe-f138-421c-9fcd-342975241c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bcee5a-dd15-40e0-8858-d031db3c7336",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8b025-a811-4ffc-852c-007f5afc8cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dc0d7f-b9b0-4e1b-bcd5-5f052e6c6c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ee33dd-5c27-4d2e-ba22-e32694c8ea11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e98c33-cff4-4687-86d1-3eef0614373b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603a0919-7805-4703-bff6-ba26a9c1032a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a072b82-225c-42c8-bc55-b79d2d97018a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d1f8d0-7b20-4dd2-ab50-0b310657413f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831986ad-c43b-4593-987d-7ad48f252983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b49d0e7-fdc5-4c3a-93cc-871b7294ba27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6845bb10-b831-4f2a-a0c7-8223faa57097",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1859f221-86ab-45a1-9b6c-0c29b4b46303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1c8b34-1a8f-4f15-8259-8f0d9953f604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc809c9a-c366-4dc8-becf-3b1ed3688e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d003fdd9-3aa4-4c18-90a9-f9735525c900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b3f61a-a796-4ca9-b227-d7b0f997b61c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0131a58-b5a9-4d53-ad74-78bd4827cb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1decc1c0-089d-4159-9cc7-6db81e748ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18edb5e7-dc5a-4bf9-9be8-34c6c5a71ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e286772-c99a-4b5d-92ea-d91fea1e7a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1552e-9f2a-4401-ab4a-c57b4276b87c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c408b6-3787-4e0f-9579-aec569e3fa12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799964de-eaa3-4df2-9cbe-1147badc9066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fae4e0b-4b6b-410f-8c54-421f20d884d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db1398a-ecb5-4a49-8600-6d29796df7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f54079-97ec-4828-9ffd-4ce0af7d0c55",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b60c5-dc3b-4c59-8c81-932eb3ccf1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30958d53-c5db-4df9-8617-40b9b90c377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d08ed-ede9-47df-9e73-c59499f71eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bbbb67-45e2-4ba6-ad40-4b88a79dd958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f6349a-9a89-4681-b984-30bb263e2601",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f4910b-e4af-4c28-8933-67998047da3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28cf2e3-bac8-43eb-a4b3-5a2b8209739c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d597c0c-4101-4b9f-91c1-2388e41785c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1431d181-1170-4577-a3cc-f0c046338ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81168ed6-8b62-4738-92a6-fa2a628db9a7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc55147-a080-4ad0-8c56-8fd9290a224e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec6fbe5-6554-47b3-b98c-b730659de7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c68ce43-a3bf-4d20-a61d-65d419a37f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d3c39f-6244-4d1a-aa9d-51b131610afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90bff89-4b0d-469e-ae7e-14a775e5528a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0b96c7-cee7-44a9-a382-3cc4d06e5131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddfe39e-a870-4b6a-904f-b25caead3c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76cd1f4-3493-4e65-b6cc-39d5d9c16c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321c0b9f-d266-45c8-bd5e-89fa388d1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810bcb4e-dcd4-4f46-9053-2dbbf417c255",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f879ad-04dd-4419-aa3b-d0779aa32794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646e8f7a-9363-426a-b2b1-9c741682756d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa2de3-30b6-4773-bc5a-be9d77678d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7ffcd7-1858-4235-b7cb-a0cd01f5b4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cf3b9c-979f-42ce-9f12-2d1fd583fef1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48c0bd-48a6-4e4a-a41f-a26895f7912d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b612e688-0974-4f2a-875c-2a804ef0eb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c368fa-b4e8-407e-b1b6-f5888c00c92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effa46f3-7432-4b97-8e6a-e9c2106fca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f604edc7-c573-4315-9934-867c4a9e9c2a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06a03aa-6949-4a2e-9411-f5846f22cc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7385151a-f4d4-4cca-a2b7-7a83c5628340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e4dcb-a9d0-403b-bb71-0ba5f534fe5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b4b417-6b79-4c86-bf56-c8036a54bf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5229d64f-3537-4cad-8c76-b32553267eff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fda869-c5b3-4d94-9a6d-95f84cff053f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26da240-e975-454b-b85f-4c22cbb37cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a84b65-cd0c-4fd0-8c6d-d96e9caa9f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4153c4-1ca4-4eb7-994b-a30efac74280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855780e-92a7-4ec0-ba30-54b4049a60cb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ba7d56-f8cc-4c4d-a1f3-72a19382cf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0b3055-e55a-4b79-b346-13564c4958a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839463e3-1912-4c79-8214-a91d2ee8a941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87855c36-b621-4ebf-bc11-c2f4ee9995b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5df14c-5406-4f0b-878a-cdb5a79488b2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693aea57-7889-47aa-9bf6-e7787c6a9992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f16897-cade-417c-ac26-a0157189b310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d06fd2-3f96-4d7f-9cdb-57b5c72020ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aae54e-759f-4892-bd61-e9bbaa3b7a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cfe999-4a52-4556-be7e-998d519b6004",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc76aefc-b3a9-41e6-ab01-c2e72e2038c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86445102-d143-43fe-aa3d-c19c42358020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f0cf73-6107-443f-8248-128fb2617935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4f1fa9-3ae5-4578-b57d-9743bb14a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f677de39-88b5-4e12-8b03-0606e23c8317",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c7369d-f8d9-404d-b429-1da0957b7a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f00a8b3-9d76-461b-b766-8560f005cd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd784c1-19a6-4755-b19c-45a5af8d4ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6f4254-741e-4c9e-9a9c-7ecddda5efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd3f90a-e30f-4966-8cc4-0dc597c4cb77",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b201b-f93f-4618-b4d3-b91ece3813b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b1c9f4-604a-470f-97a2-b40d7b79844b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cca9883-e7a1-4686-8e93-f8ab3df1b567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9b9855-0a6c-4501-9f8c-d1e4847f5445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a353206b-379f-4974-8cb8-8f1ecb65f013",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988b97a2-5f5f-4eed-a5a2-1792996e7317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bc8e23-5bc4-4204-8ed5-27da8e11db17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3054c5f7-48d9-4b12-b274-20e7229dad6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1876df33-14e9-41d0-9de3-1bee01397963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eddd61-0180-436e-aec7-fdd10551273e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20165a66-46e6-4246-9ae6-52c58bd57cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b3475c-78d8-4b24-8c74-2f9f6e671acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3086a8bb-2ab1-4b81-872d-3d40ec093644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d53f715-d664-4466-8bb7-648371826dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4345ce39-4033-4533-bcb2-3b2021ed6e13",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38df6ecd-5332-46c8-9069-56c3a2d00a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4237cf4-d960-47e3-ae3d-a299c18b4832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb0d7a-f3a9-45b1-babf-36870ab138c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bec9ad6-c541-4171-bf2a-003fef34f3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15867e2c-c4ec-4c1e-ac91-71e8ba544013",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d611ea7a-55a2-4b97-800c-adfc309f1040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4663afe3-025e-4a6d-81e5-b735f4e8a830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e8a3c7-dd2b-4731-b96d-b358d8ee0245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504d8a02-40c0-4351-bb85-e30d4e2ae369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195979b6-9c92-4088-a718-5c46bf9b148f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e056855-e526-42e8-ba06-33525377c8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bfa3a0-8c47-4520-b54f-968ce1153ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c7d3f-a9f8-4416-98e6-fa7f1ad8bb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6be0d53-f4e9-4549-b7f6-da52ed21230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf80a45-9bf8-4639-a1ab-3ca865e39f46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa34ce4f-8b97-4453-85b6-6c555fd0fd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a631ad64-7f16-4b53-8380-0440834bac7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7443be5d-9358-4e0a-b172-e42023222085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2fb36e-fea2-4b20-affc-09760a368cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f57e75c-2341-4043-8eb6-e5c469527cf8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c5c06c-c9c7-4224-a9e9-91d2e1425b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396e4ea6-ce60-4fd2-aafb-b5b5c5c2a836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c74ef0f-5f04-4f00-866a-6098b4445c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84ef96e-3d71-4d81-94c5-2f2fca33079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d1bec-a531-4849-954f-7efcd8c42e51",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d5633f-85b1-4f47-a565-4f21a99a9c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee2eb15-b764-4a61-898e-b3fb0cf6ef21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f6e3e9-a56b-4531-881f-6ebb2d32d00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb5b252-f100-44e4-b47e-af5326091682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c20eb-5e51-4f8b-ad64-8eac7a32d8b0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba8284-f8fb-4b5f-bb73-74f77360b445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d512fc-ecbb-4365-9b86-75574694fca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb5a1c7-61d1-4302-92eb-585f13d0fac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83ef4c7-e63b-484b-8c72-5cf861bd336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e399e86-77dd-45d0-a112-a577ee99c5d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e84e04-b328-42b0-8835-824fedb682c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef830f6-f721-44ec-ba5d-cf5a021d76ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f39f353-46ea-48e2-96a6-ffc2dc23c2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdad8e0-1a65-4461-9d48-b706bda47dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc21774-0243-4423-b5f2-e2b0a3ad4538",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4219ca6e-a765-47ff-be4b-2297da257086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4210d3d-2d9a-4ff1-881d-bb5ce41ea05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e54b14-57f1-4295-a920-d97865d28d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac1cb75-e9d1-4705-9dfe-e5e31d86fc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00defe8c-6dc8-4fcf-8ae6-f0a1e63d4a53",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938f36de-ed02-4e5e-a021-16134aa161af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb33556-5151-484e-bac1-83a31cae3c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc37f5-9b4b-42ce-96bf-3490a7a6d3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86d9a11-0b7e-4d74-a974-f5e6640ab9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25551a6d-871c-457b-b094-36b821135a24",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f423e7-561d-4849-aeb6-1fb97b12a0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038ae3ce-2586-4716-84b0-8d2532d00066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffae2e-4684-4d6e-aa1b-a3978ebe18d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8bc392-2bc4-4463-a6c3-17bbb38d58ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b545c01-8356-4770-b4cf-72fe7de8f894",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfde6c-0aef-495b-9491-01cf67bc9d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390103ff-c2d9-4d02-9775-939b10371f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3f2887-6f6c-41c9-b1b4-f6caba1d256f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849423fd-8e3e-484a-8b97-b786a0bcc60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a0dbea-cc18-4d21-ae88-2dbfff57923f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c64a40c-efc6-4f0a-8931-d430e30b1142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934ed1b2-d22c-47f0-986d-92ce94d8a351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b3fb40-9816-4c9a-acfb-24113ec74cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac13636-f0be-4668-9e05-e155d03c6c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d23d0c-9d61-4a64-842b-d43c0eb33a24",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50bd44-9a54-4229-bfc0-6cfdcabbe78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c235bf-810f-4842-9052-75389e289291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a031c54-39cb-4f0c-a86a-957372c5d095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1245cf78-cfdc-4dbb-be61-c52bd5010726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90901e60-3f64-4448-b921-4b0c8a1f5f4d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dc6b8b-bf1d-4132-8a13-dc1b4f39d69e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e8ee71-c266-43c2-95b4-b859554c3794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de7af3a-1a96-4039-9faa-af82514917a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057c5d99-692b-4fe5-a131-968b8fcd137a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1454b-73bf-400c-b0c4-fb35b29761e3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaf6b39-0619-42a7-91fb-bce931856104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef68f195-e446-436b-843a-a2ac6cf71c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c8e6e8-c475-4248-b28b-05920ae12fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e11f2f-b568-4059-8987-0edf39910124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368a160b-d5e9-4a84-ada3-bb7d2fc4577a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291b0136-7034-4682-b909-72a7eba663f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4f4c9c-7133-491f-89ce-504249f03027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8606d7-1d0e-482f-b301-ef04b00bf443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73c1787-7c1c-464e-98ec-aef943e3d368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0eb9cf-f11e-4ed2-ac37-6d432d62ae34",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df403fc-b5ea-4a3a-99ff-36f2ebcf9d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e566832-2808-4e12-91c5-21aca11f22c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89231b4-041c-4b68-b9ba-649594ec6b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44112c5-d6f1-47a5-8052-29271fc5e82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f394180a-dfe9-482f-a6d2-222bedd886b5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae79b92-5ac3-419e-9c30-b4cb970145ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2caaaed3-5381-422a-948b-6f345cf0d0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51194e82-66a8-446e-8604-9a6515451847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2ced6c-21ec-416a-b961-2afd81479360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703bb1e5-4474-4485-8a53-31286f4bb692",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90357955-1e07-4ba2-bc9b-4046f05b1faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb1b7f2-fee3-4edf-8dda-3db7e1e785b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8f315c-c737-4fb7-8d32-86ca85372529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb03ed4-7580-4fe2-98bb-12ab198d61c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa3cd31-ffc0-4b81-8786-74d4438c38bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72d3afc-30ac-49c2-a3e0-75369bbd3aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2eff49-eb33-4ba1-8a46-3a522d1b8f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8763225-dfc1-4b85-a8cc-9a262dfbadcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a473a63-8e1b-426f-a97a-e49804a19030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f667f0cf-a634-4889-abaf-d1f9326f00af",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ab03f-df73-4b24-9966-48025112c524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051449de-73f1-47d4-bd46-31970b780587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3503b490-2c37-43d0-9479-2b9918335419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aec90b-ce22-4dbe-8f52-68a13cbbacb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cf92c1-42f3-4500-8e94-9f94ed3e72b1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5088a644-0aac-47c0-843d-50ab32f43a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae37d24e-35c3-40e7-8676-0821148d82f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a7adce-5e76-4694-9acd-1ccda0fa4546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86a8e9d-dd3d-4a20-9202-c64b5366b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd3a1bc-b991-41e1-a543-e62d6f8bf94a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4989b3ef-e9e5-45dd-91ae-765bbe766e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db4999f-7e06-41da-adf3-4f9d9f03a9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee23c4e-f73a-4b83-a672-09256c060600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8cf9c4-a4f7-4ebc-b88a-db36783bf8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df373d-ad9c-46ff-ad91-ab4788551dfd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883e907c-db12-4c24-9410-44ea16eabc7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc24103f-7e18-48f6-bb20-fb5553b6b9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86dc2c6-757d-4408-8566-7ba74644d3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bec722f-f66a-412f-8de1-16bcf0b2da9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1e50fb-0c89-46c8-9b6e-cec0de77f1be",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb2d57e-5117-4923-a9f0-da6f7851e879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a37c94-0e9c-4ee5-a34c-ed5dec3e3958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e6c749-6930-447b-bea8-30cc59d849e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58bb8c4-c1d5-45c0-b914-1e843d8e6696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1b0152-4c08-41a2-a257-8af63ff843b4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d865f5-26a3-41e6-a81c-8f417e9ef4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5d7f09-7287-4b78-9f37-6e0413319b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268cf6fb-51d0-42ad-a640-37bd5ffa9aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7454e6-bdfc-425d-aa00-52c094c7aaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47e30f7-b561-49cb-b428-7f030d2ef92e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56859eed-4732-4eae-81fc-e66854d97f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcfae583-de07-4b37-bf83-44d5dfe90a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1bf7bf-d9f8-4e4d-a5c2-f555eb9e45dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88edf300-ffa2-46eb-a52f-954e1d5ab9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35efcfa4-79f9-4225-a57a-ea365c5c77e2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dad012b-b31c-4a3a-bb6e-55f0be096003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef414ec-4084-48b2-98b7-697df872ae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad976c6c-7450-484e-b574-8a858f8c4b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3698a1f1-2f08-431a-9701-6b443bfb6e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f167723a-f63e-41e2-b55f-cdff0e9676fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08acccb-909a-4503-b49a-c66e4cbdba87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475a2a9c-301d-4dce-9d2d-65ee41a3218e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b9a016-bb33-481e-bac5-3f4ea03c7299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34781aa8-4f46-4506-a1d4-045ebdd8d69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0dc48-1bf2-4fa3-abbd-f564f5fe2cb8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd7f10-1c23-4de4-a067-51d16bee29a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7edb4a-b903-4339-8f39-0519dd64e3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41340f0e-25e7-401f-9672-3ccb810974b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbc0422-5f1e-474d-beaa-11844dabc321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f722ce17-7d9d-42a3-acf4-ac673b51f537",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e83ec41-abd8-4cd1-b686-57b9e81559ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9b40a3-577a-41b4-a6df-2750d19e0ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9696a958-72ef-4b84-9a69-db65fa68360e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf8eaf3-7374-4063-9d0f-46c3b470ddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5456f7-7445-44c7-aee8-29abde654278",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9e638a-016a-48f5-92b8-c757641a02a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93806079-6138-46c0-ba9f-4cc88462d861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d653d529-3d8f-4562-ac65-009c7fcba0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3e6c22-e339-4201-9f08-a1e977682dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ffb15-ef47-4420-8800-d1106d1f3db1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed50f39-ec69-4f68-a1d2-4c351bbab559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49253688-a04b-408a-b617-4c9655974985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4098a-4867-4eb3-8847-860fc3a859ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f830aa-475e-465f-8a75-97ce7a94833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16500308-632d-462b-9c98-3816206dbc5c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571193c-d389-44f6-848f-a243872c7a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb343eb-0a4d-42ca-b0e7-a7ab47fcc789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8950f73-2e70-4eb9-ad70-b3736a764e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2719a060-b270-419e-a91f-b8a931d150b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945f57d-8cfe-49ec-b1b7-fce18565b960",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6199bd18-b072-49bc-81b3-02a337850c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288ebc07-0ad5-4fd5-9fdc-d70f24f0c1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4718fa-78d4-4fb5-9869-5ef54f4b1e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef69d155-ace0-4306-8a55-372004beae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed030509-9ae0-49c9-b0e9-51647789e1a9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf53ac-7387-4359-9236-4b458a5897b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0b2747-1d45-40fb-a215-12deb6022687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edd4250-e923-4bf3-9189-38646a36d941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34fa875-fffa-4565-9e0b-b8114ea84bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84674ea-c40e-46cd-a008-df9da92fc6c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e33ccb-e9d9-4697-8074-3b2f4314cd13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e4b0f2-2044-4376-9656-3d4168e8c130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbbad77-9feb-4640-b278-eff430a18072",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e49bf5b-bd93-4514-892a-89d1933e63db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5457c2c7-4473-4643-ba77-f4aefa9e7aad",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4137fe-53b9-459e-aa01-52f520921d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f92d74-b954-439f-b9e1-821e23554130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b289ac2-9dd3-4b8d-9d6e-4333e17fe098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b3744c-ac4f-4fc0-a4f7-3aec6e0e53ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302298b9-ca8f-458f-a671-37dcf21e459f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b762228b-1847-45cc-b734-97b385ed7757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30aeeded-d72f-4182-bde6-8d485876f337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2188f2f3-2504-499f-91d6-624a4f895203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd150f00-cee3-465c-83db-d26a4323045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbadc5a-9990-4d9e-a448-27548efc20d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e566c3f4-5f68-4cbe-957e-484a12071015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329d1c12-fa46-4631-990c-7846cd238a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aeaa47-5008-445d-95b3-b656836253fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366ee8e7-8e62-4f32-b902-b281a9141fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e26eef-6456-46eb-a30f-f2fe7e9a0d98",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60475e1-919e-4510-8734-12f164884b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fcb19e-075c-4839-aa43-a864940fe0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa90cf5-ec91-46e8-bf60-163b53c54099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a30480-5c83-42b2-947d-06402bb58521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01702405-d36f-435d-bef7-b201876368ba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53c925f-8ceb-410f-8f6a-16bc246711f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c795747b-6182-413b-9558-9ce07f5d2eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617d770-2f51-47ba-9bf2-721f0b7bc02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd13c444-0f01-4f7b-82c9-2139c95a5f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d58a769-1072-476d-ad52-1f10f9781a9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef34f9f-865b-41ab-b2ce-8166deb89ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c563c8-ecc6-44b7-81ea-03ba887b5163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b24fff-3d83-4b61-ac56-d38abf6628a1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d96737-a12c-4bc7-bc16-f9bb0fe977cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bbb610-22d2-4078-942f-8b542d0cf8d8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3e8e04-baf0-41d3-9e8f-75b753f8380a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77566469-90ef-437c-b3e3-545d9ce7ced2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26b784-a084-45a4-8173-b00c8f534f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d038b206-efb3-44a2-a04f-0e2bcb779cc4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07fa13e2-a9aa-449b-989e-fe133f829f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2c358e3-cb36-42b6-8b13-8d6407355cce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a600a841-9345-4f0b-8ae7-77cc7f1affbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b762f90e-d7d6-4f87-b151-1b9a6618c6c6"
                    }
                  }
                ]
              },
              {
                "id": "b8616027-9485-4a48-a2a0-f4ce31256b98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4a8d1ea-57a8-4f3c-b078-21c926ca6273",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224ffc9c-6618-4a23-b1c5-3e7e8eff747b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f5f720fa-8c3a-49b3-b159-30173e0c81ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d6de0-ffba-4cd6-8dba-c9f36b258ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7af563b5-8a2e-4f78-8ee1-738fc7b2f438"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9deab72-5739-471b-adeb-13109aa17c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1c04ed1-cb4e-4434-be2a-0c6380594586"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31d82d9e-6842-425c-9f27-cba715806da8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8ea843e-84f6-4cbe-ad4a-84fc42c69d29"
                    }
                  }
                ]
              },
              {
                "id": "9c5d7ade-c9cb-46b4-85f1-7eab4ff8ac83",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b9571a36-b553-47cd-ab5e-eb34725bf3e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fde6d0e-0816-4d01-a642-c61e649c7d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4fba6772-f182-4e91-bc15-04423b3f8c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d097300-9ab7-4658-9346-6bc4e5a1341a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2e2775-8e8c-4017-ab29-2e0ebeb36412"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca52e118-f826-48d3-8e01-47a09ea255b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94793c4a-350d-482a-a8c6-eb76c298c6e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eef2b9f-c1a4-4224-8e5e-35e5ee5b4d02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "403e02ac-3c91-4678-bd5c-018d44eec095"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286deb4c-f2ba-476a-8fe8-926f58a2ce0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ce6b0ee-3c29-44b2-ad1e-929cbee79bf5"
                    }
                  }
                ]
              },
              {
                "id": "65d9d537-af39-4f23-bd1e-d82334bb0429",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "497d0faa-a213-48d3-bd79-9ab2febbd3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "612a3190-3827-4046-a09c-ca19932ec855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50a73df3-f052-4722-ad62-b71acc87afd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddfb371e-4a90-4587-b1ac-df80ea591561"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00107cd8-4fb4-4ad3-977a-5fe101b60d7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "544e59c4-c683-4d6c-acb4-03370feb5c18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b03d3e2-f45d-4bf1-a0c0-9b128b58fac5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3bcdc49-1c09-48aa-8c6c-f471bbb68413"
            }
          }
        ]
      },
      {
        "id": "51a3867a-0d4c-4bf4-903a-3e47289d838a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2f9d8956-3f91-4896-aafd-970977bebf71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3e9e18c-cc65-41d2-8fe2-7f1f4d9d0cf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f663986-e9ed-411f-9a93-130e965bd626",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feaa717-0b56-4af6-b517-98d0e65496b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f51dad9-f897-4be3-8b76-c6b438e93a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe27fea-c047-4b38-848f-7838e1fbac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd99227d-6498-480d-9467-a6acc4658397"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35012019-4a8f-40ca-ae51-6e1a6e129401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e98407e5-ed6f-4ec6-83a3-597688e9dd69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46d99b7e-68bd-45b7-887f-b32a73d6df73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39cd4a21-ed50-4118-aefe-28d9fef509b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50354ed5-eb45-4352-95bc-0c93e1d05a96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "15aadc94-97ec-4400-868e-7e0211990844"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6c50f00-2d06-479c-8ed9-6047a9e00209",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eeb3cdc2-77d9-4cdf-a504-a3034408acf0"
            }
          }
        ]
      },
      {
        "id": "181a829f-6d99-421b-b6cc-767ba1b31a91",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d5d485f9-7896-416b-b24c-f93b85ff5c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87d82629-3d33-4da9-aaa1-b29e8fb9218f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92866b2a-9167-4ba3-b612-efea9349cc5a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e99453-774f-472c-8cc7-fd709d48cc4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a71d1b9d-2eb2-4214-a123-b52f9f7887be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748d4123-20ef-4db1-9bcb-a9583b26cc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea83e9e0-8092-4465-bc8d-0ab26ffebaad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27f97171-51f6-4765-90cd-c9d1b503fd20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0c8189f-6272-46b4-a1f8-cb45e6ae828d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c31f985-d84c-4a8f-8844-d26cceaf04f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48bf8ad8-63c1-4960-af86-8ad3bc82bd29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24b16e05-6947-478c-b52a-a97beb252a9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac223a55-c290-4bad-b7a0-248e7ad24418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fc63ed3-1646-4c59-b33e-83f50322695e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf9708a7-866f-42e8-ab8a-12415edafd57"
            }
          }
        ]
      },
      {
        "id": "ae578497-49b0-486f-adbb-d54335eb58b2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "86a00b83-2871-4301-b1f5-b6f4eb069ff6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20c35a22-e327-4896-9423-36b94cbdb82a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92f1cbdf-aba1-4793-91a7-1c606d41dea0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e429b-e213-46ba-b303-1699defe94f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e01340c7-8b5e-443e-83ec-72b1f54de4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ee7157-de18-4b96-af7b-143b7ae99508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7c4b103-4b3d-479c-b34b-4589919ce03a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6835e1ec-7bb6-475a-ad05-a8a4075d6f20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73bbd795-e42e-42bc-b0a6-1fc93b397cd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a234b85-d305-49fa-88ec-3f37bdceb31a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb180aa-ae8a-4e7d-b736-98f1596f84df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caf7857a-0fdf-4234-a911-e014abdcb571",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "056a64c7-9365-411c-a92e-a0bc9cbdfb5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28366074-739d-4df5-a053-69e62c0c2302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc9aa09e-dcc5-4cf8-b61e-a6b8f0866e2b"
            }
          }
        ]
      },
      {
        "id": "5b6c9f3c-419f-4cdc-a41f-98e66d42e14a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a19ee4c1-f335-417b-8bf8-79a370cadfe7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95f32ba9-84c7-4657-8106-b8e4592a592c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "baa2d3db-3983-4a9d-b422-700df0abaff5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10094aca-a600-49d4-976e-fe1982ca553a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "861a3f46-4a88-4583-ae3f-3ffa6217875d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.79298245614036,
      "responseMin": 9,
      "responseMax": 2731,
      "responseSd": 324.8352931410812,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702600586215,
      "completed": 1702600627616
    },
    "executions": [
      {
        "id": "9bcadced-7046-4b06-8d5a-f8e08959e45a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c6ccd8a6-a688-4c91-a694-abfc10bb108a",
          "httpRequestId": "0ece0c2d-b868-4577-8455-9aae0e96084c"
        },
        "item": {
          "id": "9bcadced-7046-4b06-8d5a-f8e08959e45a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7df0fa5d-8c67-4d4a-a2dd-ff0b43315e52",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "cfb5ddf0-8eb4-4b36-aac1-53406011d6ec",
        "cursor": {
          "ref": "cefc161a-270a-4af7-b21f-cee93fd06269",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f5c2fdd-9414-44b0-9cf6-f91408d01652"
        },
        "item": {
          "id": "cfb5ddf0-8eb4-4b36-aac1-53406011d6ec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ba8c75c7-cab1-4270-abe4-b197c9508d8c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "068236b2-e29a-4062-8189-a03f8450e1d3",
        "cursor": {
          "ref": "9a4e7de6-e5dc-4c48-8634-9876bc6f9999",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7295a75-f12c-4263-8053-67a207f25555"
        },
        "item": {
          "id": "068236b2-e29a-4062-8189-a03f8450e1d3",
          "name": "did_json"
        },
        "response": {
          "id": "59453e96-f62f-4b02-8cac-4bfea9dbb201",
          "status": "OK",
          "code": 200,
          "responseTime": 614,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e4635-c7b0-4205-bead-f2ad32195090",
        "cursor": {
          "ref": "af1c7f2c-a154-406f-ad0c-c4c49ce5b2df",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ac3ce32-f99e-4b2d-a64a-627f6da6cbbf"
        },
        "item": {
          "id": "bc4e4635-c7b0-4205-bead-f2ad32195090",
          "name": "did:invalid"
        },
        "response": {
          "id": "169d2af9-9fea-4222-9633-7f57d61096b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e4635-c7b0-4205-bead-f2ad32195090",
        "cursor": {
          "ref": "af1c7f2c-a154-406f-ad0c-c4c49ce5b2df",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ac3ce32-f99e-4b2d-a64a-627f6da6cbbf"
        },
        "item": {
          "id": "bc4e4635-c7b0-4205-bead-f2ad32195090",
          "name": "did:invalid"
        },
        "response": {
          "id": "169d2af9-9fea-4222-9633-7f57d61096b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ed31fd-c1a1-415c-92f0-ff0ea7af3058",
        "cursor": {
          "ref": "fcb6531e-4579-40cc-93f9-bd8e62d17819",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a4942f8-f4ab-4286-a120-29ff96a0adcb"
        },
        "item": {
          "id": "38ed31fd-c1a1-415c-92f0-ff0ea7af3058",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69135410-315f-44d2-8f06-919bbba536bd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 133,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb9f6e1-6b4a-41dc-a3ce-c3002495282f",
        "cursor": {
          "ref": "5e70f0a0-cd5b-4bce-b50f-1c060aa8bf5c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "83c9ba41-2394-47e8-ad3b-00f8209fe73b"
        },
        "item": {
          "id": "adb9f6e1-6b4a-41dc-a3ce-c3002495282f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb751606-f1d2-4708-be7a-a81ab342fe93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9876260c-21fe-4bd2-8a1c-6223fb9c464a",
        "cursor": {
          "ref": "542fbdd1-ba21-4208-98ae-5224981b6e1a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b16da4ca-9832-4e6c-83f1-868ef66ff970"
        },
        "item": {
          "id": "9876260c-21fe-4bd2-8a1c-6223fb9c464a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "310e8013-d95c-4b4f-8f62-81f9ef7a090c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbdbd22-dd85-472e-92b4-6ef1246fa40c",
        "cursor": {
          "ref": "219cbc73-99ef-4b89-a902-3ab5492de7f7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ec4837b-9a9a-4e92-89b2-73e0f72ee9d6"
        },
        "item": {
          "id": "8bbdbd22-dd85-472e-92b4-6ef1246fa40c",
          "name": "identifiers"
        },
        "response": {
          "id": "81d6306d-0c25-418f-9e1d-309527af7620",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacdf978-31cc-4811-8eee-db5462ed5d76",
        "cursor": {
          "ref": "2dd3b7e6-8537-4b47-9c49-a6c6c1fca2ca",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4e5e40d6-a1e6-46e9-b82a-47dfcd14b6cb"
        },
        "item": {
          "id": "cacdf978-31cc-4811-8eee-db5462ed5d76",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "98d56942-17b5-4c7e-af0f-b133fcc78a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094331c7-4d13-4a85-9a01-d284a65c0024",
        "cursor": {
          "ref": "e172cf49-3758-440d-9ff3-a764f0a7916d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dee5a281-f55d-44db-ad5d-705f6bf5a599"
        },
        "item": {
          "id": "094331c7-4d13-4a85-9a01-d284a65c0024",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9281f466-37b5-41e2-b8a9-11b95636b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8fb72a-9767-499c-b16b-c0d11d33df8b",
        "cursor": {
          "ref": "0c17a47a-e672-40cc-82ca-986fc6b0509f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b2773c3a-a339-49e6-af86-5b6076766d98"
        },
        "item": {
          "id": "de8fb72a-9767-499c-b16b-c0d11d33df8b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8609d12e-72aa-4dcf-b90d-d2171bc5cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f9ed24-a4de-4ecc-9639-d4bf7c208b0f",
        "cursor": {
          "ref": "14271da7-99e4-49c1-a43c-c514467b2557",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b23cd1c-0473-4638-8ee7-87b0d0f0ae80"
        },
        "item": {
          "id": "d7f9ed24-a4de-4ecc-9639-d4bf7c208b0f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c3651a0-335f-488a-b941-84dc8ce279ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb41d6-a5dc-4687-8fcf-3587ddf55824",
        "cursor": {
          "ref": "62b1149c-d50b-4b08-9743-2585b255a391",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "62b8a44f-36f6-4b86-98fd-7a965e906535"
        },
        "item": {
          "id": "05eb41d6-a5dc-4687-8fcf-3587ddf55824",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f132167f-fec8-48bd-a0e3-4f810408e7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dbd8b0-9107-42bb-965a-82a1540380d2",
        "cursor": {
          "ref": "8ac875f8-7ede-422a-9758-09841dbf4823",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "21c14d02-5bb6-474f-af83-2cf7f9689143"
        },
        "item": {
          "id": "08dbd8b0-9107-42bb-965a-82a1540380d2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4ec12fbd-a137-4256-88c0-622541f79369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e576e4b-b4cb-4bbe-a95a-72b88d2ed77c",
        "cursor": {
          "ref": "cf6a20ed-9b21-4e70-aacd-8b2d059c092c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9276a85a-e783-492a-bdb1-ecce9cfe26e7"
        },
        "item": {
          "id": "1e576e4b-b4cb-4bbe-a95a-72b88d2ed77c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2c3909ad-f725-4327-bb4a-4864939caf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9044add4-b18d-4a0b-a8f4-6dc122661a98",
        "cursor": {
          "ref": "9aa66378-7697-4875-98e3-b0fad22013c2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cfe4a128-2922-4fe2-9f9d-3a4124e5a3ec"
        },
        "item": {
          "id": "9044add4-b18d-4a0b-a8f4-6dc122661a98",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a93bbf51-6c3e-4c9a-a744-06ad3577a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abeced8-3df8-4682-814d-c90d8f7861ab",
        "cursor": {
          "ref": "dff84d92-5684-4c46-9c55-d3e0b0e3a7d7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "75fb360f-910c-439b-bd7e-13f8dc99f761"
        },
        "item": {
          "id": "5abeced8-3df8-4682-814d-c90d8f7861ab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "768c52ed-3cb3-496b-ac5a-43e4a07e6972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab924ad6-aa4b-4b0c-9475-1d2407a67e05",
        "cursor": {
          "ref": "37469dd2-c13f-4b79-9e02-6f1fbc1008cb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eb2a71df-866b-466f-805c-7cbe6569f6f2"
        },
        "item": {
          "id": "ab924ad6-aa4b-4b0c-9475-1d2407a67e05",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f2328978-9a75-4326-8723-2a4f37cb6cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc303b-4cef-4663-9725-6667d26667df",
        "cursor": {
          "ref": "21ccb725-9544-4001-9c02-af7a30c5ab99",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6d2503c9-9a75-44e6-84a3-ca9e20fa82cb"
        },
        "item": {
          "id": "39dc303b-4cef-4663-9725-6667d26667df",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "394aaf08-e645-4c63-b339-d22b8e395cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febfcfaa-b057-4c82-b588-1ea81bc9763b",
        "cursor": {
          "ref": "e6190cf3-3eee-4fb8-a5fd-af015fce7dad",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cb5cb93b-d4c7-442f-8648-72e49d9afe38"
        },
        "item": {
          "id": "febfcfaa-b057-4c82-b588-1ea81bc9763b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3b9ec3c6-289b-4662-b851-ee5f56372922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbedf18b-ff92-44ff-a43c-91097e1ff127",
        "cursor": {
          "ref": "985b6195-dbd8-48c6-b2c1-12ed6c396b0b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c71149fa-dcf4-49ff-b53b-643ffc3df025"
        },
        "item": {
          "id": "dbedf18b-ff92-44ff-a43c-91097e1ff127",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f373d90a-a4da-48b9-a0fe-c7d758a76b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d18813-6d52-4268-bc25-d42f604a2e1c",
        "cursor": {
          "ref": "c84ab9f0-d064-45a9-8040-76b14a256859",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7cc97198-0aeb-4f71-9a18-694118df59c5"
        },
        "item": {
          "id": "75d18813-6d52-4268-bc25-d42f604a2e1c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ffe7482-dcdd-458d-9611-18cd24ebde9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55293a2-469f-4533-b6f0-826334c82350",
        "cursor": {
          "ref": "758771cc-e10b-4367-9514-c6252574cc29",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "60d0ba2d-a2c6-4f4c-abf4-d4996e1a4c7e"
        },
        "item": {
          "id": "d55293a2-469f-4533-b6f0-826334c82350",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81f8a365-52a7-4300-b0ba-60d10872ba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f92248-48fc-419d-aa67-8bec4d265a99",
        "cursor": {
          "ref": "1aa9bb20-5434-411e-a2c8-dfedf1d896f0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "51247fcc-fb04-4b9b-bcda-fc637c10cf3c"
        },
        "item": {
          "id": "71f92248-48fc-419d-aa67-8bec4d265a99",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47d2d845-203c-4497-bb89-433e84610c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9608ced3-3ee8-48b7-8ffc-14dba8c497e7",
        "cursor": {
          "ref": "b29a46c0-aff2-47c9-a3a8-e39df690008a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "08fa4c56-8c65-4116-b874-638e87888437"
        },
        "item": {
          "id": "9608ced3-3ee8-48b7-8ffc-14dba8c497e7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aad9a063-8b88-4fd1-8c00-3be49d192201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9db386-bd67-4fd2-aeb5-ae2eee90ec58",
        "cursor": {
          "ref": "a37fb3da-d00e-426e-a248-2ad398926c32",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fa574f26-056c-493f-9b97-19e3b7a41d71"
        },
        "item": {
          "id": "3a9db386-bd67-4fd2-aeb5-ae2eee90ec58",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "170eef67-7dd1-4cc2-868a-c1246bc2feb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec53f5cf-5739-465e-94b1-db74ba9c08a8",
        "cursor": {
          "ref": "373e0994-ab37-4869-8a8a-4854bead8e57",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "82d92f91-7df5-439c-b6c5-6cf97daf6608"
        },
        "item": {
          "id": "ec53f5cf-5739-465e-94b1-db74ba9c08a8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "53137eb7-f9a0-4cda-9350-94502e4ae148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e08bec-ce84-43ea-b590-bac92ccfe0d4",
        "cursor": {
          "ref": "e736de76-760c-411b-b830-51b7096bd930",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aee1b1d8-0bec-45f0-8bfa-525c24f63ea5"
        },
        "item": {
          "id": "11e08bec-ce84-43ea-b590-bac92ccfe0d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a0019b35-2263-4b6c-9f01-f3e7e9878f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c6a57-3e67-4958-82f5-1b9d2f938494",
        "cursor": {
          "ref": "71141bbf-423b-4976-a9e4-07121be6fdb4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a56ed366-0b91-4a7a-a976-2e773635f54d"
        },
        "item": {
          "id": "124c6a57-3e67-4958-82f5-1b9d2f938494",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b898f8a9-4525-4592-81ec-2755944769a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a6288e-8265-45b6-8ac6-778759b67dde",
        "cursor": {
          "ref": "d3a0a6ae-4ebf-4989-8f96-167b3f47e232",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "43a0f1f7-4866-43e9-92d4-5ef089dac0e9"
        },
        "item": {
          "id": "b4a6288e-8265-45b6-8ac6-778759b67dde",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8cc027e1-e176-4871-b40a-ff94daccd7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aea86f-d752-49b7-95ab-fe730e7683bc",
        "cursor": {
          "ref": "e2540ef4-eb78-4b2c-87b3-6df87fd7419f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cfcc4825-6052-498e-a574-ce10d7338184"
        },
        "item": {
          "id": "99aea86f-d752-49b7-95ab-fe730e7683bc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b06b6f05-1349-42f5-9bf8-8ffe59276d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d850cec-16bf-4e7e-806b-0b270fe36821",
        "cursor": {
          "ref": "a4041e35-c716-42de-b41d-31dd4b08c49a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "07d246f1-087d-4d3a-a0a6-817964b5ca87"
        },
        "item": {
          "id": "0d850cec-16bf-4e7e-806b-0b270fe36821",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c55a86f-1eeb-498c-a86e-d41725c4826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f4a49-856e-4e99-913f-b6470e8786de",
        "cursor": {
          "ref": "5a5fb71e-e4d4-40b6-a0fd-000df42ba14a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2227f15c-b0ae-464b-8211-45990e7b022e"
        },
        "item": {
          "id": "b34f4a49-856e-4e99-913f-b6470e8786de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7f852f4c-cbf1-4cbc-aed3-58e213d64915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d30814-46d4-4728-9b48-052de4af1e86",
        "cursor": {
          "ref": "971fbec8-da2c-4d0d-94f0-a6313d7bb028",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f95b11dc-1e77-4252-b2ce-4664a272caa0"
        },
        "item": {
          "id": "a5d30814-46d4-4728-9b48-052de4af1e86",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "21512153-b0e5-4029-8786-68aead37bd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fd2291-aba7-404a-a42f-de37c09ff9b0",
        "cursor": {
          "ref": "5a105075-54f8-4f90-ac0c-39554edd7410",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "09f8d408-1749-4c3f-b984-2310749212bf"
        },
        "item": {
          "id": "61fd2291-aba7-404a-a42f-de37c09ff9b0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c24fb48c-5c8e-4859-b3c1-0b91e1ac8f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb458e0d-ad88-4f78-8db0-5f07b911dca9",
        "cursor": {
          "ref": "bd65afd9-83ef-4f03-bc4f-f8da180d0beb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4b10ea03-ea23-4038-bb0d-823696e1b325"
        },
        "item": {
          "id": "cb458e0d-ad88-4f78-8db0-5f07b911dca9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "149df7f8-6ab4-4d74-8aad-b3bedecd0b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095494a3-b180-450e-838c-1064949bfe25",
        "cursor": {
          "ref": "840a3fd7-6a7e-40c8-bd10-e22cba679a26",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2841c171-8b53-4ed8-9763-7215548ccb99"
        },
        "item": {
          "id": "095494a3-b180-450e-838c-1064949bfe25",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3f9b00e5-0599-44d8-ac88-0e4add3a482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcc1b24-7f65-4952-9ff6-914d895341f9",
        "cursor": {
          "ref": "6f2e55d5-8b32-4db8-b21b-2fb1024e4fe5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dbeac5dc-3140-47ef-a375-aceafc14a6f2"
        },
        "item": {
          "id": "5fcc1b24-7f65-4952-9ff6-914d895341f9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "796616fa-1882-4e3f-853b-d4d45d8a9159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d765ab-f27f-46f9-8458-4649c1c46245",
        "cursor": {
          "ref": "7a1a4a7c-0235-4943-98c2-cdbfe321035f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4668ad62-c0ce-4ba5-b866-ca5c7b92a8cf"
        },
        "item": {
          "id": "c6d765ab-f27f-46f9-8458-4649c1c46245",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "15483148-a14f-432b-8929-6d84c84a4e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874bf94-f2bd-4514-88e8-4bef8c7cf8bf",
        "cursor": {
          "ref": "8caa1a40-3500-42dc-897b-4044b3a3ae4a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "31502152-e111-49a4-8c4b-ed23dc730f6e"
        },
        "item": {
          "id": "1874bf94-f2bd-4514-88e8-4bef8c7cf8bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "42d1beed-c7a3-425b-b655-c06225b57ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc87c56-5b39-4752-8994-a9d71317b64f",
        "cursor": {
          "ref": "0a88a887-a1ce-4ec1-9e30-57ab9b6ca01a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "648216aa-8e92-4aaa-b5bd-794975a5fa38"
        },
        "item": {
          "id": "abc87c56-5b39-4752-8994-a9d71317b64f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a938fe52-a798-4ec6-a325-00217ea00ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113768a7-d39f-4513-acef-fe64276eb95b",
        "cursor": {
          "ref": "595d45df-3072-4c9c-8146-4ac00b34174d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4f5f637f-eeee-4eed-ab05-4e7dab225252"
        },
        "item": {
          "id": "113768a7-d39f-4513-acef-fe64276eb95b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "be2bd646-16b2-4fea-b34a-a9e8e3bfaafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83893c1-f007-4ce5-bc95-2948a40a2254",
        "cursor": {
          "ref": "f2105e7b-9a1f-420a-b285-3331feaa9782",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "113da3d2-bc06-469c-9b85-7fd2bf849f3d"
        },
        "item": {
          "id": "e83893c1-f007-4ce5-bc95-2948a40a2254",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d7489318-66de-41e6-8ccf-2b7ccc3d6f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be71a8-cf1e-4362-99dd-09acea882bbd",
        "cursor": {
          "ref": "7ffe7c60-a4d5-4a55-be28-a3f6eb9d6356",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "915ceb74-e23e-47ee-94a7-500894951576"
        },
        "item": {
          "id": "c5be71a8-cf1e-4362-99dd-09acea882bbd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "86fe9caa-76c3-47be-a394-5c42af9ae424",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af18109-d673-4de0-8f6a-7e97f4a8c28a",
        "cursor": {
          "ref": "4b030e3e-0ff4-4b28-a637-6269ed63d225",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68d267a6-77e9-4727-a133-feb2119c5b89"
        },
        "item": {
          "id": "0af18109-d673-4de0-8f6a-7e97f4a8c28a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5de8b975-e25a-42cd-9f7a-41cc6e9aa591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939de1a7-bf1c-4fe0-826e-fc67ddc8d8d9",
        "cursor": {
          "ref": "90c5f823-0f58-4313-8dac-c6aee6949709",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1f48c8a6-75f1-43fe-84aa-92b73049e6cd"
        },
        "item": {
          "id": "939de1a7-bf1c-4fe0-826e-fc67ddc8d8d9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2035131f-c78b-4ef1-8a2c-8b88b9c9639b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513119d-1ca0-4889-8fce-88eb870b36d3",
        "cursor": {
          "ref": "f1e80b58-cbc3-4fbf-8683-cc64a20af081",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "77856d23-43b2-4902-8f97-60bb05d0cb4f"
        },
        "item": {
          "id": "4513119d-1ca0-4889-8fce-88eb870b36d3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "26d3c66c-f2dd-493b-8b37-fb71dde201ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b079758-8afd-44ae-a922-cb7b4f9f2abb",
        "cursor": {
          "ref": "7a4e22b3-871c-404f-b392-76ac6f5132c2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9ade63ca-ad08-4875-81b3-ccc457cc7ac2"
        },
        "item": {
          "id": "8b079758-8afd-44ae-a922-cb7b4f9f2abb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6bd2b6e-c6fc-42a6-bda9-9f07a2822383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f2a529-8e27-4913-849b-b2bc313310ef",
        "cursor": {
          "ref": "2fae0f40-0d97-404b-beca-a357e02782e1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0b862a69-e5ba-4031-a94d-30c36097d3ca"
        },
        "item": {
          "id": "11f2a529-8e27-4913-849b-b2bc313310ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "71ca28cd-de69-41c7-9ae2-1fcc853429c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a90cc5-4db0-40f3-ad60-1c8995474e79",
        "cursor": {
          "ref": "878caa4e-e255-4a85-aeec-748b4a3abf7c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d06e1cd3-2cc3-4305-a752-85125de7ae69"
        },
        "item": {
          "id": "27a90cc5-4db0-40f3-ad60-1c8995474e79",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bb280126-aa0e-433a-b74c-8d31ee8b5a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084f2c53-c999-44b2-9e18-b9f488fb4a29",
        "cursor": {
          "ref": "199d08cc-fc70-41f2-b8d1-220cd190a538",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fbec0d13-c68c-4425-96d6-baa351c091c2"
        },
        "item": {
          "id": "084f2c53-c999-44b2-9e18-b9f488fb4a29",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d0311ff2-3e26-4846-a4fa-e40ea6c6f1f6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 332,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2f9aa4-f1d5-4d38-a2da-4d1562168183",
        "cursor": {
          "ref": "52ceeb86-b603-46e0-82d9-d0914d6241d1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "841ec61a-5d85-4a94-a354-0aa3d1fccae8"
        },
        "item": {
          "id": "3f2f9aa4-f1d5-4d38-a2da-4d1562168183",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "451da2dd-eab3-410f-aeba-43a286a49ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d436d378-61f4-4011-990d-173849f808a4",
        "cursor": {
          "ref": "065d8fcc-c404-4f1a-98ad-ee7fc42d6aa0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ba715160-f291-45ef-b8f7-30a0b3ef03b4"
        },
        "item": {
          "id": "d436d378-61f4-4011-990d-173849f808a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "350af532-6952-4bf2-84f8-fc463dcf587a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da628111-6a2d-440c-8cb2-5ff7714af817",
        "cursor": {
          "ref": "da4289f0-55ee-4edf-8ec3-d1e1302b416c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2740c4e7-a0d0-4ffc-91f1-2d5910a85a3a"
        },
        "item": {
          "id": "da628111-6a2d-440c-8cb2-5ff7714af817",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5b406099-58e3-4ca3-a299-7cef4f8fd9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b6b2f0-e666-43dd-8c34-0b9e3b90162b",
        "cursor": {
          "ref": "1ce41494-9af0-467d-9f47-332d3d80a524",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "faea59f4-d47d-4f41-b64c-102a88c7f373"
        },
        "item": {
          "id": "d9b6b2f0-e666-43dd-8c34-0b9e3b90162b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "65c0615c-b151-40b3-9515-3975c57bd453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2c587-fc4a-4d9f-b7be-8d5aef2e771f",
        "cursor": {
          "ref": "3226739f-4587-4757-b8d7-828554f9fcf7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65e25116-622f-408e-a6c1-91044ce24035"
        },
        "item": {
          "id": "12e2c587-fc4a-4d9f-b7be-8d5aef2e771f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "83dc1841-a8b4-4789-816b-44a36bfd532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c9d2a2-dec5-498f-84b6-8a351a993ccf",
        "cursor": {
          "ref": "40150362-25a5-4bf0-aee3-579f15ae526e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1bc054c5-e0b6-4a1a-9cd3-6160f2fc027a"
        },
        "item": {
          "id": "61c9d2a2-dec5-498f-84b6-8a351a993ccf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "34a28d42-187b-47ad-9ff0-c496aef007e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150c5d7f-6296-453a-8d61-59811d84112b",
        "cursor": {
          "ref": "e63ab1af-1433-41cd-bcad-5965adf73327",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8059e1d-1504-4634-be44-5d44ff809501"
        },
        "item": {
          "id": "150c5d7f-6296-453a-8d61-59811d84112b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "14a8afc1-509f-43c6-9c2c-dc13c4e6423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79948554-c17c-4c51-b8ff-a351cd86c287",
        "cursor": {
          "ref": "c083b563-9a27-492a-8467-671aef3efbe8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e4d0ef88-0bf1-4e6a-9200-cabc0307bd15"
        },
        "item": {
          "id": "79948554-c17c-4c51-b8ff-a351cd86c287",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fdd95d84-4785-463f-865e-0bd66e61a018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658add36-0342-4067-bab8-094463c71f01",
        "cursor": {
          "ref": "18f530b0-80d2-48be-823e-a11f97253bd9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a08f7a7d-bf1b-4601-8a5d-0586b3e50e6c"
        },
        "item": {
          "id": "658add36-0342-4067-bab8-094463c71f01",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9095a24e-0307-482f-aa5c-878713dd1ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c26ad4-b6e8-4aea-8a4a-a1216b0cd985",
        "cursor": {
          "ref": "0e4d886b-d038-4aaa-8ec2-e3c7d063d5e7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "258523cd-7a5e-4312-b307-a02d819f2234"
        },
        "item": {
          "id": "90c26ad4-b6e8-4aea-8a4a-a1216b0cd985",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1730782c-83a8-4eea-ad72-e06a5096bb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab4b8e4-0968-4b0e-921b-4db0e26dff47",
        "cursor": {
          "ref": "a7c0d9c1-892d-42f8-842a-550ab9f23984",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0b55c1c9-0ec5-4835-a1f0-3515b58da9d0"
        },
        "item": {
          "id": "2ab4b8e4-0968-4b0e-921b-4db0e26dff47",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2e2430e8-daaf-4c87-a6c8-6aeb69ca8a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04f910-173e-438b-8b32-f3b26eb40f26",
        "cursor": {
          "ref": "68fa6671-f408-4540-b1b8-59193740aa00",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5c3360a-0de9-4b54-af1f-93bbff799522"
        },
        "item": {
          "id": "3e04f910-173e-438b-8b32-f3b26eb40f26",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ce15a806-44bd-4ba1-994a-4b96736d4da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f1cfb-876b-4b19-ac2e-fa218812962d",
        "cursor": {
          "ref": "750d6f5a-8c3c-4175-b029-faf1257beb03",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5fa27db7-5bf7-4ace-965a-723a37f8c76e"
        },
        "item": {
          "id": "513f1cfb-876b-4b19-ac2e-fa218812962d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ac693f1e-9336-4259-afd2-20c578c1197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206e543c-49fb-45a1-9dc0-0766734f0f51",
        "cursor": {
          "ref": "b7e66359-f793-471f-b708-79e133268f64",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "acc43fd4-7f01-421e-ab6c-24a48d29f99f"
        },
        "item": {
          "id": "206e543c-49fb-45a1-9dc0-0766734f0f51",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa3c63c0-f6e4-499f-8676-27f45258e19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392b8140-025e-44b2-bd3a-c49d2950a970",
        "cursor": {
          "ref": "0814e605-67b4-4496-94b5-3fb01eac5d6d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "38485893-911f-47e4-97aa-78b4774e0b22"
        },
        "item": {
          "id": "392b8140-025e-44b2-bd3a-c49d2950a970",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "855b5abc-88f9-41f8-919f-a4f34b1189a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d3555-b848-412b-822f-1696d24e0a47",
        "cursor": {
          "ref": "0b8c0d9a-7145-4f39-91f5-3ce882bad58b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ddbe8290-f7e3-43e2-bd54-bc18a2ad1522"
        },
        "item": {
          "id": "042d3555-b848-412b-822f-1696d24e0a47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7171382-c5c6-405c-a156-3816c046d877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcacc93-fc57-455c-bada-8ccda12ad053",
        "cursor": {
          "ref": "e232a549-b6ce-4f9d-a766-a6f672b13852",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f270443c-68cc-4be7-86b3-35fc08af4b41"
        },
        "item": {
          "id": "6bcacc93-fc57-455c-bada-8ccda12ad053",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bf55a373-faab-4b8a-9929-d4da3060ff92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab050c9-d394-47bd-ae7b-9d682044fdaf",
        "cursor": {
          "ref": "4ad108d0-b522-4b81-971b-3ae702acea8f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "03562718-9d0d-4d95-afe8-e7eddf5f4ec8"
        },
        "item": {
          "id": "0ab050c9-d394-47bd-ae7b-9d682044fdaf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "98a07bd4-87b9-4057-a05e-a4be26b1c391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f320d-2d7a-423d-b59c-835c7476767a",
        "cursor": {
          "ref": "d337e2c2-f288-4273-9dd8-67100f1282a9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6b23e25c-ccdf-498d-afeb-a1e21db78085"
        },
        "item": {
          "id": "621f320d-2d7a-423d-b59c-835c7476767a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "06ac046f-019f-447a-bc10-1f204793c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038cdbff-aefa-44c0-9c19-6bbdbfb4ee57",
        "cursor": {
          "ref": "eb838d0c-b3a3-49f5-91d9-bbdcf1944450",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "17c2fbcf-3ed4-45d5-a7f4-470e3dc755d3"
        },
        "item": {
          "id": "038cdbff-aefa-44c0-9c19-6bbdbfb4ee57",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d5d8d9d2-0b30-46d3-96ef-d159a990dc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b48394-1a14-4ce1-9c4f-d56d869006ad",
        "cursor": {
          "ref": "e55da326-14e0-4239-bd3a-3a4646541c76",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e6d9469c-bdb5-492f-a6f9-ff570575ad9f"
        },
        "item": {
          "id": "70b48394-1a14-4ce1-9c4f-d56d869006ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b6090c02-40db-4003-b43b-3e040bb3e9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53938de4-8dd7-43c8-aa74-165d67fb50aa",
        "cursor": {
          "ref": "b8f27e83-75a7-4885-9e43-40e0c9a53c21",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d430080d-ec8a-4d0b-b7a3-7d5acc6f7e32"
        },
        "item": {
          "id": "53938de4-8dd7-43c8-aa74-165d67fb50aa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ef3262c8-339f-42df-adb5-4c11cb13d736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578879bd-2081-46ba-b198-a16cd5f12736",
        "cursor": {
          "ref": "fd354529-d832-4743-ba0d-9ad05486f26d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97de237d-17a0-497e-91ca-663e37992925"
        },
        "item": {
          "id": "578879bd-2081-46ba-b198-a16cd5f12736",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8427e756-aa47-49be-aaf7-68e7017671ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb360a37-3482-4da5-9a78-918cdb928dea",
        "cursor": {
          "ref": "57bd2a8a-0af0-4941-ac6a-420987c2faed",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "80460ea8-7193-4832-aa0f-157ddfec743d"
        },
        "item": {
          "id": "eb360a37-3482-4da5-9a78-918cdb928dea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "08db0755-d35e-413e-83ad-6a3c65e30f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421ad884-56b9-470f-adf2-bc3f1db06c08",
        "cursor": {
          "ref": "b2fd06ea-34c8-4151-95f3-180fc0d9579e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "032ed722-4ffc-4efe-bbe4-fc740529b47c"
        },
        "item": {
          "id": "421ad884-56b9-470f-adf2-bc3f1db06c08",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1b304dc6-ad96-44f2-b890-538501dcd230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a735d245-f5b8-4b72-a9c2-0e33cf7a9f9e",
        "cursor": {
          "ref": "aad2ed94-de47-4658-bc75-18e631a5e138",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a7d83b8c-040b-46fc-b8ea-7a3723a0d179"
        },
        "item": {
          "id": "a735d245-f5b8-4b72-a9c2-0e33cf7a9f9e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4ae94091-d7b8-4c44-b03a-c6d6caa7a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bdb367-c492-45fe-82d2-359465eb1776",
        "cursor": {
          "ref": "39ad6c5b-9f23-4996-9a94-2bc276f05c0d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c8c71735-6143-4a64-a13b-9a9eaedf4541"
        },
        "item": {
          "id": "77bdb367-c492-45fe-82d2-359465eb1776",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "734bf792-dd98-4ead-aeec-e9a5292f915a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1427d7e7-8c0d-4fce-b840-dde80542b9f3",
        "cursor": {
          "ref": "0fe60964-a6f4-4f29-a4f9-7aa2cadf4b9a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "02758804-7324-4e41-92d5-95bc3a2993e0"
        },
        "item": {
          "id": "1427d7e7-8c0d-4fce-b840-dde80542b9f3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a4e4c5d5-dbd2-414d-bc59-6f841167cb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff264f3-3384-4fa5-b1ac-ed032c9b692d",
        "cursor": {
          "ref": "ff557e19-f922-4d66-a87c-51542f17b1c7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "00eea726-6f5d-4219-aea9-2b4ea62c5301"
        },
        "item": {
          "id": "aff264f3-3384-4fa5-b1ac-ed032c9b692d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1197bbfe-675f-4848-8ab5-67880f785470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e09a4-2787-44e5-a0e3-6444855b07fc",
        "cursor": {
          "ref": "8a0112c5-5787-4246-95d7-260271423c74",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "59a5dcc7-e672-42e2-8094-90cb81fa5897"
        },
        "item": {
          "id": "ad9e09a4-2787-44e5-a0e3-6444855b07fc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e9094185-d1aa-493d-a921-94912b0810c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1afc2e-817d-4e56-a7c1-63473663fa30",
        "cursor": {
          "ref": "b08e720e-bd16-4079-b547-5c22dda5306c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d8c9399f-a523-4a3d-8824-b1d95eebd60e"
        },
        "item": {
          "id": "ef1afc2e-817d-4e56-a7c1-63473663fa30",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff3b6db4-de52-43fa-bd58-c467b64a234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f012c9-e72c-4b5a-945d-e6be9caceedb",
        "cursor": {
          "ref": "d3b0d2a7-2012-44cf-b726-3bca0676ad5a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "868d8807-3c0d-4488-849e-65f1f625d6c5"
        },
        "item": {
          "id": "21f012c9-e72c-4b5a-945d-e6be9caceedb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a1df563f-5a80-4884-9c88-20a79c520384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a045bc1-c354-4707-9a89-2a1544150b40",
        "cursor": {
          "ref": "757fd5f2-607a-4776-98cb-a32f12d04239",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3cbcd26a-b1dd-418b-9199-ca4312f634bb"
        },
        "item": {
          "id": "2a045bc1-c354-4707-9a89-2a1544150b40",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bf5776ec-2fb3-41a1-a771-1ba791deb4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7339161-8d67-4e2a-9927-acfea65e1c7b",
        "cursor": {
          "ref": "4231769f-aaa5-4ac7-8b04-61873d936a16",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a2779982-1f65-43dc-bb1d-c854338a0e33"
        },
        "item": {
          "id": "a7339161-8d67-4e2a-9927-acfea65e1c7b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "26fdad95-0ab4-4b1d-964e-b403c86ec3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e8668-db23-46c0-9c1c-bbf4c5c5e52c",
        "cursor": {
          "ref": "5d554c49-27d1-420e-88fc-4cb9cafd40f1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fab7b88d-9890-477b-a05c-8a5493472c17"
        },
        "item": {
          "id": "2c8e8668-db23-46c0-9c1c-bbf4c5c5e52c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49ff87d1-d4e5-4cec-a262-9c701b58c862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cb06e2-f0c0-4a19-9b99-34df00c22105",
        "cursor": {
          "ref": "ff6fe220-ed8b-413d-8cad-72a45f5f4a7d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "67d3d80b-a256-4e79-992f-6618528a5f50"
        },
        "item": {
          "id": "f1cb06e2-f0c0-4a19-9b99-34df00c22105",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a8b3e818-398a-4c14-921d-5f7861466b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f83aa81-0561-47ed-a792-090346e8d548",
        "cursor": {
          "ref": "8f96c0b6-9a7c-49ea-ae44-08638c85fda3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "990014d9-791e-41d6-b691-0d81cdfe3133"
        },
        "item": {
          "id": "8f83aa81-0561-47ed-a792-090346e8d548",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d086175-a9be-46c8-9501-ce19a96cf107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca24ffc-ba62-409a-9aad-078b419d6959",
        "cursor": {
          "ref": "994ecd27-94e7-4198-94c2-552a26cca594",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "346bd691-c4b0-44cd-9794-64bc6794728f"
        },
        "item": {
          "id": "5ca24ffc-ba62-409a-9aad-078b419d6959",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8ab92f4-72fd-43dc-a224-a9d50ffe2692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d886354-74d4-4df0-992f-ee85d7a26118",
        "cursor": {
          "ref": "505c762d-72c2-46da-a84e-fa1ead60d1cb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40765624-cdcc-48e8-a1d1-d702ba3cae52"
        },
        "item": {
          "id": "8d886354-74d4-4df0-992f-ee85d7a26118",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "20844e85-dccc-4b86-ad2e-bceac1bc3628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58da9a25-75b4-4904-86cd-0c881eac1dca",
        "cursor": {
          "ref": "66a8c6b8-601b-4c44-a202-dcc9c0faf988",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bf72bc99-b446-44ea-9d04-6e8e502ff9c7"
        },
        "item": {
          "id": "58da9a25-75b4-4904-86cd-0c881eac1dca",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e3638df-e1b5-4cbc-9ff7-7e4257ac6bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea00d2dc-dd19-4418-a418-530557fc98c4",
        "cursor": {
          "ref": "426a0628-4075-418b-bed1-3a171a81d535",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9859847-115a-4854-b37a-d17c819f1038"
        },
        "item": {
          "id": "ea00d2dc-dd19-4418-a418-530557fc98c4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "824f6979-6a16-471b-a155-025a2433bfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b2ad2c-c672-43ab-9865-5f8b93d6bfb6",
        "cursor": {
          "ref": "fcc658d7-bc7e-4bb0-9013-6b40eff38c8f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8c11fe94-3d7a-4851-bba9-872eba90cd6a"
        },
        "item": {
          "id": "14b2ad2c-c672-43ab-9865-5f8b93d6bfb6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1e7f7003-9740-49b2-bff2-941ba3b1499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62355c90-7774-4df1-b273-3e17d9f35903",
        "cursor": {
          "ref": "b19a626d-c417-4dc4-a327-9d9e59efecb6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9221a8b4-7ebd-4249-a2db-20e9e02e794c"
        },
        "item": {
          "id": "62355c90-7774-4df1-b273-3e17d9f35903",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90f21865-c166-4e41-8be0-d8cd3c81c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01dc8c7-0943-4d0c-8f88-acb782e4b24a",
        "cursor": {
          "ref": "e555d231-3eef-4909-b3e2-12e1fa02a66f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c4af27c3-4981-4a8b-a0d2-a165b67942ba"
        },
        "item": {
          "id": "b01dc8c7-0943-4d0c-8f88-acb782e4b24a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9cab5e9a-8761-47c0-91ac-02a9af8b4f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f155ba54-50b9-4d44-a39e-94230bc7bd07",
        "cursor": {
          "ref": "02a052b6-5ff1-42c5-8eac-4492cee4f195",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b3a2c036-9e90-4528-b064-25729fadfcaf"
        },
        "item": {
          "id": "f155ba54-50b9-4d44-a39e-94230bc7bd07",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "890fe9c4-53ee-4975-997f-3ce0742c754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289f503f-e9b2-4f61-a08f-96a589e495f6",
        "cursor": {
          "ref": "7f11eba6-47a7-449b-b220-369599849a2f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "48ff0319-50e7-4f5d-8c15-f742ae12fde7"
        },
        "item": {
          "id": "289f503f-e9b2-4f61-a08f-96a589e495f6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "59d5b2ab-c0b5-4476-9a88-a3162b0750cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba856b53-8bf3-46d1-b41b-0458ae0064b4",
        "cursor": {
          "ref": "558b31cf-42b9-45f4-ae29-1def35a90543",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa7d4809-4b8b-4c83-8687-65b632af2e70"
        },
        "item": {
          "id": "ba856b53-8bf3-46d1-b41b-0458ae0064b4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "56270263-62e8-4b06-b99b-29007c7d1c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2c6544-66d0-4043-bd8d-5c3d9db6598a",
        "cursor": {
          "ref": "ec2a121d-9437-4531-af7a-3248f51e9ae3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bc928db4-0b03-43b5-bed2-b6eb95cea5ae"
        },
        "item": {
          "id": "cf2c6544-66d0-4043-bd8d-5c3d9db6598a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "13eabf54-bc34-4dd0-ad04-e7fd2a8f1ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e38804-19a6-4b42-ac6e-2e55775773da",
        "cursor": {
          "ref": "dedaf874-ee36-4cd3-841d-5fb9426facda",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "13a8f106-baf7-4944-a1ec-1face5a89393"
        },
        "item": {
          "id": "28e38804-19a6-4b42-ac6e-2e55775773da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e443fa70-2b28-475b-8b44-2b8afaab42e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891efab9-a59b-4188-a5c1-637587c7bfd9",
        "cursor": {
          "ref": "f55f1e6e-e66f-48bc-997e-40b574aef5bd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "596dff7c-890d-4adc-972c-50ecbaec051a"
        },
        "item": {
          "id": "891efab9-a59b-4188-a5c1-637587c7bfd9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "212fe6b0-26f3-4841-9217-1a0a213225ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b57587-9223-44cd-b222-97aa03d1bfea",
        "cursor": {
          "ref": "f5054c21-5433-402f-98c4-01bff43b8d63",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "de1e6df6-76a3-47ee-be73-237d11718e1b"
        },
        "item": {
          "id": "c9b57587-9223-44cd-b222-97aa03d1bfea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e6334bff-0d53-4988-8ecc-c1cb6c7abd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "85b9959b-fed8-43c9-8fb7-2256e0d21a36",
        "cursor": {
          "ref": "335291dc-b477-4088-b894-80399f089337",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "73b0ad52-51df-46b6-a109-c3c9f0138ad1"
        },
        "item": {
          "id": "85b9959b-fed8-43c9-8fb7-2256e0d21a36",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf36d4e0-3bd3-447d-87f9-c8e99273d874",
          "status": "Created",
          "code": 201,
          "responseTime": 2731,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "34849392-2e7a-4618-a0f2-e341ab54f8f5",
        "cursor": {
          "ref": "df7fed06-38f1-4517-aa91-f87514e37208",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf6fed8e-b5da-4b41-bac5-52e5e69517ec"
        },
        "item": {
          "id": "34849392-2e7a-4618-a0f2-e341ab54f8f5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d8a5ac42-89e0-4fd7-b43c-71c7a0ad7c4b",
          "status": "Created",
          "code": 201,
          "responseTime": 2642,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d4cc2-9c9b-4e00-b4d5-005168ebd1b1",
        "cursor": {
          "ref": "76d40253-24a3-41f9-a508-1c7ab9cbfb9a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3c5c236b-f8d2-4298-b2d6-172fe6e2452c"
        },
        "item": {
          "id": "525d4cc2-9c9b-4e00-b4d5-005168ebd1b1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ace5bf35-1c1c-481a-8f7d-db8bc5bc899d",
          "status": "Created",
          "code": 201,
          "responseTime": 2229,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f80a6f9-cd13-4c61-815e-690f14d30935",
        "cursor": {
          "ref": "939476bd-d3b3-4bd7-9cab-560986c9ce86",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1fd1999-cb36-47a8-8aea-9350a38e5f26"
        },
        "item": {
          "id": "0f80a6f9-cd13-4c61-815e-690f14d30935",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b09c0154-38cd-4c7c-8d91-023e09f15420",
          "status": "Created",
          "code": 201,
          "responseTime": 2029,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7284cf-7f01-4f9c-9053-20c73b31a10c",
        "cursor": {
          "ref": "d0adf032-6141-46b7-a4f5-ba4d3ed4cdca",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f67f556-2659-4869-bb6f-71f81eaa91df"
        },
        "item": {
          "id": "ea7284cf-7f01-4f9c-9053-20c73b31a10c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ae158b89-2199-474c-b5fb-63dd9aa70a5d",
          "status": "Created",
          "code": 201,
          "responseTime": 2117,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d8a0a5-9504-4b1a-a38c-f5c0aa7ef8b7",
        "cursor": {
          "ref": "b37e8595-2db8-4f2d-b61a-ce7392381287",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a114f694-5705-4098-a6a1-e0045fe3833d"
        },
        "item": {
          "id": "e4d8a0a5-9504-4b1a-a38c-f5c0aa7ef8b7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d8b4598f-9d97-41ef-9384-3ed4126c9f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0f69ec46-fa74-4a98-ad41-d9b746ed8fa9",
        "cursor": {
          "ref": "2e552d66-9efc-4d4e-8798-742723a60c27",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dd9a8138-121c-404c-a6b7-a626cd6cc4e1"
        },
        "item": {
          "id": "0f69ec46-fa74-4a98-ad41-d9b746ed8fa9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c5f15c99-5f0e-4e3a-b2f3-0e71c865eaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bd48aa-2793-4515-bbc7-ce9bf8382b4b",
        "cursor": {
          "ref": "f80f59cf-b955-4112-b1c0-9823bb30f62f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2a526a77-a126-456e-80e3-6d4c0e05f434"
        },
        "item": {
          "id": "d6bd48aa-2793-4515-bbc7-ce9bf8382b4b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8361a35c-a7e5-4b86-9082-88f3939b6cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc52ea85-ac41-4542-97b4-2d029f5894ad",
        "cursor": {
          "ref": "5d9d4847-803e-4015-8695-f41008689cec",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "617d6c27-0fc8-4893-abcd-423a0261c45e"
        },
        "item": {
          "id": "fc52ea85-ac41-4542-97b4-2d029f5894ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b51cb71c-f6af-4998-b9b6-bcd3414ba854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61caeede-adfe-49b8-99a0-fc6e7e582670",
        "cursor": {
          "ref": "fb8363a5-6546-4a4c-87a3-4b5e9da985d4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3cfd2254-db4c-429f-b3dc-45573dd54661"
        },
        "item": {
          "id": "61caeede-adfe-49b8-99a0-fc6e7e582670",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5003e812-bd40-430d-9cba-3cb1333f313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff757449-8a02-40ad-89c9-2d4ef482e294",
        "cursor": {
          "ref": "3ef9f929-1b6c-4822-b156-0278aab40331",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0164617a-57dd-488f-8a13-1847361c6043"
        },
        "item": {
          "id": "ff757449-8a02-40ad-89c9-2d4ef482e294",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1cac37c3-5050-45d7-92be-b2b8aee0557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d9584a-478b-4e16-bee5-2e65c01ab933",
        "cursor": {
          "ref": "ab398636-09ad-4441-ab00-22790592838b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ea406cf6-50f1-4f93-a57c-536caaeadaa5"
        },
        "item": {
          "id": "58d9584a-478b-4e16-bee5-2e65c01ab933",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18a35f4a-063d-4023-b23f-e70d1f48d157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fef9b1-9cd7-42fd-882d-64132b773af2",
        "cursor": {
          "ref": "9227c97e-ee66-4259-8313-01196d87dd84",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d80c22c1-958a-4586-b82a-a730fb49b828"
        },
        "item": {
          "id": "08fef9b1-9cd7-42fd-882d-64132b773af2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "09f389b2-362d-44dd-ab9b-64ed09463aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5663744f-76d9-4133-ba54-79019375aab8",
        "cursor": {
          "ref": "97cdfaaf-2772-4862-a815-5e7fac160af9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae338eee-c718-44d6-b83c-088dc6e92f74"
        },
        "item": {
          "id": "5663744f-76d9-4133-ba54-79019375aab8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3429c90-19f5-4976-8326-d5c50a8b8e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a5dfd-d901-4ae6-914d-cf25040c6781",
        "cursor": {
          "ref": "2ce5b102-97fa-4b6c-ab4b-41c4b1c7a186",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "262399cc-ddb9-4e96-a176-94a7abe5d3ae"
        },
        "item": {
          "id": "8b2a5dfd-d901-4ae6-914d-cf25040c6781",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4622ebd3-5820-4a20-9906-976101c6be43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55070024-553c-4cde-90ac-d9c5d34ce55d",
        "cursor": {
          "ref": "d8362b2c-eefc-454c-9720-f57d9820b589",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2c3e9368-2291-42a7-b0cb-b5f8b51df404"
        },
        "item": {
          "id": "55070024-553c-4cde-90ac-d9c5d34ce55d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a09c8b3-cd91-4b73-9afe-477e1e2e9474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb97936a-ce30-4cc4-9d88-832cb7b5dd37",
        "cursor": {
          "ref": "580f42d1-ecb9-4f60-9429-009467b8abe8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "12673058-cbe5-4181-a09b-a5effb487774"
        },
        "item": {
          "id": "eb97936a-ce30-4cc4-9d88-832cb7b5dd37",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "537384ee-7356-4de5-a3b6-5b8c51777733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2698f17-a5bb-44a3-a2c4-e83081f151f5",
        "cursor": {
          "ref": "062e1c0a-6580-4b86-a538-c48e34919f64",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8ee6006c-dfe2-4e06-b9a2-ff5786537ab4"
        },
        "item": {
          "id": "c2698f17-a5bb-44a3-a2c4-e83081f151f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d6d1a72-fb01-41d0-aa9d-c757b7cd22ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce368d4-8a89-4f8a-8921-406977e50c5e",
        "cursor": {
          "ref": "d989b93d-5f85-4f7a-992f-acd6e9b8d58e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b54fcde9-ba1d-4664-bffa-921d22e12722"
        },
        "item": {
          "id": "3ce368d4-8a89-4f8a-8921-406977e50c5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34a4f6d5-6707-4a22-8c9b-37a087d513fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943f3089-2498-441f-95f0-3a6871fbb2be",
        "cursor": {
          "ref": "ae2e8d2b-cd48-4172-9629-df17062e074e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9141a69f-3c61-49e9-b03c-ef3621f5685f"
        },
        "item": {
          "id": "943f3089-2498-441f-95f0-3a6871fbb2be",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cbb8cf62-c13d-409b-908f-37f6795c37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19cd384-75cc-4e2b-a6d3-a1d0d946de3d",
        "cursor": {
          "ref": "11cf1d06-46c5-43a3-8824-d4a867228a22",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e99b1fc9-04e1-4d2c-898b-928343eb2d29"
        },
        "item": {
          "id": "d19cd384-75cc-4e2b-a6d3-a1d0d946de3d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62d15c19-6610-407b-a9a7-d82e8b908b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b2029-e2ea-4140-960a-3e90e1d12c00",
        "cursor": {
          "ref": "ee730553-d5c6-4705-92da-e9d6f4cedccd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4fbabe4e-8249-4866-97eb-aa5909b0848c"
        },
        "item": {
          "id": "ce1b2029-e2ea-4140-960a-3e90e1d12c00",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b3f6fca-6082-4b4d-a933-d708131cf153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56380fe-2aed-4b2f-9cdc-6be32da95559",
        "cursor": {
          "ref": "6df1beb8-abef-4db3-9ffe-4ce41e7ac234",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "225078a6-658f-4f3b-a75b-046aafc7ab38"
        },
        "item": {
          "id": "c56380fe-2aed-4b2f-9cdc-6be32da95559",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "22b3b00e-0694-4d8d-8c68-1345c603e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180074a3-ec2a-46d3-9d07-77d0b000fb79",
        "cursor": {
          "ref": "eccd6125-f3b4-4f8e-a814-a449aa623763",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4b4ee7ec-bf91-40db-b990-954933dcedaa"
        },
        "item": {
          "id": "180074a3-ec2a-46d3-9d07-77d0b000fb79",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "06be9ef4-9ae6-4c1d-8356-c1f24f3abd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b07395-f9d6-4618-86c6-57b03030c73a",
        "cursor": {
          "ref": "717d4f41-e2af-4453-a0af-1402abcdf483",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cc0db33a-066d-4f01-9ac0-9afd6ff3d148"
        },
        "item": {
          "id": "04b07395-f9d6-4618-86c6-57b03030c73a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b5083ae-50b1-4815-a212-d35743fadcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c286afd-8541-4255-91be-b2a3b758fedc",
        "cursor": {
          "ref": "c02769fd-43fd-438d-963e-8bcd69f532a1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "95c88081-51e8-41f0-addd-765074a47022"
        },
        "item": {
          "id": "8c286afd-8541-4255-91be-b2a3b758fedc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "898d248b-cfcd-4995-be4d-9f7f07c6e90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e733b041-6254-4ae3-aef7-f4ee18bb5e2d",
        "cursor": {
          "ref": "c0fb218f-82a2-4d1c-a211-2a9588aa8c0f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a1535c6f-5890-4ea2-8fca-661eec9d0720"
        },
        "item": {
          "id": "e733b041-6254-4ae3-aef7-f4ee18bb5e2d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "38c4a9cf-acf9-4bbf-bee3-22ddc47a1929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2409d5-ac24-4d71-a1ca-7fd19ca45aa2",
        "cursor": {
          "ref": "b7a175c2-4204-4d3f-9d6c-d0d813f77487",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37f1d83d-271d-4d2e-9138-70ad01d6a0dc"
        },
        "item": {
          "id": "9e2409d5-ac24-4d71-a1ca-7fd19ca45aa2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8515199-caf4-4228-a57d-655f551372ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a1a5fc-1c57-4c54-ae02-7e61e71520b7",
        "cursor": {
          "ref": "707ef939-3376-4dab-9034-cb7bb3fda10e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "199bcbf4-b1af-45eb-9b5d-ef2a5da288d2"
        },
        "item": {
          "id": "50a1a5fc-1c57-4c54-ae02-7e61e71520b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b4f10cc4-e3a3-4df4-8bc9-abdf83820112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a7afa0-08ab-472e-b03e-5207b9f2296b",
        "cursor": {
          "ref": "6873ac98-0d8d-4dd7-b695-2ab675fd307c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2ec10853-6847-43a6-a3ce-5c52384f4619"
        },
        "item": {
          "id": "b5a7afa0-08ab-472e-b03e-5207b9f2296b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a03a12b4-6c24-4491-a10a-24d479757513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d914db1c-b5fc-43f7-91ce-dcab84cb74fb",
        "cursor": {
          "ref": "4d98fd52-ae63-4632-9ec0-f1d342979019",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "746e1c9e-f767-49aa-bacd-0f0040f64186"
        },
        "item": {
          "id": "d914db1c-b5fc-43f7-91ce-dcab84cb74fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "30e61a1c-f4f5-43f0-9e07-7341925e3114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038cc33-8014-4c94-93aa-6091cac88b7f",
        "cursor": {
          "ref": "c1670c58-e910-48e4-9b02-41cd6e6412ae",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3bacfdf9-1b7e-44c5-ba82-bc39ee03c413"
        },
        "item": {
          "id": "1038cc33-8014-4c94-93aa-6091cac88b7f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a75c82cb-66b4-4ef6-a0bc-58174bbb456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b9746b-68a3-47fe-90bc-3e1682d0efe2",
        "cursor": {
          "ref": "86defd87-177e-4b04-a000-23b2a8c938b3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "216b732f-f076-40f5-aed7-93402e570704"
        },
        "item": {
          "id": "e1b9746b-68a3-47fe-90bc-3e1682d0efe2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac8caa7f-2d9a-4211-908a-4de3c469d90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cd4324-f567-4c8d-a258-945163864856",
        "cursor": {
          "ref": "e0d0829c-7d7b-4495-8f6d-b40e64af667c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6e4e966a-ea1e-48ef-afe9-752a72e1b7b6"
        },
        "item": {
          "id": "30cd4324-f567-4c8d-a258-945163864856",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e254ad32-6b49-46e6-ab88-7314918a5baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d60f505-8313-4860-bdc0-dce4c317c627",
        "cursor": {
          "ref": "43e0ccc0-c93e-4e2a-aa0a-7030a01af8eb",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ab4d5f34-9800-4e3c-b3f8-6634149c7885"
        },
        "item": {
          "id": "5d60f505-8313-4860-bdc0-dce4c317c627",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b28629dd-886f-4538-8f7c-ffae4aebe2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0430c9-2953-456e-8770-f265cae98e82",
        "cursor": {
          "ref": "9bb1395d-433a-4a5f-85e5-b6bcc1de5976",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0a6c1990-dd62-4ecc-8f27-9fc2299b73cb"
        },
        "item": {
          "id": "9c0430c9-2953-456e-8770-f265cae98e82",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbb0a29c-ac7b-41a5-90f7-a39fee3cffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245c4f38-5e2d-4e37-b26c-cdaeeeb2f9d3",
        "cursor": {
          "ref": "20ee1433-073c-479e-a715-3d9567257e5c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "21f91614-07d0-432b-86e1-5c3458027115"
        },
        "item": {
          "id": "245c4f38-5e2d-4e37-b26c-cdaeeeb2f9d3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0528593a-383f-40e9-b5a0-5f9b8f4bc9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46883408-29b6-4f3c-9f03-9391a08ba9f7",
        "cursor": {
          "ref": "60148876-2613-4f34-b28a-07484c8cb36c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1355c069-053e-46af-8d2a-1ffd9fad4c7f"
        },
        "item": {
          "id": "46883408-29b6-4f3c-9f03-9391a08ba9f7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9af55f46-531c-4901-864c-549fee3aeac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230ebae6-d03f-4b00-a3cc-78ac36519e6c",
        "cursor": {
          "ref": "8f337e3d-b46c-4cab-a7a0-84ceb7870449",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0b8675be-c207-4715-9a22-e7127ba6ae17"
        },
        "item": {
          "id": "230ebae6-d03f-4b00-a3cc-78ac36519e6c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "955dc802-5a30-4995-b382-31b650c154e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2a5537-c21f-41a1-944b-47bd7068c066",
        "cursor": {
          "ref": "bc778c3a-0c0c-4cc6-a5dd-3bb09f74cdc0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fa845a97-63cd-41ad-bea7-307c6d5c9575"
        },
        "item": {
          "id": "8a2a5537-c21f-41a1-944b-47bd7068c066",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73199c6b-550c-44a4-8d1c-310003427d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dcfb1e-b56f-4d03-a970-c536cc53ac86",
        "cursor": {
          "ref": "7468bbdd-e4df-495d-a07a-46482e2b61ba",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "69df0842-9a71-4481-86ce-cb5a7daa6225"
        },
        "item": {
          "id": "c7dcfb1e-b56f-4d03-a970-c536cc53ac86",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "766683ad-6e13-4291-9f93-d0c8b004a71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080551ea-5553-4ca9-ae1d-3969f26f18f2",
        "cursor": {
          "ref": "8c3a5960-66b2-4444-9fc0-c7d77d08c778",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dadff447-4c4a-43ad-ad4e-8bfdcf3c25e9"
        },
        "item": {
          "id": "080551ea-5553-4ca9-ae1d-3969f26f18f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "20ff875d-8521-4fd7-8168-f70eb083c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164d1ad8-abe9-46ae-a1de-5893a3272634",
        "cursor": {
          "ref": "06f33d07-4d19-4d71-8f0f-9f979e514429",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5327df3c-4566-4a1a-98ba-530c37cd83fc"
        },
        "item": {
          "id": "164d1ad8-abe9-46ae-a1de-5893a3272634",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da2da28f-a8be-4b8d-b9c1-f9988f9fe8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6c0212-2c4b-4dd3-955f-077c7a135a3c",
        "cursor": {
          "ref": "5249fcf2-3eea-4de7-a275-436ece3892d4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bb02c49b-4d07-473b-89df-dc53de2aa521"
        },
        "item": {
          "id": "2b6c0212-2c4b-4dd3-955f-077c7a135a3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d1ecd741-94e9-4473-9290-77e5ffe6f538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17746ed5-9578-439e-84bf-dcb157706a90",
        "cursor": {
          "ref": "e09ed4b1-cf7e-40ae-b550-002b621feb68",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "675de335-da49-4702-9e9c-4cc92d142ea4"
        },
        "item": {
          "id": "17746ed5-9578-439e-84bf-dcb157706a90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25578b50-1f9e-4350-afe0-74a825020314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce36090-9eb1-47c4-bff2-2430cb6cd242",
        "cursor": {
          "ref": "6743d09a-3b15-44a1-a66c-f56fbfb20144",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67e3c276-4d2f-4cc0-8d5a-b1c58ae14489"
        },
        "item": {
          "id": "cce36090-9eb1-47c4-bff2-2430cb6cd242",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f21094e8-e321-44c7-a85d-94efd40de884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6108fccd-2cab-4592-b2c6-f4bd0df1ac1f",
        "cursor": {
          "ref": "224af325-d516-4f31-979c-255be37534e6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "92c83820-1ff5-4b4d-a0b1-e142a98de46c"
        },
        "item": {
          "id": "6108fccd-2cab-4592-b2c6-f4bd0df1ac1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3878c63d-7574-4c63-900e-96a02e704fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff3fd2e-a198-4ffd-9e3c-558856d1fb5c",
        "cursor": {
          "ref": "f2609cf1-2442-4cde-b9e7-9f2653a2294b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb302fda-28d3-43b3-8ef7-318366438f97"
        },
        "item": {
          "id": "aff3fd2e-a198-4ffd-9e3c-558856d1fb5c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb277011-fd99-4d96-aad5-6fb165aaeeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab81642-e45e-46a2-9a0e-4ea792fda24b",
        "cursor": {
          "ref": "21c06ad0-814d-4643-be1d-b23f9dd1aaca",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c21b5966-1b61-4cb7-a079-20411e81d17a"
        },
        "item": {
          "id": "1ab81642-e45e-46a2-9a0e-4ea792fda24b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d323945e-1808-446f-b177-4099b0884c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4389dadd-cda3-4d30-b27e-7251b7f6d447",
        "cursor": {
          "ref": "3ca3a8ed-add1-4daa-8110-367479219c82",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "64df7104-8eae-4bf8-9a95-9ff98a8c4a7e"
        },
        "item": {
          "id": "4389dadd-cda3-4d30-b27e-7251b7f6d447",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1bd2c9ae-d6e0-4f9e-8c8d-e29651ec5080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032f1115-c943-4fbe-8ecd-3aab034b664e",
        "cursor": {
          "ref": "65a90cec-2a90-40c6-9c7f-8fc2b544b6c3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b3b46be0-dccf-4ec1-9c88-931eaf55967c"
        },
        "item": {
          "id": "032f1115-c943-4fbe-8ecd-3aab034b664e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2758118b-aac8-41c9-9276-d0f071230634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2faac56-49a5-4ece-ac26-42108ae00736",
        "cursor": {
          "ref": "6ef2fca9-fb4e-4960-968b-21a00f5fcfe4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b19a5c56-610c-4442-a0d5-958d092184ae"
        },
        "item": {
          "id": "c2faac56-49a5-4ece-ac26-42108ae00736",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d67c8fcb-0b74-43ff-b454-270a451a7a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c11985-ba8b-4624-9622-57c3cb2f606a",
        "cursor": {
          "ref": "59a5acdb-86ec-4a52-b619-29dd0610482e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e42dc51e-a796-43fb-83ab-e4c312a9aa04"
        },
        "item": {
          "id": "c5c11985-ba8b-4624-9622-57c3cb2f606a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaac9d12-0e87-45bd-9200-39213b9616d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4cb9dd-e38e-497a-bbc1-d4cfd6cb66a3",
        "cursor": {
          "ref": "345f71d1-e565-444c-afb7-a059bb7035b0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ea97e006-f59f-40ed-a413-562224e0828e"
        },
        "item": {
          "id": "4b4cb9dd-e38e-497a-bbc1-d4cfd6cb66a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1bfabcc6-9396-4c4b-a009-455e7d4d3400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164ebb46-3f80-49b7-befa-c103c210a335",
        "cursor": {
          "ref": "b78a6983-0be0-4be3-b240-4d180379a889",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "11acc96c-c4cc-4f7b-891f-a8de349f84d2"
        },
        "item": {
          "id": "164ebb46-3f80-49b7-befa-c103c210a335",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d46fd721-d7d2-444f-a996-311f9a8fba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a8a19e-4406-4396-8d59-a02c1db0e5d0",
        "cursor": {
          "ref": "635f9e02-7b76-492a-861b-e07bd1e95c67",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3900a4be-77bf-43c7-b463-259f535f95d7"
        },
        "item": {
          "id": "69a8a19e-4406-4396-8d59-a02c1db0e5d0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "350f5ad0-87e7-4515-b42e-dd0d45c428bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d31d43-70ca-4a3d-8474-3bdbb07615a1",
        "cursor": {
          "ref": "b5a9afc8-899c-42e1-a109-ebd30561cded",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "220c617c-26a8-4483-ba5a-1a9e7c417a9e"
        },
        "item": {
          "id": "25d31d43-70ca-4a3d-8474-3bdbb07615a1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "88054cfb-2da3-432a-8fcf-11d74a2711c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2778dc6a-99c1-404a-96a2-cfeb8b500cc8",
        "cursor": {
          "ref": "73452652-5c66-4557-9465-a0703bf2f73f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f7680130-1b73-4359-946b-40144b7af75d"
        },
        "item": {
          "id": "2778dc6a-99c1-404a-96a2-cfeb8b500cc8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d1430e99-8591-4a48-8330-bcfa57f62f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e11087-5066-4a4b-8732-253cd5c35ebe",
        "cursor": {
          "ref": "f1e3180b-873a-49e7-8cd0-6b1b849dd030",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "689776a5-cdac-43ec-b196-a351d130810c"
        },
        "item": {
          "id": "60e11087-5066-4a4b-8732-253cd5c35ebe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e6fd0f4-29f4-4dc8-9103-ea3a10ee412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa31bd-aff2-45a7-80b8-5e33fb95c34a",
        "cursor": {
          "ref": "039514f7-51ff-4e3c-a8d5-4690afbaf4db",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fa4010d2-43d8-477f-8081-73ae718172bb"
        },
        "item": {
          "id": "10fa31bd-aff2-45a7-80b8-5e33fb95c34a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2cc257cb-b452-4171-bb8d-e5bcab325607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c56b67-af13-4c15-8ae9-a4f12b10ce52",
        "cursor": {
          "ref": "3228402d-4fc9-43b3-ba0d-d3a115975a61",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ea245e8d-bb6a-407e-98d3-2c1d8f4e6332"
        },
        "item": {
          "id": "20c56b67-af13-4c15-8ae9-a4f12b10ce52",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e7f21a9b-f36b-461a-920c-fcc6bb49c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370806c3-6475-40d1-813f-8cc0f2ed7819",
        "cursor": {
          "ref": "56b6b4dd-9eca-411b-b50e-c77d75e409be",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa6ebbd6-0c19-461b-9f57-932ff171d8ce"
        },
        "item": {
          "id": "370806c3-6475-40d1-813f-8cc0f2ed7819",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4971962f-e123-4660-bdac-198d01fc76bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9e428-e280-45dc-b1c2-8cc3c62e7a50",
        "cursor": {
          "ref": "fbbd431b-b57d-4f30-947c-70d10466d8c4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9798d24a-f245-43bd-bb71-aa2996f3caa7"
        },
        "item": {
          "id": "2aa9e428-e280-45dc-b1c2-8cc3c62e7a50",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2d80b2d1-ed84-44cd-a8d7-49400b949773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd36b60-03bf-47f1-8486-719b14c5761e",
        "cursor": {
          "ref": "78da5f8e-2e0f-4a98-85b7-a6c81912f52e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "674152d6-f577-44e5-bc86-afad12e0b1c9"
        },
        "item": {
          "id": "4bd36b60-03bf-47f1-8486-719b14c5761e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4a02f444-1199-429d-8ce4-8c24e7042f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ae219-7279-42fa-bce0-61c38fee87e9",
        "cursor": {
          "ref": "df8b0730-9faf-46d5-b986-37a828289e9e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "22e08a9d-1766-49ba-b0e7-9ce1bdcc48b7"
        },
        "item": {
          "id": "312ae219-7279-42fa-bce0-61c38fee87e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e5e5283-8ab3-4f0e-befa-0222fc84efc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1ec4f8-e9fe-460c-9ed4-67021d9ab277",
        "cursor": {
          "ref": "3a29e4a1-e7c6-4a8a-be71-80841c9d78e9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "548dc198-496f-43d6-a4ba-0d74ffbb31fe"
        },
        "item": {
          "id": "4c1ec4f8-e9fe-460c-9ed4-67021d9ab277",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0200ecb4-e8f5-4fb3-b60f-d2a31a28f30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3aa402-32f9-4449-9a69-74084b316446",
        "cursor": {
          "ref": "d45eff93-66e9-47e0-b89a-5e28a2e37f14",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cfbdcd22-5bfb-4199-a792-74ea0b42a550"
        },
        "item": {
          "id": "2c3aa402-32f9-4449-9a69-74084b316446",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "04a5ff03-9919-4ccd-b6e6-2f7f8820293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da1579c-cb55-4d0b-be7b-abfb8766e501",
        "cursor": {
          "ref": "dc172fc2-926f-40a2-96d7-ab4c0cd76000",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15a0b341-aed9-4cc9-b1a9-fab8b0ac5434"
        },
        "item": {
          "id": "8da1579c-cb55-4d0b-be7b-abfb8766e501",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4377c7e6-50dd-4173-a533-b7ee59b8c756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b3b8e8-9019-496d-87b3-62e47e0a5871",
        "cursor": {
          "ref": "1cf2a791-9718-4d21-800c-a430c851365c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d01b8539-b812-4d44-b1ef-0136de5d4832"
        },
        "item": {
          "id": "98b3b8e8-9019-496d-87b3-62e47e0a5871",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "494afa81-9047-472e-a9d3-bc000e56a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbad78a-74bf-444b-bf01-d96672e7b245",
        "cursor": {
          "ref": "8e7c8188-9a8d-4f38-912a-9bca12288053",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a6d0a047-50b1-4652-851e-b72814bfaf73"
        },
        "item": {
          "id": "fbbad78a-74bf-444b-bf01-d96672e7b245",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e618adb2-b3fc-4ec1-bcfb-5acfbd9bb2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46409231-a958-4ff9-8dab-ca91a6c25381",
        "cursor": {
          "ref": "041e3012-d977-47c0-b826-b6146e1cfbb4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b5b9a75b-bba5-4728-bf79-7e0408ecf139"
        },
        "item": {
          "id": "46409231-a958-4ff9-8dab-ca91a6c25381",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d93fe20f-7ea2-4cb1-81fa-0913aef324da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7db6f98-a441-4b1e-aa88-363e4d1e6d06",
        "cursor": {
          "ref": "452963ec-4c08-4f26-9998-6c8051b8a2e1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5cdfacee-2d33-45ad-802f-e5e4514c6a8d"
        },
        "item": {
          "id": "f7db6f98-a441-4b1e-aa88-363e4d1e6d06",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e45aa37d-6839-4967-80fb-8af94c54ebac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86593d2d-726f-4c5a-b58b-6883c688e092",
        "cursor": {
          "ref": "e025be0a-f752-4b92-8155-f5e6ce17bcbd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0ad12f81-da3b-4edb-a996-8facc5d96668"
        },
        "item": {
          "id": "86593d2d-726f-4c5a-b58b-6883c688e092",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5588ab12-382e-40b3-80ac-52bee3abe8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25218ef-39ff-45c5-ae19-667df7a4d73a",
        "cursor": {
          "ref": "4cb8b592-63d8-4826-a64e-e56a041055ed",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1a930a13-9b9a-4a84-a025-21861bb35565"
        },
        "item": {
          "id": "a25218ef-39ff-45c5-ae19-667df7a4d73a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "db7e3254-d91b-4fb3-9d82-c6fe901ecb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa94ac2-d3da-4e31-a2c1-7b0269b24e4d",
        "cursor": {
          "ref": "94422f57-9ebf-4842-ad04-bca8fd9bbaf8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cde6030f-466e-4ec9-938f-8c8628972012"
        },
        "item": {
          "id": "7aa94ac2-d3da-4e31-a2c1-7b0269b24e4d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b531aa9c-ea18-4879-abb4-7e0a7bca96c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239331e7-f29c-478c-9d3e-1e999d49e49a",
        "cursor": {
          "ref": "bc9f5212-01bc-43da-9a94-5607d5c3966d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9f729162-76ac-4738-bec5-8bb6e7b1854e"
        },
        "item": {
          "id": "239331e7-f29c-478c-9d3e-1e999d49e49a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9b768ab3-1fe3-4c70-ad3e-7165a1d482e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683ad914-20a0-4078-93d7-33cda7363f8a",
        "cursor": {
          "ref": "c25b3945-eb84-4347-b1ad-ee63aca10bbe",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "04ef7f43-8ec7-4b6c-b211-6e18b70de52c"
        },
        "item": {
          "id": "683ad914-20a0-4078-93d7-33cda7363f8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0e3bae2-be2e-4d72-8b27-9e973ccf7ce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79dbca2-0360-4cf0-ae4f-43ec8e9544ba",
        "cursor": {
          "ref": "6e8a19c8-d46c-4ad0-bcfd-d4057705ef62",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "168965a3-1eb5-4979-b56b-1f4ae8c50ada"
        },
        "item": {
          "id": "b79dbca2-0360-4cf0-ae4f-43ec8e9544ba",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3924d74c-5df4-4a18-9dbc-60f06c581f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f66f2-08fc-42ac-9fbf-42f00bc651c9",
        "cursor": {
          "ref": "6eab4c09-2866-4fe1-a6e7-88652c1e8d67",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "39167878-ce70-4925-b4d3-33341ded9c6e"
        },
        "item": {
          "id": "e03f66f2-08fc-42ac-9fbf-42f00bc651c9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "65081652-895a-4f6e-ae8b-b14997bf1509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224dd5f-138f-40f9-a7b0-3e78372b7388",
        "cursor": {
          "ref": "9db32ba0-8897-462c-bc44-b63e9fa9f309",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51afa483-7521-45ff-bfc5-d74ffa159719"
        },
        "item": {
          "id": "9224dd5f-138f-40f9-a7b0-3e78372b7388",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c12b60a4-7bce-4107-80ea-041e61353185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b56829-5955-4c0a-8ab2-51c508134e10",
        "cursor": {
          "ref": "3390b38a-48c5-4c09-9aa2-45cafb6a8e7b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6f784326-d51e-45d4-86c8-4d4e67d63c80"
        },
        "item": {
          "id": "56b56829-5955-4c0a-8ab2-51c508134e10",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0320e4b-f9e7-45c3-abb3-b6a2548f4ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c72d17-bb77-489e-9d5b-20c8e6358ffe",
        "cursor": {
          "ref": "781e5778-dff9-410a-a3a6-67c130822a2e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "12a5d1e2-130b-43c7-b891-7830d750bedb"
        },
        "item": {
          "id": "d5c72d17-bb77-489e-9d5b-20c8e6358ffe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0a59475a-5024-4a75-ab50-93b36ad0aabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9af0fdd-9d69-48d0-9088-8f3a68e2d033",
        "cursor": {
          "ref": "bda078ea-b56e-477a-8245-e9b57ca60115",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8e678ff-99ad-4f0a-b485-29f3eb1d71c3"
        },
        "item": {
          "id": "a9af0fdd-9d69-48d0-9088-8f3a68e2d033",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "be6ad729-3a90-495d-8ed4-9573212843a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b232c4e8-6121-4c54-9ae0-161c4603d4e1",
        "cursor": {
          "ref": "e72bce7d-c9ce-468e-a1be-48793c871c96",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "32caa8ab-e0c4-4f3d-b0d1-3fb2c7ee74ca"
        },
        "item": {
          "id": "b232c4e8-6121-4c54-9ae0-161c4603d4e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9dfb7515-4f39-4fae-a9db-4a684267a2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ddc79f-6894-4a2f-ac2f-5a27cb01448c",
        "cursor": {
          "ref": "f268aada-6ae1-485b-972c-9c4b790cdf31",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e748de9-0e83-4c21-acd0-a2017d2058b9"
        },
        "item": {
          "id": "43ddc79f-6894-4a2f-ac2f-5a27cb01448c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "82da2968-2f8a-4807-b1bc-7e47a0b64d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a1a58c-3d9a-4d23-a8e9-04cf3c52729c",
        "cursor": {
          "ref": "c1a6c737-c180-400c-8123-d243b6bc576e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62a4a7bb-8b79-4510-98ac-51d9e19f023e"
        },
        "item": {
          "id": "90a1a58c-3d9a-4d23-a8e9-04cf3c52729c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "11b22610-45ce-46a0-bd18-980d5a35161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7e69a1-c6fe-461d-aaf9-108ecd22c5b4",
        "cursor": {
          "ref": "bc1487c0-5014-4888-9d68-e18c969aac94",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0f837134-c22a-48d0-baf4-4df97ef9dc46"
        },
        "item": {
          "id": "da7e69a1-c6fe-461d-aaf9-108ecd22c5b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e2497086-cb95-496c-855c-5a1b2bb07ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698fa59c-1dac-47bd-bdb1-b9abaa1ab7ed",
        "cursor": {
          "ref": "4e1093d5-42f3-4f24-927e-77f4a8b8c1e6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d59ef19-8b48-454b-aef7-9a5f6a2fdc68"
        },
        "item": {
          "id": "698fa59c-1dac-47bd-bdb1-b9abaa1ab7ed",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3383695f-2503-45d6-bf2b-4de9bc620c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc982e84-eed2-4ee2-a61e-0423898663de",
        "cursor": {
          "ref": "29466207-3e0a-452e-a733-56b23bdfc807",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "29ee3e09-1677-4c4e-9a1b-85cf8cfc80b8"
        },
        "item": {
          "id": "dc982e84-eed2-4ee2-a61e-0423898663de",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fe162023-8fe1-42d4-8961-5b0b7490d73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179528e8-44b8-459b-b64b-b57df95060b7",
        "cursor": {
          "ref": "fe80343a-55bc-43b8-8c22-1ad74f51682e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3d041f71-373f-4f43-9350-8ed0be311a66"
        },
        "item": {
          "id": "179528e8-44b8-459b-b64b-b57df95060b7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4e1278ce-3906-4b74-b3ee-a38ab97164e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5413d025-833f-43f8-960a-b68020241e81",
        "cursor": {
          "ref": "7e1c46bc-f676-4d47-97dd-5ac4ccc3c821",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0e33f7a5-d594-4907-b9ee-02fbefcea153"
        },
        "item": {
          "id": "5413d025-833f-43f8-960a-b68020241e81",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f528fe4-80c5-4576-a8aa-46f75bd0875f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8f453-9f7f-42f0-94db-3b170d78976f",
        "cursor": {
          "ref": "67139d13-ef9a-492e-8fda-832550c6456b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "645a8de2-28f7-48be-902a-1ba5c4c0ecff"
        },
        "item": {
          "id": "4ff8f453-9f7f-42f0-94db-3b170d78976f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "698aca4f-0312-4e16-85b2-822abbf5ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cd7246-5a83-4a2b-a6ba-83edc4a91743",
        "cursor": {
          "ref": "12ad7658-853d-421f-a593-7347c676302d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6420e814-fbb5-41cd-8506-ea3c1a62c24b"
        },
        "item": {
          "id": "97cd7246-5a83-4a2b-a6ba-83edc4a91743",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "289e3a55-e4d0-4cf9-829c-52da2ebeae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1fcdef-d1ac-42b9-bbfe-99a36dc5eab3",
        "cursor": {
          "ref": "b51bd276-3324-4bd9-b0fd-cc986c2b9a65",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e3f1e071-8ce5-40a1-a948-327e51a24daf"
        },
        "item": {
          "id": "df1fcdef-d1ac-42b9-bbfe-99a36dc5eab3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df752d24-4ebd-48a3-a366-19762b252602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57c54a0-cbcf-4b47-871f-6f0c623e882f",
        "cursor": {
          "ref": "e7463bf1-2be7-464f-8f75-ff7feb4ada20",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89c0ef1a-670d-4d74-a34b-36e8e7506ce5"
        },
        "item": {
          "id": "e57c54a0-cbcf-4b47-871f-6f0c623e882f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6260cb08-9f18-47eb-ba9d-36de1e25014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9164ac14-d3a6-4d94-b9c8-2f5e5c3f00da",
        "cursor": {
          "ref": "b122eb84-b1cb-437e-aeac-d73906a35cd0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4f83062-0ae7-4f5b-92dd-8dff35a2dc54"
        },
        "item": {
          "id": "9164ac14-d3a6-4d94-b9c8-2f5e5c3f00da",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "47380572-f570-4091-b901-6676bfdd83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0558f7-48fd-4714-9272-3c9001fb7e4d",
        "cursor": {
          "ref": "51c35c9d-60e3-481c-8234-3f4a59389cd9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5700956b-912a-499b-8edd-d44621a86a78"
        },
        "item": {
          "id": "4e0558f7-48fd-4714-9272-3c9001fb7e4d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b86b5dcb-7759-44ed-8b5d-c5d2673e42aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8741429-f2f9-433e-8b16-de30017d89cb",
        "cursor": {
          "ref": "82705c79-c2d3-4138-9afb-98309944fc85",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e24e88d-06f4-4a8e-a37d-4edafb773b24"
        },
        "item": {
          "id": "e8741429-f2f9-433e-8b16-de30017d89cb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "60eb3734-318c-4043-804b-2f1287b3ba57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3690d64-8e38-4059-9866-bfe835b2ad70",
        "cursor": {
          "ref": "1ec8a9c4-bd8f-4845-817a-8a5c5c91ddf5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "563456a6-b766-4787-9a50-02d1fdda19e4"
        },
        "item": {
          "id": "f3690d64-8e38-4059-9866-bfe835b2ad70",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "478b9d0a-7987-41b3-9c60-582a7a9a0127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a2e0f-2640-4bf9-a001-65144014200d",
        "cursor": {
          "ref": "e14d1ed4-c51c-4528-94e9-4f3eb6e476f6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cc503632-239f-4ca2-8dbb-206c67976b11"
        },
        "item": {
          "id": "b94a2e0f-2640-4bf9-a001-65144014200d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "684bcb48-6c69-457d-9001-cc0d5602facb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f31326-d581-4a34-bc72-7c2c12a2133f",
        "cursor": {
          "ref": "83cf47fd-3a79-440b-87f8-2196327ac492",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d2b3735-5735-4a96-a548-5b5392580d88"
        },
        "item": {
          "id": "d8f31326-d581-4a34-bc72-7c2c12a2133f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9886c975-619d-462a-80f8-035a98291311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820d0074-03b9-43a1-85d3-7b6e04764910",
        "cursor": {
          "ref": "d35629b4-b3f1-4102-ba13-bfb9880e397d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51ff62e0-d7e5-4d03-b1e9-54ba3539d346"
        },
        "item": {
          "id": "820d0074-03b9-43a1-85d3-7b6e04764910",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "95ddd6f7-6253-4997-955a-d875d15f0621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f909d-9b13-45fe-99bd-c32c2d3d64bc",
        "cursor": {
          "ref": "7f3d069a-0935-4182-b153-3f48e2310b29",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "92aa0682-1aa1-40e9-8d60-caac5d49c64c"
        },
        "item": {
          "id": "369f909d-9b13-45fe-99bd-c32c2d3d64bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "280136dc-9917-415b-b1a3-afbe9c955e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfa22a1-1d84-4589-be33-a1163ddee72f",
        "cursor": {
          "ref": "b5a14e1d-a4e6-4647-a668-e5ec1803b711",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "29ae2867-e91d-4728-ae96-505a2b37e9bc"
        },
        "item": {
          "id": "2cfa22a1-1d84-4589-be33-a1163ddee72f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "285f3559-48b3-4889-ae79-7749affbab6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e27991-dabb-4446-8e37-62b917a18a9c",
        "cursor": {
          "ref": "0b90dc6e-7e12-44c5-a372-cd3b309a4520",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de753282-f8b5-499b-87e3-355b1c6ec46b"
        },
        "item": {
          "id": "36e27991-dabb-4446-8e37-62b917a18a9c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e3c3f9b-e759-457f-b127-9d6daae0f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d5ff2d-0504-4653-9818-df35453a844c",
        "cursor": {
          "ref": "4436b1e6-38da-4cf4-a09b-8dddcad4536a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0a6a4d71-8843-43aa-8adf-70b1775ad1a7"
        },
        "item": {
          "id": "39d5ff2d-0504-4653-9818-df35453a844c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f38736a4-2242-4ab3-bdd2-d748163d2a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f7b2f8-51df-429c-ae94-4efd9841bdaf",
        "cursor": {
          "ref": "dfce91db-9543-4da0-ac4c-ceb495f14766",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "356e0c89-4619-43a1-9ffa-b76ef92502ed"
        },
        "item": {
          "id": "51f7b2f8-51df-429c-ae94-4efd9841bdaf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f427ae9-33f3-48ad-809f-b51448335812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e09f2-d1d4-4994-b574-3ab48ab77f85",
        "cursor": {
          "ref": "77c424f1-f7f1-4311-8fbe-7039842676b5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1c765e1c-9be4-4617-abbc-f4bdf4354b31"
        },
        "item": {
          "id": "d71e09f2-d1d4-4994-b574-3ab48ab77f85",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b6d1d21-1afc-40ee-b302-cec78587f239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746d894f-7fe0-46c5-87c9-39dc13d95fa6",
        "cursor": {
          "ref": "b885269b-c78d-429c-a4a1-c67e585fb786",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1053b3f8-47fc-4af3-ad97-69f40c4c8ebc"
        },
        "item": {
          "id": "746d894f-7fe0-46c5-87c9-39dc13d95fa6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "27d477b8-3e7a-4bd2-9543-d2e64b346683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bcee5a-dd15-40e0-8858-d031db3c7336",
        "cursor": {
          "ref": "2a7e5af7-8b64-415a-affa-22a3bf8843b8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "adebf397-76b7-40b5-a942-2d563dc6fe96"
        },
        "item": {
          "id": "35bcee5a-dd15-40e0-8858-d031db3c7336",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "68b546e8-68c8-4acd-9188-f1808d57fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603a0919-7805-4703-bff6-ba26a9c1032a",
        "cursor": {
          "ref": "48beafcc-295a-4e95-aee2-67735dc27fd1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3c734148-cb8f-4ab7-ad68-e83e71b1011b"
        },
        "item": {
          "id": "603a0919-7805-4703-bff6-ba26a9c1032a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "932f53d8-7fb5-43f5-a59b-085d59a4d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6845bb10-b831-4f2a-a0c7-8223faa57097",
        "cursor": {
          "ref": "79f53f78-83ce-4453-8d18-d9a6103513fe",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fcd99e0e-e530-4270-8717-67e00ec1b456"
        },
        "item": {
          "id": "6845bb10-b831-4f2a-a0c7-8223faa57097",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "239271ac-7d88-4858-923a-739559e0d5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b3f61a-a796-4ca9-b227-d7b0f997b61c",
        "cursor": {
          "ref": "d2a10294-6f91-4d12-95c6-5337b24adf4d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6e18c211-0339-4038-8695-2463aee0bcf3"
        },
        "item": {
          "id": "80b3f61a-a796-4ca9-b227-d7b0f997b61c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c163dc60-0b2c-46f5-aa6b-8bf17de2ca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1552e-9f2a-4401-ab4a-c57b4276b87c",
        "cursor": {
          "ref": "13f58e67-f580-49a3-b7f6-609bb2cf8fdb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "941eec08-ffca-4d80-b696-6a89546c3575"
        },
        "item": {
          "id": "bcd1552e-9f2a-4401-ab4a-c57b4276b87c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4013bd88-9bad-4e2b-b874-3aa3962d41d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f54079-97ec-4828-9ffd-4ce0af7d0c55",
        "cursor": {
          "ref": "b765428b-afb4-4df1-a3fc-cfc0b5f03d4a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8f2f050-dd21-4f68-98ca-bbda5ec7f179"
        },
        "item": {
          "id": "b2f54079-97ec-4828-9ffd-4ce0af7d0c55",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "738fc7bb-d513-4b41-b1f0-b8922625fe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f6349a-9a89-4681-b984-30bb263e2601",
        "cursor": {
          "ref": "a34a34cb-f8b5-49cb-bdbe-cf0c05fe6226",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "19509c4d-a2a2-411c-81ce-039e19e2c5a0"
        },
        "item": {
          "id": "a9f6349a-9a89-4681-b984-30bb263e2601",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "53b3d87f-467f-4b20-acb1-3088c4478a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81168ed6-8b62-4738-92a6-fa2a628db9a7",
        "cursor": {
          "ref": "157a20b7-a754-4c65-a122-ba0ec4329534",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d7b0b8d3-b990-4fe9-b0b3-d8761690f792"
        },
        "item": {
          "id": "81168ed6-8b62-4738-92a6-fa2a628db9a7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1ef08626-aacb-45fe-9a88-414a48de2420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90bff89-4b0d-469e-ae7e-14a775e5528a",
        "cursor": {
          "ref": "645c9ec6-58f2-48aa-9313-8d58e1b04f43",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89d0e0ea-422e-4524-8a8e-a95fb67abefe"
        },
        "item": {
          "id": "d90bff89-4b0d-469e-ae7e-14a775e5528a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a04bd6a2-ea7c-41a6-83dd-fe02f44f6a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810bcb4e-dcd4-4f46-9053-2dbbf417c255",
        "cursor": {
          "ref": "26563d3d-654d-4873-a919-eb522e35dc0f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13c59f1b-d41d-41c0-9e93-8b8f945cd140"
        },
        "item": {
          "id": "810bcb4e-dcd4-4f46-9053-2dbbf417c255",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7b43c8f-88b3-4660-885e-bfa1c12b6308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cf3b9c-979f-42ce-9f12-2d1fd583fef1",
        "cursor": {
          "ref": "d83fdceb-1484-4c83-a9ca-3f1e863203bb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "239e5d94-ab27-4e3f-9343-db86a3d517c3"
        },
        "item": {
          "id": "93cf3b9c-979f-42ce-9f12-2d1fd583fef1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f51e7217-6f1c-4d2f-9292-6a77ff5f108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f604edc7-c573-4315-9934-867c4a9e9c2a",
        "cursor": {
          "ref": "61f47f52-5403-48a1-b60c-94264c66f76b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba86f721-c57a-40d4-97b7-4818b2f9df7d"
        },
        "item": {
          "id": "f604edc7-c573-4315-9934-867c4a9e9c2a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7b4f48d9-648f-48de-9075-b18a1b850217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5229d64f-3537-4cad-8c76-b32553267eff",
        "cursor": {
          "ref": "dd99b939-cf55-4c7e-8550-8a113f99ae11",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "405511ec-c79d-4e9f-96a4-705ebd2113ec"
        },
        "item": {
          "id": "5229d64f-3537-4cad-8c76-b32553267eff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "30fb0b8f-e4fa-40c9-9cc9-d7ed7e9adf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855780e-92a7-4ec0-ba30-54b4049a60cb",
        "cursor": {
          "ref": "4fc582ff-a71a-439d-96ed-1910a22a2d56",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f6238166-af59-4ae6-8e9a-151853700dd1"
        },
        "item": {
          "id": "e855780e-92a7-4ec0-ba30-54b4049a60cb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "687b5d08-f193-4f47-a102-0e5bd97f85b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5df14c-5406-4f0b-878a-cdb5a79488b2",
        "cursor": {
          "ref": "a61d3866-01fe-4be4-9261-c678b022141b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15b990b6-7f83-4dc1-9b8e-eacd2a8be277"
        },
        "item": {
          "id": "9c5df14c-5406-4f0b-878a-cdb5a79488b2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8346d721-2044-408f-b493-5d43705e4581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cfe999-4a52-4556-be7e-998d519b6004",
        "cursor": {
          "ref": "ee8dd556-265f-425f-9496-a04f6e6e4d6b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8eb5b091-171f-4754-9702-e7449596d263"
        },
        "item": {
          "id": "b3cfe999-4a52-4556-be7e-998d519b6004",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cddfc459-a15e-4529-a916-c6772407c07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f677de39-88b5-4e12-8b03-0606e23c8317",
        "cursor": {
          "ref": "5ffb54dc-5627-4489-a369-b73285189901",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6c2d0e0-b4c1-4eac-aca1-ec024fc6b471"
        },
        "item": {
          "id": "f677de39-88b5-4e12-8b03-0606e23c8317",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5bdbb8af-d909-4b32-b1a2-5724550331ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd3f90a-e30f-4966-8cc4-0dc597c4cb77",
        "cursor": {
          "ref": "53ddfbe5-3849-4224-8cfc-105f43f61b5a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cf4494b2-d3e5-49c8-b4c1-a145a1b0d0fa"
        },
        "item": {
          "id": "4bd3f90a-e30f-4966-8cc4-0dc597c4cb77",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8513cefe-b322-4eef-9ef1-540a2a53d599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353206b-379f-4974-8cb8-8f1ecb65f013",
        "cursor": {
          "ref": "2601839b-9638-40c4-b4d1-19e004f4a192",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cae19c42-14a4-4519-a37e-ce38e893ca9e"
        },
        "item": {
          "id": "a353206b-379f-4974-8cb8-8f1ecb65f013",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "23ac70c0-d44b-4e5f-8da7-cdf2f51a0ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eddd61-0180-436e-aec7-fdd10551273e",
        "cursor": {
          "ref": "9defa336-76ac-4b95-95fe-f9df9482e2e8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "59e0f77f-f0f0-49b3-aab8-44e4fb6aa0fa"
        },
        "item": {
          "id": "25eddd61-0180-436e-aec7-fdd10551273e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "543fa769-e41b-4fb8-ac1e-ee0b851e87c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4345ce39-4033-4533-bcb2-3b2021ed6e13",
        "cursor": {
          "ref": "4296048c-d4cc-4b2e-b075-5647346836f5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a7fb7aa4-433a-4493-adf2-1144bbea26af"
        },
        "item": {
          "id": "4345ce39-4033-4533-bcb2-3b2021ed6e13",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a6ecd87b-8ab9-4cd7-b0ce-9a37ce8ca7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15867e2c-c4ec-4c1e-ac91-71e8ba544013",
        "cursor": {
          "ref": "b84b4728-299e-4dc2-80bc-70f4e96808e0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "93ad419c-5ece-4162-acbe-411d40f71775"
        },
        "item": {
          "id": "15867e2c-c4ec-4c1e-ac91-71e8ba544013",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d405accb-2221-4a61-84fb-2728d86bbc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195979b6-9c92-4088-a718-5c46bf9b148f",
        "cursor": {
          "ref": "cf4df7bf-a6f0-45f4-b6c0-3834199983e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "afc80b23-c9c8-4e17-8b5b-7f71b936f8f7"
        },
        "item": {
          "id": "195979b6-9c92-4088-a718-5c46bf9b148f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ba38690b-ddfe-4bde-876a-c919eea11352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf80a45-9bf8-4639-a1ab-3ca865e39f46",
        "cursor": {
          "ref": "ded38dde-be27-4c65-bc5b-c2c745f8aadd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e535e377-bb1b-4fec-b8f8-5558fe9fb9d4"
        },
        "item": {
          "id": "3cf80a45-9bf8-4639-a1ab-3ca865e39f46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80beeeb2-fcb9-43fd-920f-a9d05310cc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57e75c-2341-4043-8eb6-e5c469527cf8",
        "cursor": {
          "ref": "c081a5d9-19ac-4e70-9eb7-89bf503d42f6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8313824-fcb5-493d-a3e5-6fb53f096479"
        },
        "item": {
          "id": "5f57e75c-2341-4043-8eb6-e5c469527cf8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "177da5a0-e6ec-497c-b064-22401f80f903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d1bec-a531-4849-954f-7efcd8c42e51",
        "cursor": {
          "ref": "7e7685c0-4c42-402a-a0d5-7000299c214c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c8f29173-63bc-4695-b72f-36db4a07fd44"
        },
        "item": {
          "id": "ed1d1bec-a531-4849-954f-7efcd8c42e51",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0173b588-7eb5-452c-a495-463807873250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c20eb-5e51-4f8b-ad64-8eac7a32d8b0",
        "cursor": {
          "ref": "c6cc45ac-3393-4a75-8656-f11d40932580",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7732174b-3190-490f-aaa6-3b82cebe6c70"
        },
        "item": {
          "id": "ba9c20eb-5e51-4f8b-ad64-8eac7a32d8b0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "80d42a5f-3a20-4b9a-8e88-0e2291544069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e399e86-77dd-45d0-a112-a577ee99c5d1",
        "cursor": {
          "ref": "3b285731-6423-479f-94d7-e37e8a792af4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da7ab8e8-f1ee-4c6c-a901-ddb21de24719"
        },
        "item": {
          "id": "0e399e86-77dd-45d0-a112-a577ee99c5d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "29676eb6-b199-4970-bc82-7dfe4552d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc21774-0243-4423-b5f2-e2b0a3ad4538",
        "cursor": {
          "ref": "5807cebb-e5b3-4a96-9c7d-adeecac1de73",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1022cbf2-bd47-4550-810a-c6a0caf84a36"
        },
        "item": {
          "id": "dcc21774-0243-4423-b5f2-e2b0a3ad4538",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0f7550b4-a7f6-49ba-83ec-c69a92ea326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00defe8c-6dc8-4fcf-8ae6-f0a1e63d4a53",
        "cursor": {
          "ref": "81d6f746-442c-4ccf-936c-4bdd35b7cb6d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a398ff23-9c0a-440a-bebf-ed9012cff469"
        },
        "item": {
          "id": "00defe8c-6dc8-4fcf-8ae6-f0a1e63d4a53",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eba0f4fe-f4df-45b5-a935-2d82a80953bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25551a6d-871c-457b-b094-36b821135a24",
        "cursor": {
          "ref": "8b46de08-fd22-4f13-a714-c503c1df5ca5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a811e18-5ae3-4d5f-aad5-89bd4d089b68"
        },
        "item": {
          "id": "25551a6d-871c-457b-b094-36b821135a24",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8284e76f-14e8-4c99-8cc8-f56609cc436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b545c01-8356-4770-b4cf-72fe7de8f894",
        "cursor": {
          "ref": "984bb455-1f14-4602-bd6f-eb1679c7eeca",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d3f5d7bb-e2b4-4369-a832-85c76af1333a"
        },
        "item": {
          "id": "8b545c01-8356-4770-b4cf-72fe7de8f894",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8bfdc485-9989-47f1-93ec-0ba6f2fe2234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0dbea-cc18-4d21-ae88-2dbfff57923f",
        "cursor": {
          "ref": "ddc13e2e-d4b7-43ba-acc7-870b9cdb6129",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fa8c26d3-0405-4739-8222-b8595e64d608"
        },
        "item": {
          "id": "18a0dbea-cc18-4d21-ae88-2dbfff57923f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a36fbc32-f55b-418d-a5be-14ffb5cf5fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d23d0c-9d61-4a64-842b-d43c0eb33a24",
        "cursor": {
          "ref": "05baef57-9bce-4b9a-9c54-9b364bc71e5f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29a7c564-5eb7-40a3-a02e-c1b1af972376"
        },
        "item": {
          "id": "09d23d0c-9d61-4a64-842b-d43c0eb33a24",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79cf19c9-8daa-41d0-924f-6b542aca58cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90901e60-3f64-4448-b921-4b0c8a1f5f4d",
        "cursor": {
          "ref": "fe30a9ca-6e19-4cc6-8e44-0328d03f821b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a05459ba-c218-4626-ae6d-c222fc7ac1e8"
        },
        "item": {
          "id": "90901e60-3f64-4448-b921-4b0c8a1f5f4d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f8b549e-0fa3-4fa6-a3c4-d8922b56eb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1454b-73bf-400c-b0c4-fb35b29761e3",
        "cursor": {
          "ref": "7feae43d-dcbb-4ccf-a72e-135118853e97",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a9b7c3d0-f7f3-493f-9eaa-5fcc7aebe584"
        },
        "item": {
          "id": "abd1454b-73bf-400c-b0c4-fb35b29761e3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "41de19dd-dcb9-4fb1-bed6-8bffdd98ed53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a160b-d5e9-4a84-ada3-bb7d2fc4577a",
        "cursor": {
          "ref": "a701fe02-4ade-48f5-b680-f9ea731b2eb9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f967eb63-5c97-4974-8fcb-96325ea38d5b"
        },
        "item": {
          "id": "368a160b-d5e9-4a84-ada3-bb7d2fc4577a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b9265213-ec4a-493d-9d0a-2d3e690a5896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0eb9cf-f11e-4ed2-ac37-6d432d62ae34",
        "cursor": {
          "ref": "c437142b-3870-4698-819e-8bfe19196952",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "47648815-21ec-42a4-a35a-1cea18d5f16c"
        },
        "item": {
          "id": "aa0eb9cf-f11e-4ed2-ac37-6d432d62ae34",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0fc71b00-9ae2-4c04-b89a-af48846b43e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f394180a-dfe9-482f-a6d2-222bedd886b5",
        "cursor": {
          "ref": "4eb188f4-dbf9-4d01-866b-511c8d498c96",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5d86bdd2-58a5-4fe0-be5a-b6044d8c5bbc"
        },
        "item": {
          "id": "f394180a-dfe9-482f-a6d2-222bedd886b5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5df83ec4-8931-4393-83bc-c61e1b11d5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703bb1e5-4474-4485-8a53-31286f4bb692",
        "cursor": {
          "ref": "0e7e011e-9029-4dfd-a2c9-9d6ef5810ff0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "256e8454-3d75-497f-af21-8aaa3aab7ce5"
        },
        "item": {
          "id": "703bb1e5-4474-4485-8a53-31286f4bb692",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5e617b4-bec9-44a9-bb56-eb8e6a8c76fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa3cd31-ffc0-4b81-8786-74d4438c38bd",
        "cursor": {
          "ref": "675745a3-a4bd-4263-ab84-9206e3db4ba9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6525353d-db01-4b22-9392-0876e5e22f5c"
        },
        "item": {
          "id": "caa3cd31-ffc0-4b81-8786-74d4438c38bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ea80d07e-e77b-48b9-8aad-98f2627e10a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667f0cf-a634-4889-abaf-d1f9326f00af",
        "cursor": {
          "ref": "c5ef041b-5416-4344-9814-65a04c18d6f6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "afa19cb0-72f5-4948-be94-945027848d0c"
        },
        "item": {
          "id": "f667f0cf-a634-4889-abaf-d1f9326f00af",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "063f81c1-b000-47f0-8424-1597495ce02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cf92c1-42f3-4500-8e94-9f94ed3e72b1",
        "cursor": {
          "ref": "6740a293-ed9b-4917-b02b-3922d3158c8a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d60091e9-9cc7-450c-9825-43a04e3eff65"
        },
        "item": {
          "id": "12cf92c1-42f3-4500-8e94-9f94ed3e72b1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7af7c095-4622-4aaa-8096-ae9d5dcc5a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd3a1bc-b991-41e1-a543-e62d6f8bf94a",
        "cursor": {
          "ref": "bd5a36d1-be07-4338-918f-42141c02108e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4bddf0d9-9a72-4acd-9a9f-06ce12179cb5"
        },
        "item": {
          "id": "1fd3a1bc-b991-41e1-a543-e62d6f8bf94a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "148419fd-c2e2-4cfc-bd58-6248fd9494a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df373d-ad9c-46ff-ad91-ab4788551dfd",
        "cursor": {
          "ref": "2efdbc2d-43bf-4942-92ad-c397ce8c1006",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1d6bf9c8-3c01-4389-a8f7-d39821b363a7"
        },
        "item": {
          "id": "51df373d-ad9c-46ff-ad91-ab4788551dfd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5f096622-e217-4a82-87c8-969c5e0cd145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1e50fb-0c89-46c8-9b6e-cec0de77f1be",
        "cursor": {
          "ref": "574c035b-b3ab-4e81-8dc6-577349bda0a6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6cc0fc46-4c6a-448f-8cbe-465ab534f68b"
        },
        "item": {
          "id": "fd1e50fb-0c89-46c8-9b6e-cec0de77f1be",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "96968e93-a34e-48bb-80cd-54c8f6010455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1b0152-4c08-41a2-a257-8af63ff843b4",
        "cursor": {
          "ref": "2341186a-fad7-49fe-9285-04a80c22b4fb",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8239dc42-4389-4f23-8cad-7729367404f6"
        },
        "item": {
          "id": "ff1b0152-4c08-41a2-a257-8af63ff843b4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a7298ff4-dc06-4c21-a98f-2b6dfccb4497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47e30f7-b561-49cb-b428-7f030d2ef92e",
        "cursor": {
          "ref": "59a1f24c-91bc-4852-817b-9537d747c697",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3c958ac5-0136-48a8-b909-7eabc395fb8d"
        },
        "item": {
          "id": "a47e30f7-b561-49cb-b428-7f030d2ef92e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86f3b509-950d-44e5-9fbb-2ae4e58c7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35efcfa4-79f9-4225-a57a-ea365c5c77e2",
        "cursor": {
          "ref": "5e0207ad-1175-492d-9715-99292515486e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "68a2176a-d025-4d25-abba-01e718a242a0"
        },
        "item": {
          "id": "35efcfa4-79f9-4225-a57a-ea365c5c77e2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd0e01e9-48ad-49fa-838c-2a68bc271f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167723a-f63e-41e2-b55f-cdff0e9676fa",
        "cursor": {
          "ref": "496f6b7d-7ddf-432b-a189-31c5e7b2bd20",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "147c9b65-a1a7-45ec-baa5-40e633ab4dee"
        },
        "item": {
          "id": "f167723a-f63e-41e2-b55f-cdff0e9676fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "47d6bd52-95e7-4a6d-b51b-14bc9ca50730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0dc48-1bf2-4fa3-abbd-f564f5fe2cb8",
        "cursor": {
          "ref": "4938b091-ce22-457a-9720-82286bfc6808",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "942da365-4e23-4588-8b49-000c19484183"
        },
        "item": {
          "id": "23a0dc48-1bf2-4fa3-abbd-f564f5fe2cb8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0e01b1ed-4001-464a-88c8-4f098be60be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f722ce17-7d9d-42a3-acf4-ac673b51f537",
        "cursor": {
          "ref": "abcc1168-24ca-4f59-b9b5-8430f5e743a5",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0df160a7-bfc5-4b3c-b4b0-ec64068050e2"
        },
        "item": {
          "id": "f722ce17-7d9d-42a3-acf4-ac673b51f537",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "97e151dc-d4c0-4d8d-a3ee-bdbbbfb4a6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5456f7-7445-44c7-aee8-29abde654278",
        "cursor": {
          "ref": "32aac906-b2a9-401c-b1a8-52c8babb80bb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "99e0ab15-9565-43e1-a087-b7cf2a050909"
        },
        "item": {
          "id": "3b5456f7-7445-44c7-aee8-29abde654278",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "102304af-2ece-4ab3-95f7-fc6103d6f3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ffb15-ef47-4420-8800-d1106d1f3db1",
        "cursor": {
          "ref": "133cb742-acac-4d07-b47a-0ecaf0b0bddc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8279a5c8-7cf9-4e3f-8867-5ef28995434a"
        },
        "item": {
          "id": "5b3ffb15-ef47-4420-8800-d1106d1f3db1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "389f5f04-b89e-4dc5-b522-826baef280f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16500308-632d-462b-9c98-3816206dbc5c",
        "cursor": {
          "ref": "324df77d-7626-449e-9e0b-0bc124f2b311",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "283d2059-2399-4d07-aa88-08c7927ea740"
        },
        "item": {
          "id": "16500308-632d-462b-9c98-3816206dbc5c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0c444a01-5971-4380-a2b0-c0e55dae97ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945f57d-8cfe-49ec-b1b7-fce18565b960",
        "cursor": {
          "ref": "a3df9159-cd93-49bb-a1da-6ae4136a18dd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "39360e92-644e-4c95-b4a6-b5d186e6c2bf"
        },
        "item": {
          "id": "6945f57d-8cfe-49ec-b1b7-fce18565b960",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "922f9fc8-e96e-4fac-8f13-666e34d9ee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed030509-9ae0-49c9-b0e9-51647789e1a9",
        "cursor": {
          "ref": "6303c9aa-f480-4c1a-83c3-35543717695f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b95ae7ad-17c3-4e54-a25d-8daa12ed8956"
        },
        "item": {
          "id": "ed030509-9ae0-49c9-b0e9-51647789e1a9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3851e186-955a-4c6b-8127-a40752c57d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84674ea-c40e-46cd-a008-df9da92fc6c6",
        "cursor": {
          "ref": "047087b9-40ac-4b78-b030-5e0b8706d685",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8b383392-3c84-4a3a-bb82-834e6a4ab9e9"
        },
        "item": {
          "id": "f84674ea-c40e-46cd-a008-df9da92fc6c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa435ec7-e089-4eb1-82d0-bfa0f26281b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5457c2c7-4473-4643-ba77-f4aefa9e7aad",
        "cursor": {
          "ref": "a8d5cab8-a6b4-4ea4-9c40-0773f4db502d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "466216e1-469e-47d2-ac2a-c6ee2fd03502"
        },
        "item": {
          "id": "5457c2c7-4473-4643-ba77-f4aefa9e7aad",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e4a4bfe1-144d-4a7a-bb32-47a82bf71c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302298b9-ca8f-458f-a671-37dcf21e459f",
        "cursor": {
          "ref": "1a029f0c-7ff7-402b-ab13-1decdd454201",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3f65f7e6-a67f-4d75-9304-e131f73ffc34"
        },
        "item": {
          "id": "302298b9-ca8f-458f-a671-37dcf21e459f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6dedffe7-2f01-4cc3-8841-8a071d62b4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbadc5a-9990-4d9e-a448-27548efc20d5",
        "cursor": {
          "ref": "767fe858-a6ad-4540-a0ff-f3503af553d6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "36ac8007-0359-4abd-b0a2-3a62d32b16e5"
        },
        "item": {
          "id": "7dbadc5a-9990-4d9e-a448-27548efc20d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fd812833-000b-4917-9f03-bd47938b0624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e26eef-6456-46eb-a30f-f2fe7e9a0d98",
        "cursor": {
          "ref": "8eec0400-e688-4060-98e4-4da09b532959",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "78bc339f-1137-4d79-b32c-fb1a80f9e9b8"
        },
        "item": {
          "id": "c2e26eef-6456-46eb-a30f-f2fe7e9a0d98",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3b2379d-84c5-4620-b1d5-2159345ec6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01702405-d36f-435d-bef7-b201876368ba",
        "cursor": {
          "ref": "8a078db5-cec5-4250-b9b8-fcefa81c174b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6532b70c-73a5-4b7c-9d8f-55fa9b7b5757"
        },
        "item": {
          "id": "01702405-d36f-435d-bef7-b201876368ba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bc5b7114-3496-4e19-95dc-24277de93a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d58a769-1072-476d-ad52-1f10f9781a9d",
        "cursor": {
          "ref": "718cea9b-6a6d-4507-852c-17af2148f810",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "382f1759-794c-4f09-b5e0-867e2523d3b8"
        },
        "item": {
          "id": "0d58a769-1072-476d-ad52-1f10f9781a9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1033e434-fe81-4c7d-b2c2-70f9ecc295ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bbb610-22d2-4078-942f-8b542d0cf8d8",
        "cursor": {
          "ref": "fbb8d2d1-a0f9-4af2-b051-f0ce4ee2c3e6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4d035a4f-ac5b-47ab-9291-56e0a7988ec7"
        },
        "item": {
          "id": "29bbb610-22d2-4078-942f-8b542d0cf8d8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d451a90-a97b-45da-8d8c-20cc554212ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a8d1ea-57a8-4f3c-b078-21c926ca6273",
        "cursor": {
          "ref": "481b7fa8-2dde-4dbd-8728-91ec13728053",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "51fc284e-874e-4dea-9ca4-1563020bc46e"
        },
        "item": {
          "id": "f4a8d1ea-57a8-4f3c-b078-21c926ca6273",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f2e4559c-948e-44bf-ad19-da492be77540",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9571a36-b553-47cd-ab5e-eb34725bf3e0",
        "cursor": {
          "ref": "8353763a-2933-450a-a092-6b7739c0b3e3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "87ab0f07-27fe-47e7-a08d-21019b31518f"
        },
        "item": {
          "id": "b9571a36-b553-47cd-ab5e-eb34725bf3e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e51056c-1600-42c6-890e-07a82e8622aa",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "94793c4a-350d-482a-a8c6-eb76c298c6e9",
        "cursor": {
          "ref": "3e24eff4-8668-4030-a34a-d8c908a84c46",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "14d171ab-b309-47b6-bd2f-f1a4b0427262"
        },
        "item": {
          "id": "94793c4a-350d-482a-a8c6-eb76c298c6e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9df9fa95-1bf9-43cc-85a1-4c562d960a48",
          "status": "OK",
          "code": 200,
          "responseTime": 1418,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d9d537-af39-4f23-bd1e-d82334bb0429",
        "cursor": {
          "ref": "defaf61d-f02b-4e6d-8456-7a8a70ce1ccd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3ec3c9f9-851e-4e8c-acaa-12d08e4a3801"
        },
        "item": {
          "id": "65d9d537-af39-4f23-bd1e-d82334bb0429",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7e9a36be-f022-477c-9d34-8e693f21a40b",
          "status": "OK",
          "code": 200,
          "responseTime": 1351,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f663986-e9ed-411f-9a93-130e965bd626",
        "cursor": {
          "ref": "0c00f103-e055-46b7-b672-eb026b49e44d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa9c5dba-5d05-48ab-bb2f-34eca98bb769"
        },
        "item": {
          "id": "0f663986-e9ed-411f-9a93-130e965bd626",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "91311ea3-76a2-4d0e-be5f-772122c4acc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f663986-e9ed-411f-9a93-130e965bd626",
        "cursor": {
          "ref": "0c00f103-e055-46b7-b672-eb026b49e44d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa9c5dba-5d05-48ab-bb2f-34eca98bb769"
        },
        "item": {
          "id": "0f663986-e9ed-411f-9a93-130e965bd626",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "91311ea3-76a2-4d0e-be5f-772122c4acc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92866b2a-9167-4ba3-b612-efea9349cc5a",
        "cursor": {
          "ref": "0b30ddf8-d923-4323-b688-12f5c6d05fff",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38a5b013-b596-4dcd-a2e6-6f49a4ee9bf5"
        },
        "item": {
          "id": "92866b2a-9167-4ba3-b612-efea9349cc5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "291aa4d4-4804-49dd-8df9-ad593cfbb5b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1cbdf-aba1-4793-91a7-1c606d41dea0",
        "cursor": {
          "ref": "b64431e5-13d1-4926-a052-8f1a102b5e71",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ae8aabb7-63aa-4d1a-85de-4f4674f01aab"
        },
        "item": {
          "id": "92f1cbdf-aba1-4793-91a7-1c606d41dea0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83ac9efd-d58d-4d2c-bba6-d1d5e8a5270e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}