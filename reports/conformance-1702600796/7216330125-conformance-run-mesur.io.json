{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c4afe8b7-f9c7-4409-baa7-ad6951255f1f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e263e7ae-b46c-4cc6-a1ff-e751b9c9acf2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76e8188b-f36f-440e-9d9d-fc7c99b5054c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85179439-9d30-4257-a711-85f87b9b0d2f"
                }
              }
            ]
          },
          {
            "id": "2f6a0eac-f3fb-4ae9-93f5-bed1c52d9f12",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e54d95b-ae47-4b00-9ae1-7465fb130149",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "76b8765c-61b7-42ad-97f0-6b5f81ac70c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "33fe4f18-2ba6-4fa8-bba1-84a99f913667",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "35e0aa56-3a18-4162-9e6f-05ed01edef49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "131629f1-ecc7-4ec6-af38-d37f20987f9c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c60a180d-1939-4f9b-8610-bde9fed4a1c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6793edff-316c-4e45-b027-72b3d46420fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff41567d-341c-482b-a043-cc84d9291f26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7381f2f-7163-4c54-8aff-547686c62f8d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d06aaf97-4fb9-4de8-b583-ba1eaa7f78a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c298c35f-4cd2-4117-a5ee-31bb4f5d17ea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f242e088-87ec-48f2-a015-d5e2b6bcb09b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "33243898-4600-4239-a6f8-571b97e7886d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c0b76bb-2422-4fa7-b772-d32ea797f283",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "576cf7cf-ac07-48b7-8cea-95c0cda571dd"
            }
          }
        ]
      },
      {
        "id": "37d0f921-887a-4c4b-bf0e-20edaf0e3d33",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e183f16-7c0b-4166-b2ce-052ce4009ab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64654aba-436b-47cc-a5c3-f2ac44452596",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abd9f21c-df53-4544-8355-ae980684aed9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375ce0ca-6f82-488c-8205-d24f4cbeff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53112b6b-e415-4b26-99ce-301f6af6f7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29598d2b-3439-4160-acd5-d200ab781177",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9d4459-26fe-4aa3-b5d1-cb4c3aeed7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e36181b-fa11-4f65-afb3-a8048e5b8b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a1f8b-b1fb-4264-b51f-7d61ea88783b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1518277-aecd-4ef3-9952-ba27c810be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "199f51e2-3c22-4d46-bc12-2a848f032dd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9a0b580-704e-4d77-8859-2e269ac93c7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d87bfdf-2016-4ba7-8e58-a11ed5912ade",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf6541-5ef8-4ea3-8dd2-e6ce651e6084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71e5a09a-11d1-44e2-b15e-2e0cc436e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121ac800-bf52-42e3-b4ea-c079cb15b49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56afec2-33ea-4a95-98b1-546de8adbd70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce7fdde3-e10c-4a00-854b-19d62764086f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d3903cf-5928-4d80-92ac-c839d067562d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41843a6f-a25d-4cbe-88b5-3a4a3da6660e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "66493ef6-eae4-42c8-a9a4-8772ce5bc1d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8a0c1a2-e67f-4ac9-884b-3c6a3f4b0395",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8aca35ff-4174-4d09-98be-28025ba51413"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bb22c30-55f3-4377-aac9-a3a3a9147b13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16b6533c-9708-4a89-923a-98e278992de1"
            }
          }
        ]
      },
      {
        "id": "bddc279f-8011-4f16-a6a3-b11aadd296fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2cee5cd9-4173-4be7-8472-5e6ffecfa97b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57c3b9cd-d62d-4783-9e00-6db49338f5d2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ec2ff4c4-e52e-4654-8b38-758001496086",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f068fa80-9dba-4ba4-b83c-88d85d6d627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b03bb50-1376-4277-bc35-e468cd0e2272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad60f3b8-cc44-4dc4-ab02-8272bbd0922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9d880f-1dfb-47f1-9a5f-f1a960278aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147cfb72-bf53-479c-ae22-977734030362",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8715ec20-dabb-4004-a4cd-f18418d755e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e23da5-0415-4a65-9016-f0c842c1e1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75233ad-ad50-4db5-bb7c-56930d8bd1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5d3b46-ab0d-4ee7-b9bc-87e597dd30db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627213df-e8c8-4b2c-bedf-92c90a40d374",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d0cec-24ed-4125-b47d-24ea985111dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35559f50-3789-4049-aa06-e179e79e5432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79f7c1c-d26d-4e92-bc50-6e12e69722db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5afd20f-a421-497e-9548-98cda4a84460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba8c5dc-1ab6-4f4e-a8df-b65df366fe0c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863c7d50-0e3e-4f1a-9bd8-486298b175fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bb363b-42f1-420d-8cb1-cc59d1f1e173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f68c5d5-7507-4875-b157-683d41bd483d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58cc01f6-b5d1-47ce-8207-18259c632603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184a9a25-b15e-48ea-910a-ea58e5470f82",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c9994-ab2c-4d30-89d8-d40e91bdff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357436ab-43b7-45b3-91ee-e3a61cddb922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eb1d8a-48e6-41f2-bc29-24dfdf4be81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24007a68-4c55-4b82-ab42-3f85a2761cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbb04fa-0d94-4cb4-b029-cec811e34820",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7462ba-d584-4665-8990-dedd594d2c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37827bb1-0e26-49c7-b8db-7204f143168c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7c17fd-d9be-473e-9287-5c48787014af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "860efd42-5dfa-48d2-85f2-945f26612569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330dc9c2-ffb3-43d4-897a-45805f2bbdf9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02e929-0c0e-4c83-ae66-d739d302c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea0d8b3-220c-4b50-98df-c6684793537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db853deb-c1f4-4749-8bd3-70cbb9a3588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fef007b-7d65-4afb-b73b-fddfcd60ae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df0a174-3c24-484b-b7f6-f1adb1317716",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d753b69-01db-42be-a187-70ea3b22f748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedf94a7-77ea-4225-86ec-84a4a4c26f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16adf2b-eb2f-4ffc-8000-d9142578c753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c262cd56-2ef2-488f-8da1-62e349685db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402710ca-f023-4800-a7b0-470b9ba66a1a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1399d448-f956-4c18-a096-e1417c39f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6880a1-99cc-48a1-a016-235b37af9249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f8541d-c6ad-417b-b46f-87511b2ef184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ac34075-fa3f-464c-a157-776ee5796f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d518c19-a894-42b8-85cb-93f7e81a85e5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa24e664-e68e-43fd-997c-67a29e213cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaf468d-b968-4e3b-9079-76a61eac94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd2e51-ad04-477b-b48d-aacdaa68c7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8eba379-4b47-4a5a-b8fb-3b071e74139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0f675-cf4f-4c06-8c3c-452a1c5404a4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec76d175-622a-4357-90ef-9d2bd559ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed089a6-ed2f-4501-8f40-5f81a4f0b0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b20c3d-66a2-4373-8e24-ec1224f97715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ea8196-fdf3-4986-ac1b-67ac5698d795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ea9552-6c36-4b4b-9e74-8ccbf2520461",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a827a36-91a9-48f0-8ed2-ebe4cd92d039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdedbd14-d28e-4865-86c7-db18f3ae6127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daa2292-fdf4-4ca9-b08e-74da35cb6751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d95597d4-dcc1-486d-9531-bd716f755d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb76e80-0d9d-4c2b-a1f4-059adbcde172",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc36a21-8438-4966-8a1c-4f8f840b716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6de2bb-75f8-4b90-b61f-c0300adcc556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6d7ac1-48e1-41f6-9fef-63c0eb9c5198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4ba7765-2d68-447e-a981-7165502d13ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162502f1-a966-44bd-b4a5-6be6934ca442",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135c76b5-0962-40e3-910f-19265e9f25e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7ec9c6-f54d-4349-a75a-55ff3ad78f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7dc906-5538-4b18-8e6f-0e113772a739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e259ce4c-ed9d-4591-b105-8441cbe677c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a54e4f-eeb4-47f1-84a3-96600498292b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d1fd5-a6e9-4869-95ab-5ea7b9eccd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097d815e-9797-4277-9f30-5d75c766970a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019c874c-b9d3-49d9-b877-f82a4b5816a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "989b24e1-f709-408c-b384-33ddec9e6ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906d4de9-1f98-40e9-8c22-23313fd23722",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e07a194-6454-493f-9ee4-20ddb0bacd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c50ad2-5786-440c-bdc1-2e36b4af88bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f895cd-e5b2-4e05-b11f-551e6e1fb68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4373f854-d17f-4e05-bf99-0ceda919cefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66a9d3a-d66e-4ccf-8da7-f97c2e4b8941",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3f6347-f91e-43c7-acd0-f806f3560460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07fc889-9921-43f3-a89c-856bbef39a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f02162-24ef-48f3-bd7d-67ca182d4a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8acf9c38-971f-4ccf-930a-e7651c09453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002f2904-bf27-47b4-ae0b-faa08a0c74ea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee01bcb-d658-42d4-b58f-f86af9d6aab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d808c3-7c36-44bc-b2fd-3119cdf8b5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e3473-6113-4c7c-a597-d75c88898819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2574b880-9617-499a-979c-d3f98e8a5eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d1eec-47c7-4389-9160-c43a4a573af1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2a008-bd45-4051-a608-e8a776e02b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6e4c80-c6f7-457f-8304-b075fee074cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc95ae1-b35f-4e10-8064-b298af00fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "078e32d6-48db-40c6-bfde-379d016e5aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc039a9-8b3b-4e50-9d94-8f1e238ac243",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad237ae-73db-4104-8cf2-2a2b7ad34588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8039168b-c66b-41c1-a88f-9fdc46ea88a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a1a696-3fdc-4d42-8944-c183bf116323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "630ebe55-16f5-4a56-9899-fb549b6b9a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e8e3b-bed6-4762-89c6-6608211472e7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8b2c5-87fe-46e6-8b30-49adac2ddefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fa3fc9-e920-4928-9b71-c2c5b5427482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51de75c8-b40a-4853-b263-60f2e6f4e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ee2fa0-b370-4205-8cf7-78e2cddb8534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5153561-4774-4a2d-8d6f-b66d3d45bd2a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a178ef-d001-4489-8678-aa932aacaf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c1f026-112f-4ec6-90ff-010ed21a8982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37537991-338d-482e-8fd5-60e0f594c94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a45105f-d1bb-4313-842c-1636de382f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd735bc-a06a-41a0-a152-a249fb5b83fc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c203c4f9-0b66-47d1-a99a-25c63de2824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fdd9f3-8155-42f7-a938-d3d424f9e576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd66a17-0d51-4842-9540-ada3a9aa567a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c68ba9b-8eb0-480b-8ca8-1ef6901196b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c886658c-2d08-4c69-b11d-008553029cf5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad7464-a8e8-4eb6-9553-aca54fc524c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb48418-6595-4a96-9ec4-98dcd45d4d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc8af4-e18c-453b-9ec0-b7c76630307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "245997be-156a-4c26-a375-ab0bb8904a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fd5b84-7101-4b7e-bf4e-7044ce220c4e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053027a1-6a6b-4ae6-bf01-2c4ec25621b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dfc72d-dc38-4a49-8244-fc5f61e51c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfb436f-58f2-4058-b28f-ad928e1ed757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d550231d-0502-4ed4-9aa3-e74452a15b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a602b-b254-4cf8-b9ca-b1671c7f9df9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f60ec-6582-43c5-adde-9284cc8b60ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b1657e-e177-40a2-9f66-92e45cdf631e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02764a20-0d87-4a92-bbf1-fb0f9249febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac62e2e4-c83b-44ab-be23-e6a1d6996536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcf2452-6306-4145-b16f-e2dfa4b528d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ccef77-fd07-48ec-97ee-ecfd0446847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c192b5b1-6ec0-45f6-9a48-482ec28554b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfef8af-cbb2-4d05-acde-8ec1c36a3d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "153c624e-290f-42e9-b701-452479183f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa31cce7-4c4d-40da-b100-4badc66fc9b9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144a6303-315c-41ac-8080-9d060295e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cef191-b2b6-4918-99c1-f43e6feb7d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdb1954-1786-4fcb-9f3b-26ebc37f773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a23c2d4-c845-4566-9db7-7f7a0188660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d77c03-7c2b-4331-a457-b399f9de0201",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e1b897-0a24-4da4-ae13-b7db16468cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6270319-eda6-4289-b88d-15537a6023a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9832bc4-a35c-468a-ae9e-81f377a35363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70a4157a-3fc0-4a63-a577-e9b7cc3529e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89239da7-3975-4dee-826d-a5f823ec793d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c693ae9b-2cb8-4ba3-92ce-610214170960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01f553c-0662-4977-9cb7-1a5ad6c421fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6270c4d9-d454-4de0-b01f-99db3ade0013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7b1096-8740-4642-a1a3-7cd3f0ccef8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487d35f9-df19-405d-b6e3-0e6cedf7c112",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b780509-cb89-45c5-9592-41a17988852b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fee48b7-4d3c-42b7-9b52-436a44c64e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12759c62-e533-4c86-afde-2bde682fdf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfc5f9e-db67-4f5a-9810-ba6576c7827f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d377b96-04ed-4749-a69c-dec242ace54c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b78134-a3f8-4e08-8678-3e4a41668760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb61f57-526d-4d87-99f7-01b278a63d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce329064-9326-4524-aa86-8e4eb0e20de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90e7641-6e37-41f6-9815-f4103bdfccd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f734c7-6477-497c-8827-8ccc8ab71433",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5553cc1-a158-459c-9a35-1758516fcbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4681a537-ba95-4689-a438-dc43a7836d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aee2e9-72dc-4a56-ac4f-8be27dae3c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80950a05-8633-407e-93b2-0542e2f21a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c01520-a92a-4391-af0f-d71ea0f221f6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd57c75-0a7b-4eda-9bfb-7cdf5c9668e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64eb357-997c-43a4-8c57-baee1c9b188f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7f55a3-b385-494e-83fc-668a725a9f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87de9c7-ec41-48ff-843f-530ae6733315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b875fa82-7359-4abd-8229-27caf5e67d93",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b911d1-6c7c-4f85-926e-866a6dc08cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e3fefb-6475-4895-b003-d3c3e8b659af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c8cb2a-f70a-4abb-aa1e-9a908c188cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b71e03d-7edb-411b-92b7-e1eb1a9b62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c8f834-667d-4cc2-ba89-87a1538757f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64485261-88f6-41d7-95c5-2a63e25e51bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd7a4c7d-1121-433a-b694-b0994643c6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e56b48a-4c61-41b6-b83a-0e0b3ed8795e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed3a000-2040-4e67-9680-103a3fa9748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8ecdde-f3f9-4c12-8442-4cf060abeaea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b237f1f-c0da-4df1-aabb-a1afbb4e1f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4596907f-3bdf-4bda-bafa-34f680f89155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158a5e30-c3e1-451b-9fc6-8b6b7f4fcc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d22cd545-8ea1-4202-86a9-ddb6a1e62ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1cbea5-f515-47f1-89d7-c3575dd35c32",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13bf01b-8317-401f-91c1-526373208476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9afd4a3-f98c-415d-8da0-14d7e998bc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d64b076-c41f-4ea6-bf32-5e73ee5ac197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c693f6-da51-40e6-97b3-e77ab8aee821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b415df6-593e-4cd0-ac49-994fb505d4b2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75d2595-0cb0-47e4-ab1d-441c81c379dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422086d8-2d64-436b-a896-54507aebebfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649a5aa6-286e-47bf-bf12-7ad51d2ff636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc711a0-b01f-49e1-9153-833bc5e363e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6088778-b589-4875-a029-b089888a4048",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db064868-0232-439a-aec1-3fdb698731f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5f761d-141c-4bd0-acd3-2ac1a456defe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903684cc-fdf0-45aa-a912-daec0e666388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd50027-242e-4ec0-8e32-88d9f021ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6511ec73-df3d-4f3b-ae8b-6e4f2ef9f5ab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3d1264-04fa-4552-a256-a414953f517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c23ce0c-70ff-4bc2-bf04-1a1864feaf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4be5f-4b94-4c1c-bfc3-55fe8bff89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "446ccb1a-ffc3-45ae-9290-9812f8ceb996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9c45ef-cfda-4763-a499-41d93d50fbff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6eb13e-b7df-423f-9e14-05550bf9b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6f208a-7b9f-42ad-8066-1fa5a49850ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96623ac-4efb-4929-baaa-52d50881e941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32f9c395-f860-462b-ac26-9da67f9b67d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebbd17e-7637-4ab4-931d-2316b0057d7b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc20d23-7057-4336-9d7e-2bbb3a5e76b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85841d23-8ed9-4e2d-b23d-aa1f6c707cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd14d3-0399-46b4-9c2d-daf1a016c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37cedde6-42bf-4bff-ad57-b5378a2a0df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8301a68-ed95-452f-a245-b455ab1159b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8a4be9-55f8-49d1-9a68-49d269fb2318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed1ae82-346b-4d86-b64b-0acd4768b219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239f692d-6269-4a05-a4cb-1defbf92de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "081be30d-2047-4b3e-b3c4-517e61da9e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e04752-1498-4fa4-8ee4-52d35880035b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f8c154-823a-4de0-a6e9-60355351d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92cdd45-a4dd-423f-8530-ea222afc495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d2141c-e89d-4610-a9c7-31858ae9b801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fd8a03-ff3e-44b9-8e80-23e25eefa596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3aa418-b99a-4f81-84c3-16b602f607bf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39861428-4d17-47ce-9326-f5bcea2a5cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4395fd87-80d1-4fec-8dea-95a01caa4dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50624d2-0075-46bd-b425-231d349e6c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12646ee9-aabe-44ec-8af7-f668395bf14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e4d658-5ddd-44ee-828c-ab97eaec0df4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccc63de-135a-4b85-a2b7-fa23c7b42de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ba9f61-ea7b-44d3-90ab-321405494323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5650a24-6b29-438b-a1dd-3bc16e82cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f84fa4-a023-46cd-83ac-c03e4d54b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafb3f6d-78c5-4d72-93d2-b2e8d511cb09",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9c934d-3a81-40d7-bf19-4fbe6d964236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e96b85-1950-4c32-bee4-9f1ca1c7d989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1ccb5c-4762-4d82-8a46-39f98bed797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e9d75d-5eba-4e4e-a4f4-1df5d429e310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038b4187-eaad-409a-aa8b-142b04edad9d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7591dd-a1eb-4eeb-90b9-733d3ca8c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8fd744-1c99-48f6-b28a-9988a05950bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea516916-7a0f-4ec0-a9c4-d3313f099ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2270d9bc-0f6d-46a3-bfb2-34477b75603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140c8c29-1ee9-43ee-ba76-bca034e71583",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c466eec0-0196-411d-ae3a-9a3057f3d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e366816-e253-4075-bbd5-a0d0ea0bf7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b51fa7-7470-4221-b9a8-88318c825f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1272f00-d398-49ce-8daa-9caf4e994573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51655e1e-e70e-4a0f-b6db-724a755d89fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1203a3-3f91-45af-8b5d-d21cbefb182c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaa3b43-9028-4f5d-872d-d5676272d939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4189b34-af91-41f4-be63-63b2ced378f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae92684-35ef-43f2-8fed-413c42b50e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d0cd43-c871-402d-870d-660aa954c176",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bda5a1-e874-4b0e-868e-e62077f0672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9f52d9-29a1-4bd4-af67-a5b5bec9c47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1054e39-9a20-4994-978c-3ad43bc65eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be65c609-bdd9-445d-8df7-5b48ecd9bfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58254a59-fdb3-43de-a8fe-d3a39a1ea5bc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798fbdd9-abf2-4d3a-93aa-50c200fa8383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30af0dc0-6461-483e-8159-139470812ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368a05e1-2e50-48ea-b535-d851af4fa4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4008d693-f3c0-4d0a-9ebb-22e37e52e580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5e4b8f-5ae7-4a48-b021-5e93ba4c2632",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472a8ef-49bf-4039-b1c5-2351b4cfd996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2611face-f1ab-4c4e-b248-947c2d106e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a66f42f-71bc-455d-94b5-562a40b506e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ff2017-e1f5-439b-9358-ca7d99b6f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8817f186-e7ab-4c64-853e-f9f0111731fd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e53ebc3-b94c-4f4a-9d5c-b4fe846db6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acccfbc9-466b-4c5b-bb55-252aa2b24470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1e8557-ea7b-4d3d-9f46-74f1c4bcede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c3187f-bfa2-4284-9800-035276bec375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519229a2-28f3-418e-b67e-2579f4f2babf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86c4b93-5aa6-4f8f-b61a-ab76d8a983cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5134b185-eeff-4db0-9fcd-9f291803bd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e596c612-4547-4006-b502-90734c22272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9d911548-471b-46f2-a441-ebc0c32a6606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17b24e0-8bb5-4b83-bf87-748a6c231e3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9598f9b-9968-4cea-8c65-a3fa39e5b612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8ff4be-9f5d-4bf1-a581-d9c7d66bc732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7309f723-bfb4-493c-bd80-93115782efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d245ebef-62ec-4e6c-95b4-c9e09d78b63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eee77e-2032-41d0-bfdf-788020786e66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde5d4dd-e764-4235-9a5f-e6b4cb3386ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87703c10-75af-4de6-9872-fd0bef43012c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db1a3f-e17a-4e4f-b506-eac5b8a2da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d40120-8ee1-4d73-8566-0a3bf551a087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4c5f24-8bb1-45bd-acbf-90bac5e19e97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f0f039-0109-42fb-a20b-8fa25c40a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f5a930-e1ea-4101-a39b-5970fee3b8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49804caf-f307-4aef-bac5-f8d426daf4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "353027ec-1906-45bb-b50e-b91de8076ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499efeb-976b-479d-a515-ea4539394dd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c90b81-d8fd-43a4-828f-ded9765c9622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0e7d0f-e80f-413f-8084-8103fc62674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e56205a-313e-491d-9d05-c64de6b547d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85a03801-7f8d-4aca-b7e3-3625203d708b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bb2e87-e56e-4ca2-949b-39f7902996ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a7cc80-3fb1-478f-be65-59641973ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824aa077-1244-4b5c-b602-d49b29788664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3884ca3-13ff-44f9-a4d2-360a45072a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e368c8-45fc-4947-b2aa-3f4879936b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67647370-e26d-470a-9f86-a79c7ed56ed0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd923a1-2f69-48b4-b339-6cb6aee09846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873c4e11-df58-4ab8-a600-ed723aba74db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63452e0f-57ff-48b0-9c48-b0414e752cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8b7451-9e66-4279-b2bd-ca37fb6ab247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189841bb-7e68-4614-b932-605b62b54114",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32c7fb5-1b9c-486b-9bc9-e139c393c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9b0843-a2eb-45a8-8157-107b13c1e6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a91e70-d1da-4e2c-9bd9-ea9c885c6268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18dafb5a-4cd4-46cb-a26e-ed091e280865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867e64f6-f352-4284-9d23-b43572788242",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb43374-fb76-4314-a581-cf30a37d37ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e427420e-9064-455a-8f6f-9dca6ca93c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9035ed4d-2e04-4a90-8b07-b207b6021e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2a9775-e139-4d30-8eea-c842005e3591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f73750-0a13-4ed2-9f46-55ea70f307fe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b2aea7-df9c-4c01-9307-80d6b082aca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b836d7-280c-4dbd-b8e5-f41222da7ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1c54be-d5f9-4ac7-b787-e6666b06a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "100d5e18-1d02-4c41-aecd-992e0f238ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae8fd84-9383-4a50-a6de-c1b7ab78ed2f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d8803-f3b2-4988-b152-e0148759203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19d293b-f29a-4699-8516-93bd5e12a9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe422ace-bd5d-4d9c-b5ad-b38eab8fb1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed1f196-c5e7-4ac1-9016-29fe7f0f6349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917d0094-f7c0-4e80-94df-c1dac064f0b3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b7a20-8b75-4738-aedd-1e6b64eb4a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba96682-5b96-4bd3-beef-ea0a461508a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079e4f8c-63d0-4b93-ac77-458197b8a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be29b5df-2752-41a0-bf74-2b9746ca24fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300fcdbc-18cf-403f-b197-0eefaa5fe330",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb13234d-c203-4c69-892f-5504b9d8a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b402ea03-a842-4d20-ab19-66a9d1fb323f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5af28f7-461c-4db7-86fb-8758048c813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde89fb6-9b06-46cf-90fe-45e349de007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ff8b1-13db-47d4-9e89-3dd350f1c04a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7457d166-db23-435b-a82d-a0469aaa95b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8751f8b6-5774-4589-8476-ef3fbba83499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e64df9-3a18-4b56-9d5b-057b99d5720f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3f518f-e84f-4fba-b134-1fb6a29c4575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2e7b85-618a-414f-9e91-841c799dd1ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9001190e-e8f4-4750-bb46-e04d74cd73ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f83fd7-e7db-4972-a192-22a3e1bf832a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a08791-fc3f-4d86-a3c7-5de62b2841a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d0f1d2-6449-4802-ae7e-5873592197ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b11365-3830-47dd-a73d-aa39c66324cf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b0533c-7efb-4232-ac01-2b0f684f6fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74756bb-a875-4458-9ee6-d6558333549d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aa09dc-8d42-4d73-93e7-b5407a39b9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee05f94-3037-4a8e-87ad-7ae328f1cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8363927c-87f3-4a1a-93f9-a6da16e3608e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe5dc83-5561-48e7-bf05-f14a90d8fa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ebcd85-aaad-41c8-9ecf-d503766db7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d79717-b0f3-47d4-a34a-698910f1fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "606a47a6-1366-40ac-8ac8-9f6350e102ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d87276-efc4-410d-8ce4-0c71c30416e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c9e49-3612-4e25-9abd-6be68c2d77ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22f9366-9d9c-4943-8cc4-0ec515138759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c183659d-ae45-4480-b522-65466e9b59c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd625e8-137b-4c36-bd4d-98e79d86740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19a422-4895-44b2-998f-7d816f24244b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d181f-abc6-41e2-ac1e-c87bd346451e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8372fa70-efb1-415b-b4be-f61e9f95604f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b029a90d-e9b6-4df2-b7c0-9404164ecb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54328624-976b-4aae-925c-3fb357178f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0df6d8-0187-4fda-bd7a-240fc6346ce9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c84c66-556c-4352-a833-dbdf6c3ab466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79e835e-9acc-4531-a7cc-7f1244ead09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92160924-8b26-4862-9131-b4991be9cd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d83d88-e77b-4117-92e7-d822e56d14bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b465a09-1216-4cc4-91a3-f233791d5400",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2591417e-4a9f-4c45-b28d-ef520969cfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98b37a4-edec-4f0b-a76f-81c8850cb368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb1855a-5c2e-4ba9-b180-9f4f3b061da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4082f5-4bf0-43d5-9e1a-4fee955f29ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f60b68-cbac-459c-9d18-9451466c1c12",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eda26e-1ced-4f67-86a6-755bb302f5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebe2368-a124-4565-bf1d-4d1fb688a8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae4f06-0265-4002-84a7-99c0ab229b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a41013e8-62e1-417a-96e5-08b17f57db16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b94b79-838f-4e59-b9d3-b9bd470a0aa6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611d33dd-10d4-4c97-80c9-2b792dcb0302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89679064-feec-47ed-a95c-e78b28333845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3af656-9998-4281-b53a-14ba65c1ca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91254bfc-65e3-4078-ba4e-ea6ac715a83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34278b55-a00e-432d-a679-0441c11b65b9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad51368-be00-4f87-83e7-f16cb271db7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8346794-30f3-40c2-b58d-d6f77cb5b992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2226772-6dc2-4d62-a95b-fd0f5f38b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af308a98-d5e8-448b-b0ed-8d6e0beb283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa534b66-30d8-4ab1-85ec-a8661988e9c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f97508f-6093-4d8a-b82e-94ded2b328a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e5bc47-d9b8-495e-8014-c45bf2ab0319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac392965-7bea-41fa-a9ff-50ef7a454261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c64d5252-d271-4da5-953b-647693b0ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106bdc54-c821-4393-ad06-d57ee9692c4e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb23e31-60a0-4eba-931a-ec30548e412b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5d3665-0dd3-4410-80f1-12f8cd064e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f088c1a6-61be-4d6d-92ac-5750e89be118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d409ae35-cda6-41c5-81c7-5bf30211e867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b756ed6e-6b64-4b2b-bc84-1e192e41d3d6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8104b8b7-ae82-4946-9a1f-6fea589469d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50d2d7e-2b3f-4913-a430-888bf90ed5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2970e232-029f-450d-9e17-13fb465a80fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b019982-3009-4db0-973c-001d037f73c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34462450-174a-454b-845e-03e0cf13f170",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09767c24-3481-4de4-908b-d6679605977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed9345-6440-4a28-86dc-0cab4f55d4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ec58cb-41a5-441f-b699-ca26af8f2a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a80ac7-4254-439f-bfa7-1903d319ef30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afc0229-2cbe-412d-b067-5563f9d8bcd3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71945351-6459-4434-9836-47a3d454fdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d63763-32ef-4dc6-a70c-9d34fefcd1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f410ae-f9a7-4cd4-a89f-316425351bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3308d1ca-c307-4805-9303-31315063c247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544f9cb5-67c7-4d55-b418-91958f6846ad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5753d76-8892-4fd0-bf61-faaa22ba9e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfb1c00-ae3e-415c-84fa-7aaef4172d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146ca7fe-0891-4e09-9e8c-f18df4cc2ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c68cb186-6c32-44cf-8ee2-f7ae82fb1364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe6f549-f2ec-4764-96e1-38ce3900c719",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617b38e9-268c-4bf4-9db5-5cad6d35a229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8801a4b8-81fc-45e4-9c97-4bff58868e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ccbcc3-29f9-45ef-ac71-675c513050d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd871c8b-d23e-4a53-8dd9-32656ba8d266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a0c05-0063-4248-add7-b92d894b4148",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd8f24e-a510-4712-9f35-4c6cc8018a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec0f18b-7986-402e-96c3-91c38348ad1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daa86ef-51ab-4ca3-99a1-6a711954f0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e83ba8b1-35fc-4553-a6d9-174230544d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bab000-9c72-4ab9-aa4b-700906e41337",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69e3635-e729-41ee-af13-d661a02d2dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383da90b-57e9-4a48-9cc1-3332423168b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c9f01-e0f3-4c83-938d-fba53c3bfd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16c5cdef-f165-45a6-8f97-ed035e2c2a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e596f9dc-3b91-48eb-aa29-bf61edb890c3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c5d62-13f9-450f-93fd-93cae334a476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ca07ae-454b-43e5-8379-985b23a08201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5f6f0d-3d7c-4e8c-9119-ac93205d351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c543557-77fe-4e72-892c-2446cb93e5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb1366f-b18f-48f8-99e9-937df07a9362",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89277d6c-ba44-4da7-99f8-81576042ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1b3493-bf56-4761-a971-c34ad714befc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd53a47c-e578-4e3d-928b-e55703fe0387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e23564dd-8b9e-47e8-8379-b7d5e37b1b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2f02f5-1cca-4bca-9ff1-5e347ca5c4b0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b63d3a-9c20-4fdc-be22-30040f138a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687269b5-8119-4520-bff7-0cf696ac8649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ff284-dcd4-4308-862c-9e6424af8728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7357a7e7-b0e7-4960-bdb0-c29a6c4d1208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff256b0b-ac8d-485f-9058-24a01fe7b412",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5fc599-b6ec-4123-97ce-8458c5a83faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f83cbf60-0581-4143-90ea-3bef8359c500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19af636-91a7-47f3-8181-4e175ee35015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0877efb-e0fa-4599-9deb-9dede95df772"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a4c2bc8-ae93-4ee8-b638-6cb3b7b4d328",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56d5bf24-8c30-4903-b5b2-cbdf9652305a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe247da-55d5-46bb-bcb9-2d94996478d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc5fefb9-f6ac-4715-9a9d-7e7c2d0ddc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9914ceba-9c17-428d-891b-781945a1811a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dd63722-ad49-45cb-b4fa-71d3b8177727"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baae0489-c7bd-487b-a479-fa14a122bc3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f03a8a46-c580-4287-a0b3-496bc2fe929c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1702d54-c7ac-4a11-ad13-3e486bc3b3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51f414d0-8b24-4833-bc98-ee09b745170b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "940fcb95-812b-4ab6-a4d5-2d3fa3f52726",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6134dd9e-d2fa-4597-9eb9-135c437a5b81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dfb6f88-2c72-4106-876f-3a3036ee983b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6763c7f0-e819-4efd-9fe4-0e1c349f845b"
                }
              }
            ]
          },
          {
            "id": "5a64f761-b087-4854-bc5d-c76a946b6b44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90e9a930-3199-472e-824c-52879a5152f9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "382aae80-3ce1-4ff2-8f41-961e4f60b3d7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8e1e43-3672-4ef1-a6cb-b34e15ffd877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "428eaf92-ad87-4fd3-a1b5-2023ea2ea617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d7733-0cd1-4b31-b16a-f416134a1c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eef142-0621-4b96-87ea-3eb285b2f612"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "512c5c16-7733-4547-a675-f3ab41423a96",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a4a45f3-cb16-4232-8c60-eef30875e2b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40d86583-15ed-47c8-be22-84804d67aedf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d04e37ce-f598-4dce-8a7d-37e0de14a3ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27e9f5cd-f072-4bf2-9831-acd3cd327c77"
                    }
                  }
                ]
              },
              {
                "id": "ae9f6881-b5a9-4bbe-ba3b-4b35f6075d01",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb03a4bc-e57b-4dd6-8fda-2737dc7bd794",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92b0e8f4-e7bb-42cd-808e-b684628b5ede"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a3142f3-401f-4558-b5f6-18098456d182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5930e2a5-fc36-4363-9260-70d7e3d915cb"
                    }
                  }
                ]
              },
              {
                "id": "96c5210e-3578-48a2-936a-227da8ffd6ab",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f7f9a0f-1d39-4a82-9892-da8a672f70aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "216d8498-93bb-44ba-bb2f-8aa12b27b920"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "132b823f-f8a0-4633-807b-6636831ffe60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a20d2485-ff67-4091-95fc-4ac85dfc9407"
                    }
                  }
                ]
              },
              {
                "id": "130dfaed-f6fb-4975-9c2f-b4a819053b98",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cea3de9-7ee7-402f-9e64-75249bfa134b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6041bf35-6df0-4357-9d77-af700b38e663"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75689881-ab10-4981-9486-38685e982425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4ae4cc4d-b461-4b8f-92e8-d03372c4fa3f"
                    }
                  }
                ]
              },
              {
                "id": "6e8473b1-f5f6-4fdc-8f12-f52a114c901d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d722d6df-3326-4f31-91d1-3d0713ada324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62cc530e-4736-453c-972a-972739d5db01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e123736-178a-4b60-8818-b211dd489500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5d342e9-6056-41e1-a509-28c173e0623d"
                    }
                  }
                ]
              },
              {
                "id": "2391c83b-4ead-45cf-9726-c5c2e081fb6c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bdadd34-7360-42d6-ad6d-6de984f0c5c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb122ceb-775f-447f-afac-58182e7a6223"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fdc41c7-17e0-44e9-aab9-3839a05386ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52e91afe-b030-4686-92ac-9f1068fc66e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d44251d-0f91-4b0a-82ff-8f2487b79af6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4af414bd-8153-4cb7-8b84-1882acf20be1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72aa423e-a2ca-4015-b69d-1e9b17de111d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "407c57d1-a89e-4c07-bacb-7d804e0efb64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f69aa104-d3dd-4490-977a-f99d346de329",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "859ca37c-7752-400a-abdd-c0216b15c5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "728be759-4c20-4fb4-aea3-c90f36c19eb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c29afd3-7a93-4f9f-9bc7-2245ba05d961"
            }
          }
        ]
      },
      {
        "id": "c37491dc-1b66-4510-819b-202fd2641520",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7b1dfded-6cb8-4b0b-b407-b1421ff7506c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e69aa4f4-c7c9-423c-8778-5fdf598c7f16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c64c3f9-3c13-40ab-b10b-506c89ede16f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287f5ef6-4c0e-484e-92d4-a030b6025952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c75d2c-d59c-4ce5-9ca1-782239cf87e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30010aa2-a521-4f91-b95b-720e8c1a6314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0a5da2-2247-4907-9fa8-566682c02aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b7d85-db45-400e-a440-10ee4d2b6463",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e243c59-8e3e-44d7-b065-4818facdeb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7d3178-c804-4bf6-9d2b-192f6722dee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2316c1d-40bc-48bf-bdfe-86f80dffb172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0dda0c-3a1f-4d04-b055-f05ed0a72d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca01df9-abae-4b0a-a74a-1b07bcf02798",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7519436-4384-42e9-b6a2-f131ae49e674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af30c26a-b705-4961-acb6-cd6c3b9cec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bf51ef-8d0e-4e9e-959e-e949eb53fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c52dd8-9e0a-46fc-a68f-702c286dd055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803dcd53-1496-4beb-8a9d-ebb4c192e0ac",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b99e30-de5b-42f3-89df-35a81984c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff392476-e4a8-4acd-ab6f-0633228f83f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f2d097-db3c-4c6c-b2d7-dd7bbc50f7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01343315-26e5-4634-ab74-8ba186f0667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaabd274-71fb-4324-94d5-2f189de35912",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26bd880-6111-4dc2-b565-bcf3fd2cd81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64332c3f-3692-4f60-92cd-9039cfc02504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abd3592-fc8e-424e-9510-71f5e619d849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdafdaa2-5663-4c68-b903-f340124144bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b0362f-58d3-4c05-8ee9-cf046dc487bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ada58f-e949-4265-a1b0-431111ed6d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bc3819-b9d7-4306-bcc1-51abf3feaab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125f6911-b2b8-4abf-ad62-103fba0cc794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5a371b-aef9-4a93-9506-e937142c00a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7ed92f-2fa0-45ae-836b-d654b9bc867f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e434d0e-1e7c-40f3-82b7-621053c8570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1c08cc-129c-4e86-a9da-62a3a49aa79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808b6387-6f9f-4a88-9edf-925a26fe8c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c928f8f-e346-41fe-bd7b-d6b8c25e914c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffce0fd4-a821-4ede-8b17-7171ee047999",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e91407-f740-404b-ab9e-2295ae3b1089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc05f3d0-5257-412a-b497-1ed6f64a86c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfb973d-28b2-4f3d-9508-4fe14e8858ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb7ab24-8016-406c-8163-5c008e6cc37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee692ad-9b63-4f6c-a77e-cc21337ecab1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68000111-5101-48a8-bf86-1772fea018e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141a716d-9cec-41fd-b617-1217859d6c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82518726-a8b6-414c-bc92-0b956c314f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c4453c-f568-4b0a-ab15-98c43b2722f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fdfdb7-f7db-4393-9280-c091d39652e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbbdc2c-2162-4622-a140-d87ce9e832b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8ba835-3e7d-46bc-918b-659446819f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752e5e1b-af3b-460d-8d82-ea42b4578023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f8c0cb-4870-48a2-a657-89627d58c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab11437e-32df-4dfa-afc6-8445ef9a7432",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a476edf7-5195-4287-9712-77a315d39539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f48359c-7ead-437b-9255-40a015854b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f9ea02-8577-4177-9ca7-d08918756c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7996032-2524-43a3-aaaf-e2bfd3b219fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520aa4ab-7e8c-46d4-b6a8-f50160928706",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d27eda-a91c-4a81-b1a9-85b216f3e454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7717e5d0-c982-4a5e-87a5-24bb7dd82e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fad9ffa-db1e-4128-a267-0b90af171d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af610021-b49e-433a-8066-4a7390ec76bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b414a-f76b-4664-b43d-49b8eb1fe319",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a8c6c1-5a40-46f0-94a2-824c3cecda44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc3a970-42b4-40a5-ad5b-88840862c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fafe501-4e3d-48e7-a842-fe228fdb8e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba50c526-b565-4db9-8265-dd13222e3508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dbb973-a899-4fff-aa62-3dcc411a3b42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee08a76-e123-4a7f-a692-0decc82c111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612ca24b-dc66-4c70-a831-661871559d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a115976f-876e-40b0-8120-a1b8207259b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3e8a52-9b2c-44a5-954a-67ac8775d322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc68959-99ef-458c-bbf5-5f5efcf72a54",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741d30cf-763f-4ce2-ac7d-07ec93e8d341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e008df4-ab15-4250-8bfd-d699209b0c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aa3926-cc5d-4d5a-9235-c286c4047358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58484de9-bbf6-4004-89ac-4a30d3d4e127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd90e599-2db7-4235-8b49-2cf4e7468e9c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199f6e6e-e47b-4a84-85cc-bd7fdf6e5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e921f4-d990-4314-933c-5ed392335bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a1d9ec-ce04-4f6f-ba6c-36d36435f5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "050d51cf-514f-47da-880b-bbad2047b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f26ea3-24c7-484c-b799-aa3339c60130",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150de26-dcfd-4fb7-8367-b6546cf268d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30c7c8c-e31f-43b9-a6ae-063ffe66b756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae9ee45-9752-4b2f-9b32-fef5c63dd895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "190986d1-0f98-4624-9204-21455f8eb451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79662d7e-20fa-4a03-958f-93b06155bb03",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ee0273-f839-47c3-875d-7abc941a52a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bedce7-2fe4-44c8-ae08-c032a15919b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed4e097-3387-40f3-9cfc-88ba245d6eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab81573-fafe-4430-8d50-827e55f21cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c99dfd4-8166-46b0-8d81-c0cb9804d9eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d8e3c0-fe8e-4878-90d7-f2beace5ff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b125650d-f73f-401d-b8ca-b1f3b8952d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba886a8b-b305-4f6c-aad1-d019d12be76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf91ffe-c34b-427c-b106-1daa489a6d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab8c4d-a5bf-4e8f-92e9-27d12261e91f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6271ba8e-17b7-4db0-97e9-99729c0f4a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3b2f01-0ea2-43cb-a41f-a14bb090f930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a70c66c-91d5-4985-8cf0-3fd37d247977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0922807-d9e3-4f2e-9d4f-0385aa25ec8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9549ed3-d267-478b-843f-701980aa3d56",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59744732-a4ab-4c20-8430-279ed33c0449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b86f5a-48a7-4e7d-bfb4-e5b5fe7519c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64009bd4-6a24-44f0-af73-c2d971e735a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d51483-a2e3-4628-89fa-71a6a5b0e1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c689f4-b577-439c-9d82-cee6cc75111b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62047c25-5ebb-4916-901a-225aeabf72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4b33d2-7f5f-4046-93c2-05d9bf40683c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e15c1e-2617-4c03-9ddf-ff1452601f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0682dbb3-cdb8-4cad-a99b-82472aa4a600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b68731c-4994-42a3-95aa-e1733f39d99d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90f022-2fca-43d1-86c8-0faaaeddedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125d69df-80da-476d-a881-9abde9c8cec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b86ea0-387e-4471-932d-099438cc5277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411fb23f-4e1b-476e-9909-fddc7d53f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834c8d56-6056-471a-be50-5a44081bcc6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53c57d7-d8da-4669-9f88-6ed4d6153eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a78e56-0a98-4d7d-9b38-971048bf7d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4ae16-e128-415b-807c-e5101be3cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3245b9e-341e-4b4e-8f75-88e3430839c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef7d144-110e-4966-93a5-f0ff6c579793",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc14d53-cec5-4a59-a786-987854ea9b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed8bef7-dcb1-4879-9981-4d68601e489f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148e343a-03e2-424c-bcf4-cbde058c723b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83fa0d77-2c00-4bea-9864-7fd9c6957eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa85b09-66be-4fab-b7dc-c0d64151b34e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d61b36c-8302-4de8-9577-02a57e89cd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9ee6d7-04e8-4ebb-ba68-d8e443ac34cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eea2607-8fbb-4860-810f-ffd23bf5f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9ebe73-9d93-4e8a-9d33-56f2fcfd70d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f7560-35cf-4540-830a-f5884318fbcf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248875b2-c0e1-47ae-9fe9-e406b3618bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b54e02-81e9-491b-a507-9c0c78c09371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42745443-870f-4e32-99c5-d61e856a421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957248b1-4a00-4cef-8ae7-b50084948e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e471090-8117-4cc5-87f1-76b691d7415c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4f027e-31cc-444c-b566-f1481bc00ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78133316-b36d-4970-afe9-9b62131ccb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c864efb7-6b01-4246-a660-1ab0c1aad20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453eafb1-2159-47b5-abe7-8821b93d116e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdc168c-0d26-46f2-b57d-8bfa972f5967",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dff0ef5-face-4b10-91f2-8a70aabfb919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee067777-a57e-48da-a401-ed9c6cefd213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daf5f75-c87b-4aab-9c9c-e4349b411bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf7c56b-96f3-4505-a96f-4ec7ff0dedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87871de9-d9a6-4d40-93bf-1d69bee48911",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3499cf8d-0984-4864-8ace-fe961b9a6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b846ac8-94e8-4450-9696-deb793aac465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65744af6-cdcd-4b6f-b05d-b5952c6ebbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122eb5ac-885a-4b8a-9015-1c2823b77d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5228a8-c4ef-47ab-8e25-1535904a8b83",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f1101c-959d-46ef-bd90-99575039e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649e1c05-4892-4910-84c7-b3cd5da95f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b1a367-22ac-4f7f-9e10-006967cd5021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06eefe5f-b647-488b-9d71-94292276ee38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28502527-2f8c-4e78-a0fc-490178dc28f6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907614f6-79d3-4cad-9e2a-2bd18e830276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b89d84-20c3-4045-b34b-4b45a6cb0e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b76959-566f-4189-a989-ce868bc8d885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84eafa4b-d5ea-4e17-a7f5-45f043cc92c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53029f22-f727-4684-b1ba-c4f3283b782b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f494e8f3-032c-4f05-9651-76873aab6923",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed656662-77ae-494f-b887-a4f2f68b201d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a041844e-5524-4e90-8b37-caec15e64b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016a278a-cd6f-4cb0-a115-9bb25e20b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "239de05e-a6b9-4396-825f-eb862bae1a7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "518a05db-903b-457b-b94e-c5814879c621",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "061cd9c2-3e42-40fb-8678-520b9e1ab3cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "363e19da-13c3-4648-ba8e-0b9d9c74e881",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a41659-1765-4b5c-89c7-8bb30f2ad46d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67dbe68f-96d4-4c0a-b92f-d76a7c00b8bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c48d9169-e2d1-46f3-9369-a797ea816303"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "083c556d-791e-4917-a9da-6a1266d13c43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "977c5b8d-b1bf-486d-97f0-919dec61e98e"
            }
          }
        ]
      },
      {
        "id": "2f3496dc-5128-4ad5-adc2-585d6a64b75c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "09cf2663-9025-4eac-94c8-1654c2c0c153",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df5fea92-d326-4875-9a4c-53d2d44bfade",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d73cafa-b8cb-40bb-9d4d-9aea9d724516",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665f8f5a-32f1-4e44-87d4-54369adfd392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132ba533-0739-42bd-ab6f-57c6467a764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f734276-65a1-4307-9bc7-ad22b7a4d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b082e886-4221-4645-ad9e-8f30199b2d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766a4b52-1700-4b64-89a6-509d912c52fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d79f441-d5ba-4cdb-9e23-382f326de652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45de7759-a78c-4b1a-9508-f2984b33414f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5c692c-09c3-4594-9609-af33c953e71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3191af-8b86-4305-8db7-dd0aad7ac8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a5b3c-6d98-4085-862d-3d2bcb89718a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a63dd8c-a568-4f10-bea5-d5d60671a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18efac7b-478c-43c9-accf-1c5a87111ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec979fa-59a4-4f96-a384-75b0750f50e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ecf0dd-6b18-4172-812e-110a7522f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bfdc4a-b702-4d97-9cbb-09fb91344526",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0f4db9-188f-4009-8806-c8797e231f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ca40b1-3184-4716-8cbb-84868ff1b1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1fdaed-67dc-405a-b45d-1b44619a6f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd1f11d-c356-454e-b969-7d9530ef277c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d33339-31b3-42fa-a677-ce66cfbcdeec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16f2489-e379-4cff-bd79-2de841fac9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882b3911-c754-4ec2-9659-ad4a016813ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3fa8ba-cd2d-4d42-a76e-f0345d508c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d5c903-1f9f-495c-92ad-95a46573dfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b40931d-b9db-43ac-8825-0a813ec87979",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e362b0e9-4a75-41c6-8d74-270c8994b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531ab9d5-6919-420f-8383-f807f936af43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642dc45a-bca5-4495-90c9-93ccd1ac023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca6daed-6a4c-4eec-aac4-2f64d8c7bf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfbe869-9fe9-4196-814b-6da4d8222141",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e698ab-4b10-4d62-b063-22a42801c836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1047b23d-ae4b-4d6f-927c-ded8a59bcc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603b4b7d-5046-4903-a9a9-5b69b496d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a909076-9b06-43b2-a8a8-8c8450e7a3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8767b51-afe3-4773-9deb-4a0d2caaf46a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c7a1dc-1fac-4293-b216-d41fa85be024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00998021-db82-407a-98a4-4d9aec3af7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ceea1-c42f-4567-894f-28be13eafc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecf48a6-c20f-4021-a9c2-7433109d2217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00659f54-36e6-4624-936e-8898e55470b2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a610370-dca5-4bfc-b0de-e3c5e2e82d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715f99a7-05b4-465c-b8e5-7236c7f54c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138fcfb1-2630-4798-b7b9-03d43bff9fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f86aec7-e2ba-4021-8199-e664db5595ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b6b988-93b5-41f1-994d-887275e098bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a15f680-8379-481c-bc4a-76156376dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f35a15-a312-49d0-b443-c08979e74b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1affd9a3-09c4-4642-9a69-dfc2a871b6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8f17b8-c609-4490-933d-1c0377be739c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04be867-dc65-40c8-ae0f-cde88110a21d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da57455f-9009-41b2-9d56-ca623da998e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27285f35-facb-4624-a50a-408ef5663ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac23a18-3ba5-41fa-a192-659e3ce4172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f5064bb5-0e85-4082-9d43-f7bb62cb78ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5285586f-16f1-47bc-958e-d0fdb0f68df1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cd6754-28c2-493f-978c-4bece1fb46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec42b0-d5f5-4f49-a941-d5df58642c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c19c72-fab2-4b4f-a9ac-e7b786a4cea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4c9c90-0ef7-4ff1-be96-e19ef9f87619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647a034c-f159-47fe-a5b6-fb3f56632d79",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff3457-3d0b-413f-95f5-4251b19c9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a039a5b-3ca6-4812-9ed5-766a405996dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dafd25-90d2-4122-bc61-0b8b71cc8b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c184d0-81ff-4ab7-accc-76a815da6852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b90afa8-ec13-4747-aee8-2e6008bd6c4d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbda576-67ec-42cd-910d-ae7f9c453c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008453b7-334b-46b2-bfa7-c18df4638bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c673f-c7ef-457d-8a58-daafd64a0af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da01d4f2-4477-4510-bdc8-ef11442aa8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7ad662-474e-4603-a68c-e7c602f669e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f19cfe-cc4e-451c-9d62-035e965ee261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a789606d-5dee-4147-81a5-2b76500363df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50be5cd6-ebbf-4825-ad71-c6d771e51d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0423f25d-503a-4159-83c3-92ec40b938f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17283050-b324-4e3e-b986-bc540eefe7db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c350fddf-8e99-4ff7-b1ce-f7ac31737236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4ca0c4-504f-4e66-8019-a65a39a726ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdce21cf-1933-4085-b36c-fb6dd5accb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b08e9bf-cc3a-4348-8522-473ed0d18b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbb9561-3e5c-40dd-9f1a-d79f1cf87a6c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de068456-7d61-4c33-8856-8b340d200c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3205651f-50e5-47ab-9fcb-6a6d99cbac80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52ab906-c1ba-4458-a985-54f8b6a8cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a1ff30-8b7b-4011-baaf-abcb0f637df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20328fe-a3bb-4926-bc5b-ba17cfefc1c0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ee434c-2c55-4d82-893e-ee2b94bbcfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b370f4-ff77-461f-9a82-69425bd69776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1241a60-33cb-4bbb-b7ab-84546a5c9f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d644b0c2-3fde-47d6-92b0-215795f52fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997faf9-9d49-4b63-8db1-c87777e711e4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d9b8c6-006f-437d-baf9-c5d909e39541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f092b3af-4850-4937-86be-7f39e6f57c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54778a9-b5d4-4ac6-b37b-fd46abea4f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f3345d-be73-46d7-96ef-60f7a6407300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bffa72-096c-4553-b5e3-e9fe399e8064",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e15c688-428e-4408-a3fa-c10da6c891b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639c683a-5f3b-46b7-8f5e-2f09754729b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e274729e-2b21-4c2e-9325-c871699b7e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abb94be-9e89-4b0e-8ff6-984adec641a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd2712f-16e7-4164-91da-38ca652cdfb3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a023db3c-49d1-4758-931f-45d62b0dea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562bad1b-2056-46c0-9109-b719b4b446f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798579ab-32a0-422a-8491-5dab1dd96e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db510304-521d-42ed-8ef6-381eb6a0183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7505f1-3b13-4c56-94b9-e4915ebbfd99",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064b69d0-c08a-428b-9b75-9913fb4bfc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b99b71e-206a-44d9-9eec-6c192e755a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad5a75-42b2-4c31-8e33-f34aff1fcb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ebff64-4819-455e-9257-9cd0ee875def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337ab7cb-1840-4551-8ee6-58afe0282d6c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c2a7a3-49a1-4dc4-984b-cdbf780d845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceebd056-1f3a-4023-b532-fb739b8cdc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456bd1f2-5227-4bc1-a220-1384c14054d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d850e0b-a426-4f3e-bc61-30e8172d541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6c85f5-f401-4190-8b44-4d55e2e04fcd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9df4048-1942-431a-8b58-6dc42b388fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726b8cb5-bb26-4e3a-b2bc-237b4a26e320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f79f461-1919-4b8c-8e4b-c807ac055ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb378ee-5fe2-4285-8d8a-6ec49df28c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1084f022-c641-4c49-9386-360a7927bf7c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d9123f-8a7a-4675-9165-d5692f860e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617f15e7-4364-40c7-979e-e0acc7c6d434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9813c0-5d6e-4cf4-8927-c78c73b6f2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fee54e-bb0a-4de0-ab7e-9983b7c5b94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9ae9a3-2e97-49ba-8630-ce28024d5c4f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e30e5-0de9-42b7-ab62-0487512f5c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232a9ca4-43e8-4863-bd21-38144dd5c352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc2f12c-3934-4582-a677-615321fdbc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "205f90c4-5f6c-4c49-bc95-2adf726242ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c0be0-336d-45e9-8307-8140776f14ff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df6747c-bf91-4c2c-82a1-bf4d125d41a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b511e9dc-a881-4fb0-a554-86a71102f056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa1e02f-0fbf-494b-88a3-8b877eb4c80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef7ad76-7fc5-4530-909d-249223a2655e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f0f86b-0faa-449b-b3ad-c3f7218b983e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab2b4ba-0c4b-4f59-b576-044df8d9cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba8fbc9-6d68-4dd9-806b-538752e35ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb0197-6c05-42a4-bcf1-9ffa143b44a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d1e981-f088-49b7-a02d-ec9207294ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f9bb8b-9e86-48b7-8b2e-30135020a332",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e61a15d-49ec-4716-837d-7896487f4e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73be3d3-2325-4365-9b9e-8e5c7e5860a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740bef5-0b39-4038-afd4-270dffd57495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b91a87e1-64f8-4320-ab4c-601dfc5e08fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183d111f-0b5c-4284-acaa-c0c3a33011b4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748de49c-61bd-4906-ad68-5075e1b23fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f572375-a3ef-4bbd-9896-e8b10446141c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778cbba-55ac-4006-a40b-70c4a9ee4bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9d17d5-8686-4979-82e2-7fb804472431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3c5a3-0bde-4c30-adb4-618a466207d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bee18f8-3059-4f71-bece-987342eb3091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a750244c-8e56-4f93-973a-18e1b4a05654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8570e51-b73f-40c8-a56a-abe78bd7690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e20012a-6481-43a7-bfbd-43fd1ca88d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5332799b-cccf-4694-a077-f3ca2f811487",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba413572-7768-418c-90a3-44bee4bf4e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cedb04-277d-4d63-840c-e2192a58d321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d6ddbf-485e-4f67-a420-22d535cac1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f0a6b0-c424-47d0-913e-79e87edaf34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b35f5f-41e1-4499-95cf-79b50b52f751",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424606f-63ba-4b42-b5dd-f673d2cdb395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f505660-b5d6-4ae3-9fde-157dc597eb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189b9634-13b1-48f0-aeb7-739c70b3a580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e0ff7c-344f-4354-899f-109f669efe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5553144b-2497-4d2a-b4d9-5fb6e9f49dfe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e1b1d0-9b7a-4118-ab29-c2956c0be0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b4e7b3-535c-4ea6-b26b-4f0ecca94288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8922c4d8-9415-4b92-ba81-bbde29d4e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b50f28e-53c6-4ec6-a208-4b89afe7f259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19291649-f55e-4bf8-b913-2fbdc4e49752",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf35c2a8-e3d9-4574-b39e-e3292d5505c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8cea06-26fb-4e84-803c-a137d56f7ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a953420-863a-4b02-a7d1-1aca3682b420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4357d0c-1e43-4ffd-b37f-314fe4ffad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacd3566-ca8a-4ac8-b527-2ff97c1547d0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a625ca8-1256-4c2e-8d6c-c988ef30e730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa108e7-009b-45ad-8e64-a028d460ea3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c52d46-0440-4a6b-941b-b372408e6dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96cacdc-2510-45ad-97f1-b3346e3fc5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff6099c-5a93-48b0-93af-a45bb9821b9d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e2f0b5-5fb3-4d6d-ae47-34a29badec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240114be-c2c0-4356-bff0-838eeda11d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0c8f2-266f-4177-bf31-b27489168f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef27883-25f9-4208-bcb2-b684443c11a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9724462b-8481-48f1-accc-875fab8a4725",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d816aa5b-f322-4b4d-a175-23a81d8f42be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a86fd6e-aad4-4e8a-a663-86f4b80a192a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a33bdf-693a-4b8a-a613-5204b02ba6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9766208a-3819-4186-81d8-7d1ab6de05ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1491442f-49ce-435c-abb6-019963a04599"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eb55e13-1285-4e2d-9bd8-e93ac152b229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fad8d313-c602-47d7-8ca7-3614b4a7eaa2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26e46d3c-71ff-4bd0-a322-34c5112a3765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a445937-63b3-4fcf-8bc1-43cd71b032e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd8dbbb5-5dd1-4a2a-a3e4-290e6623647a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcd1b591-8d53-4e56-aeef-6ba3f51183a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be46b6f-36fc-4172-83e1-e04f38d21c32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ead53c6-368c-466d-bafb-2c7cea7a999a"
            }
          }
        ]
      },
      {
        "id": "15f15646-e837-4dec-9a63-2393b666a3db",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a06e78dd-dc46-4c72-9303-7ae890f6f273",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01e346b0-fc29-4529-8435-60e9d53a703b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63a4da91-4bc0-43d3-ac33-a60889416c9a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890a8d40-b386-4b17-85b1-00409916ef3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dcbbd2-d497-4aed-999f-4ee35268e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551a7523-78a1-4e24-9f73-a7dd62d75489",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698bb1d-8e6d-43d8-9f60-19a1b3812a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da1087f-01d3-4e29-bf9f-0e8a0cf43f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c132a895-8c7a-47f4-9938-dd78ce75632d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13fb824-7184-4af3-849f-2c907d3452b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ca2c36-1ecf-49f8-8ce2-d4dd340cff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb36fd-c14b-4348-906a-daa30d3dbb9d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20404a9-d3be-4347-813a-d56be7d1e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f92a60-7fc9-442d-ba0a-95e4ece9ccd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab738b-efce-4e82-a4ea-8933a6935d8b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ed68e4-9d7c-456e-bed3-0c8906913439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9391cbee-8c93-42cf-81db-fcb46349cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f21edb-4a00-4ce2-bba6-72564e33c98c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3091a8f-fc07-49e6-931c-45bf4776fd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5759e606-8f11-4e12-9f2f-b13444059a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfbc129-8f6e-40f5-81a0-fe682fd99930",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68df046d-03f4-4758-8751-98dd614faa81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b9eca5-dac6-401e-91d8-e0147006dac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd74245-0005-459d-8875-ceaa236bc094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca45029-3734-4426-8f45-46c0f505113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a9d7d3-72d5-41a2-ac74-f373f26a758c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4629a53e-7480-423e-abe1-ab721f4cf5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30b108a-1b20-45ab-b3fc-4563d9480c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddf20ae-b72d-4329-9b9f-aef193eb33b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a02ce2-04b3-49d5-9416-488773b6dfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e183f22-f7c6-492b-ac62-b7e0bc33ac52",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7783a00-74ae-43c5-a955-a09f8cb3d91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbabc4eb-e761-4e64-83fe-d7c07fea06aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aea22f1-37d6-4e62-9ddf-bc114fd7ad2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0c6158-b47c-4899-9744-35a802cdaa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b96a2ac-50b3-40a5-8af1-b85f1c2ddaa6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55b5df-b0c0-4e5b-a919-fb8641734875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbafb8a-8df3-4375-85bb-54d5ae80596a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d2ec4-fd16-47f8-97ae-07f635521228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e24c561-46e8-474e-a7da-e43c8baecb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff77f14-05ea-45ab-b53b-075dd9092402",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2929173-999d-43fd-bacd-4a375b24e7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5eb7eb-6b8d-48bf-ba94-4f9369032c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce0d6ad-5ce5-4766-b809-3513d8875574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1541e6-af9a-485f-96d2-d86dc987a2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6719b7-75e8-4818-8645-c97f9cf39745",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccff67a6-f71b-4514-95a3-a2b0c2df263b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c205620a-2ea8-4ce1-9b5b-b26e2d193e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a14436f-a152-4134-bc71-ab04831492f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee610130-a45b-413d-b8a2-c6a0fdbcee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c7e138-5cdc-46be-96ff-5658a538d7bb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6915b6ec-dad8-4198-a5e0-ca88d0bc984d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc89e639-c21a-4380-adc4-4e0352974cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28b5301-5074-4d75-8427-e59ec6d248d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3db20f7-6885-4f16-b9ec-e98700c70ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260e411-cd4d-491b-818e-69b1dcd49836",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ef93b-c00f-4fab-ac5c-680539193d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38044c51-a82d-4b15-9713-313cea1f7af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f9140-f7d1-4b3a-b5e4-cb6dc06ee473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132e95fa-bd7e-4e0f-addc-6888b3437d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f548d1-7fd6-4069-b4a7-07487609db25",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f677aa30-073c-4e4b-b2fa-0b8666c6216f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0dfa8ba-7ed6-48d7-be44-7c5ad658f91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3ed8ce-2f7a-468f-96a3-c515b2e29ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a051848-4c7e-476c-9814-39f6d4d91e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e809a96-b684-42ad-af79-c1d7cbe61afc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33d2308-621d-4b36-85b5-0bb5dec70fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ed1b3b-eea6-49ba-afd8-ab68bf0513fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e42069-f291-437f-a95a-5f89df4a5b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e5a4f-bc1b-42d0-a09c-0ea179bbcd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f081c0-9a37-4ab4-8f13-e73f6b5c6759",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b416432d-520e-442b-8d13-3c6a80deea03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cd7100-1130-4c56-aa65-7556e7749a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb55528-3954-402f-9c4d-27c0361a8155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635756dd-23bd-46f3-aed9-382d52efdc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f5e7a-ccc9-4c2b-8b79-3ae80dc429b3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b692d8db-a5cb-4daa-b290-00d343eb2c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bbb181-42d1-4416-9def-515ef20ff90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935a443-4398-4091-8b09-3907684c2e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cd5baa-9453-4d24-b29f-ce361b5434ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd9421f-3ad3-4b48-a9a2-01abc084dd8f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c16123-0d25-4103-8398-5982b2917f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e0efeb-5149-4a80-9c1b-2f4675294d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d195e21-b37f-4ce9-801a-cad08ab809e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebe8ee2-cbfb-47ce-ac6b-0caae3f41e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8288388-2ebd-493c-862c-e8570e63650b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27b0f44-22ee-41f2-96e3-d2a6e81cf86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340c8fb7-63cb-4eb7-a987-fc2e8ddab3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb94a07-bd63-4410-a907-bb174182c21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7465172e-6393-43be-88b7-e6be4a5a389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4327020f-6809-481a-a8f2-f772cbc0b308",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012644a2-af48-44ef-bbd7-d0cc42751ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330ed061-5835-4136-a1c0-cc0a57969929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df02168-13f1-4bcb-9f23-2947ba8ffb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2145b63e-9db8-4282-8510-2ba2d64ee7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac5e587-5dd1-4b89-886c-fa810d9eee80",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ed5d3-33c5-4937-9e37-0e7cd3f7698a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dafde73-9ddf-45e0-a833-91b5ec2a0908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2750549c-18c2-423b-b85f-43ddf4c8672d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a23e49-7940-4a07-bf8a-0aca3d441844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ef53e-731b-40ea-b4fa-1b4618a5b85c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d15120d-fa8c-4dc6-a7c5-7f2c46236efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1b41be-6ae5-488a-b6d9-8471cd9396b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5617736a-dabe-4f84-8306-ca40df9a7b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5123135e-e2c3-44d8-93ac-7d8976e75a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec36d3e-e5ba-465a-9a8c-802ddd5aed81",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b72b4f-c9b2-41ad-8712-755baf7327a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f122c3c-b74c-4b51-9416-94154b2abcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10dbc63-ebaf-44f6-b4a8-6cd491369a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7694be4-7957-4785-9386-0634e0a34780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed9ac71-eddc-4b83-ab96-4f38b206d631",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d96c631-164b-471e-a07b-e261a42c5194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613c88e7-46a6-4702-8532-98783da3eb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a895a57d-d038-449a-b334-0501d39b01f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d94723-06f3-4844-910b-2ef56abbdabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3a86fb-102f-4a3d-8917-02a3f6331022",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52d5fa-1c52-4740-8c2c-31e8bc484d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969e0536-ba83-4a34-bafa-d46d72864089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f143a5d2-70db-439c-9926-ea385471dc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d71f6b-e616-43b1-a300-97945edba338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1718fd-ddbd-49cd-b349-f9fa46ac0e25",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0082dc6-6cbc-49e7-b916-d49faf6693e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5905fadf-5739-437c-8049-1ff2772cec3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8ede6f-60c4-4ac5-b5e6-a76e9894df9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee00ecf-d208-4b37-aedd-79ecd1767ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e56534-68eb-42cf-a9a3-d821da1e9dfe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5566af9-f7e8-41fe-a2b7-4c5ba2d2365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d173b7-30f0-4a39-9ccf-28f109edbaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc77f589-54d0-4147-a747-c6a9bcfc2b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf316b17-d44e-472e-ac84-fc3cd292d016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc978ab-008d-462a-b5ec-7188c9798822",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0fc7cd-6cf1-4b9f-98aa-9fe3a2fbfac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dbfe678-899c-4280-bfbd-0a51617a2049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7696c25-d840-4444-a95f-8482c5763d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984f652b-3ae8-4b9b-9d4c-1ed3589e7281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8d3618-1009-46ad-8d81-4b4d502a3124",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799c185f-a963-4894-bff3-6e8c47a0df49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f899380-07b5-4372-a80d-a3f9b91a2d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3087f5e-7a40-4bfb-9c31-568b0bba064d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3684b9d4-dac9-44c5-8371-630a40b59fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e83796-f7b3-4bcf-93ab-c893cced07ce",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4693f92-c5cb-4895-a76d-849f0c17d1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7948d5ab-add3-41bf-baab-877bcb3f0db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fe31e7-5d95-425f-b835-7aa4528dbecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f00a8af-62f2-4234-8217-8b0062e12cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d55e342-4eea-4abf-b1ca-173169be5120",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b43b52-8e2d-402a-85ca-db3a92438e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd95392-7a3f-4a84-839b-8ec72139ff50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc62038-76fd-4835-852d-60a4a17da9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1f0792-f5e6-47b8-a149-9a4e6179db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3905ff03-3f27-497c-a3b1-a1c1e22af514",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701b157a-a342-4029-901a-de01bb6bfd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0853c14-c79c-4da0-9434-a7e745fb6a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87188769-5b95-4400-8bae-9ef051ae04d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f703483-4fb4-4ef6-8e5f-efe9df75f93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e51e7-23a0-433a-97a1-c95f6595d6cc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e61e175-2157-47bc-a3fd-198a092adad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372d7018-086c-4d5a-a20d-4e4042617323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3ec0ad-b8f6-48fb-83e5-931fcac091f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208d32b1-3cf6-480f-8b34-b5d7bd5f7be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1b1186-d221-4a37-8783-1c6eb57058a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11590999-48ea-4704-af85-75a4ae33c132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c32f594-3868-4533-8821-0a9e8a250c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81578d45-3ea2-4315-be01-c5245bb31f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06dcf075-7c25-4c42-851d-c62f3e15842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37843227-1fa5-4421-a303-2c528439a60b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e903657-7b14-47ef-b733-fc2c5920bc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d70e271-9681-4a95-8a4c-fb26fe4c128c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b59a4c-0e57-4303-bac1-cea6aeff888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68801e-a550-4574-a182-41348f2b7279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a24f6-285a-413a-9931-df8b277c03b9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa849c-01e5-4d10-ac6a-01d02ce8f94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6ba24c-e342-4afd-812f-940a59a5f9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e813456-4f7a-4202-a13c-0e66e5f1e214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7798411-3de7-4cde-95de-b36416746cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa574730-2abd-43b0-9968-918594903cf4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1216c918-fc0f-402f-8ecf-2712ea378834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8a0d4b-9e1f-4317-b56c-dcf94d6267c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d039007e-deae-4951-8781-aac992c72096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ca8085-8f3b-4a70-9866-838d8f694d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2529c1d-9b1b-473b-9555-c09e84d64945",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19df381-7e18-4e2a-9585-e2e4a85205cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3597e18-1883-410b-9de9-052b7d18e060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8abae45-0096-4a0f-83f1-d683a9f275e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009a9a7a-bc7c-4562-bc8c-0b23fdfd0db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069c05cc-62b0-491f-bb1e-01ff55a14b00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486d9bc9-e72d-4a13-bb69-38907b168859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109d9a45-8295-4a65-b84b-4743e5fda165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b320ce-d6ca-483c-bee0-9a3f193e0999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a5ce79-9831-4688-8fb1-f9b416eada06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86367e41-62ab-43a1-b5fb-a8d2e2dfc2e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb083fe-02a5-4f54-a383-c5c4b29fad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93907aa0-053c-47cb-8745-28b11cbab8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2ad6bf-abb1-4c19-8acf-76f8ff0dd46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4856736-f4ff-49ad-9648-7d186468712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91fe484-1505-4945-9196-a25ebe289b00",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4083e332-c927-424e-a237-11a410dc12e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e208de11-c2e0-4ac2-8690-84c24f6a5d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf9817a-d787-45b7-b746-e565f28851de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6db3e3-92e8-4775-ba28-c6fda9e29dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83fd52-81f8-4bf0-9847-939d413c2b08",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9135ce88-6a4f-497d-bfc8-3415ba268cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd010cd-47c7-466c-aec9-0b8e68422d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18e342-f4f0-4b0e-9aaf-4d5e91071fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ca3df6-9f62-4713-bf8c-a628e4e83d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4265a890-999a-44e8-86b2-81ab0c3a887d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25861b21-bd19-4666-b376-04323318004b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcdce4b-8b22-4a5a-8a7b-4ce756259c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c016b5-657f-4f76-bfee-41e9814b3c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a24a32d-9cfa-44d1-80d9-61a70cb76e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e467d4d5-e6e9-4f13-b48f-328fcc8b3261",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3f3738-028a-43de-91c2-76a0d120ce8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b66b3a6-613b-44ab-b1e0-072e7a3d42e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bcbdda-91db-4fa9-9a3c-db4b0aea1d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0748d4-fd88-4073-b6de-289c30081e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a86487-86b0-4f0a-9af0-6fd32bc73a41",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d9a13c-cceb-49c6-a09a-3e57acf989ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a405fe-4ef1-4be0-84de-064cea1d16bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ed467d-092d-4338-885f-5daaa5a4688f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8a41db-ead0-4d2d-b2ce-1f7037352df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74cbd7d-51bd-40d4-be68-c8e27e94d0e0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc74b6f-3506-4cb9-8b3c-3fc80225cff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902f026a-51b9-4f31-b1a1-8ee676172161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31802b1c-04e4-4e61-a713-64125f412c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68958540-4481-4ac3-b055-ba3f3f5c6f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3263f75-310d-4d7c-8ffe-f4c54a983484",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6898d5-c6e5-4fe4-8d8b-b1505446cc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bbc693-4b9f-4770-a522-a21b29644fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646dab98-4c21-48a1-8c2c-737e7f139050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea470de2-3eae-4aaa-9a41-7be99cd166fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f1f4fc-ca00-4d02-b6a0-8f38ac58c8f8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e9798-dd85-4743-9194-a61168e89fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6b7feb-9ab2-4696-8cd0-f3a7407f54ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc03f1-7d98-4b74-83a5-53bee7dad1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc6033b-0b23-49e7-a85b-8a4db4782269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a365ca95-1583-49c3-b87a-47744c2b7e82",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4f05af-5226-4edc-a341-25afdd3176fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c591f8c-5bb7-46bc-bbfc-ca60082a2797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4905e878-628d-48d6-8bdc-8dc69cef0dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bda28fd-0cc4-4579-826e-97516f9d02cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0739b140-88f7-4a2e-85d9-db4fde379e8b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d23707-0f1d-4422-8f4c-83c5f187fe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720d0b3f-0070-43fa-92ea-f8f37abaf917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21397ef5-94af-48ed-bbaa-90e090676bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5607f32-ebb2-4fc0-ab29-2229a02efbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9618b5-71cf-41d5-a4f7-d77d7afb8c3c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0526060-0d0c-4e88-ab39-eb6f777daa2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594d2947-ee5d-416f-a587-34cc50c70fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92774d3-518c-4aa4-a8ef-73ae81f3b211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4f69bc-d3a2-47f2-a961-5666a3b47eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f97d6-f906-4f05-ac67-0351058e9feb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae0f4ba-2f5f-4fb4-aeb8-2e30bead0734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8490fdc3-9885-4a3b-b88b-b684ff58b0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fa339f-cf0b-4444-ad9b-042a95ddfce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b29f8d5-e067-46d8-bc69-a600ce34a8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a6dcb2-0962-4b13-a5e6-f2b4ddb19e12",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e220d4b-c047-4970-a3d9-372fcc0eff08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6c0c1f-5dd5-4c1b-8fad-50622fd05327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d22b204-f641-4840-b2b6-0c004603a21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a35dc82-2729-4c52-9857-596993fd64ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b3d4d7-ee84-4b2d-bf05-da5ba67aa5a1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe962dd-e9d2-4e40-b30f-6bb4124d6239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58758823-1d85-41e7-95ec-dd07e094c820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec0cd66-8485-428d-8f7a-9c57f1ce4eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c0e001-b963-4a9c-b671-6c29b89935e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d3f666-b01a-4ebe-963f-afff4293503c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e755c8d-0567-4ad4-89f8-c336b35b32b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449385ae-4cd6-45eb-8f5f-53cd864d1277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959ad15b-e6ad-48c1-a943-cc41dd011e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de679d2c-442e-42c0-9320-204c2bb879ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29de703a-76fb-4786-8dca-c7d20734fe5d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb94c4fb-cf54-4f55-99b8-7ed1eb7a1053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da36b218-f22d-42b4-af32-7ec05d5342bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a181597b-e05a-40dc-b255-aeefef1e76c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179f0a83-add5-43da-8358-9583b8d6e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa6d167-8571-4fba-8112-118e4cef00b1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c916f83f-3ffa-496b-b230-9654af5cbae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ba5dbb-4b56-4caa-b339-b160aa818776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a3e0e-5e8c-48ad-a8c5-7cd240ec3fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870ba4fd-f2c5-4d18-9117-7ed079a99953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aa1537-f685-4c83-9e02-8930d44647a1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ed1f81-7356-49b5-82b2-f3d28dbd82b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212391b9-78b9-4dfa-a072-a655f4eab5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a5225-7df6-44c2-8644-30d87dcdbf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51716453-64b6-48c4-8299-4362843d435f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d3807-93c1-473d-ba54-bd632c63cbef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a6aaac-9f5f-41c0-bc43-666e5db16215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d4037-6ace-48bf-aec1-9b469bf10ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8833441a-c0b9-4a49-a4c2-493152e62a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c7298b-287e-4e12-b4f5-d91b9f4c489d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b551d62-2d7f-4af2-ba0b-6cdae6c9f85a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6d7ce-76ec-49f4-82ad-f63d9e9c7b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a97321-c701-42f1-ac96-150ca3ef9305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a151c-9c4a-44c2-9186-6cdcf2cac597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204e67dc-f606-483a-b56c-95e8e34d3467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b3fddb-7a81-4ee5-813e-781eded11d77",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a05c614-74e1-431c-a4a1-96345386eeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c271ea5f-dadd-460a-a9ce-e7c86f83651e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc343d89-d826-423c-b4e3-e9aa3defaa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180d301a-30c5-4ac3-93b7-b31478e772b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e821ae-03c1-44af-aa00-4d1e88700503",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7987f47e-3cc9-4903-8639-ea314aa73e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5709bf-1579-4e0b-9903-b79d843bf5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b81a39-abfc-4915-b657-14f464ad214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affba124-9a49-4a22-a605-defdb0adc809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6586e74-4867-4f57-af07-def9a34cfed5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3dd27c-93d6-44f7-9eb8-43736685ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fd5c0f-82c5-4fa5-a435-b28d4dbb6e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8bab36-cc85-4adc-95d9-9aed6c794f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaefa95-fa76-4da6-b414-11a012ec4027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca25e7-daea-4aef-b116-b67da5efb738",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6ea065-d75b-470a-97d6-699a8041997b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f992de-cdaa-4cc0-b049-512d0fe85b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040249b4-859d-4c3a-ad8a-f78bdb68876e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6358f1ea-d8eb-42a3-ab13-b8bd2c457a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ee7830-47cb-461f-92a5-1d2fb609f47e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306d4fb4-c0e1-4d7f-9668-4bd71177e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ddd9da-2b88-4f85-8df3-fcea5645f0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b869fa-082a-4a28-8880-84eed705d1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d0b3d6-ec42-45a7-bd3f-ed3af7803e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a335367-3e36-4422-9f49-5024813beb72",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2389091-a1f5-4a21-9762-61e6dfb43ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d03e9f2-b66a-4946-a7e1-2119cc5f195e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1a40fc-d084-4daf-b6d1-970a7681a3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42161c65-e8ac-46fe-8a35-66074c1bf68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ce605a-d009-4811-90fc-202a4465c506",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f94eab-9937-4670-90db-38840296da94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f55bde8-0003-4534-9567-20c4c5b3c821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e00925-5ca6-4d25-a933-fe7cfd0e5414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d5e098-0553-4333-b231-dfc8f894e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796cdcc8-c77c-415a-9da0-e670bda4389a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39005da-6d82-4aa2-a130-16da7bf7b066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bc003c-1dd1-476d-9b15-e7ff7b71ca7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21cd597-6254-4c31-8cd6-0b029a433025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acee49d-ab13-4c3d-9508-78757a0efa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3648590c-e719-4620-bdd5-4fc098afdd8d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c9940-ca10-4fe2-aa07-723a6df434d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00962670-a8e9-4b42-a07b-40de2bfe09b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb9c59-9366-4cda-b220-265faced3696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9914fb94-cbc5-441b-9445-a72e89a80cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fa913a-e080-48c1-99c3-c7d431be4e3d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f027fd76-8f15-478d-a442-c1ebf8fe48ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c4a704-6d23-4a7b-9f76-f446061e4b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6591a2-0ef5-420d-b128-b02a074f18f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d127efdd-b8c4-4a5b-815e-46ed7fc2a408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e4d79b-e49e-4a82-9db2-9d738761bb5b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c2ab8f-c104-495e-942b-c45d3f5c6585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2efdbf4-2e12-4cc9-b965-648b07beb0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e43c71-9295-4e00-8bf3-dd2945219e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1c160b-97ad-467f-ad59-37b0ea51ab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86148e45-8cb2-46f9-b3f9-9e7abeb482e4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01290bc1-fc93-4055-a7d4-2759f4dd6c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449e0b90-214e-446d-82d0-7754fad8b389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c42ca-25d0-4f68-a5b3-4156a07d1b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba8b250-d0be-4229-a8ac-d15c69bbfb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd59797-2e34-4e90-b9a3-b52c6e4a1833",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f04513-fa30-43ce-b344-8a2f1493653c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b95adfd-1f09-4738-8d43-22ae9ef57f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f122c61-2805-4c47-8961-51e639ee887d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0e2d26-53d4-4c22-a939-45130444cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db6d86a-c440-4649-8537-fedfab226e6c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183ea855-0081-422d-b5a5-5c1b2cb8a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b5a213-7b4f-4b8f-8741-3922c531ec0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13e5483-8801-4b6e-aff8-4337775909bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c644336-0a75-4ab6-9b61-0fd98349e020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b551685b-67ab-42af-b165-97e370af930d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a3821b-9f54-494c-a5cc-33eb73537074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9d7517-30ff-43ec-9335-cefc175f5af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d12948a-c705-46f8-994a-8573d88fe34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5450f0-07f5-44a1-876c-a957e57ef138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b60f8-e09d-4867-99c7-49f190275a5a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a667444-ddc8-41e7-8312-5690cf74a12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1aed98c-1673-478a-936c-61b8c63000f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fdb8a7-0bcb-4046-b6b1-42b98222c175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29022be0-bc3a-45fa-b5d8-f65b9d693ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7875ea47-0ecc-4423-9fe8-c7e1f4d78d4d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e61fa8-2491-4421-a6ff-0c027c8c98dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df539095-9d8a-49d4-a2a7-2ded8a50aadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30e9959-8024-492d-8d09-d3896497fd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4b2097-6a8b-4e9e-a751-4d8d74345b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cc86cb-2362-48d8-bf6b-f1aae406e027",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a3997-eb8c-4cb8-b0a0-19ca9eeb1557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3272bf47-9d63-4cb4-99a0-b5e1cce4c634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a6e9d3-e86e-4963-a5d6-7835cda0d966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155c7fe8-45e5-41b5-a86a-c9c29c09a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4233e171-b7b2-476b-9141-4be50fab18b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32de6475-7ab1-40fe-b946-e7def65f0b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1041b0-3e06-440a-a507-ebfc1c6f354b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d96e93-ef32-43d6-8b70-24c65e178d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668ee6e2-ed8d-4917-a231-1faff6bd1b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b71a009-2e19-41c9-a508-d68501147156",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca5a2e5-bc80-44c4-a116-0731738304bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a064554a-5864-4f3e-b3d3-88016a756569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cb08dd-6eea-4c07-9004-e074944e394e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450bc25b-aa9c-45c1-be28-aa77c1620743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d534e1b0-7eb6-44bb-8bb3-00874e22773e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05f13ac-4b1d-4438-be8d-ed51b4bc9dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c98c82-fc2d-4565-b037-ec7c7d671ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d683c1df-a034-4bf6-93bc-eea994b04ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7660d73b-c8c2-4671-841d-5b31b06a6aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4857a-d68b-43b8-b5ea-5a2b7b7f1f32",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3620cc77-d8d5-4786-96ee-73c8b7a3fddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e7d71c-ffa5-450e-91be-580d8e3d4a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a809f47-8479-4030-b240-fda17940b829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee07dae9-0ea6-4daa-bf9d-b74c887c6659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda57fc1-7f74-4c95-ab18-c5359989b877",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e633f2-f6e5-4941-9ac6-370117cd898d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb15fe03-e7e0-48fa-becb-afd1319bf6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b1524e-5d2d-4cdd-9d57-ae71350a1b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cfa230-02fc-46d0-9dd8-b5437991bc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848e6d50-1a21-455c-b5df-cbd96c96b29a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f207458-b92b-49c3-a860-22136769dc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fbb894f-5aaf-415a-9270-33e4bc2c47b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2f36b9-88b4-4a4d-aeb6-14f1477e502a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0540fac5-add1-4dc0-ab7b-e130908e1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2933dc34-a756-47c5-96f0-8853d744fef0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a135dec5-0f2d-438e-89c8-1761a661e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c210eeb1-e538-4bdb-bfe3-25acc7be1863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c246dde9-850d-44be-b2c4-0fea6c3ec948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad3f5c9-72c6-4a2b-9e0c-8f0b34acc2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32cea39-b30f-472e-a955-7add1d4027a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76137317-7ade-43b1-a767-a2b9b90d0947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccf955c-7717-4231-ae0c-21f91daf7a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ffb7de-b886-495a-96e0-90470514defa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59ceb78-0190-4a34-a029-d6d7a57cd27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a6822-ad1c-4634-a415-0fc8d2337feb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f494e982-86f1-454e-bf31-b38e02432daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e779447-9395-444b-a691-41b97ed6aab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83efdde-0a77-427c-ac8a-e6f793d28bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4807733-92e6-469f-8a95-42905a58bfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d616c991-78d5-4dfa-9b8a-e254aa51cfe4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c201e9-8423-491b-97c5-2443f52b4ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7503885-2265-44ac-96b2-82b100fd5222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73930803-539f-4a46-84e1-e99308474dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90eccfd-77c3-41d5-b6d6-444eaa44c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a243a9d-fe4d-4bd5-9695-9d564cfe75b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d7074-a32b-43ed-8abe-135cc9b3f6ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96663d7d-4852-4ea3-a438-e56f4063fbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdf9237-5c58-4455-af43-aec1b5a4fb74",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f19bcb6-2ddb-4c12-8fb7-3ebbac0c267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1c7dce-7cdf-4b64-a6a5-fc25254baa44",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d797cbc-c5c0-451f-b858-e1274461e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d7a2a9-37bf-4d0b-887c-02dd0f452d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dcf5af-3ae5-41b0-aeea-303b0c252281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184dc3cc-e34f-4112-a75b-df7bd099007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1b3a1d-022d-4eba-a91b-2220421f53cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e14e22-8895-4f33-979e-d02fc8772ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3acc276-97b1-48f7-83c0-c92621fc68f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ce48ee-3630-4235-a7e0-f29602a5a5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24478eaa-ec71-49cf-afd2-cd55291e3e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcffe7ec-7fd5-4208-b8fa-d29d3e7ae322",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6766bd9f-fd0b-49a1-8860-9457e4553d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078745e5-bdfa-4125-9774-7fe534172f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0a785c-4346-4495-865f-5a0631604015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea28e7d8-467b-4309-a311-500593395a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a20d8c-01f2-475f-960c-361ef7020e51",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e18915-5d66-4eb9-aff6-5f6235219e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afaba49f-844b-4586-ba91-c93a4409e558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830ca335-4557-490d-8c7b-e7072d2533a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b67c3c-2d74-42c0-874c-4dd40a2ae055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b980c3-ace1-4442-bbe2-cb417c963fe7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd5619-b755-496b-8975-ce196b507cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576067f7-8ab9-4897-b61d-f3570774df46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b40e1dc-6c10-435f-a8e8-98f8d33be4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d71961-c094-419a-a74c-5a82846255e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65591f-9d5a-43fd-8d91-df9325df5c44",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641b47b3-fb35-4035-b1dc-4063ca9adb2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59ea623-fe11-4175-881b-c532f4158f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01417538-f998-4d37-8d9e-738c6e6bc9b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd45d23b-ed3d-4149-83f2-caad59163ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e87f70d-4268-46e1-b7b9-77e051d03594",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c0ded0-a085-4d37-bd3f-53ca094bb985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcff52b4-f131-4939-875d-04cda4fde4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d12ef66-61e2-4664-8b28-0557c180148a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183e2b0a-cbc5-4c23-b57d-4d6784ad1f83"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50abdc72-aa1d-4d16-a385-1efea919125c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af7f9ac6-46d6-40d5-894f-31fe1a06cb35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdf87f56-cf35-4ed6-9199-7cedb0f901ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54eb0dd1-e99e-4440-82d5-80ba8bff33d2"
                    }
                  }
                ]
              },
              {
                "id": "fe54a0d3-132b-4c82-8e53-b01211759162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efb10ad9-d81d-420c-8db9-26efb57f867c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ed2b54-e7a1-4f63-81d6-f0f6a6e65385",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "23c8dc9e-fcbd-4a91-afde-7435605d30f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d820e-d7d8-4a2c-adec-8665a21b8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bd61b51-2343-4b10-8681-d110545f15fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecf90ccd-fa3b-4baf-9714-7364e5604c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6971175a-d94a-42c2-bcda-bd22f0391d38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d1a6df6-ef54-4a2b-8939-29912ba10071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20f64392-1a4f-4392-a75c-3383a0e14715"
                    }
                  }
                ]
              },
              {
                "id": "7eb83e52-bf00-4145-b08d-1682144e361e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dea0ca05-2b44-4c46-b097-f0c0d9036738",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f1b4ee-f199-41a7-a541-ab4e4c1c2e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e46a75d1-aa7c-476f-bc84-3647d01e979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b19e5b4-4d9e-42b8-a58e-573d8dfa462f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7d2788-b2c6-4281-aeca-668d0d2ecd3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3f4d6b0-7d13-4c86-9002-81307a81d9fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4061158-f8a2-4c7d-bb94-d1fb3019c0e3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abc1cdc6-3b26-4111-a7b1-6cc389369c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dc24a5a-04b7-4553-9468-c2fe1c9df8d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08715056-fb83-4c1e-bac4-6f1a968c43e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9afa60b2-b9b0-499f-930c-2316a44e7930"
                    }
                  }
                ]
              },
              {
                "id": "3243b3f1-3aed-4724-af8b-a11d3235cdf5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff8e3a89-6f0e-466f-942e-552d8e8beeee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6508893a-74be-4cd8-af3c-4ad5988c2dec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "537194c7-56e6-4a84-8fea-00f3b0370a22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f295c673-8387-4278-ad0d-b98e5293709f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b85d81ee-cb62-4975-b836-2335c75e991b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b306bef3-8f53-4aea-9444-e763a98ff96c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4bce7d-227d-4422-86ce-a7b193091033",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccd2641e-61c5-4417-a5ce-31e6176128cd"
            }
          }
        ]
      },
      {
        "id": "ac88da81-63a5-4b3c-a0b6-2b09b9027116",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9eaf8475-0162-4c53-88f3-ee7dd2f49456",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a99a2167-5063-4571-8a9f-f69f230ba106",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "595020cb-3be2-4f7f-8a75-539419d55832",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b4ad13-e82a-497a-be0d-84a1a95327f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ee6b1d2-c752-4171-92bb-5905d2403aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d93a19b-5dcd-40ef-93dd-03a2f9818e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5132430-c042-4416-a3bf-39485b5cc85d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6985d719-75e2-40b2-a8af-4aa061a61a1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cc4c609-2a40-43a7-b3e4-fcfe971ef38d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff395a90-8214-4f54-a6c7-e9313767515d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256afd16-31c8-4797-82f3-c1702ac070d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d708e97-d724-4261-af55-7d221264469b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3232d006-3337-4ab7-8764-1e72176b6a74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfb14dc2-dc7b-4d8d-941f-a2a271b83f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3ea2f38-95f8-4bd2-a276-9b8502fb6aa4"
            }
          }
        ]
      },
      {
        "id": "605899fb-e1b0-4e9e-b42f-7e7dfb659b2c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5d367585-a7ca-4520-af95-7ffdf98c5acf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7fedd16-63c8-445c-ae4f-cd85730478ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08dc532a-260a-405d-aa04-6432bed9ff56",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fdd788-74d3-427d-a13e-58d1fb59a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "012b7797-9a0b-437d-a3fd-1642814ffac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc809fcf-f12e-4c76-8c54-fae245616dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec618e84-6f59-40ec-9700-e3cc0448378b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cb24402-e53b-49d6-b529-8ce847967546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2101da30-c87c-43e8-8796-f5ad1eea154c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fea063c9-87c5-412c-bdcd-99c4b96bbba6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ff04621-6928-4b7d-838c-7e96183d7b10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc9d34b5-2c87-4847-a102-ea7a0496f3a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33a7bef5-56be-4f20-9a0a-4291844cb774"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb1a76d5-61df-429e-838a-cadb3a708139",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9889ab49-fe10-40b1-9bb6-88b3440e32fa"
            }
          }
        ]
      },
      {
        "id": "eaaf3434-325f-43f0-b5ae-188c06faab3f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8fe734c-07a3-49b1-a0b1-92941112e561",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07f89eea-dc44-4992-a8a9-09d4af05e60c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c61fe42d-189b-4377-bb35-8cf5beee0c17",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa7b875-c74b-4a83-9c54-ab7633f720fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d557bb40-9e60-48ad-a06f-5fc38ab63ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8617a0-4567-43e2-8feb-0f28880259e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd4d59b8-c2f8-4123-b46f-31d8ce154e31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "790ab1f4-3547-4d06-81f1-2c497e92c094",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae4071f3-a336-460c-9838-c1d332cccf78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58cfa40d-8eb9-4c47-8037-8f34a0a6f31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02134210-5330-421d-b755-d40e625d0767"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d50d0b27-6749-4114-b35b-15f74304b81d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20be5489-86ce-4b2c-8c30-ed2252589537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca0e1f30-f28c-43c7-9d18-9dd467b72bd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51b59022-bf72-4792-b8c3-82f5d3d207dd"
            }
          }
        ]
      },
      {
        "id": "ef7ab72b-a064-4bae-9b06-4fe3fa1956e0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc3b89bb-8e0f-4bbf-b7c0-104f51acfd98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00978acb-c162-48b7-bf20-0d01affb805d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6700a8bd-5350-4731-83c1-05e20f2b1c93",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c6ad31d-991e-434a-ad58-b6160217494e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e22e805-973e-41b4-b86a-2db87e8e621f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.999999999999995,
      "responseMin": 5,
      "responseMax": 352,
      "responseSd": 28.953683521681413,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702600586429,
      "completed": 1702600598908
    },
    "executions": [
      {
        "id": "e263e7ae-b46c-4cc6-a1ff-e751b9c9acf2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "163bf067-f864-4c3a-a226-e65d72cee0b7",
          "httpRequestId": "6bc7b977-e84e-4341-865e-4d2769235bf6"
        },
        "item": {
          "id": "e263e7ae-b46c-4cc6-a1ff-e751b9c9acf2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b15e316-5564-425e-8763-c0ef195024e1",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "2f6a0eac-f3fb-4ae9-93f5-bed1c52d9f12",
        "cursor": {
          "ref": "048d4060-ff67-4537-83e2-bab97f2ca3dc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "957f60bc-0b1b-4842-bb30-e5d9882eb7c1"
        },
        "item": {
          "id": "2f6a0eac-f3fb-4ae9-93f5-bed1c52d9f12",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f51b38ed-166a-486a-bd07-bba381491138",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "131629f1-ecc7-4ec6-af38-d37f20987f9c",
        "cursor": {
          "ref": "1f092803-fb46-4ffc-9f36-59a8108e5393",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d166809f-2b37-4c72-914d-d95e48d8706a"
        },
        "item": {
          "id": "131629f1-ecc7-4ec6-af38-d37f20987f9c",
          "name": "did_json"
        },
        "response": {
          "id": "fd948315-6505-41dc-8f21-fc4f9c9f5677",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd9f21c-df53-4544-8355-ae980684aed9",
        "cursor": {
          "ref": "c4aaaa7c-9185-42b9-bc84-3ad62499effc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da0907e0-77de-4439-a950-9d9d2d1fc4c5"
        },
        "item": {
          "id": "abd9f21c-df53-4544-8355-ae980684aed9",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7c5273-a5d2-454c-b1af-0b40918d9a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd9f21c-df53-4544-8355-ae980684aed9",
        "cursor": {
          "ref": "c4aaaa7c-9185-42b9-bc84-3ad62499effc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da0907e0-77de-4439-a950-9d9d2d1fc4c5"
        },
        "item": {
          "id": "abd9f21c-df53-4544-8355-ae980684aed9",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7c5273-a5d2-454c-b1af-0b40918d9a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29598d2b-3439-4160-acd5-d200ab781177",
        "cursor": {
          "ref": "bdab609a-043e-4a4d-a761-442958f50ac2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6a6dad50-b94d-4b7a-8bc9-b2d130b5a823"
        },
        "item": {
          "id": "29598d2b-3439-4160-acd5-d200ab781177",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b9ee5dc3-ce71-40bd-ad7f-17b6300c6c0e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a1f8b-b1fb-4264-b51f-7d61ea88783b",
        "cursor": {
          "ref": "6c14befb-043e-40c7-a843-6c7869e9bef1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b1b519bb-5664-46b9-83cf-40caf3475232"
        },
        "item": {
          "id": "ba5a1f8b-b1fb-4264-b51f-7d61ea88783b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7066f9b4-7c28-42bc-b3ce-f7910e5fd294",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d87bfdf-2016-4ba7-8e58-a11ed5912ade",
        "cursor": {
          "ref": "95868352-884f-4cbb-8335-4ee81a8af0a4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "004264a8-d1dc-4c64-80c7-74d4ebca0b9b"
        },
        "item": {
          "id": "0d87bfdf-2016-4ba7-8e58-a11ed5912ade",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c3bde983-2975-4d25-be86-b9df237150cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3903cf-5928-4d80-92ac-c839d067562d",
        "cursor": {
          "ref": "caf55702-a06a-47d7-89ee-7b2478a8e115",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a1fc69e-66dd-4bce-b860-1422432984e2"
        },
        "item": {
          "id": "4d3903cf-5928-4d80-92ac-c839d067562d",
          "name": "identifiers"
        },
        "response": {
          "id": "87890884-89f6-493f-9b73-66cdb85d3464",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2ff4c4-e52e-4654-8b38-758001496086",
        "cursor": {
          "ref": "a6968caa-364d-434a-a78d-b6c574004e3c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c6630c1-7037-4177-b3b5-77983001c368"
        },
        "item": {
          "id": "ec2ff4c4-e52e-4654-8b38-758001496086",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f79c1681-4a63-47ec-95bf-030bb1164717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147cfb72-bf53-479c-ae22-977734030362",
        "cursor": {
          "ref": "9d130d71-a9a2-42be-be8d-3789a13d3983",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5f41a9d-e476-4969-91f1-63552c3f4da7"
        },
        "item": {
          "id": "147cfb72-bf53-479c-ae22-977734030362",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2987b3d5-1dbf-4abc-81b5-c592b303a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627213df-e8c8-4b2c-bedf-92c90a40d374",
        "cursor": {
          "ref": "5a3d42ac-2f08-4ff9-a0ed-1864898961a6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "abab0e71-45da-4fb0-9be1-d2407d03d394"
        },
        "item": {
          "id": "627213df-e8c8-4b2c-bedf-92c90a40d374",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c556faa-cbac-4913-8165-bb0434b616bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba8c5dc-1ab6-4f4e-a8df-b65df366fe0c",
        "cursor": {
          "ref": "146bca98-2459-48fa-bf5a-c6340368d455",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5da677d7-f0f7-4759-926a-646c1aa246ec"
        },
        "item": {
          "id": "eba8c5dc-1ab6-4f4e-a8df-b65df366fe0c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ce2c17af-3612-4b07-95b2-12aadce570e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184a9a25-b15e-48ea-910a-ea58e5470f82",
        "cursor": {
          "ref": "7e17de2c-c6ba-4b02-803a-6ed0cd93722d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "015370cd-7d7b-46ea-87c2-efa49e8a25fc"
        },
        "item": {
          "id": "184a9a25-b15e-48ea-910a-ea58e5470f82",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a04c7a2-718c-43c6-a9d4-cae6a4df34c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbb04fa-0d94-4cb4-b029-cec811e34820",
        "cursor": {
          "ref": "45bf75fa-7aa9-4df2-a1e4-fc759a035da0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "254f45c3-8446-427a-ab21-0af192bf9d46"
        },
        "item": {
          "id": "bfbb04fa-0d94-4cb4-b029-cec811e34820",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0183f112-4c5a-41c0-8b03-5eae5dbff432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330dc9c2-ffb3-43d4-897a-45805f2bbdf9",
        "cursor": {
          "ref": "4648b6dd-bd89-4032-ad73-3e48f47adc43",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0f3dcf57-59a4-4a2c-b33a-3a0b26eae9c8"
        },
        "item": {
          "id": "330dc9c2-ffb3-43d4-897a-45805f2bbdf9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ef557bfe-5204-43f9-944e-a52211658141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df0a174-3c24-484b-b7f6-f1adb1317716",
        "cursor": {
          "ref": "af52d073-8b1b-4098-bb9d-4f19404bd56b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8aa5ba03-f093-4cf5-9925-59a3a5a15853"
        },
        "item": {
          "id": "9df0a174-3c24-484b-b7f6-f1adb1317716",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9ffc5cd0-7729-4d0f-a765-6c6f95961904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402710ca-f023-4800-a7b0-470b9ba66a1a",
        "cursor": {
          "ref": "72b20bf4-df9a-4e29-894b-4ae29bb1cd35",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a15ed7f9-3943-4c21-b08e-9b13669666b6"
        },
        "item": {
          "id": "402710ca-f023-4800-a7b0-470b9ba66a1a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b14c28a-9cd0-485e-ae5e-94c78f6947fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d518c19-a894-42b8-85cb-93f7e81a85e5",
        "cursor": {
          "ref": "05fca085-22cd-48bb-b052-e08b9330d2ab",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "530807fc-ca32-4be0-8e6e-bbf2d4bc629a"
        },
        "item": {
          "id": "6d518c19-a894-42b8-85cb-93f7e81a85e5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05e46e2c-e9ec-43d3-83f3-cbe9090ef9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0f675-cf4f-4c06-8c3c-452a1c5404a4",
        "cursor": {
          "ref": "baa80431-1c27-4541-bf52-7c73c642b219",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "424afd39-a0de-42b5-81bd-9b4b86a67c9c"
        },
        "item": {
          "id": "fae0f675-cf4f-4c06-8c3c-452a1c5404a4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e6e9a877-c5a2-4727-8e50-184f0e8deb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ea9552-6c36-4b4b-9e74-8ccbf2520461",
        "cursor": {
          "ref": "6fa7a268-cb9e-466e-a68b-f35c2d2ff431",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7d49b40-55e2-451e-821b-4cd6616dd487"
        },
        "item": {
          "id": "e9ea9552-6c36-4b4b-9e74-8ccbf2520461",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "840d1430-dc51-463a-8672-0c2f0c1e1f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb76e80-0d9d-4c2b-a1f4-059adbcde172",
        "cursor": {
          "ref": "ed146ac2-04e0-456c-a1d9-fed24474e7af",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5f6f4ad-565c-4685-8fc0-eda4323c8608"
        },
        "item": {
          "id": "3fb76e80-0d9d-4c2b-a1f4-059adbcde172",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd17c1cc-3be4-4dda-9e59-341f0481b43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162502f1-a966-44bd-b4a5-6be6934ca442",
        "cursor": {
          "ref": "5f926d67-741c-4e61-9f07-5e82e650a0e3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bf2ce5e5-8987-4df2-b26c-04979b81f3bc"
        },
        "item": {
          "id": "162502f1-a966-44bd-b4a5-6be6934ca442",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29625621-d718-4df0-ae94-763f9d5c4fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a54e4f-eeb4-47f1-84a3-96600498292b",
        "cursor": {
          "ref": "54a88087-9eb8-45e9-b36d-7aec9a185d98",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f49d3f56-4fad-4069-b139-5f4fe223f995"
        },
        "item": {
          "id": "21a54e4f-eeb4-47f1-84a3-96600498292b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d383f210-10ab-4d22-b916-f7877e9376eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906d4de9-1f98-40e9-8c22-23313fd23722",
        "cursor": {
          "ref": "6cebcf96-e5ed-421c-a3b8-75a68a7a8266",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ff27f565-c0f0-41c8-b4b5-e4236b2e58ea"
        },
        "item": {
          "id": "906d4de9-1f98-40e9-8c22-23313fd23722",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45a5d4e2-c144-4601-b719-d1b5c8ccc53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66a9d3a-d66e-4ccf-8da7-f97c2e4b8941",
        "cursor": {
          "ref": "ccd17b06-f28b-4251-a68d-b7de1fc40a05",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b7af213-611c-49f5-bd29-d5a23fa87eaa"
        },
        "item": {
          "id": "e66a9d3a-d66e-4ccf-8da7-f97c2e4b8941",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dab8d01c-0514-4337-9c9c-535dec67ae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002f2904-bf27-47b4-ae0b-faa08a0c74ea",
        "cursor": {
          "ref": "815face2-738c-48a8-b437-d3137b22f058",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d809b19b-30a0-4f69-9d86-1d500c95cd0f"
        },
        "item": {
          "id": "002f2904-bf27-47b4-ae0b-faa08a0c74ea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "33af4bd7-31dc-43bd-9024-0e1ea7c41254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d1eec-47c7-4389-9160-c43a4a573af1",
        "cursor": {
          "ref": "4a241601-121a-444d-9a82-6fdc0233bf0b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7098fda0-cb53-4966-9147-33019fe991c7"
        },
        "item": {
          "id": "453d1eec-47c7-4389-9160-c43a4a573af1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e89a589-ba68-4a71-a1fa-be32f3ee26c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc039a9-8b3b-4e50-9d94-8f1e238ac243",
        "cursor": {
          "ref": "183cb794-0ba0-494e-b85e-98fe843a2f61",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e50a692c-95a5-4aeb-818b-39c9b7f17564"
        },
        "item": {
          "id": "efc039a9-8b3b-4e50-9d94-8f1e238ac243",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "58763a1a-b58c-4bd1-89c6-ed75a77f3669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e8e3b-bed6-4762-89c6-6608211472e7",
        "cursor": {
          "ref": "36a36998-34f8-47cb-8a7a-797074675dc2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e304e188-51f4-4cbe-9194-7c6b1262b9b5"
        },
        "item": {
          "id": "a06e8e3b-bed6-4762-89c6-6608211472e7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "de3f19ca-303b-4882-b879-0a582142c729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5153561-4774-4a2d-8d6f-b66d3d45bd2a",
        "cursor": {
          "ref": "6f4609ca-398c-46f1-a00b-71d2d65ada23",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "22e1464e-d1c7-4d10-a671-d28206fb0123"
        },
        "item": {
          "id": "c5153561-4774-4a2d-8d6f-b66d3d45bd2a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5209cb74-d725-44e6-8dbc-8687c011d231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd735bc-a06a-41a0-a152-a249fb5b83fc",
        "cursor": {
          "ref": "43fbcf88-608a-4346-978d-17ca4c519c61",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "53825640-dd33-4ab7-9a85-6c416a635515"
        },
        "item": {
          "id": "abd735bc-a06a-41a0-a152-a249fb5b83fc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a8c63b85-966c-40ed-9f4d-cd78ac4720ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c886658c-2d08-4c69-b11d-008553029cf5",
        "cursor": {
          "ref": "53c74fb3-c15f-4c55-b70d-9f255cf2b0b0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "21735a19-c89c-4595-820e-8a91290a1075"
        },
        "item": {
          "id": "c886658c-2d08-4c69-b11d-008553029cf5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d36ab1a5-3ced-4377-b6bd-51791f1734d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fd5b84-7101-4b7e-bf4e-7044ce220c4e",
        "cursor": {
          "ref": "78834cc1-9d7b-45b5-8da1-61fd7a418232",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8c963b2d-bee7-464d-8363-b7b5dfddc864"
        },
        "item": {
          "id": "c9fd5b84-7101-4b7e-bf4e-7044ce220c4e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "673d35d7-40c3-48ec-9537-f90d6b5d1d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a602b-b254-4cf8-b9ca-b1671c7f9df9",
        "cursor": {
          "ref": "069f3171-a6c1-42d7-ae9b-ec4ee2aa0954",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b24b93e5-14df-4858-9023-2bf756b25caf"
        },
        "item": {
          "id": "638a602b-b254-4cf8-b9ca-b1671c7f9df9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "822f6ccd-ba6a-4fd0-9859-7b93f8b738ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcf2452-6306-4145-b16f-e2dfa4b528d0",
        "cursor": {
          "ref": "a095fc0f-c3ff-4730-b350-eb1559942719",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a24478e3-039b-43b0-b700-5d593d3ea26b"
        },
        "item": {
          "id": "9fcf2452-6306-4145-b16f-e2dfa4b528d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "35f7b1e1-1bce-45f1-a097-b4f984013021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa31cce7-4c4d-40da-b100-4badc66fc9b9",
        "cursor": {
          "ref": "4eb81cd4-40ca-49a7-8596-b4b2f6421554",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "45208dd6-8e8c-4493-93c9-70e05662db27"
        },
        "item": {
          "id": "fa31cce7-4c4d-40da-b100-4badc66fc9b9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "141b8929-f1e6-4731-98f7-d5001a0311ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d77c03-7c2b-4331-a457-b399f9de0201",
        "cursor": {
          "ref": "612bc3a6-d314-4b98-9a69-3103c4e0a640",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "36f858e1-9958-45d3-a70d-b5561c3eaf1f"
        },
        "item": {
          "id": "43d77c03-7c2b-4331-a457-b399f9de0201",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98919b95-518b-4a56-a290-cbb2a82b5f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89239da7-3975-4dee-826d-a5f823ec793d",
        "cursor": {
          "ref": "e5550b89-4b48-4a50-a262-f9be14c85825",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fc20adc8-0c65-4bed-b36a-400bf46500c9"
        },
        "item": {
          "id": "89239da7-3975-4dee-826d-a5f823ec793d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e6499221-2f7a-403a-8dc3-bee11b53ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487d35f9-df19-405d-b6e3-0e6cedf7c112",
        "cursor": {
          "ref": "2d80727d-6c8d-4b3f-971e-52b1f1cb5135",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f544356-6768-4352-92f8-cc0bea50c286"
        },
        "item": {
          "id": "487d35f9-df19-405d-b6e3-0e6cedf7c112",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5d2979c2-fa5e-41f6-bd21-89c70be1fad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d377b96-04ed-4749-a69c-dec242ace54c",
        "cursor": {
          "ref": "ed91e4cc-66f3-4e87-900e-8598eb57aa27",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "58c7ffb5-3861-451c-8163-f854a5ff5cc2"
        },
        "item": {
          "id": "7d377b96-04ed-4749-a69c-dec242ace54c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "43fc2579-4ffb-4763-bd6c-f49ef23ddd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f734c7-6477-497c-8827-8ccc8ab71433",
        "cursor": {
          "ref": "357e7841-6dc4-4b5b-9bd9-66e969778097",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "17f3a742-49a7-41e8-b567-0a984fa8fc63"
        },
        "item": {
          "id": "19f734c7-6477-497c-8827-8ccc8ab71433",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "92de472c-3a70-4f1b-a5f8-8f662096f29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c01520-a92a-4391-af0f-d71ea0f221f6",
        "cursor": {
          "ref": "87955a7b-a540-4aad-9361-c26cb7cc4c3f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eeef9b65-dddf-424e-8d29-4cdced343e90"
        },
        "item": {
          "id": "f8c01520-a92a-4391-af0f-d71ea0f221f6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "27bdfd91-b8a8-4a52-b080-1e5336593983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b875fa82-7359-4abd-8229-27caf5e67d93",
        "cursor": {
          "ref": "c71a9071-3a2f-4415-a1c3-2f4a1970b261",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "44a1b8aa-3f02-4a3b-b3b5-32c9d8e29bda"
        },
        "item": {
          "id": "b875fa82-7359-4abd-8229-27caf5e67d93",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47add5f4-0030-4a3b-808a-8687eecf4bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c8f834-667d-4cc2-ba89-87a1538757f9",
        "cursor": {
          "ref": "c228bf34-f951-4f3f-8692-2459a69be64c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "682e8e8a-1fa4-43da-b866-b3d2ab02cfa5"
        },
        "item": {
          "id": "72c8f834-667d-4cc2-ba89-87a1538757f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "34f33b19-6c92-49b8-bae2-20d6a50ac95f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8ecdde-f3f9-4c12-8442-4cf060abeaea",
        "cursor": {
          "ref": "824c70f3-4d5a-42bd-b2db-e6811c824434",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "471f14e0-59ee-48fa-b1c7-aaf3207014b5"
        },
        "item": {
          "id": "3a8ecdde-f3f9-4c12-8442-4cf060abeaea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7ce878f-9e2d-477c-af91-5b3480e78e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1cbea5-f515-47f1-89d7-c3575dd35c32",
        "cursor": {
          "ref": "11a98856-1a12-4feb-9c78-26e06409eb75",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "189bfb46-c35c-4ada-a746-26a7ce425b9c"
        },
        "item": {
          "id": "7b1cbea5-f515-47f1-89d7-c3575dd35c32",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "36e6b029-27a9-42bd-8b8b-c4d2b5199f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b415df6-593e-4cd0-ac49-994fb505d4b2",
        "cursor": {
          "ref": "51be67bd-1175-4887-8c2e-4d94a343563d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f4482fa0-0382-4057-bae1-945d1579ff86"
        },
        "item": {
          "id": "1b415df6-593e-4cd0-ac49-994fb505d4b2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f3487632-25bd-4ad4-a41f-93bba12e70c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6088778-b589-4875-a029-b089888a4048",
        "cursor": {
          "ref": "9aa6d4da-7bdd-497f-b667-fa8f5af1bb33",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c38ba010-5f40-40cd-9fe5-bf90735bb5ae"
        },
        "item": {
          "id": "c6088778-b589-4875-a029-b089888a4048",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e094f11e-f9e2-444a-be77-6e45d5b3b964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6511ec73-df3d-4f3b-ae8b-6e4f2ef9f5ab",
        "cursor": {
          "ref": "c2d800ab-f2e6-4300-b6c1-66e37b68c5be",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "757616ee-018d-40bc-b1a4-d961da3c4d27"
        },
        "item": {
          "id": "6511ec73-df3d-4f3b-ae8b-6e4f2ef9f5ab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "907d6c01-ffdb-4e23-820c-737d91b65d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9c45ef-cfda-4763-a499-41d93d50fbff",
        "cursor": {
          "ref": "593c0617-33e5-4dd8-ad05-74a59878b807",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c2b34293-9e04-4875-982e-e10facd63314"
        },
        "item": {
          "id": "4e9c45ef-cfda-4763-a499-41d93d50fbff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7dfbdb62-8e35-41b2-b8ab-1de75d8b85ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebbd17e-7637-4ab4-931d-2316b0057d7b",
        "cursor": {
          "ref": "3265a82f-fac6-4207-9d51-b13028e4c9d4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cbbf7ff5-60b6-46a3-a53f-b9456d8e0ffd"
        },
        "item": {
          "id": "6ebbd17e-7637-4ab4-931d-2316b0057d7b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a51da205-91e2-40d4-a2d3-8c0f30167674",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8301a68-ed95-452f-a245-b455ab1159b6",
        "cursor": {
          "ref": "9286ff6c-6486-43b0-b4de-86cb61ece8e0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e3ebe12c-36e0-450f-81a4-bac5ab96c144"
        },
        "item": {
          "id": "f8301a68-ed95-452f-a245-b455ab1159b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e02e9e0f-3fbf-4a3c-bcdb-837b8fb8b534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e04752-1498-4fa4-8ee4-52d35880035b",
        "cursor": {
          "ref": "b514a033-be20-480a-aa93-0540da74ea7d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db116aa3-96be-4d72-81cc-2ed5d50f732a"
        },
        "item": {
          "id": "c5e04752-1498-4fa4-8ee4-52d35880035b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e5146e93-06fc-475f-9bbf-16cfcdac3ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3aa418-b99a-4f81-84c3-16b602f607bf",
        "cursor": {
          "ref": "f293569a-9422-4e7c-8fbf-ded363079ab0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95dc03cb-20b1-4071-a633-bb3fd23fc11c"
        },
        "item": {
          "id": "da3aa418-b99a-4f81-84c3-16b602f607bf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "67b95fd7-9e40-4a91-b07b-708350537117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e4d658-5ddd-44ee-828c-ab97eaec0df4",
        "cursor": {
          "ref": "2134abb9-936c-4d36-9521-1ea0eaed7a58",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb270aa4-0caf-49ec-9428-33ecfa6bc0e1"
        },
        "item": {
          "id": "74e4d658-5ddd-44ee-828c-ab97eaec0df4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c64c6881-21e3-430d-8121-db66d0b8a614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafb3f6d-78c5-4d72-93d2-b2e8d511cb09",
        "cursor": {
          "ref": "f7a70c89-16e3-4327-a810-072b708233ec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5c514a18-005c-4aaa-918c-34b2fe80b5aa"
        },
        "item": {
          "id": "eafb3f6d-78c5-4d72-93d2-b2e8d511cb09",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9e830246-69c4-4afd-8f6a-bf552a4ae71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038b4187-eaad-409a-aa8b-142b04edad9d",
        "cursor": {
          "ref": "1e22480f-5e0d-46d4-81f4-7803baf7aeba",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b7c08e39-c57f-4de3-af6e-59a0077b0395"
        },
        "item": {
          "id": "038b4187-eaad-409a-aa8b-142b04edad9d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "566879f4-38b9-4014-afc3-fd8ddb969d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140c8c29-1ee9-43ee-ba76-bca034e71583",
        "cursor": {
          "ref": "23b0721c-dc48-40f8-a242-eed55d88e064",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4e3a7f38-f436-4dc0-8eeb-e8a2e9c20fa4"
        },
        "item": {
          "id": "140c8c29-1ee9-43ee-ba76-bca034e71583",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "09210796-51be-47cc-832c-1e429007e708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51655e1e-e70e-4a0f-b6db-724a755d89fe",
        "cursor": {
          "ref": "a8827719-14a8-44e7-b52c-a5dcb6559118",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7b1c7394-fd48-4ee8-aa55-1052caa39530"
        },
        "item": {
          "id": "51655e1e-e70e-4a0f-b6db-724a755d89fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7e5a714-3e0a-4699-bf04-5c15ad53c28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d0cd43-c871-402d-870d-660aa954c176",
        "cursor": {
          "ref": "69a3fe68-9ab2-43fa-95bd-b7cbe2783708",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f0520b29-8ef4-4382-a119-b54134e3e7bd"
        },
        "item": {
          "id": "e7d0cd43-c871-402d-870d-660aa954c176",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cff624a2-1448-49ce-8a86-276d7754958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58254a59-fdb3-43de-a8fe-d3a39a1ea5bc",
        "cursor": {
          "ref": "9a949c4f-c07f-4a93-b00c-98081634a47e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8f6898f2-f3f2-44da-b482-2106999c4097"
        },
        "item": {
          "id": "58254a59-fdb3-43de-a8fe-d3a39a1ea5bc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8510788c-71cc-4eeb-9151-455830d52f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5e4b8f-5ae7-4a48-b021-5e93ba4c2632",
        "cursor": {
          "ref": "7a67f1ed-dac0-4eb0-9d0f-6ba6503f1eec",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14df05d8-a6b8-422e-843b-a06da4ead316"
        },
        "item": {
          "id": "8a5e4b8f-5ae7-4a48-b021-5e93ba4c2632",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b04872cc-570b-4169-985e-f8a58e5fbe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817f186-e7ab-4c64-853e-f9f0111731fd",
        "cursor": {
          "ref": "00c5ca0d-cde1-40eb-9813-f4bda9dcaecd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "721b0b83-1087-47b9-8b45-0c93b7ebd6c4"
        },
        "item": {
          "id": "8817f186-e7ab-4c64-853e-f9f0111731fd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "94381610-3185-4e0e-ab33-8cb1a1dbaba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519229a2-28f3-418e-b67e-2579f4f2babf",
        "cursor": {
          "ref": "8e390a21-0373-4988-ad7f-b3a5166a4b8c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4644329d-3190-44d1-97a6-29fa3a722ce6"
        },
        "item": {
          "id": "519229a2-28f3-418e-b67e-2579f4f2babf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b94c8fb0-a13d-48ba-9b67-1b6c3a96bc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17b24e0-8bb5-4b83-bf87-748a6c231e3f",
        "cursor": {
          "ref": "66a895e8-8da2-4784-ad8c-c163507e6bfa",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20a24225-927e-40e1-a314-7114aac19461"
        },
        "item": {
          "id": "e17b24e0-8bb5-4b83-bf87-748a6c231e3f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2fd59fcf-2d7f-4a2b-be74-a777a7663e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eee77e-2032-41d0-bfdf-788020786e66",
        "cursor": {
          "ref": "40c91740-2946-413b-93f3-11958ce10281",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c84d1445-6f67-43ad-ae06-555caa2ada0f"
        },
        "item": {
          "id": "95eee77e-2032-41d0-bfdf-788020786e66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cbd17452-3ec6-458b-8ed0-9f5577d6dffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4c5f24-8bb1-45bd-acbf-90bac5e19e97",
        "cursor": {
          "ref": "16ab0d99-d31b-4546-b6d4-49d5621d6ba7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cf2f9136-cbd2-47dc-8430-2c500d9c1e3d"
        },
        "item": {
          "id": "8e4c5f24-8bb1-45bd-acbf-90bac5e19e97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a2577919-9090-44a4-a4e2-f4397e1eaf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499efeb-976b-479d-a515-ea4539394dd4",
        "cursor": {
          "ref": "07504540-80f8-493d-aa13-2b6114fca24e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71d83921-afa6-41f5-9cb8-ee9c9c29d6a4"
        },
        "item": {
          "id": "9499efeb-976b-479d-a515-ea4539394dd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a691619-95f1-4660-a782-61e9a84c0412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bb2e87-e56e-4ca2-949b-39f7902996ee",
        "cursor": {
          "ref": "7dfc514c-6d5e-47a9-8770-72357582c031",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "05a27b54-2f6c-44b6-a002-0add27cfda0a"
        },
        "item": {
          "id": "49bb2e87-e56e-4ca2-949b-39f7902996ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3f12b068-0933-4f39-ba91-a61aa5e79989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67647370-e26d-470a-9f86-a79c7ed56ed0",
        "cursor": {
          "ref": "51a2e239-e61c-407c-8e57-c2c727c4ebb1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "635a0415-fc60-4c77-a9b5-9860f82ffcf5"
        },
        "item": {
          "id": "67647370-e26d-470a-9f86-a79c7ed56ed0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d7712753-3b7c-49fa-af20-1a84397d8355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189841bb-7e68-4614-b932-605b62b54114",
        "cursor": {
          "ref": "09234fbf-3d17-4fa5-86a1-8480cb46439b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3320650c-f557-4e43-ba62-2bdbefb7b078"
        },
        "item": {
          "id": "189841bb-7e68-4614-b932-605b62b54114",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a6e86515-8080-484d-854a-135d44aa1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867e64f6-f352-4284-9d23-b43572788242",
        "cursor": {
          "ref": "133fba00-9ab4-45ca-b104-2d5458943251",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7e6139e5-2d2c-4b3e-8e35-516f90000f7e"
        },
        "item": {
          "id": "867e64f6-f352-4284-9d23-b43572788242",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "119e5209-b489-4ae2-9824-a0c5828ee371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f73750-0a13-4ed2-9f46-55ea70f307fe",
        "cursor": {
          "ref": "e3782ad9-ec2f-4b31-891f-bf97be2d9608",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7466a8f6-0e06-4d64-8614-464840ffcf1d"
        },
        "item": {
          "id": "45f73750-0a13-4ed2-9f46-55ea70f307fe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "36ccc48e-f7f0-4d79-9209-5c3ab80d2e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae8fd84-9383-4a50-a6de-c1b7ab78ed2f",
        "cursor": {
          "ref": "4da9eb61-70e3-49ec-85bb-b25b0f258f09",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5a778d40-0bb8-4888-9af6-ace181af7650"
        },
        "item": {
          "id": "6ae8fd84-9383-4a50-a6de-c1b7ab78ed2f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "840062d3-6809-42e6-9485-ae18908b33e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917d0094-f7c0-4e80-94df-c1dac064f0b3",
        "cursor": {
          "ref": "27200ee0-a6e5-41d6-be8d-6681832bbd57",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9bc5f61e-8f2d-4500-abbc-6826c0c39f01"
        },
        "item": {
          "id": "917d0094-f7c0-4e80-94df-c1dac064f0b3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "199fdf6a-9b11-4b55-895f-56170cd17814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300fcdbc-18cf-403f-b197-0eefaa5fe330",
        "cursor": {
          "ref": "9e4775bb-da6b-4a04-9458-799fa643d7ea",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d2a444cb-a435-4696-b57c-d36ca0d90af9"
        },
        "item": {
          "id": "300fcdbc-18cf-403f-b197-0eefaa5fe330",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "71043e51-2f78-405c-8a28-20c475949c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ff8b1-13db-47d4-9e89-3dd350f1c04a",
        "cursor": {
          "ref": "9e5fe554-8e7e-4ec8-8ef5-78cf5a40f68e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "222e9942-101a-4922-a232-7963d315ca20"
        },
        "item": {
          "id": "319ff8b1-13db-47d4-9e89-3dd350f1c04a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f67e8069-19e4-4396-af3e-e4b3f22b1ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2e7b85-618a-414f-9e91-841c799dd1ed",
        "cursor": {
          "ref": "34d505c1-2b28-4c6b-b185-1cbc6b72db25",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f7f10fe0-9521-43da-9acb-c90edc8fc231"
        },
        "item": {
          "id": "fd2e7b85-618a-414f-9e91-841c799dd1ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "556e4406-d871-4939-9ebf-7eade96ab966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b11365-3830-47dd-a73d-aa39c66324cf",
        "cursor": {
          "ref": "7d6a4839-3710-4777-9036-b290cacfc58f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ff80e6ac-aaea-4c56-b215-6caf446d46ee"
        },
        "item": {
          "id": "46b11365-3830-47dd-a73d-aa39c66324cf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3434d3a0-b94b-4186-ae0b-4868de6d842d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8363927c-87f3-4a1a-93f9-a6da16e3608e",
        "cursor": {
          "ref": "b93aaf57-93ec-49f1-853a-1689720f4475",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4d045939-5fde-4702-901e-320c9a71cbf7"
        },
        "item": {
          "id": "8363927c-87f3-4a1a-93f9-a6da16e3608e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "470bf269-3d42-47a2-bcee-5dd8db8e16db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d87276-efc4-410d-8ce4-0c71c30416e4",
        "cursor": {
          "ref": "3d0e8d06-4169-462a-81b2-3da85a12b239",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "61c6a7de-ad8b-4201-9301-8172eeba52fb"
        },
        "item": {
          "id": "c8d87276-efc4-410d-8ce4-0c71c30416e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9968504c-e9e7-428d-ad66-48179c710edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19a422-4895-44b2-998f-7d816f24244b",
        "cursor": {
          "ref": "1c948d23-edb1-4c16-bfaa-74da4500b18e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f2a65897-fc6a-4359-bc10-0bbc4c6f07de"
        },
        "item": {
          "id": "0e19a422-4895-44b2-998f-7d816f24244b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "06a25f8c-4ba7-47b0-8398-cdf74f4a6e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0df6d8-0187-4fda-bd7a-240fc6346ce9",
        "cursor": {
          "ref": "add32735-8f35-4bf9-95da-ed7f2fac679a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1149636-433c-4222-89b2-81049da42170"
        },
        "item": {
          "id": "9c0df6d8-0187-4fda-bd7a-240fc6346ce9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5a0bc50-11f2-473a-ba0d-be66ff31ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b465a09-1216-4cc4-91a3-f233791d5400",
        "cursor": {
          "ref": "63eefc93-dae8-4fe9-aecb-af0f07cda25b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5f4781f2-513d-4e3f-901e-06fbdb6c32e0"
        },
        "item": {
          "id": "3b465a09-1216-4cc4-91a3-f233791d5400",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f3aadf54-7a13-406f-8f78-e948ab6be9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f60b68-cbac-459c-9d18-9451466c1c12",
        "cursor": {
          "ref": "d30351cc-edfd-4065-8270-6132548fdbe8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "34a07005-ca09-48ae-a4e9-e09ed0754427"
        },
        "item": {
          "id": "06f60b68-cbac-459c-9d18-9451466c1c12",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3324e5b8-ed28-4c9c-a76d-d35385381755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b94b79-838f-4e59-b9d3-b9bd470a0aa6",
        "cursor": {
          "ref": "1e7974e1-f084-45ee-b61a-df5f9846f563",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1d0c351f-eb39-41cc-8df2-3c97fe7c3289"
        },
        "item": {
          "id": "f7b94b79-838f-4e59-b9d3-b9bd470a0aa6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "56d1b500-da7a-4286-b183-4192044a70e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34278b55-a00e-432d-a679-0441c11b65b9",
        "cursor": {
          "ref": "688cddc2-816d-41d7-937a-16feec5fc9b0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5621f2ca-3f5b-469c-8ac4-c616af1e6b42"
        },
        "item": {
          "id": "34278b55-a00e-432d-a679-0441c11b65b9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e182df6-00b4-44d9-9128-cb90ccd045d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa534b66-30d8-4ab1-85ec-a8661988e9c8",
        "cursor": {
          "ref": "03692c8a-bd7f-43e1-84b1-c82a7f23be1c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b9ee1927-2ada-4221-9645-00afde745016"
        },
        "item": {
          "id": "aa534b66-30d8-4ab1-85ec-a8661988e9c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d64821a7-368b-4163-bc35-e5c56c617552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106bdc54-c821-4393-ad06-d57ee9692c4e",
        "cursor": {
          "ref": "32fcdf10-152b-4a15-a220-647cbd064331",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "97264dbe-08bd-4fc8-a59b-d71c61feec5f"
        },
        "item": {
          "id": "106bdc54-c821-4393-ad06-d57ee9692c4e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "232bf801-a955-48a3-813d-ce1e3e5d2dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b756ed6e-6b64-4b2b-bc84-1e192e41d3d6",
        "cursor": {
          "ref": "65d3ad2c-e3c2-42e8-a593-9e65fd59978a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "87867de6-af58-4bae-af7d-6e143910ff59"
        },
        "item": {
          "id": "b756ed6e-6b64-4b2b-bc84-1e192e41d3d6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "61296ed6-37fd-4d20-9e8e-b8c5f94148a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34462450-174a-454b-845e-03e0cf13f170",
        "cursor": {
          "ref": "53509564-6509-4169-b846-f51d0bbbf08e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06830867-2fb5-49fe-bf9d-3ee194f6ab33"
        },
        "item": {
          "id": "34462450-174a-454b-845e-03e0cf13f170",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "92fe073b-3318-4caa-96fe-f01879174dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afc0229-2cbe-412d-b067-5563f9d8bcd3",
        "cursor": {
          "ref": "cc705dfb-bfad-4e80-be11-7fb0caded153",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6bcf2f7-a900-4416-9c59-057a15c57e7f"
        },
        "item": {
          "id": "0afc0229-2cbe-412d-b067-5563f9d8bcd3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a424c52b-d32e-4b78-99b8-346eeaa54f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544f9cb5-67c7-4d55-b418-91958f6846ad",
        "cursor": {
          "ref": "07047ee4-60d5-4f96-bb25-9410d9487545",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab1bcd9e-a928-4078-8c81-38fd135a4a98"
        },
        "item": {
          "id": "544f9cb5-67c7-4d55-b418-91958f6846ad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5595318-966c-42cb-bcdd-947ab46a4e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe6f549-f2ec-4764-96e1-38ce3900c719",
        "cursor": {
          "ref": "c9c11c1a-c439-469c-9814-3b8e246fd151",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a30bfe38-fda8-4aa9-84c0-050b21e3ca4e"
        },
        "item": {
          "id": "5fe6f549-f2ec-4764-96e1-38ce3900c719",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "65914419-02aa-431b-89f4-dc545da792db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a0c05-0063-4248-add7-b92d894b4148",
        "cursor": {
          "ref": "e4348116-f8d5-43e7-ba8e-fbdb8227659a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "028c418e-d667-49d3-8313-7b1b37841475"
        },
        "item": {
          "id": "ad0a0c05-0063-4248-add7-b92d894b4148",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5f94b03a-1144-4a93-8907-83806650d64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bab000-9c72-4ab9-aa4b-700906e41337",
        "cursor": {
          "ref": "b94b0b0e-3d0b-4e57-aeda-fbb7e6b036a0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b5a9bcdd-3d5b-4e35-8457-be06950630d5"
        },
        "item": {
          "id": "a0bab000-9c72-4ab9-aa4b-700906e41337",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2371b45f-b2ea-48b0-b829-b69a7d2c6099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e596f9dc-3b91-48eb-aa29-bf61edb890c3",
        "cursor": {
          "ref": "94ea3240-87f3-4ed5-9694-d295320d6a3a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e75e32fa-415d-4398-97bc-dcf55651799b"
        },
        "item": {
          "id": "e596f9dc-3b91-48eb-aa29-bf61edb890c3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3ed340c3-3552-4d87-8d19-75f773976765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb1366f-b18f-48f8-99e9-937df07a9362",
        "cursor": {
          "ref": "c8fa2e75-ec8f-49a7-a357-b92c82504c41",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "da5ecd38-bdcb-4176-97fc-ec850f68d0a6"
        },
        "item": {
          "id": "5eb1366f-b18f-48f8-99e9-937df07a9362",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9445d4a9-8929-4a3d-8f76-df878277d3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f02f5-1cca-4bca-9ff1-5e347ca5c4b0",
        "cursor": {
          "ref": "b8d08c86-4e59-470c-a006-831650de6dc6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d1726c71-a7ea-4cdd-926e-55608231c245"
        },
        "item": {
          "id": "cc2f02f5-1cca-4bca-9ff1-5e347ca5c4b0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66af823a-f731-4024-9a05-ec289d1ca40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff256b0b-ac8d-485f-9058-24a01fe7b412",
        "cursor": {
          "ref": "de939dca-ab89-43bd-adef-ca9d704d133a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ec96b80e-23bc-4099-853a-5d4d0dfdecab"
        },
        "item": {
          "id": "ff256b0b-ac8d-485f-9058-24a01fe7b412",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0ce22626-b385-43cf-a13a-2b046f987b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d5bf24-8c30-4903-b5b2-cbdf9652305a",
        "cursor": {
          "ref": "fcaa2b2b-3494-46c7-bb4d-d718b44c1f25",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "476d0a31-8a27-4cf5-9f27-d71600f579a1"
        },
        "item": {
          "id": "56d5bf24-8c30-4903-b5b2-cbdf9652305a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5aa5239c-58d8-420b-a0ad-31c9bdcca553",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382aae80-3ce1-4ff2-8f41-961e4f60b3d7",
        "cursor": {
          "ref": "13a6234b-2115-4f0f-8d1b-e9590ad1f621",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "770c2c2d-7022-4c6b-a4ce-38cb312c3f8f"
        },
        "item": {
          "id": "382aae80-3ce1-4ff2-8f41-961e4f60b3d7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0fc2b304-8e93-4f86-b31a-764f8666d48c",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512c5c16-7733-4547-a675-f3ab41423a96",
        "cursor": {
          "ref": "65ffbd38-b425-4991-82d7-c84288950462",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "05a65ef2-b0a7-4925-85c7-0e71c26aeb08"
        },
        "item": {
          "id": "512c5c16-7733-4547-a675-f3ab41423a96",
          "name": "credentials_issue"
        },
        "response": {
          "id": "49c8f865-4cbf-492b-9698-7202c04a1add",
          "status": "Created",
          "code": 201,
          "responseTime": 352,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f6881-b5a9-4bbe-ba3b-4b35f6075d01",
        "cursor": {
          "ref": "461a7872-45cc-4fad-91fb-190f63147d1b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ec47bb85-1acb-4407-923b-2cff20eb2066"
        },
        "item": {
          "id": "ae9f6881-b5a9-4bbe-ba3b-4b35f6075d01",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d2ffa34-be4c-4db3-81aa-a05577b5d39b",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c5210e-3578-48a2-936a-227da8ffd6ab",
        "cursor": {
          "ref": "9015be61-5d7a-46b5-920d-6f150a528e8f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0fdc2cb7-b5ce-4683-b2e9-d83e0a851400"
        },
        "item": {
          "id": "96c5210e-3578-48a2-936a-227da8ffd6ab",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6df3b263-e693-4da2-8657-be7bead6ae1b",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "130dfaed-f6fb-4975-9c2f-b4a819053b98",
        "cursor": {
          "ref": "cb34cd4e-eb98-4ad1-84ef-7194d2aeacf9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "955f2899-0149-44f1-9cef-3631cd8ecc47"
        },
        "item": {
          "id": "130dfaed-f6fb-4975-9c2f-b4a819053b98",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f47e4335-2a94-4eae-a38c-c08fa8236f13",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8473b1-f5f6-4fdc-8f12-f52a114c901d",
        "cursor": {
          "ref": "facd5454-2850-4f3b-b938-d6888750f934",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "42a1bc6e-e6a1-462e-a9d9-0ccfb1a8c9cf"
        },
        "item": {
          "id": "6e8473b1-f5f6-4fdc-8f12-f52a114c901d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9587202e-4abc-4af5-8d11-487bea4ebab4",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2391c83b-4ead-45cf-9726-c5c2e081fb6c",
        "cursor": {
          "ref": "50849dac-1f26-462a-b813-ba2f1c51b4e0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ceba467b-64a7-4740-b8c1-cc6dca0e0c49"
        },
        "item": {
          "id": "2391c83b-4ead-45cf-9726-c5c2e081fb6c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cce36859-22a7-4393-8c43-0447129ecaa1",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64c3f9-3c13-40ab-b10b-506c89ede16f",
        "cursor": {
          "ref": "7ff3d81a-e00a-4408-b169-4743f1de054a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed389002-c009-4a91-8de9-41c44c69f2bf"
        },
        "item": {
          "id": "5c64c3f9-3c13-40ab-b10b-506c89ede16f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c2e5c51-592d-42cd-9073-9625a6106d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b7d85-db45-400e-a440-10ee4d2b6463",
        "cursor": {
          "ref": "89eca785-08f6-48e2-a23e-4d6e3fdcfee7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "681df87a-94e5-4621-8620-a806884c8658"
        },
        "item": {
          "id": "7c2b7d85-db45-400e-a440-10ee4d2b6463",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cacecb8a-ec8f-4fac-a6b5-190604aa406e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca01df9-abae-4b0a-a74a-1b07bcf02798",
        "cursor": {
          "ref": "a685d924-1742-46ca-b473-237b5b5df26f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6e1aeac1-7c55-40fd-b739-b86ed3feb005"
        },
        "item": {
          "id": "7ca01df9-abae-4b0a-a74a-1b07bcf02798",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8bac64cb-6b89-4318-81ed-18141c598ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803dcd53-1496-4beb-8a9d-ebb4c192e0ac",
        "cursor": {
          "ref": "56bacfab-a7a1-47f8-bc0d-a4146fb75568",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5076a82f-f15b-4624-a1a5-36e6228a4983"
        },
        "item": {
          "id": "803dcd53-1496-4beb-8a9d-ebb4c192e0ac",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0139af7f-a3e3-402a-a223-f4db061c7b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaabd274-71fb-4324-94d5-2f189de35912",
        "cursor": {
          "ref": "5eb2b5dd-beff-4499-9ba0-dc5c870ea159",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "82aa7596-250f-4c18-94c1-a9c51e0bec2e"
        },
        "item": {
          "id": "aaabd274-71fb-4324-94d5-2f189de35912",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e6910b06-8dcd-4204-be15-dd7855a43c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b0362f-58d3-4c05-8ee9-cf046dc487bd",
        "cursor": {
          "ref": "7e121e20-e87a-4f99-b4e1-d4a9733beb0f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dbd6ad89-625a-476d-9e47-a90937f2587a"
        },
        "item": {
          "id": "80b0362f-58d3-4c05-8ee9-cf046dc487bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de9000bf-06a6-487b-8ce9-9e712a28c262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ed92f-2fa0-45ae-836b-d654b9bc867f",
        "cursor": {
          "ref": "50d7c198-2743-44f2-b783-f1a11d475e07",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e0b31b2-ae15-440a-a5c8-5358efe9abc5"
        },
        "item": {
          "id": "9c7ed92f-2fa0-45ae-836b-d654b9bc867f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee7d2a0c-425d-4eff-8f39-4d8f17de3afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffce0fd4-a821-4ede-8b17-7171ee047999",
        "cursor": {
          "ref": "4e515d48-a23c-4f62-b70c-79477f92b2dc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c796b1b6-3949-4978-ab8d-a57ed68cac27"
        },
        "item": {
          "id": "ffce0fd4-a821-4ede-8b17-7171ee047999",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "857a05be-18cb-4312-bef3-03757e7bb706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee692ad-9b63-4f6c-a77e-cc21337ecab1",
        "cursor": {
          "ref": "5162ecfd-6a1f-4255-8785-a867113fe43d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8dcbfb8-8d60-4538-be9b-a3052175d586"
        },
        "item": {
          "id": "5ee692ad-9b63-4f6c-a77e-cc21337ecab1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0adee928-14c9-49dc-bd6d-595dddebc57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fdfdb7-f7db-4393-9280-c091d39652e3",
        "cursor": {
          "ref": "b5a797c6-5094-4bc8-957e-a9a33f813dec",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "da05c2b6-e3b4-467b-8911-997f20ab9788"
        },
        "item": {
          "id": "71fdfdb7-f7db-4393-9280-c091d39652e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "846ea9d0-3dab-4cc0-87a3-7fd854542991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab11437e-32df-4dfa-afc6-8445ef9a7432",
        "cursor": {
          "ref": "47c14be4-c2fa-457d-bad8-951ea4b2f4eb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0efc49b2-ad5d-4913-9737-7476c544a3a7"
        },
        "item": {
          "id": "ab11437e-32df-4dfa-afc6-8445ef9a7432",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "534d5c51-de8b-4306-bb9e-57e52fcac796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520aa4ab-7e8c-46d4-b6a8-f50160928706",
        "cursor": {
          "ref": "ba4f7121-5ee7-41a9-afb2-726d26e5a395",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d57a314b-9d1d-4c25-b932-2b42b97bde61"
        },
        "item": {
          "id": "520aa4ab-7e8c-46d4-b6a8-f50160928706",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f2ef343-bdcf-4a96-86bf-6bebb23bdd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b414a-f76b-4664-b43d-49b8eb1fe319",
        "cursor": {
          "ref": "372d0945-37f2-45fc-b9e2-769ab7180109",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a6eba07a-bd22-408b-a2ff-863881a3eeb3"
        },
        "item": {
          "id": "9f7b414a-f76b-4664-b43d-49b8eb1fe319",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46c0d2df-d702-4309-a710-85da9021ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dbb973-a899-4fff-aa62-3dcc411a3b42",
        "cursor": {
          "ref": "799b35d1-24d0-45f1-88bb-f31a52f52fda",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "558018fd-8ea9-4435-9056-7f8cfc35a998"
        },
        "item": {
          "id": "99dbb973-a899-4fff-aa62-3dcc411a3b42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02ae9296-9f9d-41f0-9266-2748986f35c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc68959-99ef-458c-bbf5-5f5efcf72a54",
        "cursor": {
          "ref": "90c5d69c-de24-4b40-a66b-434c5acc36b5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ce23c8bf-0bb2-4db5-aa65-76aa7d703ff9"
        },
        "item": {
          "id": "0dc68959-99ef-458c-bbf5-5f5efcf72a54",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d29ec0fb-19cd-434b-9f5f-009131b28372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd90e599-2db7-4235-8b49-2cf4e7468e9c",
        "cursor": {
          "ref": "d6bcd945-c939-4cae-af64-e2de0e34affd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2237d02b-2a4a-499c-923a-2442f00435ee"
        },
        "item": {
          "id": "bd90e599-2db7-4235-8b49-2cf4e7468e9c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3ec3ad6e-5352-43e8-852a-93be49955a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f26ea3-24c7-484c-b799-aa3339c60130",
        "cursor": {
          "ref": "599d4243-a20c-4780-be20-9ad79ffa2807",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8708f637-ed42-43b1-abb6-7d6563ba97b7"
        },
        "item": {
          "id": "a5f26ea3-24c7-484c-b799-aa3339c60130",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "32ea026a-1476-436d-9e42-2fb14c9bcf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79662d7e-20fa-4a03-958f-93b06155bb03",
        "cursor": {
          "ref": "645e9a28-6500-4420-8c3a-31c1c078f9b8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a962cdb6-ef9a-438d-bdc1-4ca5029340c1"
        },
        "item": {
          "id": "79662d7e-20fa-4a03-958f-93b06155bb03",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5d8c78cd-9daa-4467-b236-f55740c45ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c99dfd4-8166-46b0-8d81-c0cb9804d9eb",
        "cursor": {
          "ref": "fd2b77fc-90b1-4dea-8b1e-4888d9b72473",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f3cad341-18bf-454a-941c-b1fdb65660e2"
        },
        "item": {
          "id": "5c99dfd4-8166-46b0-8d81-c0cb9804d9eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f4528e43-5cf1-4bad-af2a-ab2c5720ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab8c4d-a5bf-4e8f-92e9-27d12261e91f",
        "cursor": {
          "ref": "13829c31-b299-4095-9019-4d786a0d977b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1b820148-2064-4938-8799-639ffce561e0"
        },
        "item": {
          "id": "90ab8c4d-a5bf-4e8f-92e9-27d12261e91f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dcbb72de-959f-460f-a754-69383fdb72b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9549ed3-d267-478b-843f-701980aa3d56",
        "cursor": {
          "ref": "7fac8a1e-bf76-4275-827b-ffc4f967b5ce",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b14b2821-09f7-4f10-a97b-b0017433750a"
        },
        "item": {
          "id": "b9549ed3-d267-478b-843f-701980aa3d56",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9835354e-b079-4f52-acd5-e0bae4b4acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c689f4-b577-439c-9d82-cee6cc75111b",
        "cursor": {
          "ref": "9bc6e23f-2922-4a09-b0c6-a5ade5b88ddd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06188862-fc35-4b31-8508-224794b51507"
        },
        "item": {
          "id": "e3c689f4-b577-439c-9d82-cee6cc75111b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5374a8a0-6a93-456b-9809-6bdd384df539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b68731c-4994-42a3-95aa-e1733f39d99d",
        "cursor": {
          "ref": "d5978161-0832-4899-893a-196e7a365808",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "092150a0-5340-4c6c-a37e-d1add350aa7c"
        },
        "item": {
          "id": "5b68731c-4994-42a3-95aa-e1733f39d99d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7851d398-7f94-4ddb-9c3a-a886e515475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834c8d56-6056-471a-be50-5a44081bcc6d",
        "cursor": {
          "ref": "16c4644f-e145-409f-abfa-6be2846c64d2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea565487-827b-45f7-9831-06533d274d7c"
        },
        "item": {
          "id": "834c8d56-6056-471a-be50-5a44081bcc6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f3184741-0425-48c6-aff6-02ad0500e09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef7d144-110e-4966-93a5-f0ff6c579793",
        "cursor": {
          "ref": "250d63c0-d083-466b-a334-8c9f8ed846c5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2d2710d3-f211-4c47-9608-d429ef2a599d"
        },
        "item": {
          "id": "5ef7d144-110e-4966-93a5-f0ff6c579793",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee607410-e0b4-484e-b290-7450e47347ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa85b09-66be-4fab-b7dc-c0d64151b34e",
        "cursor": {
          "ref": "3f3b8767-97bf-44b4-b1a1-51330c94ab9e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3b88cc35-aa68-47a8-8cf2-75fb1c173575"
        },
        "item": {
          "id": "eaa85b09-66be-4fab-b7dc-c0d64151b34e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b7bf52d-7435-4357-bdd9-0b59b6937c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f7560-35cf-4540-830a-f5884318fbcf",
        "cursor": {
          "ref": "fc53ce26-d8c4-4fa0-9480-7bbb88b2d276",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ec4dc1d2-e3ac-4d66-a76a-d19ba74b92b8"
        },
        "item": {
          "id": "c53f7560-35cf-4540-830a-f5884318fbcf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc46378f-4522-4ad1-89a4-4a13b9e5172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e471090-8117-4cc5-87f1-76b691d7415c",
        "cursor": {
          "ref": "0c152c96-88f5-427c-898f-356163c4b16c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c8042dda-5cba-4db3-a3ae-4156acc3ceb1"
        },
        "item": {
          "id": "2e471090-8117-4cc5-87f1-76b691d7415c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e85631c4-de60-4110-9d7e-b4236337dd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdc168c-0d26-46f2-b57d-8bfa972f5967",
        "cursor": {
          "ref": "219c5b51-6e24-454c-bec0-085ac24311c6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98192dc9-b016-40b2-9340-5761f194c3e7"
        },
        "item": {
          "id": "9fdc168c-0d26-46f2-b57d-8bfa972f5967",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c1d51cf0-8f07-44ab-87dd-4e3d60aa0e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87871de9-d9a6-4d40-93bf-1d69bee48911",
        "cursor": {
          "ref": "a4fb8823-8d6d-440b-b55b-90a949cdc73a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "683feda4-8aa3-4b91-88b3-f141c69c6b35"
        },
        "item": {
          "id": "87871de9-d9a6-4d40-93bf-1d69bee48911",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a6cc547-358c-4c03-8e08-11ef93581a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5228a8-c4ef-47ab-8e25-1535904a8b83",
        "cursor": {
          "ref": "2a04bcac-dfc5-48c6-b84b-4d17225e03cd",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a31f5a78-74bc-421e-b1a8-54d711b357d3"
        },
        "item": {
          "id": "3d5228a8-c4ef-47ab-8e25-1535904a8b83",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75a35333-3ce6-4cb1-b829-45ece0a0ab1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28502527-2f8c-4e78-a0fc-490178dc28f6",
        "cursor": {
          "ref": "91ee0f77-bc80-48ab-bc43-9b5471a06924",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9849ada6-b133-44dc-8dc3-f1b6f185b9e5"
        },
        "item": {
          "id": "28502527-2f8c-4e78-a0fc-490178dc28f6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7de6357c-fbbf-4eb7-9abf-16267fbe8b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f494e8f3-032c-4f05-9651-76873aab6923",
        "cursor": {
          "ref": "2ef626e7-ebad-4656-8cf5-82c53d833558",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "af10ac36-12ff-4726-9312-cb55209cd374"
        },
        "item": {
          "id": "f494e8f3-032c-4f05-9651-76873aab6923",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43334ebf-b096-4ce7-b098-c72af3e8f993",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73cafa-b8cb-40bb-9d4d-9aea9d724516",
        "cursor": {
          "ref": "fa7865f3-e400-46c4-a685-05d2b4ffd6e5",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "69665ced-3ac2-49de-85cf-850ff5babe7b"
        },
        "item": {
          "id": "8d73cafa-b8cb-40bb-9d4d-9aea9d724516",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a4bc756-0bed-4c3e-8478-d6498d3de058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766a4b52-1700-4b64-89a6-509d912c52fe",
        "cursor": {
          "ref": "ae6e48fc-8e3c-413c-b5ec-dbbaf4adc3b9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63fee3bd-31a3-469c-9ee0-c60e309f5458"
        },
        "item": {
          "id": "766a4b52-1700-4b64-89a6-509d912c52fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab739739-2465-47a7-950a-2d026436bf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a5b3c-6d98-4085-862d-3d2bcb89718a",
        "cursor": {
          "ref": "a85d3a61-1a39-4f67-92d4-0be1fe995fbf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cbbf71da-a2b8-4d6c-afe5-662e31e0bb11"
        },
        "item": {
          "id": "a41a5b3c-6d98-4085-862d-3d2bcb89718a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "300b8da0-61fb-41ef-9ac7-5a53c53d230a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bfdc4a-b702-4d97-9cbb-09fb91344526",
        "cursor": {
          "ref": "cfc30ca8-a200-43ec-a612-cf0d19afd4dd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bcff49c2-9343-4a59-aadb-9d7be733d66c"
        },
        "item": {
          "id": "34bfdc4a-b702-4d97-9cbb-09fb91344526",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73e4382c-d6c9-4205-8966-83d5a24e0236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d33339-31b3-42fa-a677-ce66cfbcdeec",
        "cursor": {
          "ref": "cb18e562-07ed-4c41-b2a0-e8a600b90953",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6afb23b9-c670-4168-9368-54d5506dd7d9"
        },
        "item": {
          "id": "b3d33339-31b3-42fa-a677-ce66cfbcdeec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "27fe1943-efe4-4f36-a5bf-e6b2bb2a0545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b40931d-b9db-43ac-8825-0a813ec87979",
        "cursor": {
          "ref": "e17f5ccc-4b37-4f74-8b9c-6c856927b218",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0b9fad11-406d-4af2-92ed-3c16f1f52cc9"
        },
        "item": {
          "id": "7b40931d-b9db-43ac-8825-0a813ec87979",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b3cce2e5-523c-4d66-aee2-80eb4e543539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfbe869-9fe9-4196-814b-6da4d8222141",
        "cursor": {
          "ref": "6ae3614e-9db6-41e9-9c0e-837ff4721923",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b890ffae-b16b-4e50-8977-6fbc7deccc74"
        },
        "item": {
          "id": "0dfbe869-9fe9-4196-814b-6da4d8222141",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "def2023f-4adc-43dc-b1ca-cac9becae7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8767b51-afe3-4773-9deb-4a0d2caaf46a",
        "cursor": {
          "ref": "23961ff5-233f-495a-b5c6-3c5c7e001eb1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6b9513e1-1212-4519-8dbe-8015c496afd1"
        },
        "item": {
          "id": "f8767b51-afe3-4773-9deb-4a0d2caaf46a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6944dce7-d9cd-4b9a-a782-856711bf616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00659f54-36e6-4624-936e-8898e55470b2",
        "cursor": {
          "ref": "0e7785e2-8992-41b7-9a20-0e5ee0d3b91d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "79ccc510-adda-44ae-aeda-1e96c0fdba2b"
        },
        "item": {
          "id": "00659f54-36e6-4624-936e-8898e55470b2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6543ea4c-e9c9-4a79-9d35-e8ab6064d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b6b988-93b5-41f1-994d-887275e098bd",
        "cursor": {
          "ref": "ca0cc603-c9c4-46db-b71c-eaa05cde3d28",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5b62f97f-f108-472a-a6ef-4fca7a29a816"
        },
        "item": {
          "id": "83b6b988-93b5-41f1-994d-887275e098bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a2e185c-1908-4d88-aecf-0f80947a37e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04be867-dc65-40c8-ae0f-cde88110a21d",
        "cursor": {
          "ref": "cce3100b-f1e3-4a75-abdf-81807930d5d0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "16e3f8aa-b559-4ce0-b3ed-10acb04497d9"
        },
        "item": {
          "id": "e04be867-dc65-40c8-ae0f-cde88110a21d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fc27b637-a39e-4c45-ace5-69864a2ed6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5285586f-16f1-47bc-958e-d0fdb0f68df1",
        "cursor": {
          "ref": "f3ae789a-6ad7-4029-9abc-475c5a52c250",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bfaa0ac8-81d5-4331-8fad-e76cc162633e"
        },
        "item": {
          "id": "5285586f-16f1-47bc-958e-d0fdb0f68df1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33289cce-3868-4cbc-bad7-2b6f51b0a662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647a034c-f159-47fe-a5b6-fb3f56632d79",
        "cursor": {
          "ref": "d96dd5bb-2e72-4428-b88d-68ef7201dcb4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "891ccd80-93c6-4522-ba03-d1c2a82556a0"
        },
        "item": {
          "id": "647a034c-f159-47fe-a5b6-fb3f56632d79",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07995791-4598-4b29-ace3-3cd3dd124fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b90afa8-ec13-4747-aee8-2e6008bd6c4d",
        "cursor": {
          "ref": "e09d6304-0ecc-4023-9e2f-707a7b3b1f82",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a8d2c036-cf8e-4ae2-8098-1cdfb170d234"
        },
        "item": {
          "id": "1b90afa8-ec13-4747-aee8-2e6008bd6c4d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4bf03cdc-1013-4740-a8b5-73528cb66f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7ad662-474e-4603-a68c-e7c602f669e7",
        "cursor": {
          "ref": "99e7e0b9-297e-4ab3-a87f-9d0c5378b0af",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04d2e77c-3788-4e26-94a0-4bc610b637ad"
        },
        "item": {
          "id": "ec7ad662-474e-4603-a68c-e7c602f669e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61d25682-a725-46ed-b121-46720f9ee7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17283050-b324-4e3e-b986-bc540eefe7db",
        "cursor": {
          "ref": "29f7320e-774b-41c2-baa9-0de97ee0a392",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4214a4f6-260a-4a3f-897c-332bfd7f12e8"
        },
        "item": {
          "id": "17283050-b324-4e3e-b986-bc540eefe7db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bafeeac4-6595-42a2-b905-f5547ba4595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbb9561-3e5c-40dd-9f1a-d79f1cf87a6c",
        "cursor": {
          "ref": "1330f541-6bdb-4b47-aff0-ff1879ef5ea6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "18766192-b8a1-4d0d-b990-efd79b9459a2"
        },
        "item": {
          "id": "dcbb9561-3e5c-40dd-9f1a-d79f1cf87a6c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1a5f7d0-89d9-4ce1-bfe8-08769b02f182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20328fe-a3bb-4926-bc5b-ba17cfefc1c0",
        "cursor": {
          "ref": "f2bda4dd-d99d-4b05-89b6-dc402475d6fa",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de81f961-e85b-436f-b824-21dbc040ec99"
        },
        "item": {
          "id": "a20328fe-a3bb-4926-bc5b-ba17cfefc1c0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0807b46-14d1-4533-b682-967236aeeff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7997faf9-9d49-4b63-8db1-c87777e711e4",
        "cursor": {
          "ref": "dde35945-8fe4-4fe9-8ade-07405ca3fb66",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b4864e8-8bec-4458-83a0-b3f59a2f836f"
        },
        "item": {
          "id": "7997faf9-9d49-4b63-8db1-c87777e711e4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dadc1110-8b08-4f54-a71b-808018ac5720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bffa72-096c-4553-b5e3-e9fe399e8064",
        "cursor": {
          "ref": "86b857ab-ae6f-42c5-8bdc-5d1fc1cade59",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3fca223a-3185-40c6-b869-037146cf2580"
        },
        "item": {
          "id": "36bffa72-096c-4553-b5e3-e9fe399e8064",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd1dd9c7-772a-45aa-9085-7323b813f047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2712f-16e7-4164-91da-38ca652cdfb3",
        "cursor": {
          "ref": "8ac5eea7-b7e7-4795-ad11-aa7205fd7228",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52eb76ad-9462-4275-8f6d-a02a9c39d285"
        },
        "item": {
          "id": "3fd2712f-16e7-4164-91da-38ca652cdfb3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55be5fd6-3b7e-4745-917c-0831c60c93b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7505f1-3b13-4c56-94b9-e4915ebbfd99",
        "cursor": {
          "ref": "1fb9ef74-2da6-4451-a453-daa4e87225f9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d9716c2a-31cb-465a-b988-5ed590ce0106"
        },
        "item": {
          "id": "fc7505f1-3b13-4c56-94b9-e4915ebbfd99",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "215ea6b7-39b8-44c9-8a48-a8165832ce27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ab7cb-1840-4551-8ee6-58afe0282d6c",
        "cursor": {
          "ref": "6877652d-5b34-4179-9544-22b9f69e998f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "739a699c-7d8b-479c-90c9-baebeab2601b"
        },
        "item": {
          "id": "337ab7cb-1840-4551-8ee6-58afe0282d6c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6904fc4c-d11f-4a91-8b18-3e96a65894cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6c85f5-f401-4190-8b44-4d55e2e04fcd",
        "cursor": {
          "ref": "b587e5a7-365e-4e19-ac93-87c4af155d74",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "18b814bd-af53-45d8-926c-10c86ae0faa8"
        },
        "item": {
          "id": "6c6c85f5-f401-4190-8b44-4d55e2e04fcd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "36eb4432-1e86-4ed6-88f9-605051ea3864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1084f022-c641-4c49-9386-360a7927bf7c",
        "cursor": {
          "ref": "201c1d1c-8828-4eb4-86a6-9d2aa2e36fa3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a51ad3bd-f36e-42c6-b81f-f466b9a393eb"
        },
        "item": {
          "id": "1084f022-c641-4c49-9386-360a7927bf7c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff3801bc-b19a-4446-8e59-0260ff004dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9ae9a3-2e97-49ba-8630-ce28024d5c4f",
        "cursor": {
          "ref": "bad82adb-b19b-4eb3-baae-dbaac83fd1b8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "74598483-ad59-433e-8d04-778843502d09"
        },
        "item": {
          "id": "7e9ae9a3-2e97-49ba-8630-ce28024d5c4f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "65a5ed6e-509c-433c-963d-5c815cc33733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c0be0-336d-45e9-8307-8140776f14ff",
        "cursor": {
          "ref": "ba4f83ef-6e43-4919-ad51-e1065ec47177",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "97e900ee-fa10-47b3-902c-9ffe9e2d5598"
        },
        "item": {
          "id": "fc8c0be0-336d-45e9-8307-8140776f14ff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7487b712-5b2b-482c-beb8-1765fc960e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f0f86b-0faa-449b-b3ad-c3f7218b983e",
        "cursor": {
          "ref": "71687250-5b21-4bb3-b7dd-5acd6c63cab7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10f5fc0c-b30c-4a92-8b3b-a06918b90667"
        },
        "item": {
          "id": "c9f0f86b-0faa-449b-b3ad-c3f7218b983e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1519239f-8e36-4053-9d38-c2c3098abc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f9bb8b-9e86-48b7-8b2e-30135020a332",
        "cursor": {
          "ref": "1b18f5c4-5811-43fa-89f7-f92163addc2a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5af9debf-4926-4d25-8832-5d22a54940c6"
        },
        "item": {
          "id": "b9f9bb8b-9e86-48b7-8b2e-30135020a332",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "301ea5eb-404d-41d1-ad71-2f2e8aca1678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183d111f-0b5c-4284-acaa-c0c3a33011b4",
        "cursor": {
          "ref": "87fb4c39-4085-4686-b916-7b548b445461",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d154e5b3-dbfb-4bf8-86dd-69ecf581eeb9"
        },
        "item": {
          "id": "183d111f-0b5c-4284-acaa-c0c3a33011b4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd472ef4-c2f5-4049-80f0-2953e5a43d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3c5a3-0bde-4c30-adb4-618a466207d2",
        "cursor": {
          "ref": "1d4539fb-a052-4288-9238-e27da0738ea8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "788f6465-2d2b-4391-960c-2e0e7e7a6f64"
        },
        "item": {
          "id": "28b3c5a3-0bde-4c30-adb4-618a466207d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca1a1be4-a1fa-4177-a4fe-4fd2df945ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5332799b-cccf-4694-a077-f3ca2f811487",
        "cursor": {
          "ref": "42027953-c0b7-41ac-83c3-70aa692c9a38",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83a41226-0dd2-4ad9-b4af-7c532b4f203d"
        },
        "item": {
          "id": "5332799b-cccf-4694-a077-f3ca2f811487",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6c80c440-939c-4e52-bf50-a2419a4e57eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b35f5f-41e1-4499-95cf-79b50b52f751",
        "cursor": {
          "ref": "9628dd74-dcfc-4fba-9217-6b26409a1eb1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0a2d8002-dd50-4ee5-a1f5-42ef9660fd00"
        },
        "item": {
          "id": "61b35f5f-41e1-4499-95cf-79b50b52f751",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "90883f42-c04b-4f7a-a282-4a89497d91ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5553144b-2497-4d2a-b4d9-5fb6e9f49dfe",
        "cursor": {
          "ref": "6881da0a-a417-4c07-a7e8-aab56a7c246d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aaa4bcd0-66d3-4211-991e-fefe272dd0c3"
        },
        "item": {
          "id": "5553144b-2497-4d2a-b4d9-5fb6e9f49dfe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b3a034ea-9542-47e7-9711-fe51f5df7893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19291649-f55e-4bf8-b913-2fbdc4e49752",
        "cursor": {
          "ref": "58d80681-1822-4934-b824-c7e2b233c10e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85c1d943-edb5-4342-9ee1-96d7f0d4b76f"
        },
        "item": {
          "id": "19291649-f55e-4bf8-b913-2fbdc4e49752",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d36c5ee1-0b59-4b2b-be45-eed92ac97235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd3566-ca8a-4ac8-b527-2ff97c1547d0",
        "cursor": {
          "ref": "bbd43d55-b887-4c70-8d52-242f9903d1b7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51e2bfc2-b893-4405-a99e-c5294ea70a44"
        },
        "item": {
          "id": "bacd3566-ca8a-4ac8-b527-2ff97c1547d0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8289b4e2-3c43-41e2-8ed7-93acc993334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff6099c-5a93-48b0-93af-a45bb9821b9d",
        "cursor": {
          "ref": "2d935c19-1ead-4c0d-bc5e-e303b6995a85",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "81fa8a73-53b9-4cdd-a71c-52085760c9b7"
        },
        "item": {
          "id": "bff6099c-5a93-48b0-93af-a45bb9821b9d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fd70cd60-e319-4379-aa98-4f709e4e531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816aa5b-f322-4b4d-a175-23a81d8f42be",
        "cursor": {
          "ref": "61c46d82-725e-4de9-962e-edcd89538a9b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2da2f610-267c-494e-a75f-062107141659"
        },
        "item": {
          "id": "d816aa5b-f322-4b4d-a175-23a81d8f42be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "33e2989d-ec0d-4cf3-b6a4-e3d3c57e6c0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a4da91-4bc0-43d3-ac33-a60889416c9a",
        "cursor": {
          "ref": "75961848-3367-4295-9ad6-96436a005b8f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "97ee2a91-0405-4b75-ab20-b1faa408d862"
        },
        "item": {
          "id": "63a4da91-4bc0-43d3-ac33-a60889416c9a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed18327c-7aca-4fa8-9aa9-38c992703a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551a7523-78a1-4e24-9f73-a7dd62d75489",
        "cursor": {
          "ref": "3ae8b79f-d6d1-47a1-9e29-90989268d1ef",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f48d8d1b-f130-4361-830d-ec28c28d19e8"
        },
        "item": {
          "id": "551a7523-78a1-4e24-9f73-a7dd62d75489",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5df6c960-9700-4f01-8723-b607c0b36179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c132a895-8c7a-47f4-9938-dd78ce75632d",
        "cursor": {
          "ref": "abaff743-aeeb-492f-9371-056530f98262",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ba025de1-21e4-4185-890d-1bc3a83b45a2"
        },
        "item": {
          "id": "c132a895-8c7a-47f4-9938-dd78ce75632d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5dbf970c-f3db-46f2-a4c1-d75aa8a6d5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb36fd-c14b-4348-906a-daa30d3dbb9d",
        "cursor": {
          "ref": "e0ea56ff-3218-41ad-9a5e-c1cd891b964b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d17e9fa-ff8d-41e2-b6ac-fb3a652fed23"
        },
        "item": {
          "id": "72fb36fd-c14b-4348-906a-daa30d3dbb9d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "28118135-a629-4aa6-900c-3e03508a4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab738b-efce-4e82-a4ea-8933a6935d8b",
        "cursor": {
          "ref": "b226d318-7a70-4b4b-afea-712e22aceb4f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b68eb7a-1e0d-4545-b302-70854392d79c"
        },
        "item": {
          "id": "8aab738b-efce-4e82-a4ea-8933a6935d8b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0618b1ab-7dc2-4460-adba-f9f933625a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f21edb-4a00-4ce2-bba6-72564e33c98c",
        "cursor": {
          "ref": "4f935d73-287a-4504-8dd5-70c1b4a7c6ac",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad3bb926-674f-4b4c-bbbd-96ca56ef3437"
        },
        "item": {
          "id": "56f21edb-4a00-4ce2-bba6-72564e33c98c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c697f9c6-00a8-400b-98d0-0f6de8fcf1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfbc129-8f6e-40f5-81a0-fe682fd99930",
        "cursor": {
          "ref": "9214c307-9eac-4eb9-94c1-724bbd823638",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e8146148-e104-422b-9b0a-f9dfe150d60c"
        },
        "item": {
          "id": "8bfbc129-8f6e-40f5-81a0-fe682fd99930",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1d46842f-4f45-4dbd-9776-068e35715487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a9d7d3-72d5-41a2-ac74-f373f26a758c",
        "cursor": {
          "ref": "d807a4fd-734b-405a-ba68-f153feea2f14",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5a7d42b3-8fcb-4329-95cb-0c8294399ba3"
        },
        "item": {
          "id": "b8a9d7d3-72d5-41a2-ac74-f373f26a758c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1732f59d-bc09-472e-8b16-4c09460aa60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e183f22-f7c6-492b-ac62-b7e0bc33ac52",
        "cursor": {
          "ref": "64694408-10fd-46b2-bccd-7fca3372caf0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d5a697b1-c48b-44b8-a965-44800656c50d"
        },
        "item": {
          "id": "9e183f22-f7c6-492b-ac62-b7e0bc33ac52",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "15edb2f8-02e0-4ec9-b61c-1ebaf458805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b96a2ac-50b3-40a5-8af1-b85f1c2ddaa6",
        "cursor": {
          "ref": "7e1c718d-7775-4136-a550-fa73636de224",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "122789e8-2b0b-4bd1-9049-a5cc4f4cb026"
        },
        "item": {
          "id": "7b96a2ac-50b3-40a5-8af1-b85f1c2ddaa6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b6ae351-a8c9-400d-9fe4-abcd35f14538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff77f14-05ea-45ab-b53b-075dd9092402",
        "cursor": {
          "ref": "6b5550f0-5f95-4a42-a13e-9c3dbcbc1804",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ec44e1be-cce1-49a3-bd71-9924350c6e01"
        },
        "item": {
          "id": "bff77f14-05ea-45ab-b53b-075dd9092402",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95ea6e95-d988-437c-b99c-de1f67744a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6719b7-75e8-4818-8645-c97f9cf39745",
        "cursor": {
          "ref": "063ced13-c417-4486-b388-f5c13203da81",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6fd53d06-763d-4eca-88af-2f709a72c63f"
        },
        "item": {
          "id": "9d6719b7-75e8-4818-8645-c97f9cf39745",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5c6e394e-85c6-49d4-a3ec-190f2a384c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c7e138-5cdc-46be-96ff-5658a538d7bb",
        "cursor": {
          "ref": "1b911e03-59da-4308-b6f5-2cca1e240915",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "87ec4a07-f1ef-4d9f-9188-d01100062fe8"
        },
        "item": {
          "id": "b4c7e138-5cdc-46be-96ff-5658a538d7bb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7436c2c5-b906-4764-bdf9-993e5a28af76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260e411-cd4d-491b-818e-69b1dcd49836",
        "cursor": {
          "ref": "13aea2b1-db83-464d-a65d-aa2be0d0a506",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ab3d8ea1-ad7d-4c8b-a7d9-74c78db0e9ad"
        },
        "item": {
          "id": "9260e411-cd4d-491b-818e-69b1dcd49836",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "561d5f1b-baae-463d-9ccf-e41514aaac18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f548d1-7fd6-4069-b4a7-07487609db25",
        "cursor": {
          "ref": "edfe83a7-f5a6-4313-8884-604e641e1499",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "476cf41a-8863-423d-b85a-3746abb320d6"
        },
        "item": {
          "id": "53f548d1-7fd6-4069-b4a7-07487609db25",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2ac2dd0e-f4e1-494f-972b-eb1e9d69bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e809a96-b684-42ad-af79-c1d7cbe61afc",
        "cursor": {
          "ref": "569bf574-7dfd-4027-8a21-079d4bd9e860",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5228959e-4cbe-4236-aeee-1999a1c89c7b"
        },
        "item": {
          "id": "5e809a96-b684-42ad-af79-c1d7cbe61afc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74747585-358d-4c6c-ae22-dc8784c65705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f081c0-9a37-4ab4-8f13-e73f6b5c6759",
        "cursor": {
          "ref": "7763e306-3cc7-4933-a214-d7c95f93cb6f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d118aaa8-db40-46c1-bc41-c61e30a3b2bd"
        },
        "item": {
          "id": "f8f081c0-9a37-4ab4-8f13-e73f6b5c6759",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d139d069-3e00-462b-89d5-d5e55e66337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f5e7a-ccc9-4c2b-8b79-3ae80dc429b3",
        "cursor": {
          "ref": "e5c305c9-f5af-4799-b764-625c1e491abe",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bfb09fe0-0b64-40a6-ba7a-c50141ac6cb5"
        },
        "item": {
          "id": "520f5e7a-ccc9-4c2b-8b79-3ae80dc429b3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c7e5fa06-1bde-4082-87df-54ecd574fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd9421f-3ad3-4b48-a9a2-01abc084dd8f",
        "cursor": {
          "ref": "0dc48659-bf33-433d-9f4a-0a15d04237e2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "465fc9c7-8130-42b4-8937-2f08d7f5ee74"
        },
        "item": {
          "id": "bbd9421f-3ad3-4b48-a9a2-01abc084dd8f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f72e5093-0507-4bd8-8719-02a0e1ed0623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8288388-2ebd-493c-862c-e8570e63650b",
        "cursor": {
          "ref": "a85c8549-3a36-4e18-9cbb-8498041e1fa9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "62f60848-bfa8-4b07-8a23-c91f705c13b8"
        },
        "item": {
          "id": "a8288388-2ebd-493c-862c-e8570e63650b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "24d5ed95-4cca-4f2e-907c-2f5c70e67e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4327020f-6809-481a-a8f2-f772cbc0b308",
        "cursor": {
          "ref": "26841137-ec6f-4621-9dce-0f31466bdad3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8211150-f510-4d86-9773-aed28105b0a3"
        },
        "item": {
          "id": "4327020f-6809-481a-a8f2-f772cbc0b308",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c8f2f3d2-503a-42fb-abe7-1aa35fc5a429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac5e587-5dd1-4b89-886c-fa810d9eee80",
        "cursor": {
          "ref": "fa53518b-b565-4053-8ed5-c8dade763a66",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "94794c60-6c9d-437f-8781-48112a9797b5"
        },
        "item": {
          "id": "3ac5e587-5dd1-4b89-886c-fa810d9eee80",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c3f78e9d-3f54-43b1-ac1c-036f158ce291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ef53e-731b-40ea-b4fa-1b4618a5b85c",
        "cursor": {
          "ref": "f80ca203-707f-44a9-983a-7a780599b870",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c67611a-2513-400b-8b5c-74ce33fd15ce"
        },
        "item": {
          "id": "664ef53e-731b-40ea-b4fa-1b4618a5b85c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bb4c896e-7928-487b-9691-fe22a9168118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec36d3e-e5ba-465a-9a8c-802ddd5aed81",
        "cursor": {
          "ref": "906e08eb-220d-4746-b862-c8191e2b8f8b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b4b95056-be4b-4369-9dcb-80428135a546"
        },
        "item": {
          "id": "4ec36d3e-e5ba-465a-9a8c-802ddd5aed81",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "376435d1-a629-4160-acb3-dd93640c13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed9ac71-eddc-4b83-ab96-4f38b206d631",
        "cursor": {
          "ref": "2385a7cf-c5a8-42ab-8c1a-a41cd016116d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bc8705ff-43e6-481b-b460-1e81fa92d9f9"
        },
        "item": {
          "id": "7ed9ac71-eddc-4b83-ab96-4f38b206d631",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6c3bac11-909b-4f70-a643-28ad6310d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3a86fb-102f-4a3d-8917-02a3f6331022",
        "cursor": {
          "ref": "4973b840-c18c-4e08-ae00-37ae0625ac00",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5027637f-3a33-4763-a7ab-6e9b08c9b5d1"
        },
        "item": {
          "id": "3d3a86fb-102f-4a3d-8917-02a3f6331022",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95d3f17b-e5dc-41c4-bdc4-9e7bc2055798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1718fd-ddbd-49cd-b349-f9fa46ac0e25",
        "cursor": {
          "ref": "19c91d56-94ce-44fa-b647-674770058750",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ce4907ae-fab0-4d24-ba06-e3d425d0b27a"
        },
        "item": {
          "id": "7f1718fd-ddbd-49cd-b349-f9fa46ac0e25",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "860ff482-2b9a-4c0d-ac5f-15279237d650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e56534-68eb-42cf-a9a3-d821da1e9dfe",
        "cursor": {
          "ref": "012f1154-1792-4f5d-8fc0-49ffd0d20c76",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fa80ef88-d41b-42b4-935c-b28179defb3c"
        },
        "item": {
          "id": "83e56534-68eb-42cf-a9a3-d821da1e9dfe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b8c46fc0-19dd-4a77-9c2b-98e77810464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc978ab-008d-462a-b5ec-7188c9798822",
        "cursor": {
          "ref": "0d62e01e-d89d-457f-bc5f-934d3b8701bd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "966ec517-377c-4b9a-97bf-658effe25361"
        },
        "item": {
          "id": "1dc978ab-008d-462a-b5ec-7188c9798822",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "76f1d6ad-3ca9-4d0f-903d-c23d859e8731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8d3618-1009-46ad-8d81-4b4d502a3124",
        "cursor": {
          "ref": "6c7be866-dd34-4210-8068-8d85f1cc2390",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ca38bdc2-065a-4196-9c2a-950b6bf80948"
        },
        "item": {
          "id": "1e8d3618-1009-46ad-8d81-4b4d502a3124",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "987d0897-d458-4ebe-a4f4-e5748ea0dbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e83796-f7b3-4bcf-93ab-c893cced07ce",
        "cursor": {
          "ref": "456b2d0f-309b-4446-9343-4c67a212cb93",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6faf7203-0ec5-485e-bec4-f372fad63323"
        },
        "item": {
          "id": "a2e83796-f7b3-4bcf-93ab-c893cced07ce",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0722bbd7-769c-48e0-9e63-ba24cc3a229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d55e342-4eea-4abf-b1ca-173169be5120",
        "cursor": {
          "ref": "364be71c-195c-4023-aa34-8d59da03dcd1",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f53e5ce4-a5e6-4f31-8a8a-c1aab0361c2a"
        },
        "item": {
          "id": "6d55e342-4eea-4abf-b1ca-173169be5120",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3358ca23-157d-4d84-85c4-6dfe78e21652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3905ff03-3f27-497c-a3b1-a1c1e22af514",
        "cursor": {
          "ref": "169d5d78-c1f6-4a08-bbe8-ef6faa287e62",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed27b0fe-bbe8-495d-86b9-358f7c5be206"
        },
        "item": {
          "id": "3905ff03-3f27-497c-a3b1-a1c1e22af514",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c91b5c49-d3c4-4e93-bd04-ddd4aae4cfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e51e7-23a0-433a-97a1-c95f6595d6cc",
        "cursor": {
          "ref": "7e5a0fc6-202c-4c2c-87b1-3ab2ecaf659b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3e334167-75e2-4882-9411-476cfdeab2d6"
        },
        "item": {
          "id": "802e51e7-23a0-433a-97a1-c95f6595d6cc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "67eb2938-3c4a-4357-8ce6-93ce80e22f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1b1186-d221-4a37-8783-1c6eb57058a3",
        "cursor": {
          "ref": "ba742ee1-2d9e-4ec8-b392-d6790a28026b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "499c185e-015a-4c33-b35b-c19f0772bb2e"
        },
        "item": {
          "id": "fd1b1186-d221-4a37-8783-1c6eb57058a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4328440f-0014-4c5c-bf0b-c4ac624133f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37843227-1fa5-4421-a303-2c528439a60b",
        "cursor": {
          "ref": "16a77e75-439d-4f4c-958e-26393038bd28",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "762139cc-aa27-4fa7-bf4f-3c6ee5c67587"
        },
        "item": {
          "id": "37843227-1fa5-4421-a303-2c528439a60b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a6c481f0-47b3-4cce-b1f1-00142bb4ae4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a24f6-285a-413a-9931-df8b277c03b9",
        "cursor": {
          "ref": "78deba89-895f-4e77-acef-00053e655838",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9aeb26be-80ec-4b5f-9ed0-dd005775d48a"
        },
        "item": {
          "id": "333a24f6-285a-413a-9931-df8b277c03b9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b72ab5f5-93ea-4342-9915-c1ec77089d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa574730-2abd-43b0-9968-918594903cf4",
        "cursor": {
          "ref": "767c0b20-c59e-45fc-a557-8a32eb883b7b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "72f95a2c-6116-4781-81b1-afd787ce5085"
        },
        "item": {
          "id": "fa574730-2abd-43b0-9968-918594903cf4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "02199039-8f79-43fc-9af0-a8cbb794ae2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2529c1d-9b1b-473b-9555-c09e84d64945",
        "cursor": {
          "ref": "4246e455-1027-4b43-ac6f-e14b5cb62f72",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "073b2002-abc7-48b1-8b93-d7531f06697c"
        },
        "item": {
          "id": "f2529c1d-9b1b-473b-9555-c09e84d64945",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cc361d6b-86cf-48c1-917c-ece04c733765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069c05cc-62b0-491f-bb1e-01ff55a14b00",
        "cursor": {
          "ref": "70ebde8d-394d-49b0-845f-9541ef1653e2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3cd85082-058a-442f-9ff7-a0189808cbd0"
        },
        "item": {
          "id": "069c05cc-62b0-491f-bb1e-01ff55a14b00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a4bd9a5-17b9-4d08-b568-83ee9b26ebc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86367e41-62ab-43a1-b5fb-a8d2e2dfc2e8",
        "cursor": {
          "ref": "c193dc48-261c-45cf-bb0b-68d9bc9765aa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ef29af38-9850-4a94-8cb0-3b7dbe8f9733"
        },
        "item": {
          "id": "86367e41-62ab-43a1-b5fb-a8d2e2dfc2e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f79b45cc-567b-4e16-9007-88dd0b494f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91fe484-1505-4945-9196-a25ebe289b00",
        "cursor": {
          "ref": "4a349da1-117f-48b1-b5e0-b9dd0c23ef2c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3f823043-1709-4d11-94eb-24b306585e94"
        },
        "item": {
          "id": "f91fe484-1505-4945-9196-a25ebe289b00",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "06f592d6-71e3-4f1f-afca-d8619ad4bdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83fd52-81f8-4bf0-9847-939d413c2b08",
        "cursor": {
          "ref": "6c76e6b5-997e-47bf-8975-21b53a1795b1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f590c5f9-44eb-4e0b-b3c9-5b75d66c5434"
        },
        "item": {
          "id": "bd83fd52-81f8-4bf0-9847-939d413c2b08",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c2d90a43-ec10-490d-9591-db790d1bf5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4265a890-999a-44e8-86b2-81ab0c3a887d",
        "cursor": {
          "ref": "991c0660-637e-4b09-bf1f-a5f9620f6743",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f3bbbdff-5a81-42a7-8255-ff35688b619a"
        },
        "item": {
          "id": "4265a890-999a-44e8-86b2-81ab0c3a887d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1c8516a0-b965-4226-9a37-e459e030370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467d4d5-e6e9-4f13-b48f-328fcc8b3261",
        "cursor": {
          "ref": "33abfb20-3e56-4664-ab16-8c6f0104f2c4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8f614d13-a1d3-40ed-bb8e-f7f9e12c822e"
        },
        "item": {
          "id": "e467d4d5-e6e9-4f13-b48f-328fcc8b3261",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "473dd1bb-5f47-437e-81bf-bef2638fbeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a86487-86b0-4f0a-9af0-6fd32bc73a41",
        "cursor": {
          "ref": "ba64308e-2235-4f0a-8af6-38f0ee288871",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "199999d5-e544-45f8-99b9-8bb46f5883ca"
        },
        "item": {
          "id": "09a86487-86b0-4f0a-9af0-6fd32bc73a41",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a2a07265-cfa5-4ad8-9e4c-82e80e2ff217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74cbd7d-51bd-40d4-be68-c8e27e94d0e0",
        "cursor": {
          "ref": "b0133a32-4c94-43af-9f69-60d5df6f22a0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d38b1ee4-4480-404c-a6c7-c510106d1199"
        },
        "item": {
          "id": "a74cbd7d-51bd-40d4-be68-c8e27e94d0e0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0dda4aaf-96a7-4533-8285-8d05dae7d8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3263f75-310d-4d7c-8ffe-f4c54a983484",
        "cursor": {
          "ref": "675b7c10-475a-4fdb-b16a-3676bacca16c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1dfabe2d-cc35-4537-95eb-dcb518aeed26"
        },
        "item": {
          "id": "a3263f75-310d-4d7c-8ffe-f4c54a983484",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0dfebe34-89f7-450e-acb2-91034533b09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f1f4fc-ca00-4d02-b6a0-8f38ac58c8f8",
        "cursor": {
          "ref": "204797d8-bfbe-4fb2-aee4-59151a81461a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0542cc90-68ad-4d59-a209-970d75eb6c17"
        },
        "item": {
          "id": "56f1f4fc-ca00-4d02-b6a0-8f38ac58c8f8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "351c0307-cb82-4d93-9a33-5b6f1725c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a365ca95-1583-49c3-b87a-47744c2b7e82",
        "cursor": {
          "ref": "31e27f00-4f98-45da-b8a0-3633ad74c46b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "56710f25-3155-47a1-b7e7-ee3f472d7dc1"
        },
        "item": {
          "id": "a365ca95-1583-49c3-b87a-47744c2b7e82",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e6530f92-04e9-440a-9e16-d3ea1d9e5e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0739b140-88f7-4a2e-85d9-db4fde379e8b",
        "cursor": {
          "ref": "dabe853b-ca18-428e-bddd-08d999a9177c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d60c2eb7-e8cf-4935-ac71-0beecc037c71"
        },
        "item": {
          "id": "0739b140-88f7-4a2e-85d9-db4fde379e8b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6f62f9a2-6448-4f4d-a26a-30cdc479cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9618b5-71cf-41d5-a4f7-d77d7afb8c3c",
        "cursor": {
          "ref": "117905f0-b873-4109-b45d-1fad7b7cadb0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "42c3b91a-5ae7-41cd-833e-e526e3d71b7e"
        },
        "item": {
          "id": "bf9618b5-71cf-41d5-a4f7-d77d7afb8c3c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "74472990-c7d4-44c7-8791-66a83790b675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f97d6-f906-4f05-ac67-0351058e9feb",
        "cursor": {
          "ref": "848a59b9-e177-4747-81d6-c2ebaf99109c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16cf21f9-9152-439f-b728-21ba66084682"
        },
        "item": {
          "id": "250f97d6-f906-4f05-ac67-0351058e9feb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2be693cb-fa2f-4d29-a0af-681827c929ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a6dcb2-0962-4b13-a5e6-f2b4ddb19e12",
        "cursor": {
          "ref": "3d672733-52ee-46e7-8d85-04aec897dfe9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f286443-0596-407d-aecf-814975d4676d"
        },
        "item": {
          "id": "32a6dcb2-0962-4b13-a5e6-f2b4ddb19e12",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d12b7cbe-a9a0-41a0-b5bd-15071b431ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b3d4d7-ee84-4b2d-bf05-da5ba67aa5a1",
        "cursor": {
          "ref": "5a7e3b27-7a9e-42ca-b417-118e1fd16de4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5ca72179-d4d4-4666-9d8f-49c31f9e6f3b"
        },
        "item": {
          "id": "85b3d4d7-ee84-4b2d-bf05-da5ba67aa5a1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "40e77b98-8555-4135-b557-7dc49a26d067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d3f666-b01a-4ebe-963f-afff4293503c",
        "cursor": {
          "ref": "4be3ef5e-129e-4dca-9592-d413c03d5483",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d7e458c5-40e3-4c57-80c5-ebeda0d57fb6"
        },
        "item": {
          "id": "90d3f666-b01a-4ebe-963f-afff4293503c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "150139c8-4766-42f7-ab09-9aa18c3aa7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29de703a-76fb-4786-8dca-c7d20734fe5d",
        "cursor": {
          "ref": "93f31949-1e2c-4a8a-8240-0c1683cc047f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fde7adbd-28c8-4a19-b647-599afbfbca95"
        },
        "item": {
          "id": "29de703a-76fb-4786-8dca-c7d20734fe5d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "86e83243-922b-4b07-93b4-a0d87e6df642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa6d167-8571-4fba-8112-118e4cef00b1",
        "cursor": {
          "ref": "491b3cbd-a0c7-4207-be5a-8a7b1953635e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a4701bf-9a56-4189-a39c-49080dc95336"
        },
        "item": {
          "id": "dfa6d167-8571-4fba-8112-118e4cef00b1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "326519b4-4604-48af-8f7d-03e0a4a2502e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa1537-f685-4c83-9e02-8930d44647a1",
        "cursor": {
          "ref": "43c19006-9e47-4b4e-b374-dba870477369",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9f8f3a1d-d173-404e-bd98-fd10e0100061"
        },
        "item": {
          "id": "c7aa1537-f685-4c83-9e02-8930d44647a1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fef74868-0ac7-4fa2-9b8b-a2c2f0251099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d3807-93c1-473d-ba54-bd632c63cbef",
        "cursor": {
          "ref": "c436c1c7-34cf-4740-a640-79b7f59a286c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ffc8a9a6-e384-4855-a7af-7cec270950d2"
        },
        "item": {
          "id": "851d3807-93c1-473d-ba54-bd632c63cbef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5c54d7fa-552a-4f97-bc31-dbeeb8604d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b551d62-2d7f-4af2-ba0b-6cdae6c9f85a",
        "cursor": {
          "ref": "2a55bc38-ccd6-4d92-889e-0423ce92bd29",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "38a6b5ef-686d-43aa-9dea-bc15ff241085"
        },
        "item": {
          "id": "0b551d62-2d7f-4af2-ba0b-6cdae6c9f85a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "078c0664-c97f-4478-b6ee-42f0d6ca369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b3fddb-7a81-4ee5-813e-781eded11d77",
        "cursor": {
          "ref": "c723276f-656b-4b1e-9565-a690d08e827c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6017f779-a95f-4862-b1a2-1960ff1ea75b"
        },
        "item": {
          "id": "71b3fddb-7a81-4ee5-813e-781eded11d77",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8248472-c569-479e-92ba-79b8ec182a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e821ae-03c1-44af-aa00-4d1e88700503",
        "cursor": {
          "ref": "26387190-51e9-4807-a31c-033ad919b435",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "60eff6d8-89ea-4453-9248-bc1751afbba6"
        },
        "item": {
          "id": "a6e821ae-03c1-44af-aa00-4d1e88700503",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a2d18112-d2ec-4901-aa25-7a26245b1d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6586e74-4867-4f57-af07-def9a34cfed5",
        "cursor": {
          "ref": "649bce2d-4b4b-43ae-afc2-145b4a9cef42",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "04ed3190-d227-404d-b175-1a7edfd50208"
        },
        "item": {
          "id": "e6586e74-4867-4f57-af07-def9a34cfed5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ada98786-35b4-4000-a533-56e9ae5ff25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca25e7-daea-4aef-b116-b67da5efb738",
        "cursor": {
          "ref": "8ad4c8d6-4fee-488f-b741-b0e125fb0e6d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee7f42aa-c8c0-4916-ba80-fffb6bdac68a"
        },
        "item": {
          "id": "14ca25e7-daea-4aef-b116-b67da5efb738",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2d2edfe-0014-488c-bd5d-16498b325ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee7830-47cb-461f-92a5-1d2fb609f47e",
        "cursor": {
          "ref": "2c35bea8-5fb4-4eff-adb5-dceabf9d8d60",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3a5dff75-6377-4fb7-a058-a00d3b163c3f"
        },
        "item": {
          "id": "e6ee7830-47cb-461f-92a5-1d2fb609f47e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b21ce130-70c2-491c-8c79-d7ff02a12cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a335367-3e36-4422-9f49-5024813beb72",
        "cursor": {
          "ref": "0065d169-7728-45fe-b635-4a6d7851ccfe",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a9463cf-fbab-44fd-861e-cc8fb06e2be3"
        },
        "item": {
          "id": "2a335367-3e36-4422-9f49-5024813beb72",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee530e6b-a57b-4f1a-9281-c20a3a1d8a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ce605a-d009-4811-90fc-202a4465c506",
        "cursor": {
          "ref": "046e1a55-a62c-4d22-9c13-f8d4b0234518",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e684402b-102c-4494-af17-d794308ddcdd"
        },
        "item": {
          "id": "e3ce605a-d009-4811-90fc-202a4465c506",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9738655-e957-4b71-bb30-4280dbfbc09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796cdcc8-c77c-415a-9da0-e670bda4389a",
        "cursor": {
          "ref": "bc5d9cde-75cb-45d9-b74e-154af7d8ecbc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f79cfb7b-79a9-40b2-99f8-73939305e3ac"
        },
        "item": {
          "id": "796cdcc8-c77c-415a-9da0-e670bda4389a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d8d439e-eca3-4ea4-ad21-c01f70556ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3648590c-e719-4620-bdd5-4fc098afdd8d",
        "cursor": {
          "ref": "0b6e6b73-9b8f-4da9-a04d-d9aebbffa829",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "88296540-8a5b-4b34-a41a-a4d4000bf213"
        },
        "item": {
          "id": "3648590c-e719-4620-bdd5-4fc098afdd8d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6a80db3a-c9fe-41e7-8191-7f4b597d9db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fa913a-e080-48c1-99c3-c7d431be4e3d",
        "cursor": {
          "ref": "b4b765bb-ca5b-4097-864b-d4266dc9bf3a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "782c491a-29cb-43bc-bdb0-13c1d6097340"
        },
        "item": {
          "id": "49fa913a-e080-48c1-99c3-c7d431be4e3d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a2c0fa6-e4b8-49c4-a52a-878164981c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e4d79b-e49e-4a82-9db2-9d738761bb5b",
        "cursor": {
          "ref": "bd722be4-652e-49ac-bfbf-733c41a6a5e6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2f5580d4-6414-449b-9312-5bbba63ab2d1"
        },
        "item": {
          "id": "03e4d79b-e49e-4a82-9db2-9d738761bb5b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "acf61ac0-0297-4a0e-b944-6e8751a27004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86148e45-8cb2-46f9-b3f9-9e7abeb482e4",
        "cursor": {
          "ref": "38f23fef-7323-46a5-a506-4acd7d989cf8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ef2ac2cb-0165-470c-96c9-15e11dcb3fe2"
        },
        "item": {
          "id": "86148e45-8cb2-46f9-b3f9-9e7abeb482e4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b3a87553-2da4-4061-b487-deb498609a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd59797-2e34-4e90-b9a3-b52c6e4a1833",
        "cursor": {
          "ref": "7ab24e2f-ff6a-42b8-a096-e94616cfb6ab",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "476c505a-e874-475a-a9f0-902368a1a2fc"
        },
        "item": {
          "id": "bcd59797-2e34-4e90-b9a3-b52c6e4a1833",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "54084494-7b1d-44d9-b480-731d722db5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db6d86a-c440-4649-8537-fedfab226e6c",
        "cursor": {
          "ref": "5a6cdbc4-1efd-4bdd-8467-714042eb4d31",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4373551b-692a-4846-a990-667eed6edcc9"
        },
        "item": {
          "id": "3db6d86a-c440-4649-8537-fedfab226e6c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5c4d5563-3c37-4572-91d7-0ffadc8547ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b551685b-67ab-42af-b165-97e370af930d",
        "cursor": {
          "ref": "adaf1512-63ff-429c-87ae-e1bf59de311c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7e3aed10-1470-498d-9fd5-e2ac8ab9f975"
        },
        "item": {
          "id": "b551685b-67ab-42af-b165-97e370af930d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "259f087f-7eaf-4ced-af7f-0983e794162f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b60f8-e09d-4867-99c7-49f190275a5a",
        "cursor": {
          "ref": "e7fe6b5e-3101-4133-8f7a-0f0e1c744514",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d90add5c-0220-41ec-bd37-879adf6a5993"
        },
        "item": {
          "id": "0f9b60f8-e09d-4867-99c7-49f190275a5a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0bf7f074-fc66-4af4-bb7c-514570cd8162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7875ea47-0ecc-4423-9fe8-c7e1f4d78d4d",
        "cursor": {
          "ref": "9b81b5be-9dc7-46f8-bc2f-2def810df5a8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "26eea8dc-05cd-45e3-b785-9dfb78fcaf8e"
        },
        "item": {
          "id": "7875ea47-0ecc-4423-9fe8-c7e1f4d78d4d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "831e59fc-13f0-49cf-83a6-53218577f3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cc86cb-2362-48d8-bf6b-f1aae406e027",
        "cursor": {
          "ref": "f98a0e3c-5744-4163-9b49-c9789e218c38",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "66143701-ac02-42a8-b21a-ddc0db27d39d"
        },
        "item": {
          "id": "c1cc86cb-2362-48d8-bf6b-f1aae406e027",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "311dff1e-de94-4b24-b96e-b4d459a70034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233e171-b7b2-476b-9141-4be50fab18b9",
        "cursor": {
          "ref": "55e6d58a-4ca1-4b52-969a-fddab8363e70",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9e782de5-b5cd-4380-813d-e2c4ca977ace"
        },
        "item": {
          "id": "4233e171-b7b2-476b-9141-4be50fab18b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a694ae00-93b8-4aa9-b0bd-6ec883f93ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b71a009-2e19-41c9-a508-d68501147156",
        "cursor": {
          "ref": "0e6764eb-3ab5-4503-a3e7-60ea95b11c96",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "efd9af76-a312-4874-80d7-743bcde9f474"
        },
        "item": {
          "id": "9b71a009-2e19-41c9-a508-d68501147156",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2d3a6af7-5d3c-455f-a0a1-73d38ed448cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d534e1b0-7eb6-44bb-8bb3-00874e22773e",
        "cursor": {
          "ref": "be57ec02-97fb-4fd7-bc7d-538b01ad9f3e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f75130fe-f53c-43f1-8ca3-a3ed63892946"
        },
        "item": {
          "id": "d534e1b0-7eb6-44bb-8bb3-00874e22773e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f49fd3c2-9e0a-4510-ac5a-13a4b31e7d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4857a-d68b-43b8-b5ea-5a2b7b7f1f32",
        "cursor": {
          "ref": "624fa871-9a3d-47ee-a708-85ba637fe457",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6afaf417-6f3b-4bed-9244-5fa9c8460c45"
        },
        "item": {
          "id": "71d4857a-d68b-43b8-b5ea-5a2b7b7f1f32",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6bd42eab-9e18-446d-bdc6-4917d3127acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda57fc1-7f74-4c95-ab18-c5359989b877",
        "cursor": {
          "ref": "2fac533c-d5c7-4db4-acdb-d60ca486f833",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a66d4f1c-993b-444f-81e9-cdbf986c545d"
        },
        "item": {
          "id": "eda57fc1-7f74-4c95-ab18-c5359989b877",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c7272e3c-1d40-43b9-8bd3-4f29f6148c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848e6d50-1a21-455c-b5df-cbd96c96b29a",
        "cursor": {
          "ref": "46f6163a-b827-4766-8bc2-f05dbb082ca4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a8db6edc-fec9-497e-8982-bf94613c9486"
        },
        "item": {
          "id": "848e6d50-1a21-455c-b5df-cbd96c96b29a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a5f8a955-f854-4215-803a-19e1cca5b68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2933dc34-a756-47c5-96f0-8853d744fef0",
        "cursor": {
          "ref": "0a6891ff-bb8f-4803-b8bc-84b84e0c4b35",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "912625bb-3128-41ba-8d1f-b164cca05446"
        },
        "item": {
          "id": "2933dc34-a756-47c5-96f0-8853d744fef0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dda3e2f0-6c66-4e4c-ba4d-1bf50943d6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32cea39-b30f-472e-a955-7add1d4027a8",
        "cursor": {
          "ref": "a174c1b0-bc88-4f2d-85c5-401a5b814ee8",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6aa5455e-b9e4-4d5b-b3b3-9d00d830fa63"
        },
        "item": {
          "id": "b32cea39-b30f-472e-a955-7add1d4027a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f7fa74d9-981d-4d9a-913f-48b35cb0c3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a6822-ad1c-4634-a415-0fc8d2337feb",
        "cursor": {
          "ref": "d1c6b379-f880-489d-80a7-ba1366e56797",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2b8f4c3d-ffc9-411d-af75-3d84e709e30e"
        },
        "item": {
          "id": "ba5a6822-ad1c-4634-a415-0fc8d2337feb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fec7af32-23ac-456a-a39f-1a360c77f270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d616c991-78d5-4dfa-9b8a-e254aa51cfe4",
        "cursor": {
          "ref": "8139a723-5178-414f-aa30-8c4269cb8692",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "16b488e8-08f4-4016-891b-774ba94c3d2c"
        },
        "item": {
          "id": "d616c991-78d5-4dfa-9b8a-e254aa51cfe4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4b032765-bdba-4ecf-b185-71b69f190e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a243a9d-fe4d-4bd5-9695-9d564cfe75b5",
        "cursor": {
          "ref": "89931940-7283-40c2-ae89-ba30b674c7be",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fa6d51e6-f0e1-49d3-9163-74348dede549"
        },
        "item": {
          "id": "4a243a9d-fe4d-4bd5-9695-9d564cfe75b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "29488481-9a82-40fb-8156-eb976f72fb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1c7dce-7cdf-4b64-a6a5-fc25254baa44",
        "cursor": {
          "ref": "48fb765f-87d1-4a33-9f22-a333bf5f8944",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cb0baf1e-a2ac-478d-95c1-716a5ee270f3"
        },
        "item": {
          "id": "2d1c7dce-7cdf-4b64-a6a5-fc25254baa44",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "697d3e95-16af-488f-b220-79709b3fb3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1b3a1d-022d-4eba-a91b-2220421f53cd",
        "cursor": {
          "ref": "ffdcf846-236f-4ed4-8981-39636e76d947",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ff366285-b4bb-43d1-b9c9-5a5db1de91f6"
        },
        "item": {
          "id": "fd1b3a1d-022d-4eba-a91b-2220421f53cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6c29df30-2a68-4ad4-884c-386ee42961ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcffe7ec-7fd5-4208-b8fa-d29d3e7ae322",
        "cursor": {
          "ref": "bc82551e-b356-4c31-98d3-a54b16f5dab2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bdfd2b2f-84c4-4232-b13f-03be256a2154"
        },
        "item": {
          "id": "fcffe7ec-7fd5-4208-b8fa-d29d3e7ae322",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b5743450-7ac1-4f75-836b-4113a19639fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a20d8c-01f2-475f-960c-361ef7020e51",
        "cursor": {
          "ref": "3fa6b69b-fd71-467d-9d49-1405bded00a7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "98abcee1-f405-4e6c-8074-e30d1d228af8"
        },
        "item": {
          "id": "04a20d8c-01f2-475f-960c-361ef7020e51",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6e897432-c7c9-41ac-8166-661841767a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b980c3-ace1-4442-bbe2-cb417c963fe7",
        "cursor": {
          "ref": "4081eb1f-a0b7-470a-9bbc-0b8148f8c44e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7e688b93-88c9-4cea-9d3e-e3aa3bac7efc"
        },
        "item": {
          "id": "51b980c3-ace1-4442-bbe2-cb417c963fe7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "93e90bc0-de4d-4d97-a989-6d7a62d33a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65591f-9d5a-43fd-8d91-df9325df5c44",
        "cursor": {
          "ref": "2c7b2a7f-757f-4366-aa29-1d8b65c82fa0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "085e11d4-ecdf-48da-9591-f230b5b820e1"
        },
        "item": {
          "id": "fd65591f-9d5a-43fd-8d91-df9325df5c44",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d8362fa5-fa1c-4b0d-bf74-64bc3f3737ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e87f70d-4268-46e1-b7b9-77e051d03594",
        "cursor": {
          "ref": "2484469e-4ec6-45ba-b0ad-1b7bae0683f9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6548b8d3-c7b3-40e9-b548-6882a06da45c"
        },
        "item": {
          "id": "8e87f70d-4268-46e1-b7b9-77e051d03594",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2104ea7b-71df-42f4-b5f9-8dfb9f4d3e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb10ad9-d81d-420c-8db9-26efb57f867c",
        "cursor": {
          "ref": "d1a53c90-83c4-4a69-ba28-57fcac57a766",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "98a23a12-0a80-4066-ad96-093c35f500e5"
        },
        "item": {
          "id": "efb10ad9-d81d-420c-8db9-26efb57f867c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5d03f0b7-eb83-4609-b6e5-b71ace0eb708",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0ca05-2b44-4c46-b097-f0c0d9036738",
        "cursor": {
          "ref": "c42ae706-a996-4bf1-8647-cf4150112d5c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1c3974aa-2fbd-4ee5-bec9-57431ccde775"
        },
        "item": {
          "id": "dea0ca05-2b44-4c46-b097-f0c0d9036738",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4176644f-798b-4f05-a8ae-11a0a41d7da7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4061158-f8a2-4c7d-bb94-d1fb3019c0e3",
        "cursor": {
          "ref": "2ae243d0-d0f1-47d6-98ce-2a2eee5f7212",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "760a584d-5699-4110-94ea-d95727a91987"
        },
        "item": {
          "id": "e4061158-f8a2-4c7d-bb94-d1fb3019c0e3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7b611fd8-585a-431d-babe-040f8e44db55",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243b3f1-3aed-4724-af8b-a11d3235cdf5",
        "cursor": {
          "ref": "97569565-b399-4543-ac65-541050094ad1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c58d0bb-7d0c-4b6f-8d55-46cdf3d55c4c"
        },
        "item": {
          "id": "3243b3f1-3aed-4724-af8b-a11d3235cdf5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "97444674-49bd-40e8-832b-b3b8fb7d161a",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "595020cb-3be2-4f7f-8a75-539419d55832",
        "cursor": {
          "ref": "a5796131-1110-499d-9930-d5d0dc7fd8b6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9d63a67b-b5a6-46e4-b605-331cc5d79a66"
        },
        "item": {
          "id": "595020cb-3be2-4f7f-8a75-539419d55832",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "161ad543-cb3b-4a65-8e59-6f72b45d15d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595020cb-3be2-4f7f-8a75-539419d55832",
        "cursor": {
          "ref": "a5796131-1110-499d-9930-d5d0dc7fd8b6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9d63a67b-b5a6-46e4-b605-331cc5d79a66"
        },
        "item": {
          "id": "595020cb-3be2-4f7f-8a75-539419d55832",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "161ad543-cb3b-4a65-8e59-6f72b45d15d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dc532a-260a-405d-aa04-6432bed9ff56",
        "cursor": {
          "ref": "91ac2091-f7ee-4981-b3db-24ef9fb2777a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "15d1d6f9-c703-47bb-8924-76c085f2775a"
        },
        "item": {
          "id": "08dc532a-260a-405d-aa04-6432bed9ff56",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fea8b620-7992-4669-8b33-51a163ad43fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61fe42d-189b-4377-bb35-8cf5beee0c17",
        "cursor": {
          "ref": "c99b1635-c923-4e63-a0f3-c357c5afc0f9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "eb69f66b-8119-4a65-abd7-89a4e4abd651"
        },
        "item": {
          "id": "c61fe42d-189b-4377-bb35-8cf5beee0c17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2df1a4a9-eabc-4aeb-aa30-c3ec132950c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}