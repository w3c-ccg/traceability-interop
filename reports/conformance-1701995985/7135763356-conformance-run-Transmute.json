{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "90f46b0e-d85e-4311-a47f-220b20d6e48e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12596792-2bc1-4bff-9f54-ed042d5d0e8d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb2835c5-e65c-4244-b0d0-9a81eb45bc67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a80016a5-34cd-4ad0-954b-fbb8a88ce7e4"
                }
              }
            ]
          },
          {
            "id": "17f41f55-0fe8-4883-ae8e-2ca73afbd383",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e521de0c-dfc1-403b-9934-233edc3aaeca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9036370c-5bc5-4924-b1e2-32bae919b63b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5d3aa2f6-2ac8-4bd8-a4f7-1823a0cf143e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2fedbf9-890e-4e06-bbcd-f5eb04e05bdf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a7520ef-dd9d-4bba-b404-8f1d2bff2760",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af6f9336-ba9c-45a7-8eec-1ac832fd350e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c6e55c5-d51c-48b0-9374-b622cb66f8e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be9cab1c-744c-437e-8750-5f6a943e7e02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee552077-185f-4134-ba44-fe3caa71e88f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e6234f3-ba96-44d8-b96c-128a8bfdebba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a37f3ff9-01b5-42f9-ae84-2f402e7da9f4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82069e9e-ff02-4329-94c4-fee333f24df4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e9815dac-253f-4dae-a4e9-8a0594fab675"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e56dcaa-09b1-4872-ad43-c4b4e745e9a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77a3b7e6-30de-42e2-b685-378e623b408c"
            }
          }
        ]
      },
      {
        "id": "8e55ef7a-ce25-444c-a4e7-ff000b906d46",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e9074a32-2831-4e2c-b94c-296afb5e082e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9027edb4-e4fc-4b62-a69c-aec747d7bdfe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05757d11-4a9d-45d7-8726-a2974548582f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff04aaee-41ea-450b-b257-e2cb0860514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee799d05-6d86-45af-b2fe-b1e42920e7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bceb8b-a8fa-42e5-8eaf-d7cf1e7d7ebf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23922dc9-a192-47c0-93e4-a73b309a70ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "394ff0c1-9fbd-4f8e-9f6c-2f5cbd038cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e31212-5dd4-49ba-971a-6022d64a031b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360c5c5f-c45a-4f14-ad42-d6781acca3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58afdb9e-bef5-43b2-8149-4a244d5b6a06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f006713-4bd9-4eae-b115-7acfc4d01f0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a65c422-5e3a-4338-b402-50b7028ac9c3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c6c230-9aae-493d-9ce4-6b6c7ee30ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "601f1674-5a20-492e-b06e-96fb20fea65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80032ce4-7af6-43cc-9751-c0a313ccb4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3151d3-479c-4a45-ae16-25f0e747403e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35a87693-99a5-4203-88ac-48bc8388b14b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b264372a-e8fb-4195-8577-8f9e89258618",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65bc255-dd42-493b-a99f-92fe0f40fd54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c1123ece-10b7-43d5-9e5d-b6a101dd6c64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d1daac6-d761-4f37-aa8c-7e1a62b54a66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f5f74f1a-37c6-4bb2-be8b-af174c486c7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c2dffa7-c6f7-40a4-995e-9a954dbd0fcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28619088-c2cb-4be7-a66e-c890f69442c9"
            }
          }
        ]
      },
      {
        "id": "e5116e5f-2f98-447d-9138-51dff9b51242",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "84d63689-af34-4d99-a798-71402808eb3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c996790-6874-424c-9c70-284631fed9b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1a098efa-ad7f-4c21-a272-fffd614855e9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c615819-9ac9-4d46-b2b3-50e0c9f1c092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee595a9-d5b7-49af-b3e5-261d5049b07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c1bdda-a0c4-421f-952f-692b91f4626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e9f3b3e-7df0-42a5-b2ee-f8911d727c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086418b7-5956-48dc-a036-3bd95642053d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a097ab04-4cbd-41fe-95c6-03f99361bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4295ef1c-3504-4789-a634-8faa823c30d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf39e02-6e83-41c1-b14f-a6f44392fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c3f853-29ce-45ff-b771-cf01539645b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f646bebc-91cc-4e30-a39a-4ddbf681c0ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04ac53f-3587-4c35-a731-2829b1ecb512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0190b840-db16-4baa-a912-03d28e13b13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57616c44-fa2a-4158-993e-a381146ce1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54a275e0-e382-40d5-b01f-f4402135735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c8412b-bb25-4ebb-8ad3-2720b29ff6c5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b1bee2-1904-47f8-96ef-47c235d2d4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86b2fb1-ddd9-4aff-a3b9-455fb415fcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc6a365-88b2-4e3e-ac75-835ed2ab6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ce643f-6972-435d-930e-fb5a8427ee2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa12f7f-4069-4684-a4f7-63d4a4bc0c3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68645f58-c420-45cc-9f8e-2ae6ec9e2644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63c2d47-908c-4c9d-8c1f-ce8ba9f52b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785c61a5-91c4-489f-bf65-7b0ab8125b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d500bcb-4fac-4afa-a59f-796611f16bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c87d3a-ae52-471b-a9d2-bcb7cc821a55",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bba587-55b7-48c7-a2ba-70714c8443d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baec23e5-db34-4bbd-b537-8682b516a2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8887716a-f223-4909-80d0-7bf6c0050dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b33ec03-096d-4366-af36-698f82d2998a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28accc01-b05a-45ee-8bc2-27af5866b05f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5619ca8-ff2a-4575-a4db-8f489a7b71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9623d667-efb9-4000-b903-1c75ff9417c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c3f91d-2da5-4a39-bed7-11ea3cdff217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff6ec63-22bb-4976-81d2-28df218d9443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e46ea7-9a93-4481-a2fb-63809cc661c9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9c1c20-fe61-42f3-b42b-9aaf4c830895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38c2e4a-7c32-40a5-bb83-a31040579a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731a079b-3bcb-4ce8-910c-b6c8968eb124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a55bddc9-05b4-484f-bdcd-06bacae22015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0778bfb6-1eab-43a4-b715-c28e94fbc259",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d69a12-05ed-48e3-b59a-7fb91b5a310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2c659d-16cc-41a2-b856-4bf5a511640e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910a68a3-7ddb-46f8-87df-3dd3485418d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acdfec06-0f27-400a-b5a3-ed30efbf2ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a256af4c-1b39-4265-a2f0-6d8a243bc8ad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c59c03c-5479-4a19-bae0-1402f7cc68c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749236f2-a04e-45e8-8500-02b6a811e789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f530e0b-2cae-4977-9689-ff9760ac33b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9282c654-b7ff-407e-a8fa-410ed4d382d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7f5642-6c4e-49e2-a186-208524bc9de4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8700a4d6-646e-4710-af85-7676bb403f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc96174f-e620-4b9d-95cf-af1a5aa0d0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95539c0a-4f7c-433e-bb30-b5e10d8db72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78adc749-0d71-4245-840c-4e4eeb684166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa80eb5-93df-4edf-af11-d63794a80bcd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4160be-0294-4e54-be5f-d3aec09530db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c969c068-02e3-46ee-afde-35332bcdec11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a0d310-e534-4800-888f-38f4f75a94f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f4cf277-ccfa-449c-b71c-d9f03ed6354d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450fcb3-bf62-4c32-98b4-8dd9e75f9e04",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3902041-92dd-4442-baeb-5986dd3d31e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2a8da7-c22c-4972-9515-4ca92544a046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd51d6a-c684-445b-9db7-256f9b1f116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e68cb42-db21-43ef-a9e3-685dbb29f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267c9862-8490-4c1d-ab40-ad23c3e5d0c2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2073ea2c-c28e-477b-a5b5-e85f299c4781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1e088d-b83e-4c81-9c47-578fe53f2273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1deeedc-7707-4ff3-a84c-189951715f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cad2d78-e370-4b10-a73d-8822f3b5da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772d5426-1e4d-446d-bddb-76721b972cbe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24fc1d-d7c3-4105-8ec5-14d79844efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6a88c3-28bc-4acc-9f18-c20183a308ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d644a-546e-4ba1-a7a8-3842c7934767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff0997b-db02-499f-98b3-bf6f08551cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03afa32d-8ab5-431a-9181-a473c8847cb8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94f1a23-bfe7-4e51-a8fa-6f2ff3bdbad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16af130c-6f73-49a9-b945-097c4a51e1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb65332-fbce-4edb-90bb-05e4f149f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29e56176-9710-4b86-83f9-6ba062f257d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e138b3-0864-48fd-abd7-d25ba4db45bd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69583fff-2604-4940-a44d-4e3b1d6bfbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57afd96-d4c3-411f-bfe3-bdf746968aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c3f159-4c41-4575-b325-5e030e1b7a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4188383-8c75-4e29-ade4-4780a678ca2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2079ee0a-471e-43a6-9343-c6d60347f1db",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b6328f-2eed-4147-8e50-9203007fdbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5150014-5608-48e8-87ca-e1ecb69f737e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee389101-68c2-4845-ade8-3b905bfe799e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "daafe990-e876-430e-9278-d2eb2fd96932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b35735a-d76c-4391-9f32-67d2d70e8083",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce1fb54-e1c6-48a6-afd6-d8e26e1ee238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53698864-4d4f-49c8-a1df-01490623e00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c9897d-5682-4d47-998c-dcd576c5c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b6fd44-561b-495e-8d69-08fbb0392162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b8d30a-03d3-434e-b111-e7159e22da48",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c655d50-bfe2-4fb1-875f-ff2a60e49565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3aeca5-55cf-4068-9475-58a91def5fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568fc96f-118b-4309-a337-2774456bf645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6943cdf4-b7ca-4205-942a-35896ab56943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f7df5-646d-4742-a464-c36149d01840",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63e9a2c-dfcb-452c-8693-4a3ae98dac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cff17a0-493d-4815-9a24-0f8b1583beca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf0ad08-6b1c-478e-9336-7d63b56d5808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6a47d4-e126-4fc4-b43c-4d34eb002139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b5a980-1825-441a-b49c-762210c21b11",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fd2206-e298-4c4e-b1ba-0a5e07dc0a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99de45eb-339e-4d85-925c-d37ed265b71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a7f8a3-f730-4b32-9fcf-9394acbfd4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0518b7-3d85-4bc9-8c83-d8d1beac06a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d332e0f-d903-41ee-9cc2-8d7de75f2d4d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d03fbb-96e6-4cd2-8a5e-1d7ec2e320c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb2b540-50fb-44c2-a927-10765bb33ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb4ece6-7578-4659-bc49-43307f0c8e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "531b9f57-e5ed-482e-9199-ef8a02c75294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508f1d18-3691-4cd8-91a6-fe60caea4e40",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945077bb-1742-4e82-90b0-5104cca673d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37abf552-a645-4ece-b1cd-43107961bd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdb5d67-5af3-4b86-ba69-00905ec007c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c458fa-4207-42ed-a05f-0b830d25f6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325722b0-c559-4999-a246-f83a03e8a8eb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec4b133-34ee-4009-81b3-8071562fb7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc851dd4-89f2-45c2-816b-3246a853397e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e1ae3-e08c-45e5-8736-a1a96b4484e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02200d64-a617-4615-a469-ddd8a244adff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74260ef7-8fa5-4649-8ab5-b49bdf5951fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ababd545-8557-485b-932c-7ec95fe2a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f983e18-3a08-4bbf-b357-17ade96ecc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15edb2-82d7-4d48-962c-5af80380eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "966caf8d-8ba9-47f6-bdef-70c50a98e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821af778-b218-48b4-a063-d58d16c4423e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4248332c-5103-4d0c-9015-9eb0f8c0c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b319ec5-61f3-4506-9462-1d3593159ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3152354d-d006-47ab-941a-740cd15cd290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea18d8f-e8f7-4960-905a-7859ecbdd434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f524a0-7a25-4f6f-8841-99e9073dfe6f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eddbb61-7543-4cc8-93cb-ac0802f6853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a97018-0a95-40d6-865c-107f365251a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c869b71-32c5-4bae-a0e9-312cd7a60b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43937a59-aa94-44f4-bbad-dda7f836133f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6ee307-7c2d-46e7-ae74-a5fe76155633",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a4cba1-54b8-4a5e-9e33-81dafb6d87e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd75207-a063-4ee8-9fe9-b2576e749b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545a8fa2-17d5-41ea-9f23-d8c15b0691c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b2499d-6492-4a55-bc25-eb2373108390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c8bdd3-0a93-4ef7-bcc1-836279258965",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9743b1c0-b4fc-46c2-b6d6-fc0074823654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0de8a6-09e3-4b9e-bd6e-4d6a8fd0cfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10c441-de2d-41b2-9af7-c78dd6b93c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68e3bc5-2048-4ff6-9840-4bd1fdf412d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9e8d7-c8f5-4be8-b8fe-7b29d15d136c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b858a-48ed-4ee1-88fd-1ba06dbb472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddc8401-293b-46ce-b6b4-9bbcd50f9826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251882d7-4def-49a2-bff4-67a951192ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6c75ef-456b-4332-a483-a55f5ea4e37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c7395-4ebc-4825-a90e-a1f312641cb6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46c4759-8966-4042-8a7f-bbc7266ece00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973c5a56-767c-4eca-836f-0d929415aee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b2bbd7-1f31-481a-bb4d-1169287919c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f17bddb-3c19-4351-9781-6926bbbbb692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45e6439-e74a-4022-b04c-a081dbf0bb40",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f703f8c0-7d6d-423f-9adc-e8690c8479cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de7797d-9f96-4213-9422-4447a7a2cd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858266e2-e50d-41ec-ba58-b6f2b2c6eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ab4cb1-2423-47fa-b4a7-c8ab3df72c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6c4102-e53e-4455-bb84-ca4464f4e269",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e14d0a-6896-462d-948f-d9aa98ea9f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1c9225-f859-4372-aa42-f472e080da2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460321a7-98d0-49c6-bb0c-edf05a772cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "994751be-d82d-47bc-85e7-c08c87a3c160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8893fc8e-a6f4-463d-a76a-05a683fe7efb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790db710-086b-4078-a8cd-cc97e1f8138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aeff9f-6c3d-42f0-882c-d5fee97c6bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79d4179-a4d1-4298-8a77-cb9b888eb511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7f059d-34f4-4151-9292-7f8c064dd921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f338752f-dcb6-4aad-a78c-9168c24632b7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73cb97b-ddb8-4c3f-9e54-602d77e2d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e11cc445-d446-49fc-b761-c0b08bc69a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c28e62-e7fd-4107-b38f-da792749d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47eff3e1-260a-4975-ab6f-d98ba97f6243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e24c9d-f3f9-477c-892b-d7a0c8121303",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de32c09-7ac7-48a4-826f-ac00410f6fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82883874-5a1e-40e5-93bf-714b9bfa6ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf207272-ae9a-4ea8-999e-244db5ca39bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cf6782-05f9-4952-83e0-3bca826bf62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e662966-d79e-4a4c-84e3-bc581cb11483",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abc8c4a-f266-474f-9018-d6a4f9028ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e484d0c-94a3-40c1-bc5d-dc19dd82ed64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001685b5-4ebc-474c-b864-f5dacdda82f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0288018-a425-4ea6-9a46-75b23b463f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d2c56f-ee97-46d9-aee3-ca8df4967d94",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a7db1b-7183-4c86-9747-b069dccba6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d395aa-71f8-4365-802c-ff7acb9093f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d961f1-5876-4567-a5f2-7c8bec2f45b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d233054-258f-4769-921e-5eb433b7b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85434ecf-dca1-49ae-9068-d65cd90fe4f3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8626cae4-11a2-4b37-9fd8-1ba5ae48323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4fe90b-dd72-4b3c-a85e-7318b192243d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aef138-1e58-42f3-a90b-0453801c2095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b64c48-232c-426d-b388-3372aba8d89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4374b6-9b79-462d-9853-e4e38e4f7c66",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8522b51-0673-42ac-b585-dfaac2e56d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f603ae12-acb1-45f0-afa8-c667f221fa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc891b05-a8ed-4920-909a-2cc369101c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41f21c6a-80aa-4921-9fab-47bdbeecf1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca26567f-db92-4546-b28b-70b30b7be65e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d0cd6-0403-4133-b172-19e94f4a3545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811439cc-dab8-486c-8fa8-48f252412f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdc50a3-8e36-4141-b60f-f3bc49e6142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2e024ab9-a95c-46b1-82d7-9ccb099aa753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71762f-f3a2-41fd-bf12-e642583ac5b6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec2e83d-f478-4d21-a229-591f174188ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e71bfa-6148-4851-9bdd-20f8a5691a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2e36bb-be45-4f74-b6db-22ebc54a892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "77f3dbac-0878-4cd7-a4fc-95fa64a67446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c6b686-8e1a-45c7-95e9-0519adaf1bee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76d2617-ac91-4262-9d2f-d1d5bd8a6c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711e80a1-cba9-4e46-bd9d-c958111427ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b91ad-40ff-483a-8ab3-3809fcc71852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf70a21a-1292-476f-9b77-b56275f47650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7a9854-0c05-4387-a298-8a6a112fd525",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52abc174-c01c-4bbd-baf1-38b0fb6804ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a346ad67-9783-485f-8dcd-8e58af70e3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a2046-135b-4358-854d-806e8c349918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7225b461-e6a1-4d7d-8a5e-bd3f643c8ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f632649-c050-4bb8-aea6-f55122157421",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9109549e-05e2-4c6c-944d-da6989200a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c67c8d-8ca0-4764-a411-bd9edb299d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e4ff3-babf-49c3-9731-d0694c540bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8a1fa8-ee31-4e75-b743-b62a974ee55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda31ff0-8e57-4c18-97c1-664bdab1ee8e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc1fc1b-615e-4d36-b149-8a04a0cfc255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ed6dea-ad04-4d01-b0d6-8a1d9c9b3168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a400c1c1-eefd-45e0-9e0f-23f96e9a954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc04dcaf-e9fe-4694-ba36-1b58f5a6927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb86ded-f52f-4c48-8b96-ffaf99017dbb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c2f58c-fb30-49b4-b2d5-83606df870a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4be0b0-2393-46cb-85c1-65fd3d1b1203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d14687d-ea37-473e-9f41-71ce54a8ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6608498-3bdf-4eb7-aaa8-454327ae205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c4eb50-7e0b-4b21-b8cd-a5b496591fbd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990607a1-8d2f-4de1-bb3f-a17301c3f3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1760d96c-ae3e-4d97-970f-7d6ce86227eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0367a04-0a41-4f89-9ca2-619ce7ef4f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "105adc80-d07f-4c1e-8d83-183c6d8838b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b186597-30e6-44d6-a660-6772049367fc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d367ca29-17b1-4257-9406-b7b51ca44b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b28bc77-6f55-45fc-beb2-c96841ea94b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6c4dcd-7aea-4182-9c65-8fd45250b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4eb8f-9df3-49cd-a132-7c6621f41e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ce9fe-4a59-4c26-be55-9b2a4cbd5ede",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f01ed45-48bc-4137-af69-84013de5902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca3fac7-1eb3-480a-a58d-7d5bb5935b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2b521-2244-4edd-9324-2b54ee2440af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e35949-e259-47b9-932c-1281115e620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae358f6-126e-49c3-bff0-53857cabfe13",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ff46bb-f72d-4620-b61f-0b1cf1391d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f046c4a0-d02d-4f6a-b487-9aabc2c72177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74443ea-033e-49d7-9a24-c15fa254c40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2697638-9d4e-4355-800e-eb653d33e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c803ae-8537-47c4-ac3f-11be5c69a8af",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636bbf39-9467-4919-9cbe-07b222a194ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82096577-91f6-47a5-b08a-609ac4b6362f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e144f0c2-dd6d-4603-aba9-f1c4d76f7b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2d7586-bce4-41f4-ba32-9d738c3df669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4072d8e1-0369-4121-8c9a-0c607ce51c26",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53971903-6f44-4009-a518-dbf04d790038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e685bde0-9066-472d-ad51-86057c8428e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9752d045-058e-458c-ab14-fcf5b6a49a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa4c2a3-6d1c-48aa-a145-f5f35eb9df0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02316df0-8646-40e4-9baa-ae773083dfe9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804b2e41-eb5a-4248-8ee3-df5bebbe4a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0a1eed-c8b6-4cc0-8212-17551644ac3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26d0f75-987a-484f-9a68-ed72f5abe10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "358f9440-ccc4-40e4-9217-7711602d6410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172a0360-c289-47a4-86dc-08b74f1ee34e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbe3f50-f5eb-4597-96bb-5e738395cc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d8c64d-e0eb-4116-a986-56ea227f1e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e43afe4-4a52-4d58-a4a4-bda357542b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbe7bdc-c057-4a2f-a601-7cf92e788e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a6b79e-3141-43c6-89f2-967d05f01f1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233fdb62-cfdc-4943-8cc9-a051d3556a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e278d7-6fc5-44ec-810e-9d8c6cdd135d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0c3b0c-9d07-46dd-b3a6-d2cfed39982c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3338a3-3535-4db1-a1e5-d7fd02d12710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3555d2c9-c10a-44e6-bfa3-c3ad85ab6cb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d644c5-9621-4107-939c-bd490ef0cea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0f41bb-f052-4202-a527-566b81dab566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d30ca-76d2-4bf8-a42a-2803b5e6a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5842d1c2-651c-4c2c-8116-fec354dad479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa2c367-97aa-488f-9b8b-1803ba3164a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ce24b-8a8e-41a4-a70e-9afd6809f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54401dcb-1739-4126-b832-073874ce6a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae9aca-03a8-4082-960a-9acaa8819e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4bdec6-8401-455c-bff6-2bcf14498872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb597df-7bcc-4e07-aa28-19d2d1afc134",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91eac6e-f24e-4118-9682-8d904ae54b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b54552d-68ef-4188-afc4-07583db731f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dcf6f8-49f5-44c1-a4fd-c8c68ec5f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b42871e-dd96-4b2d-9100-4cabe5c216d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5305b75e-10e3-403e-8799-92abcf9ef7a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d15cfb-e064-4172-9636-dcf15df3c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3265cfe5-f48b-417d-998b-dc89c41a0cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625ed147-786e-4a65-a971-52b0b344b1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "132c6ac9-d458-490e-b31c-8f1e447c8bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e481279-ed35-42a4-ba0c-949fdfcfaf76",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d958f1af-3e91-4201-b0be-dc9862f28a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4280b5f8-ce6e-404e-af06-35c4d48358d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91187981-1740-4672-992e-a53b9d0334d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "874bcbb2-cf69-4da0-8952-b17e60ce6fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0b7f6-9aad-467f-9dd3-2353520b86db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf5e705-f7f2-4feb-aa34-65cf4d2be0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106c8ae2-d472-4cf5-8d14-c19d87c51121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317b1f25-40fc-4b39-b66d-3940e791fecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6bda96-a9c4-4d61-b77d-3b4f7534a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c05b35-4d8f-4ef6-9c37-205fe30c3dbf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c96909b-75ee-4d37-982f-715e42d5f3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84108ad-d43e-4d2a-8c20-c3a8f83c202d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e4e773-729d-462b-9c95-1e117825e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff0b646-bcd9-4e85-ae80-acca9e4c035a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f41c859-44bb-44fb-856c-c0c91192bff5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745984f-b90f-4baf-8c2b-0651d01493b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace85455-b3ae-4e2d-8b3d-27cf95e95055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7ebd47-0620-418a-93a7-00526d33b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c63fe93-80d4-438a-a11d-a5c9e9fc200c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377b4132-bc14-45bd-84f8-03e0ae6b5459",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070e4006-3659-4c03-9d47-46f9daeefbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1610f434-2fb6-4c93-9280-20905063f475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cdd38d-4491-46bc-83ff-d93cd469b764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6620b5d7-367c-4731-b1d5-40a627f1db8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3d3858-8ba9-492f-8e44-67b4737978de",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a343c1ad-e9b1-40c3-ae40-53aabcde6e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc56881-f9a7-4437-b6f2-6c505aae8564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a531c-40ae-4cda-b31f-051bc333f499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "072d7057-3cf3-4f4f-bec8-d725aef70453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75096eb1-1852-4d28-a7d2-78f8b7b5cf79",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf136a26-a9f6-4487-9b78-f8712d2c2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d9d511-ca9b-4076-9517-1eceef755c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bef1e38-cd32-4ac5-ad25-c6879560e473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "60dff590-068c-4a12-9e58-178eaa7f659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4665175-c1c9-4b86-aff6-2f347b868ae6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7dc196-63cc-49d8-bc9f-55d2632c2ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b33957-ab2f-4b4e-aad6-ed74b767b571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525872d7-d12e-4752-840c-59882f970ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e492331-b0e8-4714-b6f4-a09e1a6dd8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a33fe74-9898-4579-a358-c3a92d6b5960",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f58b37-ca02-4367-854d-d23ed5626bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c3e7b6-e03b-4128-abd5-f4473c1923e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11626664-f63a-46d3-9a3f-6c915c944212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc7118c-0ab0-4fe9-b4c8-079ba37130c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3926702-282d-4ad1-a549-bccc3abfbfdc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c10ed1-9004-4b7f-a0e1-8ed6b1b79533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71abb986-5513-4237-8382-06f2755c8c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df2e5d2-2973-4648-a9c2-53ae1a03648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6944672a-3258-4f5a-9119-b5b989062cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d3f989-9f2f-4ca7-9ace-96c4ba0bdf27",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3ee0f9-fe88-4114-af10-fbfe94c95470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6fae27-3681-43ed-a68e-48f6b1e4f972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c20906-2a3a-4b13-b167-2cd094579324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ece400-6a75-41fc-a142-d23aa06b5a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ed0847-92d9-4282-8e70-b82afd17a1ae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0214c19d-b720-417f-8b80-1e0e75c68ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc130f7-cb2d-4910-abd6-db1cffc5d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21814e-4262-4251-9dea-39308337880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0319e14c-138c-4351-b4bb-203f8fd10a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c446d0-cdca-45f1-a9ba-c9ce8ac8289d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f51a55c-a28f-4b7b-b749-c3ede06a8c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87c6e78-a3ba-4cb3-ab0d-d7b4a258e37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35790030-d458-4bb6-98a0-773b8f4a0fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95072d6b-34de-4d45-b3be-b225979cecc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f7df2b-3e53-4f87-842a-26fea478c949",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb2e5a4-284d-4a2c-983d-32ae215156a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26656ce-46d9-4b14-824b-06f05845c073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df88c1-0308-4876-b216-d75ae0cc112f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4db7662-4a50-424a-9aec-8a7922b6a004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48d30ab-d94b-456e-aa16-7b0404ec14fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80c1d9f-34b8-4cd2-83d0-b609264d5739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc8b4fb-f2bd-4363-b6de-dfcd2d825c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f73ca6-e34f-472b-a881-c89d1385f5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0ab9de-e3a2-4007-b752-6f376afafcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25f3a10-4ca0-446e-86ca-bc98744bbcd4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2635cf72-fa83-4efe-80ce-e00c3be2079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e622f0bb-6538-4d3f-838e-31bc39d462a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e08c5-83e4-4755-970f-5edc78767a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a044e47a-59fd-43c3-8657-4b9474e91c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f004e9-b55e-40cc-975f-810d04f35355",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e518cce1-5c35-41eb-976d-e3a54b8ae9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da98c41-50ec-43bf-a3c3-e0ba01e93e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94b3e3-b860-4767-8516-918018ad5b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2adf41d0-5e96-46fd-944e-c9e64d9fe18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76997e1a-f49b-4a63-93cc-8baa10ad36f6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e332c68b-05c9-4345-8d5a-9ef00899c621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28fe1a1-41b8-431a-a50f-327dfd5d3851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe37dff-eef2-4230-9a40-db938ed3de8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79b3decc-9b73-46af-b18e-e780893fbb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eab5c52-a9e0-4685-87df-fedf78a2dbfa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2aaf2f-fd4a-4afb-9d31-3e331083518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb1dcd4-838f-4d9e-89b1-e6a62ebef1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866ad488-4bf3-4f03-b6d2-c631a326e70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fead08d1-7486-4274-a4e9-3e88d4d55636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf690c3f-ff68-40e8-93d8-e7b2746c89f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77acce20-3950-4a56-98aa-684d31ea3e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea987e2a-d070-4615-8034-52ab98789ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665be729-d4a2-48d2-94ef-9bcac5389513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20716a2b-aa04-4c99-8db5-a5e71bdb6eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7351efb-1770-4fb4-b433-62f80dc124dd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bffda4-6447-4456-a339-b31c5b68e138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d66d070-7bd5-42f4-966a-76c21f857fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee7ad47-ef48-4b1e-b6cb-79844cdfc671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6c2fd8-a43e-433c-bd5b-e0b7384c37e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0bceb0-a338-47c0-9767-07c97263caeb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c0069e-433c-4206-915d-007129ec6522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09c43bd-6a91-4725-971e-852c29cbabb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fc1140-a4a8-4d96-b23d-5a0eb0d4766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c8cffa-505a-449f-8076-3b30a9775ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d96cd6-cb61-4f38-adc4-8873e5f72b0a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc60731-3d90-470c-a6cc-db507d399834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a70e87-6ef4-46db-9055-2f843688a0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3702d6dd-6ceb-4187-b546-524a23d331fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92c781e-5284-4fe6-9f16-c1f6658a09df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c0f7c8-b04a-4dac-8c83-9b624f882426",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daf678f-c948-4718-b0a4-fa01d3d3dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adc4399-b80d-49d6-b5da-98b5c1ea4e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4c5260-8ba1-41e0-ad29-3ff802c4a55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb87cbf3-72d9-48e1-aef2-779850374200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c52efe-79b4-45a4-ae8f-cf59d0b7ded5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342e55a1-673d-4158-97c4-4d51c44cfbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb1cfd1-21e9-4023-937e-715bdb714a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7426cd6a-4a09-4767-9cfd-4d2bc594fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f85944-3837-4c2b-85c5-96855fe23c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5010b06-3a21-4019-8a2d-789058c6a9ef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de086306-9aa8-4083-a6fe-e2dddb658ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9516051f-4e80-439e-8be3-02a997995022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f49cb8-ec29-4380-8766-5db0a9005b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1de3a3-cd37-4efd-8ecb-1359a788991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6cac84-dca7-4e26-a7f0-37d70057dc68",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5afae3a-6a06-41b3-a45f-6635ddb042fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5f613a-9c92-4943-8dc9-4b4f9521813b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae7b37d-9691-4818-8fc8-c8074044c95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a19e1a4-bec9-454e-a818-68ae57d49d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce03d182-a0fc-4821-aac4-1285b474615a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad0e803-e683-4f11-8fdd-7dc7c26a2e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5fe9de-1efa-479e-8f8a-efccd436c7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abf2af9-7a33-4798-8876-a610fa194924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb496a0-e6b1-4f96-8d29-aed5983ad128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab58dd3e-9587-453e-86b7-9a6e4369c611",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e276d9-b1d1-4f2c-8567-073a5bc13704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98957d2-6a2c-4258-9c39-c6669264f96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfa37a2-b0ad-4c12-902c-675c2a7aa4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4795d2-159f-494b-b021-5bd9004cc8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0859130-69ee-4081-96f2-0576325f5dde",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c5b36d-4cdf-4fa8-8de0-4901cb5a50d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402e9ecd-df8e-4391-9449-e0ebc6fd7dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36320787-52b4-4703-b8a2-149f6b792012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fd92b5-6fdc-4464-ace2-aab1c710e896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b88fbd-ec03-4883-9a5a-b975a684568e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff674c96-3e20-41c5-8d2e-6827c07c7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e33deb98-f60c-4429-894d-b10535ceb1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd48fa4-3100-4f2d-b707-9af63856db04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30884393-ed8d-4831-bb1d-78905489a828"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d2b4269-aef7-43a3-a615-641ecc99a574",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98691893-e99c-4597-9b5e-1514d0559471",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398da13c-fb53-4b2a-b5d6-882b8cf55b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb8c53e0-6811-4da0-82c2-acd655f3255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c9494-ac2a-4fc4-bc69-21f3d8084dc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37b76301-1fae-4582-b4ce-f2f04d8e3349"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3938be5a-f6d1-45cb-a4bf-9172f27db3e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8f11564-e1c8-4021-9eb4-2eedf324ad1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23ecea5e-18a6-4709-8776-90d79536a67a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "417069c5-ff00-4b5c-bdd4-1de59ebcf841"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efa530e9-aabe-46ad-88eb-c9348e0c537d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c70e653-6b70-4d93-9811-cd2b66fae06f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fe806f4-bf3f-4e7c-8a1e-112f39f4f914",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d5e6dcf-c7b8-4828-b21c-7ca45bf51162"
                }
              }
            ]
          },
          {
            "id": "236cbf05-762a-4843-82e4-091ef9dabed8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31457e53-bbb4-44cb-80c0-6aae54d756e3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a4b6b84e-1907-4c29-995b-df493c2cee6c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92542c8-81e0-4f7c-bc69-b86b5d4fdb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6243bf27-cfba-4a71-824b-6574415867fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddf543-b297-4c5d-985f-8c2dc7490a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ff32c9-4d83-4abf-af44-4a9af83561ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49896876-17fa-4a46-9f51-de887e075ee2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fcf6a48-3b0c-4d2b-8b05-ff31dc5d261a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9821adb7-8622-49af-a9fa-81a246748890"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaad0186-6cc0-42fa-a922-6b4d9eed68d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd18a8d8-0872-41d7-9d3e-3590d9857876"
                    }
                  }
                ]
              },
              {
                "id": "9568d548-2146-49a4-9ec5-d48a29fa447a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "801a8c13-b702-492d-8474-690df970a0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80d41bee-0144-4c92-a0bc-73983328066c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ea51892-f6b4-4167-9823-264324fc6792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6fc0083-83c1-473d-bee9-2aa60ab83d8c"
                    }
                  }
                ]
              },
              {
                "id": "81da3211-deab-405f-9f26-2a4faeee0dd5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06017a7e-5161-43c2-821d-4763572ea3d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70c28e79-7114-4e90-854b-23be53d31b4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1091b79e-6a56-4158-9328-29147051aabf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f9bc771-9a70-4ad1-9e26-9c16a3047342"
                    }
                  }
                ]
              },
              {
                "id": "0d551873-9ef0-4d56-b175-301eb5bf89b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ede75f-04e6-4280-945c-d2b873f8c841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41a34831-7894-491a-8c9e-6bc0d6f19721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21f2bccf-7918-4b0a-8344-9decc2d41c43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "704a642a-798b-4ae3-a4c0-e5929731655c"
                    }
                  }
                ]
              },
              {
                "id": "d053abff-3dc7-4483-983e-048cb142d52f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fea2bb7-ce18-4829-8766-5d3751aca6bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d42c8cdd-8bb0-425a-a86e-ca09dd2bd951"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9828afd6-007b-4953-91a8-13c200a66369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "85c4d3df-8d99-4edc-ae12-e3a1bf48e2f7"
                    }
                  }
                ]
              },
              {
                "id": "f886ca1c-8f82-40d4-88fc-b7329a33ec09",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a63bda1-d693-475d-80a9-5f34945090dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e40320d9-59f0-4817-a2af-155c2a4a11af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5f8e36-5711-4c94-b61a-e2a59cc00a57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95beb4df-80be-4215-b4fb-2ae59b609783"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c667f609-977f-4660-8a7e-0f2832d573a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8772ed1b-a6cb-45dc-b16a-32c838d6b666"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50e5e15b-5cd9-4873-a592-fa2726938d0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8382d1f2-5d4b-4217-830f-90ea0200f95f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca502778-5b56-4832-94bc-b1f4ec91ef2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4e0781a4-03de-4524-a10e-bb277dbd56ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aab09d5-a3ff-4d95-ab6f-48ea7481a729",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7f8a8a5-788f-4c0f-a13c-440532124b96"
            }
          }
        ]
      },
      {
        "id": "37d0381b-409b-4a7b-8700-6065571d05c9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1c603291-a3ce-4a71-9c39-9dbead47aa6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e12cdf99-6f59-4cc9-8d14-4947cc3beb7a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08063dcc-10da-401e-95db-990c926b879e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8868c69-d589-4f6e-a257-f349ebfcecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de11f1af-4c70-41a1-b4fd-1e73f94354b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4d1063-8648-4986-b855-a84095ac86b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96941355-6cbd-43f9-9d73-27be7f13c8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3ad6b0-b37d-47b8-8d5d-716c306f1196",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af9b47-2f06-4fa4-b078-c3d832b3c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7270e71f-f4b8-4478-ab43-61ab25fc8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b2ef7-67a7-4e56-b55e-21797d71b642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89304b28-e96c-46b3-a790-6c2863dd4b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24790a97-e2e5-440b-aa14-8f06f3d692ff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d3ea76-63d2-4ff7-b0c5-ab8d9e74c344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b9dfed-0590-4d6f-8e70-f10a157561ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931db4c6-e233-4af6-ba0d-77667478a62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b325fd5-8a80-44ce-8470-2e8f433159c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1f4c8e-95b7-4aaf-937c-d652c48f2696",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef897e9-53a0-4c92-8719-6963a1fede75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35109b47-b0e5-44da-bb2b-c44612fa0e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bebdd26-fd20-46e1-a108-6bf6a3eef520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf7f63a-d47e-41cc-93a7-94cfe83a2c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184926ae-9101-46e3-818c-0ee9104e61e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3003d28-5dd6-4c63-9d56-a91fc8344175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50bde1-2cc2-4589-a3f3-13fd3013430e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd66c5a8-d1f3-4280-920d-5e04c02780ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab6bb79-8568-4b5c-a0fb-91561205381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80471a91-e79e-4807-b6b5-8f2fccdd40c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e15fa7-cd53-4214-966c-31f04a6a046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93f487f-7992-4917-94e9-b136ca5a1ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9483a261-39dd-4a0a-adfb-efd1fe0eeca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ce267c-80aa-47fc-b7a8-77091b8e44df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da016ba-3995-4ba8-a7bd-c27cafc0e5c4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e4d37-a291-4cef-a285-f86ff218b763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a73e788-7b2c-46ed-9ab5-eb024eb81525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d962c998-c6c6-4444-96de-f8765d42f61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eec7cc9-5836-4a22-8259-a706ed6d1367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a196cd-6924-49d9-9b98-3a099d2c2610",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4d0e3f-d61e-42f2-a4ab-3f76b5cc14dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50992107-acaf-4a33-8cb8-ebaad60719b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9831d2a2-aae2-4a94-a0ab-e43f029df6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef668c7a-6fee-4865-9f60-2f211c975938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3774886-44a8-43d1-96af-631e9419c090",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5002b425-d029-4ea7-8100-f0886831e3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d8c22-3057-4160-9ceb-6fbf538d8e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb575a9d-5495-4d1f-86d3-d62823b3b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7accfb3a-e6ee-4108-a7d9-877cf8bb09f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3351c-c273-4e64-8258-e26cc6189443",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83541169-fa3c-439a-818e-e1dffe26974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e482371-2b05-4c3c-b17b-aba2244ba334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6283f1-ee4a-46e7-a01d-57b712ebe777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad458962-5bf0-4c82-8d8b-452dc61fcb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a12f79-1bdb-4519-860a-4032aed74e27",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69bc782-3e71-4262-b050-1de9b8c48410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca6d437-0954-498e-9b52-db5270ab927e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d29b32-f135-4185-b656-e226ddb72a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54776a04-52aa-4b25-9221-bbacb925ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bf1e80-baed-40ae-80ce-23c7aa5a7763",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7e4c5-ab10-4763-bac9-a2948025cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d7ea25-9502-4b98-864e-e2ea4804d6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb24218-c95f-4410-9dc7-945e79287346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd50cb23-abd4-40c1-baa7-fc4b56c5de6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534c5269-7f7a-4c23-a6f8-b8f15db42acf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ad0783-4793-4e10-ac6b-ce409d0a6da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f726802-90e4-4af2-b1fa-38d1b43f312c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2ab1c-612d-4fc3-9711-4fe5e5382042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3aa5a6-b5a8-4ae9-b6de-a73392f058e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d5d20-b2d6-4136-b28e-2cc2e18eda1e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7585dce-90cc-40c2-acad-a2b3d2d6cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3488d09-1afc-4a0a-9470-b3348856815c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3797507e-59a7-4642-9c7f-d4de987de8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef1f887-9f64-4b8f-8171-16b5f97b2a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3ad9b-9d1b-42ac-b17d-b2b135b5c85c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aab65e1-f02e-44c8-8b15-36c32c1a7b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baff274c-5766-4e60-8f68-5dd54cac4b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47773843-4dc4-4478-ba28-a931ad9d7653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb5073c-dde1-4d05-b1e0-77c5533866dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3a4683-44c8-4d33-943f-6fd3b0b9d1b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e841bf-2ae7-4920-8fe8-5f1e8040334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66203e6e-ab78-4fd4-a8f1-2bc8fe9c799b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8e6d01-3684-4716-bc3b-d59b764c46b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "644ea94b-64d7-41c5-9538-abfa4122923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b211c41-26f7-431a-b9c7-5013efdad21a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abd2b26-f0dd-4d2d-9f32-04667b7d487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046c6dce-795e-4f1f-8af9-b6b0311b2e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b535877-aa0e-4e1f-ae1a-2ecc2708477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2179a7-b232-48b0-b5c1-02f6f4007de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b7bc86-d928-4753-8890-8cea166b686c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a4fcf9-4d0c-4223-9695-e7618fe8de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7786d1e-4d45-4ae9-b08b-06441c076b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b7b542-7a14-4ce2-8e8e-ee8a0e7a7438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0c57ff-b317-4e55-8ac4-8406c8498feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a56e8eb-ce3b-4559-af44-3ec24679f024",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c2aab0-6122-4881-831d-ffff0fb5c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2181c1d-1869-4bf2-8d00-61b5ed03f115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983bdb43-e8dc-49b3-8d6e-80dce71e89ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b240ef-d23b-4df3-a3d2-55d9ed032d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78955c32-7f45-4fcb-b54e-74928878248c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d27e5d1-db16-405f-bf68-f4186238f778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef89be3f-f2d7-4e06-bf31-01925a8a132b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd445ec-64ec-4b5c-8dba-247a774ec9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f24d62-29ee-4077-b1e1-1f27a52a3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b1d69-5717-4204-aea9-b4541ca58cbb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ee9754-7358-4b6a-ac30-1d8bd94254d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a87087-332d-46de-894a-fe9c32c7fc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b49ea13-3889-4d8a-a042-dc0cc3b24526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914771bc-b8d4-4b23-9377-7744654d6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb19435-4f5c-472c-9078-70a0da8635c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50623c1d-b102-4e4f-83a2-919ceaca93cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed44bfda-0576-46af-bf0f-f2ffc9c91ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e3b688-bcf8-4205-9a8c-e0ca7bba2a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfd75d8-fcbd-4db6-80e3-ddab99234703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b020e-2422-496c-9e88-cc2fed77d574",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88551f35-539f-4463-a9f5-6e85d26c3ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc02640-c05c-4beb-9142-241274bd233f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed681b-e2d6-40fa-8fab-52a5b49651f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026e0e21-af70-4b0f-b220-2b12cddedad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9c4900-d823-437f-95b4-9651421cfa53",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fd23aa-9895-485d-8a16-3de7cf88749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0991507-d2f6-4cc1-987b-f3d4d1b9f913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab2f0c-2e13-4ec8-bbc0-cc028f2840aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7719a476-1dd5-4250-992a-08dda8377374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b945c6-a14a-476b-bb66-8d7d42563f6a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d695c914-d9e4-4e23-9e54-88d9febcc31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8af3e0d-d2d0-42ab-98a5-981987860035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d780583-23a0-48af-8022-55c3b1301041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310c6641-1e0d-4de5-8e45-f6e732459ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec013ca-4c9e-4356-bb81-175bf93342be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463742f6-fdeb-4773-a177-4289dd278a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a586bd32-0f9b-4e4c-a7b1-8f9dd54003b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c7370d-0ef1-4410-a954-ca3fe844da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8285281-17f6-43ec-8dfa-1c8e8dde4007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feaf0be-879a-4bf5-a2a1-845bf5c991c5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e1c193-5b97-401d-a08e-c3502cf1cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f37fe1-5a85-4153-9e46-83dabea8c9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10200492-74a5-46fe-ad12-f670cb643689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297b90d5-6533-4700-87b0-5324cb338cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d86167-4a79-4f7d-93c8-d7db3031fb52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7729b465-8ba9-417e-be2f-03b5a15e5f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0da63b-5932-4986-8234-043ea5374b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d93af-9740-4f29-afeb-2ae3e1ce0a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce96a6c-edda-4f80-817b-52b8c3213a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3146c4e-605b-4811-80d7-30829c022c4d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db440668-a4a3-40d3-9a3a-640ab7f33bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90858b93-270f-4591-abf2-9496f237f8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fdbf12-b639-494c-8481-770f29dcf82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07d4578-3330-4a7b-afb4-3b9230085bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4009aeb-53a9-4ab9-9634-be14b2138d1e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4e7a12-1db0-47a4-8b47-285ad4ac72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3f846f-b78b-44dc-bb4f-643ba8ebd1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3954a23b-1a90-4b91-a18e-77f24b7a430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1f7005-4df5-41b9-9f99-a3772acfb238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b85992-b2cc-445b-9fa7-075b972347a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d78569-1412-42e7-be4d-3648829c44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c25c5f-6423-4843-aad2-558060f7378a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa965b3-7c3e-4746-8033-b2b4433ff56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffbad20-fc84-47c3-97b1-c5e494465681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ded4aa9-e018-4cda-adbb-92fd718e5740",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edbc2be-f6c3-44bc-995c-7c89d2600eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a61e4b-2fc3-40cd-a5d0-024b6df2491f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a22cb3-9586-49fa-82d8-302434a49a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d6aeb3-17d8-4066-8dd5-3fda246ff704"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ef2d256-352f-48d2-8492-2317efb70a84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d380e9b-fb98-4c92-8c09-e9fff486cfac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28c3e75-e34b-4da4-ba2d-d72006986db6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d748b01-2b49-4073-bce4-0dc3f0309389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d578e6b-e6b8-4606-a66a-f10891ffa44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efdcf48c-cb1c-48f7-9c00-5a0f7f119a45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3771b104-1213-4bad-8e0b-b99118a56246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e379d440-b70a-46a7-94ab-6476548d221f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cb90a80-1c78-48eb-8d0a-db1b8623be1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f58f02f9-2360-4f9d-b758-ea7b0bd71b10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2154cd58-0336-47b7-ad31-5bb893ef7fb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32089225-7576-4949-af63-51dd6c5d246d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a18c47f-639d-4e69-a255-5dcb0581d39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35d69d93-dfcc-47b5-a012-2c8fccc70ff3"
            }
          }
        ]
      },
      {
        "id": "bd19ac25-7c00-43d8-ad6f-f659c9c111f5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e807de99-458e-4722-b9f4-14e22dd3b64e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b83b56a-9934-4792-a751-b56c0104cc52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b699fd4c-ce85-4aef-945a-37f83d9ee3ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640d941c-b229-426d-8d79-a950cfb65474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bdf5a9-65b8-4a81-91f1-6699cb84aea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b3bf87-c190-4812-9374-501758935a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ac4b7b-6dd3-4934-b462-7bba84a4043c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fbe80c-a0d2-4923-a6aa-73b78a389a64",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced42cb8-0e6b-416b-b797-1f0b56faf84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6e6f35-8369-4879-ba7b-04c9b519b9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a33425-191c-47e7-af69-4306f7b80710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcbe97e-4ad8-4606-b366-9e0dbcc61ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28a7d7c-b688-413a-abed-b211a394db89",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fdd226-ad41-4d8e-afe2-b53f422c61a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f87529-ba70-47a1-9d84-2b51409d3670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa420bc4-9816-416b-bf4d-dc21d0b0aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "642ecf63-fb07-4651-9569-c0dd997e13e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746e12c3-c87b-4099-b192-b926a2bd8016",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86f3f00-e88e-48a6-beb2-a632c01f3b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194e5c84-30cf-49a6-b678-38d55540a5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9245b9-5f99-4f96-9e42-310e0c1b6391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a59816-1057-426d-a693-5a7bd8d1146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c8af60-0365-4e58-93cf-a3da93539308",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69844d8e-b75d-48c9-9f94-72c51230dfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a487a0-5616-4135-9e3a-4b3f7e324913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e4f416-08af-4bc6-8f23-8f67b7ede6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "641b4f8b-22d8-4ccb-9b24-66579baf292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c371cd-5bbb-452d-b618-021e352b7131",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2cf92-be5d-4d74-8e31-550d894fe1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c79128-23c5-48bf-93bf-b171c2ece969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfac2ae-210a-4f49-973d-5bec24cf2660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf56832-ff1b-43a4-b6d9-30ebd8f55401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab71d344-4322-4a27-ac86-8bbcde7857e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561df438-28c2-4729-a4a3-739bc9eb6669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c129493e-6583-406b-baa8-887120755e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13af211b-c775-403a-b50e-54805e33694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f33163c-4b50-4d44-bffe-bfa0c79f71d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc01861d-508d-4ac7-8837-88cbf18fb702",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baf1c35-1fb7-4f12-98aa-f614f7b52ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5375a2b4-593a-4965-bc4d-165a4847d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f538055-c614-4ab7-92e9-dccfbca37957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d98f5a-e77f-4567-b014-d21fbe7b9b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06f72c7-cfaf-457c-b395-7ba796a9d85a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164e928f-bc49-4e94-b2e1-74eef47768e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a67d8d4-4265-4b31-b786-95e7d0b58d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0d017-800e-48a7-85c4-70f3b6be36c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0daf774a-9678-4788-b615-707b1eb51713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfb588b-57bd-4166-a839-c0203f84c653",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4217d609-954b-4c50-b5f2-3b0d96109d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc313575-09c6-47d5-bf96-3805846baeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee1ccd-8cfc-49ce-9b78-b39ee7047b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5f71df-31a6-445d-96a0-b5dfd1b84753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23d73c4-91bb-44f3-ace4-25074e181c64",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ede0d5-662b-4ad4-8aa6-50d43956f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c762f3-d623-4a2a-b411-1f4842f15834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bf62fd-4569-4af8-96e5-3779050d2e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9892be46-ee76-4f6f-bc4d-354ffed23666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a0d3c-12f2-49e7-b357-3d607b9afd20",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9aa4dd-153d-4330-b42f-d9529cb80217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc8a574-599b-452b-aaea-8fea8bacde00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b360292-b7f2-4dfa-bcbf-a27bb7488a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb5d4ab-6071-495b-af17-0bd6e75fa63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aeb837-6859-40e7-9b64-b4942bca1618",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44e86e7-cb91-4583-bc9a-a1ce58183dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc30811-6149-431d-8f50-a4982792132b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f3435f-9349-4ff2-9fcd-0c47e486125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8707ba58-ad3c-4dfc-8d06-99b5045d33ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a2c3e-9989-4c9c-81d8-8b14edbc719a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51feee37-bf10-45f3-a844-e0ddfbb8a37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f7b21e-2815-43e9-afd1-1efd38439e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10326f5a-f969-4ab1-b4c2-573a6f5c08cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "91459fbe-135d-40ce-a1d2-86613ad8c610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be220f3c-b5ed-4bca-8b82-f7d6426fdd4e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794754e1-bc0f-4393-a935-b415cf0741b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ba438b-b45d-4ada-9659-77e3c4871507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4c76d6-5734-4a01-b470-df6314c31d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "470963b6-6063-4405-98e0-21b27c429cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8adb1d-7b03-4f4e-a6ff-0d56fe608125",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb53244-bb84-40ab-8f88-4bb99e5fbdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd346dc2-34fa-4f0b-8c7b-700ae3b3c87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b868bd-93ed-4c56-a9b7-a4ede349d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85edc7f6-1ac7-43c3-8efd-4cb642b8ee7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab04249d-feac-4365-b82f-f0ca8a3ebba9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea272f94-74a8-4ff7-bc48-c1a7c9db8fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4db15b-6539-4771-96f2-63556098a354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cd063c-f05d-4ffd-b6ee-723df842da93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "344e0de3-ea82-45d1-ba8d-a0eb2138a5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9a0014-a02a-48aa-8525-071ae4d5e93a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d8bf84-6f47-4a21-a7e7-fcedfd880ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea3b789-678e-41ce-ad96-efafc7107975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2697e782-713e-4f11-948c-d8cac98e3684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74ecc66-6447-4da4-bb87-2ba538f39d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40adec75-f93e-47f2-af07-48c6a2d836eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42024f2f-ad0a-4108-afcd-58dadfc85c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4d9de0-c901-479d-a513-27155ee67047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff10ff0-6271-42be-b76f-1f096e7b2b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b9d62c-89ec-49b3-9fb0-2c399ab3f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d946be2-f815-4f7d-ab4b-b7467f34ae94",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6fb2f-91e3-4e58-a6b4-06c660d8e75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd31e07f-cba3-4a8b-9fda-68fcadb5a759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018a54c9-6ba4-469d-91aa-4e2126cadc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf22aa0-b6e0-4a33-ba65-f5d48d02e946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea12d3-1b95-4f73-a82b-97d162d23df8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c157f3b-a116-43c0-901a-f92d3fc37acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178c97ec-c46e-4f70-b973-4dcde7665096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b01bc-61d0-4a73-8634-e0f8e160c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a372e23-0f01-47be-98e2-500d7cbdd4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2d1e8a-3fc0-4a27-9913-f26ac7efff10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837e0fae-28e1-4ed7-b139-72b588043acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff1f316-3d0e-4b75-915d-56d31bbeaf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc53f9cf-8c2d-4862-aa68-cf7e69ae0e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1a4da9-d7f8-4fca-bf5b-8c9de1f27425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e6fe82-0a3c-42eb-b03d-0e4a39d18a54",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536b1180-0975-46ad-800c-7cc1e8f5ae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884f3a90-cb7b-4d93-b2fc-e721f0320549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0ea2c5-c195-4963-aafa-26a0da6c1641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c509cf-1331-4a3b-9ddb-7785770721cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9875d3-f3e4-4829-9a76-d9a28f3e39eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb17298-a68d-4e5d-ae56-ce3c7feeb509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1da521a-2f86-45ef-9aa1-84b28e41b3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a9d9e5-655a-44f7-aa3c-dc74334aa955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f0555f-ac43-4c4d-9f24-68bb6f60db75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5944ab2a-bf06-44ae-85b9-c4c3d2081484",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c7db92-dfea-4612-9131-4812f2bd39cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a32d1f1-5818-44b4-ad04-79317920a976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cc2691-f30e-481c-a5e3-ee6180315f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd183645-636e-41e5-8935-8db6d6c0c76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e07d7d-4d01-4dc4-989b-7c1dd6e94743",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f066b18-1816-4777-b3ff-eac3426eee0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd0ecc4-42a4-4f69-8bf4-84dd4fa5c34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d40369-852a-46e1-8a9d-15d636062d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4036924-ce67-4e69-8c1a-21f6537bc057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d627096-29c5-428b-8eef-7c6cedfff5cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027f792-fa81-4545-915f-963be7c9543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482e6cf6-d294-4620-ad51-2c78933046b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b309831-95c6-4e33-b8f5-e551d621b82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd346b0-8a45-4209-bc98-7775756628d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d06bd7-d3c7-4f11-a863-18fdca345045",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94111c6-1ea6-475d-89b2-2033eb30647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f79a7a4-d74e-487a-8d74-efd478e0eccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c516688-08bc-4ee2-b5cb-9c0fdcf81e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a863ef8d-ce1c-4e70-bad0-fe7fe1113bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eb953b-dbdf-44cd-9aaf-a05fcf42d43e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f71be55-3291-4fa9-ab33-c9b7d99e8294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca46f5f9-9cff-4c5f-a1ef-ef6011aeb2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41c4b50-1ff5-4e47-9bb3-fba78f4de2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5725c005-e1e9-4ad4-ba97-ec5b162ed037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110aa81a-04ce-47b7-ae30-dbad15973783",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c8106-1389-4de5-9776-7bbc9f81c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52380c3-7f3d-4e9b-b8c8-5f70b08e0942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8346e0ce-f2da-44a0-ad1f-b274b01dd5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd8d857-e579-4ded-b088-80379207082a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458c4cef-8916-4d19-b840-a6b0dc0381cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e63584-c456-4cad-a26b-05ee669dbfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56c07bd-f9df-462b-8136-e26c8731d561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868b9131-b4ae-43e3-b4a8-03cfd0a12926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cea74b8-72ec-4545-ada3-94c91ab41656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b99020c-5ecb-4567-af53-193007370076",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee19597-52ae-4aa1-b76f-4e1bb93c33e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd41d50-3ca7-49ff-a351-eb15760c8750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a020497-0a55-4835-9115-1d33cb671133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b0ed1f-df3f-4ac2-8726-7ec5c5d5bc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79db2f-f86e-4675-a01b-8b06a102d0c6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9af38f6-b891-44e6-867b-d08513ac10d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19649976-dce5-450a-949f-f5a145f63cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44336bd-72a3-4512-93bb-1620c6335afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ddd7e7-838a-41c0-a82b-18984b64b0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc41bff-e6c9-4395-9e08-f68b50b73bbc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e8fbdf-7e5b-4f9d-87f5-12777e9d0160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cbf684-b1e2-4425-ac01-b6ada030174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc221237-e0b2-4e06-bd67-b32b4067bc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4b5876-b65d-4c16-ba18-319b4e1edf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212560d8-6e3c-42ad-8e7b-6947419f2e50",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bec3a6-74cf-48ed-bd2e-d688ec11f461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08d90c1-24ef-48c6-98ba-49e0c7030760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea97a1f2-fd19-43a9-a9a9-9c7c252398c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36c4e98-ba3c-447c-9971-9e0190e85e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826852a-6b43-42de-8b4f-46f7e48e8399",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f8f550-745a-45ef-a529-3c3076d27671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4055951-a00f-4961-a5bb-c88565737895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3274f4-be96-4fda-a4aa-5cf42b45a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd598fc-37aa-4efa-8326-c75bff850885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8af84e-4ace-45ac-a493-29171a48a992",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae251f45-9a5a-4667-8499-cbedd3cab662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc61cfd4-f996-4dee-a0f0-c5e821e88a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9836d713-19b4-41c2-bbce-fc8858fb81ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b38c1f-7dfc-4d64-9aaa-8673d30cf967"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "118ce218-7ca0-44f0-82aa-bddc15433807",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc2856e8-2df5-4511-abd8-d53af5ffa112",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f792bf-c3ed-4773-beca-af215b436216",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "897cdd54-ecc5-42a6-ba93-e75c94b6ee92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc93aa1-6fc8-4346-9e3a-1ea7021e508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2397886-d136-4f92-83ea-4d2314b4b77c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9040bef2-e501-429f-b5bb-594edae0df26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a837c5ce-60f5-43f3-aec0-790e28c9cf7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb8a8cb-dd2f-4323-98eb-22908bb882c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97d6cc9c-c638-40e6-b027-92b147dd9c5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2db9862a-ace3-453a-b6d6-4306792ee262",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a63ea4b-e187-4d36-a7df-8880d05c10ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f83a925c-154e-4917-b2a4-52f8d0e269b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd7da78b-f359-44de-9b7b-98de5f06dfae"
            }
          }
        ]
      },
      {
        "id": "aaeedb61-b58d-45e4-9ca0-72d71f108af8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b46fbe29-c462-419b-903d-8e5baffcabf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af857990-411a-410f-8d53-b7cddeb63081",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0437fd45-b9e4-4efd-b680-257e1d8e8f28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e01e53-c53d-477d-af28-aad2557f598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d3df3b-03ed-4e1c-94fe-672c9bf1ae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2794c4-9f26-4a5e-b8f3-704edf3d55ab",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff796f7-eb1b-4db6-8cf6-b13c5686e378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940e606c-b1a5-43a0-9fc8-d3efd3989f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a30e531-9b63-4abb-aaad-10b10c6f94a9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e9294-a094-4e8b-a8bb-4c2a3bad123e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528c27ee-6def-4df2-be49-86522b025048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f557b-59e6-4df2-8762-ecaf4cd4deea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35dae35-b6e6-4d41-8515-77c0ec15f678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa22a50-af65-4bad-8cf7-d0bf2f8a2068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034fb827-9a4f-4784-b419-bcb7c8342ec9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b31a00-20c0-467e-bf73-46a5cba3c74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8c71dc-8673-4b37-bf92-52259afef0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71b88eb-e145-411f-9f1b-cfc2cd464082",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a352c703-833f-4c60-904e-bc96c01c8ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253fc766-3393-4392-9b5d-7b2c3924751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ed8d5-23da-40d7-9749-d851d1588967",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f95e597-3165-48f2-b1b6-f566f77d1fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce98b326-25b8-42bc-b960-47bc3dc364d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652a526c-5788-44d7-964b-c2233bcf6b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7f0257-7f99-4f51-b431-0d151beca610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a6187c-b45b-4c7e-8e23-e0e719bdb369",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a82142-e4b0-4831-b9dc-7af2eaa21123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc75f34d-4211-4778-8b86-89b83ff8a150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7f8a5f-68b1-46a9-954a-2551dd10d31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598e907a-e92c-4daa-881a-604cc250448f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8315dd-13e1-4141-a4cb-fd951939d801",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d5da6b-ad9e-4213-8189-d6fc2be2a104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e668b073-0a36-4644-8500-77c299894d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691c8d7e-896f-4e60-9574-772852567a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063b981e-1f87-493c-9099-5bb518cc1af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19235609-b2f3-4b8f-8d78-106b08cea63c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b83b88-fda8-44ab-9634-cf77eb81008f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f2465d-e140-45ca-9e8c-e9d331fdd8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfc3759-a2df-4c12-8d59-795ddc014d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f5964a-2c70-4e92-8833-f92175ccd782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eed91d-46ef-4094-b134-2bb939bfb3f8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea5f09-d79e-4a3d-9138-909544da448e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a11b3e-135a-478f-8db9-e624220d7380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088e8b82-fd7d-43e8-bf55-3b1f11563a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962e536e-2e62-4735-94ba-c47e5a5ccf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65400621-9395-4c92-ae3d-747f3440e5a7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43efc1eb-4c45-4cfd-ae84-cd12665d2ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2654e28-dce1-40e7-b802-6052f2196aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d86acd4-b1ce-46ce-b263-4e06eb96ba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccd941d-ae28-49b3-8840-f7fcd9fd01b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7743fc48-1fd2-4857-b292-bc6c3fe234f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d511f60e-073f-4d01-a762-b66b6cd563cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07075ec2-f0b7-40c6-a1df-3e4cef7ac07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e3df30-7bfc-40aa-ae30-b96538882557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4009ad93-e8c0-4742-a0cb-56d92022b521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f93a8-aca9-4671-963e-0ef3ad399c70",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac0c7c4-755d-43f4-89d3-233e7a32e98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97dc925-c714-485e-a086-1282df421c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e93ecf-fd1a-421f-b57b-fac3c9e0a81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389b60f2-a964-497f-962a-d6e8ddb0ae62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2338c8-3c52-4120-af6d-1d4381aabe95",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d70056-2323-46c6-8204-76f0d130dd91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415c9ace-f9ca-4a4b-abaf-00b02a8a4008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec81e8f-f909-4ad4-bd28-c9b84561030f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52b489a-51dc-49e0-b562-d4c48313faf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66391ba1-7796-4636-b5ea-5a6716c6e2d4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae27a7fd-e318-42a1-a1b3-77d0c402d840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c6d0f4-5a00-44ab-a04d-2c880a2f44e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b550b02-b8f8-496d-a368-60fabcbc527c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afecaf1-e659-4b65-9fd5-0e16af9c32ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1542035d-8844-4ebd-bdb0-a725cbe0c42b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea353709-7a9f-4e85-a755-84276a2f0908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96a5bac-01f1-44be-ac61-f1ba7c6ade6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87edbc0-e9f3-46ca-b5e9-c7e2d4f22530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22fd8c2-182a-469f-aec0-316efc6c4754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b47334-2bcb-4847-8481-0fe330affda5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e83a3c-91ca-45f6-adf3-5fc975ba480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e0e8a8-dbd1-40f3-a3cf-e8b33570236c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f288db-db4e-4d31-8777-b61b3ba35d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6921e408-51ac-4dbd-9606-d6b301d2deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df45fa0-7d62-49ae-b341-e7771abc5f4c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad2ef94-04f2-48eb-8060-103fb0760ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adda7de-c2c9-4736-9210-1f77451c03a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c50cdb-a269-48d9-89ad-fadc0e45b2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249d9041-85e9-4a02-8eb5-6e3cf5502496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaee2836-e125-4212-8dc8-64b1def4a95d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1c1e92-dad6-4211-8815-b46695c483f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1318c5-2574-4878-ad5b-e2c39ba3dfeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d7434f-0a21-4b7e-b9c1-1b60f05372cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ff35ad-fc9c-43bd-be97-95297791af68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6934e3e-0247-4901-b0bf-dbacc551ab48",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9017d3ff-017b-4fbf-b190-3a395df6179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a222ba6-e538-49e7-adf3-ebc0d202631e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4369e1bc-afc8-4357-b788-bfec23a99337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bccc14c-0b98-412c-a7a5-321cc8a06247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2947697-22b0-43c9-83ad-530ddc9167ee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dec419c-6506-4280-8c04-56f7365539ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5b3d54-712d-486c-8d13-f10fa26899b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01366155-be4e-49df-83fa-339a2c5f0e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671e3edd-a086-4fea-89a9-14f025569571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9083f0-d459-4b2a-a900-f0f7dd0730b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e3e45f-12f6-46b3-a649-65b9f52f4ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4e3fca-3d01-47c7-b9d7-5d87271b356c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e8e3f1-1d43-44ef-aed4-e3a6e7cf4032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4168761-d8a5-4d82-b3b1-c137cf87f07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca34fba-423c-478b-8816-4618a321471c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c297af0-d130-4097-ab99-64a8caead46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9a5b72-891b-4400-97e6-ee7ca2b06361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2025c238-9903-4408-bedd-00dc302a3453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2451b569-98f6-4919-bb45-3fdbb0348dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c728a2eb-0e86-4f2b-a6fe-4b2377ac2d7e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af0525a-d362-4df6-97c7-bc96b5469c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596a4dfa-c4aa-438b-a4fc-4d1a0d931949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a403ccb-5f9d-4ea2-aa5a-49761e428bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5a66f4-7def-4c7a-875f-157524349433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b576f3-99aa-487a-a1fa-275e6ab41c27",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b839298e-ad38-46a0-abef-f91fb973d93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fdede8-255a-447e-ba4b-f4f6d9d6c82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd02d26e-6d2b-420c-95bd-cc3252d5f985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af72851c-a64b-457f-80cd-4ca8952f5505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683bfba-9a10-4887-b627-035339da3cf1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80dec45-394b-492e-b77c-c313572c4e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a97fcf-df25-496f-9413-d59d1877ca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964b85c1-ed43-4fb2-8554-ecba78d00995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057d3f64-c2e0-4e09-aa98-a8ce09adb6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08e327-db87-4b4b-881d-8326dee38d7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115ccc5c-49c7-4286-8c23-bbe93b950ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2e9527-57dc-4e18-b8ca-7cb48051fdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3400f7-55fa-4584-8c32-1bec42b44081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694a406a-02cd-4fba-8be9-857159b407aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf47587-f342-4129-9340-64a4db66e853",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a9002d-ef4f-40a7-8cda-f6826f177806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b1008a-46d3-4f9b-a725-a6c68127e056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2d9a0-8be5-4a22-b21b-111667a782e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e1ec95-bd71-41b7-ad62-1d6ddb268afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e4113c-178e-4953-a8c5-b4193b7f3f8c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb3fde5-b8d2-4c3e-b616-59d843179827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ad30f4-1d59-4fd6-ac05-c3be9fd122bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58b954b-5209-4f97-a082-e27cf56ed97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5af036-f289-4a28-9129-3fac86772c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3d50d-2935-4069-83f4-e9747cdd8890",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7056f5-c2c0-4b2d-8b91-57f10bdc8daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bfb785c-dd88-4034-aef3-83b577202e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73b072d-a13b-4e55-a539-2b8492b3c9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8e49e2-69f5-4976-b041-b8279ebc219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd809c6-d377-4121-ab5e-80b81cfcb2ec",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ff2b6f-e315-4540-bb09-0cadddf11eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d6024e-5750-4c0a-956f-1a84fb9c3582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca87e43-b272-439a-b21b-32f9b357db4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56352a69-cee8-43a8-b4cd-d75cf5eaa0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8b15ea-3e50-4fc4-81fa-3b875ac04bde",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40efefdd-ed0e-4e45-915c-5facde0a9c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14f900e-7564-4e1d-9e5c-2690bc51adbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56440d6-e041-41ac-8253-94e8db72be3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de909746-bbf8-4ad4-b32a-55e8c0ecfaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361e525d-fb3c-40a2-bbf0-194132fea97a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f76fbdd-33b0-4789-addd-23b2f6e66594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2d4dea-3d30-4614-82bf-55159575c74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186bebdd-9f13-497d-9807-2e74e5298a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2df0e9f-db42-4937-8585-039deca570a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f61241-61c8-4d6f-a5d8-1f390d240756",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4eecc9-0fa0-4f1b-8e22-28232c8b651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b85f381-23b3-448b-b7ad-0b7d801eabe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c24263-3508-4d45-af6f-48be2dc066d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab512af-c37e-440c-9b8d-eec70270341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23c349e-eded-418a-95c4-20cd0a033942",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd8f065-db12-47f7-a4fe-ec52c557a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba10b99d-0313-4cda-a4a2-6a3d7c85f055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067ce058-51ac-4634-a5af-45b2fd233972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62d8961-892a-4ceb-918e-9910abdd97f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16cc9c6-2f56-4641-9d51-d8bf91512518",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14307b34-2c94-479b-b85f-df739b07b1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192f5e4b-3ffe-48a0-aabb-3f8a622e25bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c82b041-35c7-4c07-8584-67fc70dae005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e675f1ed-93a9-47b6-a2ee-f2640fa02f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4392f0a5-367b-498b-b391-1996b5f27f7a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee28bc0-25b0-46d7-905f-06ecc1cf8d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1653fae8-e3a4-4ea9-b767-bc64db197cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51a4a49-24b1-4175-ba6c-5a8603a17c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f16654-67e3-4a0e-b879-bcedac98cf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92fefc-bc2a-4704-8b1c-2434c2c19ac2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aa5f8a-f869-4d22-85e7-c2c34663d051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd17c2c-6fab-4500-98cb-bb235ad9a004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee561ba-7e5f-422f-afca-8a4fa3c74409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90778d92-401b-4d2d-bfe2-1674b15186ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cded4d6f-408b-4d2a-94ff-86f33227a3ba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee7562c-0e69-4aee-9194-cf339fe05d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026876a4-74ab-4696-b39e-2dacbd4314f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc3204-24e4-4959-802a-223c074fe4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b59e805-c9e9-4543-b344-1eb54ce0bc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2f2caf-b006-44bb-9ad1-91d47acb56e0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2581f037-fd9d-41b2-ab88-62dfa94c947a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f055e6-0fd7-4e57-9d7f-a8b880a749f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe3fd68-0c19-4479-805d-b9465c0e6962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36efbeb-cfa9-446b-822c-58d36d70714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e297192-e2a0-48c5-81ec-449f8589f025",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0819b28e-f678-42a9-8481-99a35f6aeeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2035fbb-3f83-41db-a9ee-c87a186e4f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df6262a-159b-4119-866e-6d0e5d5fe8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8e0b3d-3453-4fd6-9d8a-e86f3b4a58be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e11383-5b77-40dd-9ba6-0c57eb09a470",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d04fb-c56f-4b4a-8771-c3eae7e642a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f9eb84-8855-4f67-8e37-59457b317406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b2ca7-aa8d-4f3c-b309-c066f3d88b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e29ddd-f647-4bba-8709-a453ae86d2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a950c021-759d-4088-a6bf-fadb7d99854e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28892c4d-e522-40ad-a6e7-82340fb876df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e8d756-894e-4836-aaf4-5a0cd1563f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d879cb-da25-4dae-9701-e7ac7d143b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1a2544-3fc2-4d57-8193-43580896a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2b361-f405-4fc9-b3f0-102074499f0e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2133d86d-e5b1-4d3d-b094-6a7855aa9906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b96a7aa-0372-4e06-ae19-23fc34443e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3b2dfb-e2e3-4cd3-9bad-436d5e417dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9fad92-bcca-4e20-9477-b25a8e99109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3f5cc2-9f6a-4515-80ec-ee4120d8edfc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1666bf48-9755-4166-bc96-455486e505dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a25f01f-298e-4a51-96aa-5a603574c1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318a7c0b-43f5-4a96-bc92-3a137ce48dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8d9efa-3508-47ae-b714-be90329d06aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e89bd91-8eb1-400a-8715-0d4cd6e17b0d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3d23d9-8542-4994-92b1-42dfc97d77c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da49f2cb-b74e-44aa-a646-b92567a037fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de2052-94b4-4698-8f5f-e4c79fd47ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06af1d45-ec53-4c9d-a217-8da34f330545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a2b387-c5be-4704-be71-2d0c33f39224",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7140c4d-11a4-41a8-b0c4-f28812cbfb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43c17b7-f5b2-4051-80b7-f8211e17484a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c553b67-9862-4b37-a2c7-5293ee1bcc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fd0d0c-aaa7-401a-b2a3-0de881155982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d71344-0b28-42e9-91ec-715e46779b49",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdce152-7826-4408-92f2-6bcc7ce8a36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eeaf1b0-783b-4fb1-aad3-c3b3120e916b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b708de53-c631-4c87-b604-2c3e18d5270b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afe6630-a5c4-49f2-81b7-51d02f7ac00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa852404-8d39-420f-8f1f-bf54c75e771b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4697bf0e-9ff1-4940-84e1-a38914a034c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8952260-18d3-415b-8ee4-99b0c59e57b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7b19f8-7083-4b64-88ca-935231b90abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894b7929-fae2-4e1a-84bf-d7d16295522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ecf6fc-0954-4894-9940-af123a2c7b0e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954433d2-c137-44ba-8382-2f700d8adf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc5bc87-c450-4961-a922-5b63dfce0a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc5f6d-16dc-4d2e-b5f2-1ac555ca1ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca084d7-616b-4833-91f6-4e155f095fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9508384-6c1d-445e-a077-c81e755bc387",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df431f14-fec0-488f-b7f9-02d2933044d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe635f10-c8c8-4e8d-8ab6-24c0f872f2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1facd89-b4d5-4e5d-9e10-69135be61198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4b5a2f-1ed6-4f56-be7d-397736727b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f88fbb-be6c-4e20-81b7-6e3712d3c70d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c9780b-ad3f-427c-8114-bfbbab576885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da63519b-3163-49fe-a592-509be062cbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752d45c9-570c-4568-9c01-9bc5c92db746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df02799e-9ae0-473d-987a-26a6ab85be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e582933a-3be7-4d1d-a583-305f77717256",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261b487c-4cc6-4793-9af4-8d0ddc99d995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875f0afa-af11-4256-93f0-061cf0b8f4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1714f1-a151-4f3b-aed3-f5772f6c37e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5310af7e-3c53-41d1-8cf5-b32b7893af54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dceef3-b750-4f6d-b862-725ffba4d7e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4105c2-ded3-4012-9aeb-77c4f8d4926e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed16e90-2c91-46bb-b80f-5b34a61150d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd1de4-eca7-4bfc-946e-9b83da7d4a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c269e63e-ebb0-4bdb-9ecb-bd3e13bf2eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fe8403-213e-4aed-8391-db0e02ef4e72",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e24a62-49cd-43a4-906e-7f759b269910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb7359c-5c04-462a-8ad4-2bd8c011fa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1f8c55-01f0-45ca-aad0-425c74f816b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194f5988-1901-4f6a-bb5f-e52e43633704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ec4e57-7cd6-46e2-b0d5-c4febaa4b06a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a52fc1d-633e-4556-beee-c7cd0e2ac941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30b0da9-afce-4cdc-b124-8b2ef0ad6eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3227a661-278d-4c00-8250-d15d66612c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cbaf1f-ed5e-4543-a307-ff185f42d48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba7eb93-794d-476f-aff3-0f6aaf86045c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d48714a-b83f-4891-8ac7-8468cde189f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a9395b-911f-4e51-ac15-8feb4320265c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0bfd37-7fc0-49fb-8fd9-ac8bb90ba0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fa7f37-5907-454e-8ce3-f8b847239ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d639d2c7-dec2-4bf9-a7ef-a732f36a1f35",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc00a50-99d7-4ef8-a5fa-65c84e026eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b00a04-dc98-456c-a255-650af436ca35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c347307-e96b-4c3a-b372-84ac02f37807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5df856-4ebc-44a6-a749-e5515c24ba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d93022c-1a26-4bfe-938c-26c11e212ce1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b34a32e-4aa2-4427-8c8f-5a6d9ab76711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d9c6c-3d7f-436b-a889-f7688929dde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971669c9-bfea-47c2-bfd1-8735dcbb8d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076dbec8-dc05-410f-87cf-d980bd4cae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8ddfcf-ccb7-4fab-a449-bce80ac8ed79",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e66298b-d680-49a4-8384-486fb133fe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1931e24d-3a31-43f8-81a4-1731724d1a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac8d59d-b9ff-4bdd-820b-a5cd653cab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0212a098-6c9e-40e1-90cd-ecba23687ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9796be31-08ee-46c4-8f95-b37e60dfe8ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca310d1-66d3-427d-8c61-921c8137a371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3619b89-2226-4837-827d-44d76ede7612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72005344-ff48-4504-938e-abadb65b8d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5585b39-429b-40fe-a3c8-8636dfa371e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5618f939-7a85-472a-98b5-cb1a293a0328",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e13664-8c4c-4502-a552-1dd46ac57845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea49f92d-6c49-4ea8-93c4-f65f29964790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eee563-5250-4459-a1f3-f4bccacc3116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056ab3cd-e8b3-4f4d-84cd-31930a21994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deef9d6e-e519-4876-b236-d00380e4c61f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed47df59-a5a6-4e01-9e1e-4f5ab2003849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e205c6c0-8734-44fa-969e-dc561378e3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3dc1e2-5b8b-4e1e-9319-aedd1422e623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28397c31-493e-46db-8cdc-e46000d08529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d2a147-dbde-403c-8530-54280540dc1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63df37bc-db73-4282-b0c2-3316c40e91fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb9a0a4-827e-4901-9891-502b9a70866a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0124cf10-9c65-407f-8eaf-19a3d5ff1d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f662cb-b844-4c00-b125-661c2172e674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebfa107-5dfe-40b7-9c13-8badbb988a36",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fc5934-d473-4722-88ad-d5c9e2c2f180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c830c9-255d-43c0-9c4b-87c80308f703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5539c45d-01d9-4816-82ed-81a6146032f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff3ecb0-2417-41c1-9377-e2db036a8578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b93904-70a0-49ab-9fa9-7c7d8220b404",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aca5394-658e-46ea-a061-d3c897882c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb6fcb5-3c23-413b-8c11-517c02d0928f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a9c1bc-0248-4326-b4c4-463409ae4c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d3653a-abf6-49d6-8efe-c5920e12a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19668954-dcc3-4c98-881a-8861b49215c4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2ec2be-7041-4ad0-b55c-2bb457a8b299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895387d7-4c0c-4966-b968-ed7441dca727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbed371e-5a8c-4a2a-a620-bcea4da9d2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7fcd8c-6306-4be3-8af1-06f9562629d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795aef23-cd46-41cd-a0a9-1ece0133b399",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f5e7ff-98ba-40ac-916d-8cdd814f230e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d561cb6-ecf4-4494-b364-b1dc4ff29615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98971c5c-87b4-442c-8629-17fd167aa397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9cb488-bd06-492d-81a3-86d1dc2498c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9643b7-8850-4628-940f-01f595e3a42b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957a58f9-9808-4d77-bcba-ab6c4e3bfa1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a6a96a-79dc-4edc-86a2-d8ec48417846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97bbb0c-5c9c-4285-8b62-f43deb81ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4db5e1-ebce-41df-a2ba-9f9ff822d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e570251-3af0-4226-a43b-087149676b92",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea828ee-653a-4ce2-9e62-ae9fb3b01488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2977c9-77d9-4dda-8352-7c8185ecdce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf388f62-9eb9-40ca-bcd4-0c111fe9ca18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197df9c1-2778-4293-9a19-ee5b115e8a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6c5e3-dd2a-4a09-980a-0d8eab4ce842",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29adfe40-9a25-475a-aa1e-58450d40b26a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12360456-cfff-4827-acc2-e779fb60f69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796246f-c50d-4bd5-92da-1bfa9e393936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f247cdb-bec4-471c-844a-6440b4a7835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6fbff3-da82-483d-b685-23da698acf19",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a3cb69-07cc-45b1-b587-3d9eff3e0754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174e0865-6660-4831-ad3a-2607670913fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea02dc4-3eab-4098-b13d-e9502973837a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fc320d-a913-445b-872d-7c242974dd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c646f91c-66b7-40bd-ab7d-221fe62e3055",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ba7c4d-94d3-4659-8eeb-3d5620369cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6415ddb2-41e4-4e1c-bf16-3e819e19c52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5713de14-e376-4366-801b-c5ce8d2f2a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae253ba-e140-492f-9bf4-d61aee495e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bdea86-2e1b-4f76-b1ca-100d074e80cd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00dc592-9e6f-4b3f-9367-017cceb698c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8112a4-a5c0-4e77-a8d4-b88a481a7bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949b8fad-e024-42f1-ba18-84a32e35365c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366d57af-4c92-4ea2-bfc7-833a64c22ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245d8ea2-d0af-4fd8-af38-574e7e946ca7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0d12d-cdfe-403c-937b-11d3b9de7d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b3de51-ef07-4e29-85a3-151367ff10a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313cac64-93cc-4520-b8ab-c1a0e9e48710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3d9a2b-6dd4-434b-a26c-26e5a745d648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a40007e-a8ba-4daf-b6e5-76cd3e7257fe",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7459dd8f-dfa0-478a-91e4-daeb911bb950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ddbeb5-4e33-458e-9fa8-30912b7a7e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d16418d-cd98-49fb-b034-faa6fe91f3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581c6023-574a-4f10-b828-a37b661e2628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9623a0-b391-4883-9487-a783669263eb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99d40c5-af56-4f5a-a954-c61311f609f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff37ccdf-14cf-4ab0-b3a2-2ce948fb71c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d14645-61ac-4cee-b50e-874f8a205506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8314b0-14cd-42c9-a330-791df140d3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b38d1b-9f1e-4517-9ee0-ea2fd2e3bdeb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1d8a96-eb36-454d-9fcb-ccf40a7a1ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c2171a-da92-4d50-81b8-44b503ebbc43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccae7b7-7c80-496d-ac82-0c64203c6caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8787b009-169c-4069-9f06-faa7ac001d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e46df-4d4c-4d67-a251-51a477d4ad84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2048fa-e0c5-4b64-827f-b0116e861d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54baaa2d-47ea-4fc0-b9e0-58c90e09fdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57fcfa4-39d6-47e7-80a8-596c8f20b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98c225c-e012-4408-8000-47d2f8611bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b793b2-5670-48d0-988f-635ccc8497d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760b8097-db40-4b83-bd51-48e041ba93d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a6f7cc-33ab-4c0a-8dcc-33e7cfaf821f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09048336-e770-45e3-94c3-999564356d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4c3627-f2b1-44d5-b3c4-1249e48d02b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e75759-e920-4afc-a26c-f8330c4d9faf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b78538d-7ec2-435b-82fd-1560c6ffe883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fa8f2f-faf0-45ce-928b-b7cd4ab9a141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44706c5c-69aa-4bc7-af4b-164cd8e99a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51663006-d0a6-4a36-8fae-23eaa3e68692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee314d7-3f8a-44c9-9a86-246d8d71a1c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584d7cf4-262b-42b9-9dcc-47b695fe22f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f44ffa-b52d-4c90-921b-825e167dd862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaf4273-faa7-4d6a-8c40-11438c3e80e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f7c723-c989-4777-96df-1ec1aa6c1228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0ce680-1cc1-4779-8f89-49f69778e269",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df23fe0-259a-421a-9a85-54ad9d415eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a866b9f-a609-4a9d-900e-6dccebfaac5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef8f6d1-aacb-4571-9577-55c0d921d70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71670f1f-e0c6-4825-9ad8-b120d54fdc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbc393a-d56d-449b-b0a3-fbb9879fe0db",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037cbafc-4fd5-4c9a-a2ee-16e3672e4712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d62a62-46eb-471a-8b18-cc892fd21fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93d01d-32ab-40aa-a457-9474e662cbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab705fa0-6410-4b24-9509-eafec39adb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc51790-ccbb-4de7-b6e9-77d851891368",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74159b5-a793-49e7-8133-fd96c13d8d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a666a6fa-b974-4f47-86d0-43cec67231d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d26d1-2d98-4d94-b84b-c44999417f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9175f5f-00f2-4c15-9e18-ea139a39fc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2172f2d4-d04a-4f5f-941d-f0ee96bf2e28",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52258b38-c285-49ef-a20b-af7054cb580d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4278f5f-be2a-4088-b580-148fd55787b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc68ac-da65-4e8f-882f-9522ee2dbd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c125f569-5181-4e32-881b-35192bd4753e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc14f25-8937-4b9f-853a-a7be38867c16",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f730a09-4797-4408-95e0-36061fcdab3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb997fa-0d59-4d69-a0b0-376519259c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4314e53a-453d-41b6-b217-7c02d4362f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fd948e-cb54-4c37-8945-f85d199492df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20bc4c9-d1b1-4885-9a82-36ce0b0d1010",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9653101-1a0f-41f6-be89-1cf766f46763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d747f715-8021-402b-bb39-5d96c644c8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7569cc1-8a66-482a-b66b-2620f86ad038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4481c7bc-90d3-4141-a231-aac34570af58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e18b50-fa9d-45ad-bf43-881e610dc335",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d68d6c-469a-4214-b236-2d87b2744d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf3adc4-52c5-481e-a51b-8ac7b822d50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05ce64b-443f-43c9-9342-0c3a34ae0194",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999164df-e62b-452c-82c1-1fd4b7b80429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229077d0-186a-4340-be69-b65b05f5c77b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219d9ae5-7219-4a30-b5ac-0797bdb3bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be459d47-d587-451f-a449-0fcce59dc6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b8076-982a-4162-83bb-487c1d8d8518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc9a18c-43ab-450d-959f-62b02c2fc3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e0facc-ea08-47da-970e-ad743b18f44e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4b16aa-9b0f-4f9f-b734-3f8c18034b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f60bc0d-c484-45ef-9c43-90f407241a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad42c99a-6709-4a7c-b3f7-03ad3b13cf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe0cadb-46c8-4542-a34c-c442ec0889fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b1add1-2943-44eb-8045-9c4554b7402a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64eed8e-72ea-4e94-84e7-a467fe6e895d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a40c49-93d7-41ad-a92d-14aca2781638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea7e086-f234-4718-a7af-15fc9a1c098d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953e29a7-0bbd-46b2-98cb-43e3fdd7f781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aa0ab5-ebdb-4613-8202-2589178f4c36",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e499cb1-3b53-41d8-b4fb-1db5e448c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e32bc83-966a-4ea5-b862-4b539e2c05c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d053c26f-bf88-4072-8f2e-bd2da67777d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f702d84-4bac-4944-bb87-90bad49649f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1953a645-ce98-4bf0-a7c9-5426f87a447b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138fdb72-b14c-46cc-8978-39593bb2d738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c81039-9f1b-4029-bda7-4763e8d562ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eb98c5-636e-4938-a10a-1dc7dda13345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786383f2-3935-4814-9f22-38d0e29fe7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb38eec-5241-460b-95b0-fc870365b067",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133ecaf7-3cb2-4598-ab21-5d7ec94fa681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70c3961-7a92-46d3-93b5-3fa2071765a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53339a8b-340e-47ca-a618-e51325afebe9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3e70f9-05ba-4f6f-ae5f-9cb943e24373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0d6545-ca21-4d37-9efd-627556e7fbf0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff91ebae-2ff5-4771-ae1b-bebef464897e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21dec1f-86b9-4718-90aa-f83cbacfbf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35d8b4c-8d90-4a30-95f4-5b2a6aa4c6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed6b1ea-6d95-4a99-9be6-e3030a930dc5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cecbca0e-49e7-4aeb-a2bc-24cebb7a9568",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a290ee6-1e23-4542-bc89-d2358d7d062a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3444177f-545f-4de9-a708-1b7da338a2dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecaf63d7-1496-48d8-8554-dc2cbf1dc8a9"
                    }
                  }
                ]
              },
              {
                "id": "a3b59d69-fa4e-4740-9996-72d0be0090e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b6bf8d9-c0fa-4b49-bd0b-bbc6391c0de4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a623ed-eb52-4b9b-911e-78f5c1314729",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e027124-b8e0-46c3-a3ed-bf7d73bdb77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d575a9a-8682-41f7-94e9-e7ee31ad650e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "697157b1-4f56-4475-a4cf-edca928a11fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfeefc54-060f-43d0-aa2c-5d91b06aa8c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "104234f5-e745-435a-9e99-15227414fa3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68e0db3f-3e33-45ba-8794-74fed3ef4327",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fccdf4d5-ed3d-4050-9414-481a6227e1d4"
                    }
                  }
                ]
              },
              {
                "id": "d455b719-350f-48f7-b190-43c166d5f990",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6a976ade-331a-4b43-9532-ef8d9749d4c0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e6606f-633e-4d05-afcc-760cf8e9bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6c54e6cd-4d69-4911-87f4-2be7a96a7a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1bbd67-25ea-42e6-8d48-5713dce763be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9201455f-f76a-4026-a8b1-1c9dbaff843d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39108fa7-54a6-4315-af06-225ca2038e32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15847007-559a-41b7-ac03-7eb713afdf4a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6d967e3-e3ae-40ed-bda9-05490d64c131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d25c0400-009b-4995-aed2-560262599669"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c492727d-c237-47cf-b51d-3259c1129da6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be353b7c-d6ed-46ca-8684-db59a840ac79"
                    }
                  }
                ]
              },
              {
                "id": "1badd290-3dc6-4e94-bc0f-d94e3bb7ef08",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea0d7779-e02b-4bbb-901f-02be9535d8ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cdfa31cc-e0e2-446e-9e4b-849802e1f466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f6ffe8e-5208-4c6a-a14d-eda8cb1f2da1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2774733-3f15-4ab9-89f9-230b8cb5c580"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56bbc0ee-44d1-4284-9131-3cc5d1eb412a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "accc83de-070e-45b6-9b3b-c8f5d8252ab1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a55d1369-f6c6-424c-a139-62241470ba5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8cc125d-8390-458b-a641-2e2e7eaddc81"
            }
          }
        ]
      },
      {
        "id": "d2617f51-0ed8-444b-8e92-aafcebd5126c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a3bb7e9-c7da-4b8f-a4f5-a8c0cd5b5f2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c08ba12d-fd6f-4dae-9e32-d93005ec31e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11f1246b-fca6-48b9-bc17-73c048fbb31c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e7aff0-31b3-4034-84f1-2772a4c809a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "104b5143-941d-477a-bf80-bb5952845e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead7ff63-4345-4634-bb06-6d339412112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b65dcdbb-0183-4bbc-877e-d343a79dc185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58098d14-d594-455a-9fe2-f8cad6dcd7c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4c5024c-9f31-48df-ad9c-66808d131d70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e73c8495-d094-4714-9ba9-af8f48466698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b162f51c-fe0c-472d-a1e6-d231eeec9090"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7963ce3d-d405-46ff-8791-e8ab398c2027",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "92fdddd5-354c-40f5-bcbf-7712404dc703"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "417e3d72-bee5-445b-9761-ecab65a8b296",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39f82123-56a5-46e7-b284-42438be8c04b"
            }
          }
        ]
      },
      {
        "id": "a2a56438-f379-4c99-8f4a-4dac94e7db6d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "04b2f24b-dd3a-4c7d-9c74-8b12235e76fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd95ea89-2a37-4f1b-ba35-20bb21143754",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f283d551-8e36-484c-880f-bb4a124a251b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f486182-ed2b-4429-9732-1a3e8ad0ae1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d3acb2-a190-4b7c-965a-16203c5fb212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e09d59-98a5-43fe-ac1f-509cc3ce3303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dae48121-370b-4a0c-bb97-4028adb989e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61417043-e123-4cdb-a1cf-1c4325d4a596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd6deb0e-bece-4d3e-a37a-2b7be709b9ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3dc88fd-c402-47e7-a18c-ca77f0c9f946",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9d8a420-84ff-4bfb-86dc-255199b18c6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88508e9a-360a-44a5-a326-3b321908c63b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "825b9bf9-a98e-4682-8cab-dbb6b2ae355d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fd12be0-371a-4086-b06d-94ad9fadcf03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b41677f3-f385-45c4-be6a-66b7af635b4c"
            }
          }
        ]
      },
      {
        "id": "883c9925-e624-4f75-a96e-db9aaa48ab15",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cda85c1f-c090-4d2b-b350-f166f07459f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a55c9ea-d70c-4365-bb39-7b90c5c8e6a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7665064-d6b3-436c-8efe-48e3d10bc762",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23bafbe-4b87-4d03-b866-86d065af2e73",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a21bab3-caa1-4247-8175-a4971c74f949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d274567-a1db-4bec-b81a-fec84e674302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c1e601d-704f-453b-97ba-c595dc0e3dc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e8f007c-35b7-4020-95c4-9a370de6870c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24fb8f60-e84b-4d89-b80c-7d4a37b0e1ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df6fef0-5e28-44f1-874a-01d68b180e62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e14307e7-d04a-4d4f-8f74-0a1f2a431cd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e30cb56a-9a8e-4bf7-b1e1-b9fd5451adcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89e382dc-7820-4afa-a1c3-5f19deb95237"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba06d920-3958-46c9-a588-b1c041ca4a83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26f5cbfb-6626-4e6b-aacd-fcc3fbc3c6d9"
            }
          }
        ]
      },
      {
        "id": "ef8dbc95-dc5d-4a6e-a4a9-8a2cc8eda39f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32f313df-a1e4-461a-84bd-118241bad4aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01b0003d-5789-4004-aa00-22836d98583d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8512b9d2-2c3e-4e1c-9685-a0187e7a83d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d09d832a-f93e-4673-8321-ae088027b783",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e82e2da1-ac9a-4d0d-9c60-011c11708aec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.75438596491227,
      "responseMin": 6,
      "responseMax": 2720,
      "responseSd": 322.1974484909786,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701995773853,
      "completed": 1701995810317
    },
    "executions": [
      {
        "id": "12596792-2bc1-4bff-9f54-ed042d5d0e8d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01c261e6-3632-459c-9644-d9e0e53b1e78",
          "httpRequestId": "1da34415-616f-4e64-878e-65749b3929ea"
        },
        "item": {
          "id": "12596792-2bc1-4bff-9f54-ed042d5d0e8d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2ef4f63-6b44-4f55-b20e-cf65112dd3e7",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "17f41f55-0fe8-4883-ae8e-2ca73afbd383",
        "cursor": {
          "ref": "85266cd8-6904-41b7-bf8c-3b4ff0333d57",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5a99602f-0fb5-447c-91d8-5c19ba5db7a9"
        },
        "item": {
          "id": "17f41f55-0fe8-4883-ae8e-2ca73afbd383",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a86dc3da-a66c-4ac0-ab8b-06e1051620fa",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "9a7520ef-dd9d-4bba-b404-8f1d2bff2760",
        "cursor": {
          "ref": "f620d105-9c43-496b-8407-424d089772b7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "59a71c4d-a165-4de7-a9b5-81dbca4eb01f"
        },
        "item": {
          "id": "9a7520ef-dd9d-4bba-b404-8f1d2bff2760",
          "name": "did_json"
        },
        "response": {
          "id": "aca3c4dd-09c6-460b-814c-36411f0f1cfe",
          "status": "OK",
          "code": 200,
          "responseTime": 506,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05757d11-4a9d-45d7-8726-a2974548582f",
        "cursor": {
          "ref": "25665d2a-20db-45c8-9fb0-fceef1fe5044",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f93d91f5-bbc2-4265-8f54-b36eeaf08e7a"
        },
        "item": {
          "id": "05757d11-4a9d-45d7-8726-a2974548582f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6fbfe258-f7ef-4f29-a879-f1757e459663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05757d11-4a9d-45d7-8726-a2974548582f",
        "cursor": {
          "ref": "25665d2a-20db-45c8-9fb0-fceef1fe5044",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f93d91f5-bbc2-4265-8f54-b36eeaf08e7a"
        },
        "item": {
          "id": "05757d11-4a9d-45d7-8726-a2974548582f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6fbfe258-f7ef-4f29-a879-f1757e459663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bceb8b-a8fa-42e5-8eaf-d7cf1e7d7ebf",
        "cursor": {
          "ref": "1588fd68-2b43-4947-bd08-336c5e63a492",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "45fd8a74-4ffc-4035-9129-5cd663c71428"
        },
        "item": {
          "id": "57bceb8b-a8fa-42e5-8eaf-d7cf1e7d7ebf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8d47d367-6c23-4d56-b4fb-13401372f163",
          "status": "Not Found",
          "code": 404,
          "responseTime": 137,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e31212-5dd4-49ba-971a-6022d64a031b",
        "cursor": {
          "ref": "fd39b30b-fb71-47ce-88cb-2b805f9ce8c6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f306f9f1-fa04-48e5-be5e-6c3cba0e5a9e"
        },
        "item": {
          "id": "86e31212-5dd4-49ba-971a-6022d64a031b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ba1fdbf8-2501-4ea3-8fb1-c59198414709",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a65c422-5e3a-4338-b402-50b7028ac9c3",
        "cursor": {
          "ref": "84d9e6a3-7552-4872-a4fa-863193a7079f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f8a2845-0b87-4744-87b7-6bf73b4dca26"
        },
        "item": {
          "id": "4a65c422-5e3a-4338-b402-50b7028ac9c3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8c7a393f-4b25-42cf-be26-17342e0ff163",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b264372a-e8fb-4195-8577-8f9e89258618",
        "cursor": {
          "ref": "87a635d2-90cf-4a77-afd0-fb8aa94ecc2a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "86a6133e-d3cc-479c-8266-e2c161faed17"
        },
        "item": {
          "id": "b264372a-e8fb-4195-8577-8f9e89258618",
          "name": "identifiers"
        },
        "response": {
          "id": "3a64d65e-dc29-4fc8-9608-7a79e88294c2",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a098efa-ad7f-4c21-a272-fffd614855e9",
        "cursor": {
          "ref": "1badd25e-335e-49e7-b6ce-8ec6cf79f9fe",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c9e2bc09-c6bb-45a8-8086-11d3ca2afac2"
        },
        "item": {
          "id": "1a098efa-ad7f-4c21-a272-fffd614855e9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d53cafa3-8871-45c6-af63-9613692c0ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086418b7-5956-48dc-a036-3bd95642053d",
        "cursor": {
          "ref": "7861caa0-93c0-4c77-bdd4-6d3aa29c59f1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bf29c15-330b-47b7-aa17-0e87114bc0b3"
        },
        "item": {
          "id": "086418b7-5956-48dc-a036-3bd95642053d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dcbe111b-4c5a-432e-b11d-3d420013a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f646bebc-91cc-4e30-a39a-4ddbf681c0ee",
        "cursor": {
          "ref": "57290053-b32d-4561-a6b5-dbf2cff499ea",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "59a4960b-2e5f-4a6c-a293-0c072869d9a3"
        },
        "item": {
          "id": "f646bebc-91cc-4e30-a39a-4ddbf681c0ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23419747-88d4-4945-807f-aabc3c80d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c8412b-bb25-4ebb-8ad3-2720b29ff6c5",
        "cursor": {
          "ref": "03129323-7f97-4f83-be39-239e3a5170dd",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e29932a4-8542-4dbc-a12b-1311d4e453b7"
        },
        "item": {
          "id": "a6c8412b-bb25-4ebb-8ad3-2720b29ff6c5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85f9b3eb-5b68-4805-9c86-8132b4d97541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa12f7f-4069-4684-a4f7-63d4a4bc0c3c",
        "cursor": {
          "ref": "7e2f0fdd-2715-4f8a-b254-8c3616df436c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "87450642-4efe-4e93-a5b3-54d9384cb5f7"
        },
        "item": {
          "id": "2aa12f7f-4069-4684-a4f7-63d4a4bc0c3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3f42189c-db6a-44f0-bc6a-632e942cb190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c87d3a-ae52-471b-a9d2-bcb7cc821a55",
        "cursor": {
          "ref": "b0c19819-b8cc-4ea5-bc13-8c8ec4911587",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "054cd215-c4e0-432b-bed4-8fbce9ba00c0"
        },
        "item": {
          "id": "d5c87d3a-ae52-471b-a9d2-bcb7cc821a55",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "85d3fda7-6697-44fb-af89-4ce208c8720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28accc01-b05a-45ee-8bc2-27af5866b05f",
        "cursor": {
          "ref": "7e7c6cf5-e003-462e-8400-efd8d4f745ec",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4718796e-3f9e-409a-90d4-1cca00582662"
        },
        "item": {
          "id": "28accc01-b05a-45ee-8bc2-27af5866b05f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "523e8519-207b-43c0-9afb-d2a81d8fd33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e46ea7-9a93-4481-a2fb-63809cc661c9",
        "cursor": {
          "ref": "1a9f84ac-ef42-4aed-870e-db7da793a107",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "451ad59f-347d-49e7-b587-08c8c7d64e28"
        },
        "item": {
          "id": "86e46ea7-9a93-4481-a2fb-63809cc661c9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "58cc99e3-55ea-48b8-8530-f2ba6cd0f5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0778bfb6-1eab-43a4-b715-c28e94fbc259",
        "cursor": {
          "ref": "a694311e-2849-470b-ad55-15f02952a039",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9cad55a3-abbb-4224-b37e-5a62ae01fbde"
        },
        "item": {
          "id": "0778bfb6-1eab-43a4-b715-c28e94fbc259",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0f99d8c3-d7f2-4bcb-9a85-4ecb72178ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a256af4c-1b39-4265-a2f0-6d8a243bc8ad",
        "cursor": {
          "ref": "c2726a54-e77b-42cb-a468-46c13acbe70d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2e5a9ecf-3484-4c51-89a7-a850e584091e"
        },
        "item": {
          "id": "a256af4c-1b39-4265-a2f0-6d8a243bc8ad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8b025b67-9115-4c6a-869c-cae788895f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7f5642-6c4e-49e2-a186-208524bc9de4",
        "cursor": {
          "ref": "89fa7653-45c5-4ffe-80cf-9b5cd0f53f5b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "513e7127-e467-49e2-b3da-a2f72e46573a"
        },
        "item": {
          "id": "ed7f5642-6c4e-49e2-a186-208524bc9de4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f625f07-38a4-42cf-817d-5a71429d236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa80eb5-93df-4edf-af11-d63794a80bcd",
        "cursor": {
          "ref": "b7b75cc5-c54f-4a80-bd07-4ed7bd73796f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "feb3368a-637c-45c0-87c4-5e278e471841"
        },
        "item": {
          "id": "3aa80eb5-93df-4edf-af11-d63794a80bcd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "61f150a3-3310-4bcc-812a-af520e90fdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450fcb3-bf62-4c32-98b4-8dd9e75f9e04",
        "cursor": {
          "ref": "34d0a5be-a518-49e8-a4b4-d3d6eced6b81",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "41b00c22-a90f-445c-8950-612680abfa3e"
        },
        "item": {
          "id": "a450fcb3-bf62-4c32-98b4-8dd9e75f9e04",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "39b3f77d-04eb-479a-9dc6-f4c7b7e845a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267c9862-8490-4c1d-ab40-ad23c3e5d0c2",
        "cursor": {
          "ref": "132cbe0a-f98a-4f2d-83f9-db503f1b71e8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d41bf573-41bc-4a13-8e59-006d82470684"
        },
        "item": {
          "id": "267c9862-8490-4c1d-ab40-ad23c3e5d0c2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "95a04222-29dc-4578-b61d-e681c258550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772d5426-1e4d-446d-bddb-76721b972cbe",
        "cursor": {
          "ref": "71997b42-6d07-449e-a5f6-e3165a42ce91",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2e3bae7d-cb0b-4e90-a245-3d4163f8e88e"
        },
        "item": {
          "id": "772d5426-1e4d-446d-bddb-76721b972cbe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e6a02c75-867a-4648-a7c2-166a263fc6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03afa32d-8ab5-431a-9181-a473c8847cb8",
        "cursor": {
          "ref": "b78ecf7a-89d7-4eb5-accc-ea1447b8776b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cdb7ef7f-bfe5-40bc-b7b1-a4f88f1df310"
        },
        "item": {
          "id": "03afa32d-8ab5-431a-9181-a473c8847cb8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b683c9db-ca5f-464d-98a9-9347668b3d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e138b3-0864-48fd-abd7-d25ba4db45bd",
        "cursor": {
          "ref": "35d56234-975b-4336-8353-33dd9a9ec4c2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4facabe3-ec47-4f28-a439-c56803a2d49e"
        },
        "item": {
          "id": "c3e138b3-0864-48fd-abd7-d25ba4db45bd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6b65f956-83b8-4e49-a66f-ed11991b4df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2079ee0a-471e-43a6-9343-c6d60347f1db",
        "cursor": {
          "ref": "462ad3a8-a72b-401e-bd24-5ee740e29997",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1ac76a6d-20f6-4371-874c-8176e87a7069"
        },
        "item": {
          "id": "2079ee0a-471e-43a6-9343-c6d60347f1db",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3d4de2ba-412f-441d-b8b6-c9680f4b4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b35735a-d76c-4391-9f32-67d2d70e8083",
        "cursor": {
          "ref": "256c470b-0aef-424f-b82b-daf2449e3e9f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1150f5cc-c3be-4cd1-b3a3-728749d538f9"
        },
        "item": {
          "id": "3b35735a-d76c-4391-9f32-67d2d70e8083",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "baf04cca-47e4-4af4-919b-42a7ac6b7d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b8d30a-03d3-434e-b111-e7159e22da48",
        "cursor": {
          "ref": "a0673061-87b5-41d9-a379-f420f9b56fd8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b769ec2-4844-4204-abee-24c4df28f7a4"
        },
        "item": {
          "id": "c2b8d30a-03d3-434e-b111-e7159e22da48",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f642053f-87a3-4a27-941f-70de35d25003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f7df5-646d-4742-a464-c36149d01840",
        "cursor": {
          "ref": "9baaae21-8b90-4627-9396-7683e57ffef8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "12092a38-82fc-4ab9-a448-80e12ff39952"
        },
        "item": {
          "id": "2a4f7df5-646d-4742-a464-c36149d01840",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f6f81652-d53e-4279-929f-e19d6565d4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b5a980-1825-441a-b49c-762210c21b11",
        "cursor": {
          "ref": "6dfddd63-e477-4802-b820-caa53860f0ec",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "82de3365-dd82-4536-8980-514e07018272"
        },
        "item": {
          "id": "d1b5a980-1825-441a-b49c-762210c21b11",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "30cca545-3a46-4d1c-9f7a-ef5fb05fa6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d332e0f-d903-41ee-9cc2-8d7de75f2d4d",
        "cursor": {
          "ref": "f8341dab-3314-4914-b0fb-d34ce6ec234b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "04bfe064-cc35-40a9-ac09-8d937b09885e"
        },
        "item": {
          "id": "8d332e0f-d903-41ee-9cc2-8d7de75f2d4d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b00b0b1e-c11a-44a1-9977-5c24c6297de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508f1d18-3691-4cd8-91a6-fe60caea4e40",
        "cursor": {
          "ref": "df11d904-8290-42ab-bd05-9106868717d8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8424c4fa-7ad8-4192-9df7-dbce49abeb6f"
        },
        "item": {
          "id": "508f1d18-3691-4cd8-91a6-fe60caea4e40",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ef487ecb-1226-45d5-a186-f6b7af3972b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325722b0-c559-4999-a246-f83a03e8a8eb",
        "cursor": {
          "ref": "55e3294a-f235-4f95-a798-679d5ec077a6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2d1bc53f-9cea-4dc9-b80a-22c568d8fe94"
        },
        "item": {
          "id": "325722b0-c559-4999-a246-f83a03e8a8eb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e1ac7ea9-eb85-43d0-a844-7e255b6a5c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74260ef7-8fa5-4649-8ab5-b49bdf5951fa",
        "cursor": {
          "ref": "4f944ab8-8ae9-4d74-b270-3f1c89410760",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e4a5fe80-1bab-4394-adfc-fff7781b7710"
        },
        "item": {
          "id": "74260ef7-8fa5-4649-8ab5-b49bdf5951fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2b0ed7fe-962c-4cf3-8454-952a97a97b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821af778-b218-48b4-a063-d58d16c4423e",
        "cursor": {
          "ref": "15f9fc58-4689-4eab-b0d7-c3f490f60547",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e1f74c23-8f85-468c-8654-7a7a70e26382"
        },
        "item": {
          "id": "821af778-b218-48b4-a063-d58d16c4423e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2a86708b-a60c-4fe2-854e-5fe43096cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f524a0-7a25-4f6f-8841-99e9073dfe6f",
        "cursor": {
          "ref": "a9f81ea5-1d3c-4b1f-9ff9-3abee74621b4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce9bf708-a20c-4302-b4a6-2c36e30d40d8"
        },
        "item": {
          "id": "51f524a0-7a25-4f6f-8841-99e9073dfe6f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0f696e41-f00b-47c5-b0ab-9b495e246dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6ee307-7c2d-46e7-ae74-a5fe76155633",
        "cursor": {
          "ref": "1a70eba9-95d0-4a25-8f9d-8c5107de93c8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "38df2d7f-c75e-40fb-b9ef-f4a27c06c609"
        },
        "item": {
          "id": "bd6ee307-7c2d-46e7-ae74-a5fe76155633",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f08cfc43-fa70-41cf-9b2a-eadaadea8724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c8bdd3-0a93-4ef7-bcc1-836279258965",
        "cursor": {
          "ref": "1d933dd7-ed53-4216-924e-d0fe92e39cda",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "211d0277-f1b1-4d2f-8f83-ebc9552f0ee1"
        },
        "item": {
          "id": "b5c8bdd3-0a93-4ef7-bcc1-836279258965",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2cd51b2a-9980-4550-85ea-7fbe9b7dab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9e8d7-c8f5-4be8-b8fe-7b29d15d136c",
        "cursor": {
          "ref": "fd25c448-a51f-4c9f-a9da-fafe0919a8b0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "03285b66-9a84-43d6-afce-0a92036f83dd"
        },
        "item": {
          "id": "efa9e8d7-c8f5-4be8-b8fe-7b29d15d136c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1263b537-f214-479d-b6f8-fef1d745ecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c7395-4ebc-4825-a90e-a1f312641cb6",
        "cursor": {
          "ref": "da322c2d-06c8-42e0-9c5d-1110e7eb9cec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b1773b0c-100c-4108-8f4b-6e0e9f6f9c21"
        },
        "item": {
          "id": "906c7395-4ebc-4825-a90e-a1f312641cb6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4dec4da7-13eb-4873-9023-5f693c545375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45e6439-e74a-4022-b04c-a081dbf0bb40",
        "cursor": {
          "ref": "0c593239-0299-46e8-87c3-01fdc76f3125",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "690b7591-4ecc-4e27-b704-dbf6ec1a250b"
        },
        "item": {
          "id": "c45e6439-e74a-4022-b04c-a081dbf0bb40",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8045579d-b9c2-4468-a84a-72f77d2dd67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6c4102-e53e-4455-bb84-ca4464f4e269",
        "cursor": {
          "ref": "ab7a2c82-a971-41aa-bb2b-f8e3cdf0a56f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7d0310ff-a3d4-42ea-966e-1f8ddf14e129"
        },
        "item": {
          "id": "0e6c4102-e53e-4455-bb84-ca4464f4e269",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "945f77f2-2f53-4db6-b12a-4297f612d14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8893fc8e-a6f4-463d-a76a-05a683fe7efb",
        "cursor": {
          "ref": "4e34c86d-8ea9-4b6c-9b08-a9dccb2e9df0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e77f7ef6-d858-4d09-9e4e-785aef5cb9d6"
        },
        "item": {
          "id": "8893fc8e-a6f4-463d-a76a-05a683fe7efb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e582b183-d07f-4f2a-b395-c7dbe99fe7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f338752f-dcb6-4aad-a78c-9168c24632b7",
        "cursor": {
          "ref": "da8638b3-7994-4233-a694-aaa31bf6c545",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "462f4cda-b124-4f35-a4db-0ea9f2a12cc4"
        },
        "item": {
          "id": "f338752f-dcb6-4aad-a78c-9168c24632b7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "62b38f6a-a293-4405-a367-d516d14086f5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 313,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e24c9d-f3f9-477c-892b-d7a0c8121303",
        "cursor": {
          "ref": "86ef8c52-e443-4cae-8a09-28f1eae6cfb5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "00ce9ac7-4cbb-4d8f-ad95-70a79573619c"
        },
        "item": {
          "id": "e6e24c9d-f3f9-477c-892b-d7a0c8121303",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "20991b52-e539-4724-b914-ed0047ae453f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e662966-d79e-4a4c-84e3-bc581cb11483",
        "cursor": {
          "ref": "584e54bb-7e73-40f2-a77f-7b7748423cf3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "60498b45-da9f-489c-b31c-b2e8dee81267"
        },
        "item": {
          "id": "7e662966-d79e-4a4c-84e3-bc581cb11483",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7987ba94-9c18-4a24-ab3b-1a4c9bb550ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d2c56f-ee97-46d9-aee3-ca8df4967d94",
        "cursor": {
          "ref": "a1b39f3f-0312-4765-b1cd-ebe0807c6d98",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "398ea9e7-89f0-44c4-a7cf-e454c8ccf972"
        },
        "item": {
          "id": "27d2c56f-ee97-46d9-aee3-ca8df4967d94",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "557509cd-24d0-4f99-8972-4d56f39fff72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85434ecf-dca1-49ae-9068-d65cd90fe4f3",
        "cursor": {
          "ref": "ce95bfe9-fe5f-41c5-be97-a0df5b3c66fd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2216dbd9-fb45-400b-b48c-2e554be930e1"
        },
        "item": {
          "id": "85434ecf-dca1-49ae-9068-d65cd90fe4f3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "03330e50-c44d-4668-970d-73838b92cced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4374b6-9b79-462d-9853-e4e38e4f7c66",
        "cursor": {
          "ref": "0d741f5c-b7e4-488d-8aec-dbf544489968",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "227a545f-5624-4509-a3d5-20b6f9af95a5"
        },
        "item": {
          "id": "5d4374b6-9b79-462d-9853-e4e38e4f7c66",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0cc89054-2956-4d1f-a5c7-2a7db62f1765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26567f-db92-4546-b28b-70b30b7be65e",
        "cursor": {
          "ref": "91893e2f-2514-4572-b231-df0c0f139ecf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "62723e0f-8733-4c7d-985f-b41ad52499a7"
        },
        "item": {
          "id": "ca26567f-db92-4546-b28b-70b30b7be65e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "750187ba-acb9-44ea-ad93-b3752c0e93d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71762f-f3a2-41fd-bf12-e642583ac5b6",
        "cursor": {
          "ref": "e86d3d02-fe57-4f73-a1f9-05e3e190fd12",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6037ac9c-6c9d-4e61-bbbd-209a0b34b49e"
        },
        "item": {
          "id": "bc71762f-f3a2-41fd-bf12-e642583ac5b6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ad50693e-e50f-43fd-897d-1e1b02880a8c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 313,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c6b686-8e1a-45c7-95e9-0519adaf1bee",
        "cursor": {
          "ref": "f9d7825e-459c-421e-88fe-d5a7400f29de",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "74169371-c837-41d5-85a1-d9dbdbbaf448"
        },
        "item": {
          "id": "c3c6b686-8e1a-45c7-95e9-0519adaf1bee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0d92332c-4a7c-49ff-8682-36db8c2ca6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7a9854-0c05-4387-a298-8a6a112fd525",
        "cursor": {
          "ref": "bc3fd832-f6dc-4a82-b986-c067d8a36682",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d0f7d502-e0f2-4106-b260-fe1149960cc7"
        },
        "item": {
          "id": "af7a9854-0c05-4387-a298-8a6a112fd525",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "419540a3-289e-4189-92e3-32256edd8d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f632649-c050-4bb8-aea6-f55122157421",
        "cursor": {
          "ref": "27f374ee-072f-418d-b195-ce5eb02c4397",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "682215f3-2098-4fc9-9c39-e97d5f870732"
        },
        "item": {
          "id": "1f632649-c050-4bb8-aea6-f55122157421",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "622220c6-dd01-45aa-b377-893003471bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda31ff0-8e57-4c18-97c1-664bdab1ee8e",
        "cursor": {
          "ref": "d60cc2e4-2ffb-4812-8f1f-6a7d956f851c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15f52f43-59ea-473c-9a12-6fa3729f47a6"
        },
        "item": {
          "id": "fda31ff0-8e57-4c18-97c1-664bdab1ee8e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c54f13ac-2118-4753-adc9-252ab216e014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb86ded-f52f-4c48-8b96-ffaf99017dbb",
        "cursor": {
          "ref": "4194395c-400a-403a-affa-7a0b316b1932",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "90313568-c941-4096-97e7-f91d1f6ef421"
        },
        "item": {
          "id": "dfb86ded-f52f-4c48-8b96-ffaf99017dbb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4c62b1a9-712c-45c4-91ae-f805c256c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c4eb50-7e0b-4b21-b8cd-a5b496591fbd",
        "cursor": {
          "ref": "3858c732-44ba-4a11-a7d7-ddf255ee447a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "16f9cf8c-31c0-45b4-b9e5-606ef67a677e"
        },
        "item": {
          "id": "18c4eb50-7e0b-4b21-b8cd-a5b496591fbd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4e7805cc-436b-43e7-8626-dcc5d3fce732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b186597-30e6-44d6-a660-6772049367fc",
        "cursor": {
          "ref": "47f0e48d-9933-46b7-80d4-08871bef1d2c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0a955f6d-7561-4522-ab2a-08a659eb409f"
        },
        "item": {
          "id": "9b186597-30e6-44d6-a660-6772049367fc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0441363-ffdb-40a5-92ba-5971a199fa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ce9fe-4a59-4c26-be55-9b2a4cbd5ede",
        "cursor": {
          "ref": "4bfeb10e-0456-4260-b0ba-3d5100927a24",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a7c34da4-5acc-4454-934b-db845b8356e1"
        },
        "item": {
          "id": "9d8ce9fe-4a59-4c26-be55-9b2a4cbd5ede",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c742fd0e-722c-4b87-9814-824ff4888c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae358f6-126e-49c3-bff0-53857cabfe13",
        "cursor": {
          "ref": "b316511f-3915-40ff-8f4f-8ca50a731d8f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d77f754b-084f-4151-92fe-34642f4b8bec"
        },
        "item": {
          "id": "7ae358f6-126e-49c3-bff0-53857cabfe13",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8699b7ae-c69e-4ff2-bfa7-938037ae6b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c803ae-8537-47c4-ac3f-11be5c69a8af",
        "cursor": {
          "ref": "e5f7f33e-92cf-45ff-a956-ae70fe0e664b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "48f79e8d-4c34-478c-a499-333523050f95"
        },
        "item": {
          "id": "68c803ae-8537-47c4-ac3f-11be5c69a8af",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e75e462b-4821-443d-9686-88f6fee7ef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4072d8e1-0369-4121-8c9a-0c607ce51c26",
        "cursor": {
          "ref": "e9caadcf-9fff-4292-a2aa-8acb39f48be1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4039fa41-5cfd-4ca1-9e51-c7d3aa3e1039"
        },
        "item": {
          "id": "4072d8e1-0369-4121-8c9a-0c607ce51c26",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cbfbeb5-cd44-4bf9-8c09-9b0bd20cbf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02316df0-8646-40e4-9baa-ae773083dfe9",
        "cursor": {
          "ref": "a5b190a5-9476-438f-991f-5dbeca24d251",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b201da1d-a760-4e67-84d0-43f81f496fc9"
        },
        "item": {
          "id": "02316df0-8646-40e4-9baa-ae773083dfe9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "492f2a93-bb83-41aa-879f-681604d761d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172a0360-c289-47a4-86dc-08b74f1ee34e",
        "cursor": {
          "ref": "7281d809-23f0-4a92-a77e-58cd45348979",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "77903f92-4323-4d78-be97-cd026f9df4bc"
        },
        "item": {
          "id": "172a0360-c289-47a4-86dc-08b74f1ee34e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6d5dece4-7c59-46ed-8c9f-75199c12a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a6b79e-3141-43c6-89f2-967d05f01f1e",
        "cursor": {
          "ref": "3a584754-a497-46d4-bb43-4b662192f94c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87d30ec8-ceba-4757-bf8b-bf4b67b8d86a"
        },
        "item": {
          "id": "97a6b79e-3141-43c6-89f2-967d05f01f1e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1039b939-01dc-4448-8755-83756ba54a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3555d2c9-c10a-44e6-bfa3-c3ad85ab6cb1",
        "cursor": {
          "ref": "99182e61-de12-4322-986d-50d9bf386e2f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d5d67bfb-127d-4390-8120-69cec28ad01c"
        },
        "item": {
          "id": "3555d2c9-c10a-44e6-bfa3-c3ad85ab6cb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7bdd8d4f-520e-40ef-bb65-1a99ad66b89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa2c367-97aa-488f-9b8b-1803ba3164a0",
        "cursor": {
          "ref": "b251aa07-4082-4d48-9eb1-11cab0bc5e24",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "263174c0-180a-44a2-8308-043e3a008211"
        },
        "item": {
          "id": "5aa2c367-97aa-488f-9b8b-1803ba3164a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d3732122-29b2-472b-b1db-44ed08b4e4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb597df-7bcc-4e07-aa28-19d2d1afc134",
        "cursor": {
          "ref": "80c7b09d-a491-488f-8a35-1ecd9dd6c7ae",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6061c7de-7529-46dc-afd0-49a3ca970cb9"
        },
        "item": {
          "id": "beb597df-7bcc-4e07-aa28-19d2d1afc134",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cca4b787-6853-4aae-b939-c91290861f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5305b75e-10e3-403e-8799-92abcf9ef7a9",
        "cursor": {
          "ref": "b0b74148-c0d8-4cfc-9b88-9cfa27931534",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b0eefa1a-2eb8-4731-a459-877973734d2b"
        },
        "item": {
          "id": "5305b75e-10e3-403e-8799-92abcf9ef7a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c8a405e9-ca9f-4a09-85fb-5ffdc65afea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e481279-ed35-42a4-ba0c-949fdfcfaf76",
        "cursor": {
          "ref": "1fffaa12-a67f-4908-9270-772b43f82d28",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dbc96ee7-7c0e-48b8-b0b3-267465ba723c"
        },
        "item": {
          "id": "3e481279-ed35-42a4-ba0c-949fdfcfaf76",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d32cef1d-cd43-4e82-a167-c0536f9903e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0b7f6-9aad-467f-9dd3-2353520b86db",
        "cursor": {
          "ref": "d2b0e691-4d8d-4f8c-91a8-8d02afc2058b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9dc17752-0c16-4e6f-826b-acca35bb7ab3"
        },
        "item": {
          "id": "d4b0b7f6-9aad-467f-9dd3-2353520b86db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4b6ead2-37f9-4a28-b704-b79d2eef3e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c05b35-4d8f-4ef6-9c37-205fe30c3dbf",
        "cursor": {
          "ref": "fb857b16-4034-49e9-a59b-b742064bc957",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c69c7fda-ebe2-41f3-a13b-1af44d710e03"
        },
        "item": {
          "id": "53c05b35-4d8f-4ef6-9c37-205fe30c3dbf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "164526ff-26e3-4b03-ac8f-2ec84de053df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f41c859-44bb-44fb-856c-c0c91192bff5",
        "cursor": {
          "ref": "62ecc62a-5380-4052-8fb9-be7cf1dceb35",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d15d753f-6ce8-4db7-abf7-075ed9de9ead"
        },
        "item": {
          "id": "7f41c859-44bb-44fb-856c-c0c91192bff5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d57bedc2-7640-47e8-b7c9-a3e8588d56d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377b4132-bc14-45bd-84f8-03e0ae6b5459",
        "cursor": {
          "ref": "8a81c8aa-79ee-43e5-bd6b-baf1fc6238df",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3d748468-56b1-4fb8-8ae6-1607f1554d75"
        },
        "item": {
          "id": "377b4132-bc14-45bd-84f8-03e0ae6b5459",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "70bca035-3b36-4708-b388-76d7848abd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3d3858-8ba9-492f-8e44-67b4737978de",
        "cursor": {
          "ref": "8ad900f6-fcb3-4937-8b0f-3cba494c7967",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "512766ec-0dec-434d-b0f4-6b9cd5d33207"
        },
        "item": {
          "id": "0f3d3858-8ba9-492f-8e44-67b4737978de",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a2330cf8-8244-40c7-88ae-e9f286df5ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75096eb1-1852-4d28-a7d2-78f8b7b5cf79",
        "cursor": {
          "ref": "83ee84c8-f12d-482a-9452-03a7d62462eb",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a0c4ef3d-9209-412e-b499-f84d5a63124c"
        },
        "item": {
          "id": "75096eb1-1852-4d28-a7d2-78f8b7b5cf79",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aa481de8-c92c-426c-a72e-0ecd2ba8b39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4665175-c1c9-4b86-aff6-2f347b868ae6",
        "cursor": {
          "ref": "ce708852-42eb-40a3-8068-c40c60238bea",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b5e0ac0-8dde-45c1-9fa1-6ebbac113e18"
        },
        "item": {
          "id": "d4665175-c1c9-4b86-aff6-2f347b868ae6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "400d2b25-33f8-442c-b2c5-790251dfd77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a33fe74-9898-4579-a358-c3a92d6b5960",
        "cursor": {
          "ref": "949f9188-213b-4518-9826-15096ba9d1f6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cfa8ff7c-0d77-4ba6-be4a-748099dac131"
        },
        "item": {
          "id": "0a33fe74-9898-4579-a358-c3a92d6b5960",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "084fa018-9917-4e31-839c-c21cadaacb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3926702-282d-4ad1-a549-bccc3abfbfdc",
        "cursor": {
          "ref": "ab64bcb5-b42d-49ed-a530-710bb57a6807",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b2893fc1-c2d4-4a25-bc72-461b987643dd"
        },
        "item": {
          "id": "e3926702-282d-4ad1-a549-bccc3abfbfdc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5205f243-5339-4cba-8424-f47b11fa7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d3f989-9f2f-4ca7-9ace-96c4ba0bdf27",
        "cursor": {
          "ref": "e43b33ed-2c37-4bbd-b871-f5f1647a69cd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c41da38c-2b8e-4edc-a5c2-58e9a64ef6c1"
        },
        "item": {
          "id": "99d3f989-9f2f-4ca7-9ace-96c4ba0bdf27",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "500236b9-d672-498a-980e-c235bd8bba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ed0847-92d9-4282-8e70-b82afd17a1ae",
        "cursor": {
          "ref": "868704f6-85f7-4339-9058-ff308e4110e1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "89486961-6ddd-4441-b2ff-e7ea7b474114"
        },
        "item": {
          "id": "92ed0847-92d9-4282-8e70-b82afd17a1ae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3522036a-9558-4951-9eb0-86dac8af4a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c446d0-cdca-45f1-a9ba-c9ce8ac8289d",
        "cursor": {
          "ref": "fab89aec-f6ca-4632-b10a-2760acc7bd17",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cfb4065f-fc1a-46e1-abcb-f067602edcc6"
        },
        "item": {
          "id": "76c446d0-cdca-45f1-a9ba-c9ce8ac8289d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "130f7a8d-c939-4bb2-bb66-d3631fe381f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f7df2b-3e53-4f87-842a-26fea478c949",
        "cursor": {
          "ref": "82a45920-f5e3-42d0-a247-8e73589d9e02",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4dc84ae2-a5be-4f27-b192-7c5e2641b8a9"
        },
        "item": {
          "id": "68f7df2b-3e53-4f87-842a-26fea478c949",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9bacae35-e7b2-4610-ab6a-ae008acf6af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48d30ab-d94b-456e-aa16-7b0404ec14fb",
        "cursor": {
          "ref": "4a95e45f-d2f1-43d2-bd28-75ea2859c571",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fab4bd19-d090-4138-bad5-bc9df0a923b2"
        },
        "item": {
          "id": "d48d30ab-d94b-456e-aa16-7b0404ec14fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6fdae732-b05e-448d-bce1-f4499b9018a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25f3a10-4ca0-446e-86ca-bc98744bbcd4",
        "cursor": {
          "ref": "1a6fd1d3-8913-4a86-a0dc-01b5cdb04c90",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a431e7dc-4698-45b1-95b0-2f2a9bff7c5e"
        },
        "item": {
          "id": "d25f3a10-4ca0-446e-86ca-bc98744bbcd4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "057aa7aa-0eb8-4641-9925-3c1ab82fd76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f004e9-b55e-40cc-975f-810d04f35355",
        "cursor": {
          "ref": "757fc248-5db3-4919-ab66-113693a4f834",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a9759224-2197-4560-a2a1-bcddcb0347d5"
        },
        "item": {
          "id": "e9f004e9-b55e-40cc-975f-810d04f35355",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9aec2c5d-e5ae-4027-afe7-ca7dacaf0730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76997e1a-f49b-4a63-93cc-8baa10ad36f6",
        "cursor": {
          "ref": "28acca12-2736-463a-915c-f73b9d109bc4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d5f08a24-84d9-43de-af30-c9a190c0b326"
        },
        "item": {
          "id": "76997e1a-f49b-4a63-93cc-8baa10ad36f6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5094c5c2-ada1-4b77-b35f-59a5e58d5fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eab5c52-a9e0-4685-87df-fedf78a2dbfa",
        "cursor": {
          "ref": "680357b4-ad6b-43c2-ad22-e1365ea51c58",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "824ec5b9-d3e9-44da-9574-2b77ca388f89"
        },
        "item": {
          "id": "3eab5c52-a9e0-4685-87df-fedf78a2dbfa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ea80f94-476d-4b1b-8ca8-47244af04cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf690c3f-ff68-40e8-93d8-e7b2746c89f5",
        "cursor": {
          "ref": "0a513429-ae77-433b-b457-a5bdd978a47e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6c0afe6-c20e-42d1-9610-96dc4d5eafcb"
        },
        "item": {
          "id": "cf690c3f-ff68-40e8-93d8-e7b2746c89f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e5ef398f-7544-4e59-b4a3-f94c5c8bca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7351efb-1770-4fb4-b433-62f80dc124dd",
        "cursor": {
          "ref": "519fd30b-9afb-48e6-b2fa-54f8f5daa856",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e113e3ac-8d92-4a87-a796-cb226662cbcb"
        },
        "item": {
          "id": "b7351efb-1770-4fb4-b433-62f80dc124dd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ed3cee32-d6b3-4921-b789-5004e1d1ac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0bceb0-a338-47c0-9767-07c97263caeb",
        "cursor": {
          "ref": "7e1f3cb1-3182-4c6d-9c6e-cebc91f23856",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aeefae31-cccd-48d5-8ded-da430ea3cfd8"
        },
        "item": {
          "id": "cc0bceb0-a338-47c0-9767-07c97263caeb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "661bc558-47e6-4aaf-98da-d76f00854f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d96cd6-cb61-4f38-adc4-8873e5f72b0a",
        "cursor": {
          "ref": "38dc0f5d-d31a-4b1f-bd97-0347b57227b7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17749c73-9006-4e97-844d-d3afce0df9b9"
        },
        "item": {
          "id": "45d96cd6-cb61-4f38-adc4-8873e5f72b0a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a2d11db-ec23-4c0e-8dbe-043b3dff21e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c0f7c8-b04a-4dac-8c83-9b624f882426",
        "cursor": {
          "ref": "c642d6a7-8951-46fb-b925-236406a6216c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f60141ad-919c-4777-9f15-e81fb5b519bf"
        },
        "item": {
          "id": "e4c0f7c8-b04a-4dac-8c83-9b624f882426",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "50a2924c-eb60-4027-bdc5-5089a4c328ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c52efe-79b4-45a4-ae8f-cf59d0b7ded5",
        "cursor": {
          "ref": "235933d6-0c98-42a6-91b5-27c8b5bd63c4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ef4558ea-fb4b-4117-8e05-2c438b3df8cc"
        },
        "item": {
          "id": "35c52efe-79b4-45a4-ae8f-cf59d0b7ded5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1f41d290-3504-4063-a4e9-d7e8f970f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5010b06-3a21-4019-8a2d-789058c6a9ef",
        "cursor": {
          "ref": "cb7b6f2d-f761-46c8-842d-bb9c8aebb02b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a33332bb-275c-4941-b52a-28c6b7e153c1"
        },
        "item": {
          "id": "b5010b06-3a21-4019-8a2d-789058c6a9ef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "31d76f1b-a056-4357-baed-015258158be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6cac84-dca7-4e26-a7f0-37d70057dc68",
        "cursor": {
          "ref": "cf7acce5-d9fe-4008-9d97-0debca75e4cc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "21faa8af-e122-4aff-9d62-b438e4231b6f"
        },
        "item": {
          "id": "de6cac84-dca7-4e26-a7f0-37d70057dc68",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d780be6c-05c8-43fa-8ccd-89eda673e24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce03d182-a0fc-4821-aac4-1285b474615a",
        "cursor": {
          "ref": "93b3914d-96fb-4b0d-b51c-029f611c2d87",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6d0bca6f-6ee5-4d64-bf69-4093ad7f3543"
        },
        "item": {
          "id": "ce03d182-a0fc-4821-aac4-1285b474615a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3b604552-f006-4cae-abbe-9b49aae49730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab58dd3e-9587-453e-86b7-9a6e4369c611",
        "cursor": {
          "ref": "6e3b301b-bc9d-4537-ac8a-b85500019c3c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3da08e22-2cde-4a18-a179-030c2d4206a0"
        },
        "item": {
          "id": "ab58dd3e-9587-453e-86b7-9a6e4369c611",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2fc57d65-0441-466e-b5e9-055b2e1b0400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0859130-69ee-4081-96f2-0576325f5dde",
        "cursor": {
          "ref": "9af133a9-d48f-4fba-aba7-2812d390e1a8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "09c27cc7-214a-4dc5-a7a6-922c0876c8d8"
        },
        "item": {
          "id": "a0859130-69ee-4081-96f2-0576325f5dde",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b9032e15-46b5-49d4-aec6-b281769a31db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b88fbd-ec03-4883-9a5a-b975a684568e",
        "cursor": {
          "ref": "feaea161-c8b2-44b4-84ec-12f5be659fdb",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8449cd88-bcee-45b8-9810-14631bc0239b"
        },
        "item": {
          "id": "29b88fbd-ec03-4883-9a5a-b975a684568e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "099a0d7c-3797-4651-a299-6f631dccc1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98691893-e99c-4597-9b5e-1514d0559471",
        "cursor": {
          "ref": "c2ac932a-8ecc-415f-a609-b0f89a6a1b48",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f8576bbd-caee-43c9-9c97-33316c5ca804"
        },
        "item": {
          "id": "98691893-e99c-4597-9b5e-1514d0559471",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4734e272-076f-47b2-8648-6d8af1418fcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6b84e-1907-4c29-995b-df493c2cee6c",
        "cursor": {
          "ref": "f98b39d7-c75e-4ff2-ad53-d0abda339aad",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4aa547bc-bd0f-481d-b6fa-35ca786c8f5d"
        },
        "item": {
          "id": "a4b6b84e-1907-4c29-995b-df493c2cee6c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2e938b2c-e2b1-4d16-8dab-a5d485ebf75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "49896876-17fa-4a46-9f51-de887e075ee2",
        "cursor": {
          "ref": "db79a7ca-6d9b-4802-9598-4a5c5e483612",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83a9311f-a32d-4e8d-83f3-a5b04787783e"
        },
        "item": {
          "id": "49896876-17fa-4a46-9f51-de887e075ee2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c891cd8d-de7d-47e4-ab66-a4f7fc25ee6a",
          "status": "Created",
          "code": 201,
          "responseTime": 2720,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9568d548-2146-49a4-9ec5-d48a29fa447a",
        "cursor": {
          "ref": "c6927cf3-a4b6-4d72-bae2-f7cddd2d723f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fee4d867-d91d-41fd-9bc8-7330bacfd30d"
        },
        "item": {
          "id": "9568d548-2146-49a4-9ec5-d48a29fa447a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "31cbdfb6-d86c-4bb4-8352-33de76eff297",
          "status": "Created",
          "code": 201,
          "responseTime": 2012,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81da3211-deab-405f-9f26-2a4faeee0dd5",
        "cursor": {
          "ref": "5cafc679-e8ff-4af0-82c3-60ce227ccade",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46f09930-700a-4f79-8f5c-33f2bf5f2647"
        },
        "item": {
          "id": "81da3211-deab-405f-9f26-2a4faeee0dd5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6fa90c14-acbc-48f5-b678-1a078c135514",
          "status": "Created",
          "code": 201,
          "responseTime": 2043,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d551873-9ef0-4d56-b175-301eb5bf89b8",
        "cursor": {
          "ref": "0b82648b-957b-4aa6-9830-2ce10f046812",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7228beaa-8cba-41c1-bae5-57338f2073f9"
        },
        "item": {
          "id": "0d551873-9ef0-4d56-b175-301eb5bf89b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f57757c-b9a8-4b9b-8115-55c479e8946b",
          "status": "Created",
          "code": 201,
          "responseTime": 2607,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d053abff-3dc7-4483-983e-048cb142d52f",
        "cursor": {
          "ref": "1a5b0a6d-1ba7-40ff-a67c-e4ab1a5b9f3b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "485a1179-4ea8-40ff-b7cd-cd1062bfa7b3"
        },
        "item": {
          "id": "d053abff-3dc7-4483-983e-048cb142d52f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b83f311-069b-43d7-8af2-046d05f883ee",
          "status": "Created",
          "code": 201,
          "responseTime": 2000,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886ca1c-8f82-40d4-88fc-b7329a33ec09",
        "cursor": {
          "ref": "54d79530-7434-4f65-8794-6bd2e265eef0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8706c591-29a3-4913-9988-d82009b32cd1"
        },
        "item": {
          "id": "f886ca1c-8f82-40d4-88fc-b7329a33ec09",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e09f1646-90f1-4ef4-964a-ae9cd7439acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "08063dcc-10da-401e-95db-990c926b879e",
        "cursor": {
          "ref": "662056f9-16bb-4164-8fcc-cab5c9418083",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "427e3c5c-2126-458e-bca3-510cb9646c2e"
        },
        "item": {
          "id": "08063dcc-10da-401e-95db-990c926b879e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0f8382eb-71a5-423e-852a-79157f61728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3ad6b0-b37d-47b8-8d5d-716c306f1196",
        "cursor": {
          "ref": "455503db-73a1-40b0-a37a-46dee4db0616",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e3617f15-8d6d-48ec-bc33-2e3d9bbb392c"
        },
        "item": {
          "id": "ae3ad6b0-b37d-47b8-8d5d-716c306f1196",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6192b283-992d-4376-ac40-aaa5aab79750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24790a97-e2e5-440b-aa14-8f06f3d692ff",
        "cursor": {
          "ref": "cb6727d2-6db8-4572-bfd4-51bb9b936637",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bd2673fe-ce4c-43b9-9ecf-459f3335a33e"
        },
        "item": {
          "id": "24790a97-e2e5-440b-aa14-8f06f3d692ff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc7fbb33-ef80-4208-bf83-3e283b9213d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1f4c8e-95b7-4aaf-937c-d652c48f2696",
        "cursor": {
          "ref": "a3f76be3-4384-4783-93d4-b3d29f9e88ef",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c6d5638b-c549-40b7-b650-8a7c26f0f53c"
        },
        "item": {
          "id": "cc1f4c8e-95b7-4aaf-937c-d652c48f2696",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05842860-a1c2-4a33-b432-04960d4bdae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184926ae-9101-46e3-818c-0ee9104e61e9",
        "cursor": {
          "ref": "0c880b11-a58c-42b6-8f75-cc1555295ee1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d5b06890-526b-4391-aa71-dce0825c1767"
        },
        "item": {
          "id": "184926ae-9101-46e3-818c-0ee9104e61e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f838fcc5-59c7-41a0-8f30-48d633e3cce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80471a91-e79e-4807-b6b5-8f2fccdd40c9",
        "cursor": {
          "ref": "50c3e7b6-118a-49ab-9537-fa0b63a74280",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ab3b35ce-4b69-47d9-a28f-50ef404ff65b"
        },
        "item": {
          "id": "80471a91-e79e-4807-b6b5-8f2fccdd40c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "12269266-cd2b-478a-b5eb-ed7e4c2df3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da016ba-3995-4ba8-a7bd-c27cafc0e5c4",
        "cursor": {
          "ref": "b32092a1-8415-4a9f-a885-5a8c863403a2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2b0eae05-7487-45bf-a09e-6a8a1b4fe25f"
        },
        "item": {
          "id": "4da016ba-3995-4ba8-a7bd-c27cafc0e5c4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8be05104-7df8-48df-bea4-17df5b1d1ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a196cd-6924-49d9-9b98-3a099d2c2610",
        "cursor": {
          "ref": "ad3854b9-1b7e-4e12-abf5-4ebbab462133",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7e2f086-4371-420f-ab8c-a53f9a792646"
        },
        "item": {
          "id": "e4a196cd-6924-49d9-9b98-3a099d2c2610",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "79142dbb-9681-44f4-98cb-e64b05e21647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3774886-44a8-43d1-96af-631e9419c090",
        "cursor": {
          "ref": "7a2429b2-bdae-4a8b-a34f-40f62a344276",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e14f8964-565b-486e-a8a9-c633a2c98dc8"
        },
        "item": {
          "id": "b3774886-44a8-43d1-96af-631e9419c090",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c466302-e4eb-4ad6-80b2-abea6584536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3351c-c273-4e64-8258-e26cc6189443",
        "cursor": {
          "ref": "422fce12-9ce4-41d1-aaa2-b7d3a8bb6a11",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "658dd721-3d8a-402e-a00d-0e00ed72f803"
        },
        "item": {
          "id": "a0e3351c-c273-4e64-8258-e26cc6189443",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcdb5627-b3c7-4526-a546-3072af35381a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a12f79-1bdb-4519-860a-4032aed74e27",
        "cursor": {
          "ref": "79fa06b2-1d8a-43ff-bf44-8c0f0d5bc1ce",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cab8008d-101a-4f21-ba79-0178a20492f4"
        },
        "item": {
          "id": "36a12f79-1bdb-4519-860a-4032aed74e27",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0cf7dcf2-b20c-4c4c-bb3b-1e23306aae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bf1e80-baed-40ae-80ce-23c7aa5a7763",
        "cursor": {
          "ref": "d932b7aa-ba03-40e5-a299-31f12c853934",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4f0a883e-8018-4863-b742-52298a114c7d"
        },
        "item": {
          "id": "a1bf1e80-baed-40ae-80ce-23c7aa5a7763",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "36d26ca1-353a-432c-bace-d3f81b2e171e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534c5269-7f7a-4c23-a6f8-b8f15db42acf",
        "cursor": {
          "ref": "02e06bd8-378e-446f-9598-0c4c7a66eb28",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "822546b1-dcf5-4691-91d9-4359083b5a6f"
        },
        "item": {
          "id": "534c5269-7f7a-4c23-a6f8-b8f15db42acf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "24cd9e55-1b69-4546-bb68-017a86a05acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d5d20-b2d6-4136-b28e-2cc2e18eda1e",
        "cursor": {
          "ref": "7751c690-3376-4529-a23f-5e8911de93a7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5582263a-0453-43a1-af6d-7ac7577d91e2"
        },
        "item": {
          "id": "e28d5d20-b2d6-4136-b28e-2cc2e18eda1e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "60a40010-4235-487b-9566-8fcacf2de3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3ad9b-9d1b-42ac-b17d-b2b135b5c85c",
        "cursor": {
          "ref": "4816b9e7-eb97-4e9b-8033-eb290b367afa",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b99e5359-c952-4290-b13c-6a2323eb4cf0"
        },
        "item": {
          "id": "bad3ad9b-9d1b-42ac-b17d-b2b135b5c85c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b85e92e-6130-48ef-886a-6ee8ed148360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3a4683-44c8-4d33-943f-6fd3b0b9d1b1",
        "cursor": {
          "ref": "822f4a6c-4c24-4162-8479-acdcad74cc73",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "67e71453-dba9-49bb-bb4f-6f6209111e45"
        },
        "item": {
          "id": "4a3a4683-44c8-4d33-943f-6fd3b0b9d1b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5fc38d5e-fd16-4f1e-af80-877765ad9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b211c41-26f7-431a-b9c7-5013efdad21a",
        "cursor": {
          "ref": "406936ca-93b1-456d-866d-1f625f1de6e8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "619ca729-26e0-45ee-8434-bf12f396d196"
        },
        "item": {
          "id": "2b211c41-26f7-431a-b9c7-5013efdad21a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea06ab3d-1e4d-4018-81ed-a2b403e032ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b7bc86-d928-4753-8890-8cea166b686c",
        "cursor": {
          "ref": "ad8c0570-f043-4e8c-b223-9fedfab0c1e9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "63d1c5b9-14bf-4552-aba7-da103ec047f3"
        },
        "item": {
          "id": "16b7bc86-d928-4753-8890-8cea166b686c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d34e935-e6f4-499c-95ff-1270142742ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a56e8eb-ce3b-4559-af44-3ec24679f024",
        "cursor": {
          "ref": "1582ea5e-1e4b-4628-ab4f-8a5f3b25d9b9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d598ae3-a00b-440d-af8c-35facea66367"
        },
        "item": {
          "id": "8a56e8eb-ce3b-4559-af44-3ec24679f024",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f4f9038b-6e00-465a-9a26-0ccb7dde86c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78955c32-7f45-4fcb-b54e-74928878248c",
        "cursor": {
          "ref": "13ec91b5-5b5c-46d2-857c-a8b096b07dac",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5c5c5234-50fa-4308-bcd8-a2f8b6fe2988"
        },
        "item": {
          "id": "78955c32-7f45-4fcb-b54e-74928878248c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc0653c5-4a0f-444e-b60c-8b9262bb76bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b1d69-5717-4204-aea9-b4541ca58cbb",
        "cursor": {
          "ref": "ad00b94d-1c8b-49b2-bb8a-69b06531eea3",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "24f21529-2821-41a4-9655-f5388fada248"
        },
        "item": {
          "id": "6a7b1d69-5717-4204-aea9-b4541ca58cbb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9413b41d-c3f6-46c6-bfea-75f45d5d544e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb19435-4f5c-472c-9078-70a0da8635c7",
        "cursor": {
          "ref": "57a3e11e-6c25-4aeb-8431-944717197729",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7596712c-db70-4b51-b82d-24305a0b590d"
        },
        "item": {
          "id": "3bb19435-4f5c-472c-9078-70a0da8635c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "082f8a66-a437-45e9-810e-faea020d6338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b020e-2422-496c-9e88-cc2fed77d574",
        "cursor": {
          "ref": "6c1c1705-e294-4bb0-b7e8-647dac96f21c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "86648b4f-a226-4894-996c-1a7193a31793"
        },
        "item": {
          "id": "436b020e-2422-496c-9e88-cc2fed77d574",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2bdab623-8223-49f0-8e01-f18825217fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9c4900-d823-437f-95b4-9651421cfa53",
        "cursor": {
          "ref": "4c6e9a15-6520-43ba-bd43-49204f9408b3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "44326488-218f-4678-bb21-eef395acc6e3"
        },
        "item": {
          "id": "6f9c4900-d823-437f-95b4-9651421cfa53",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "689c9948-b041-4a8c-987a-76784d95e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b945c6-a14a-476b-bb66-8d7d42563f6a",
        "cursor": {
          "ref": "5f81ca43-854f-47c2-8358-2a3a512c16a1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1cb4e617-f533-47fa-8d46-41147abb71cd"
        },
        "item": {
          "id": "d0b945c6-a14a-476b-bb66-8d7d42563f6a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "85c2eb36-820a-4acf-b3f3-bfdeeed7f261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec013ca-4c9e-4356-bb81-175bf93342be",
        "cursor": {
          "ref": "020b5f4f-0cea-42f5-9715-6b9976dbdb1c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8fdcb042-6bc5-4e42-ae37-de79d16707fd"
        },
        "item": {
          "id": "5ec013ca-4c9e-4356-bb81-175bf93342be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f2666b76-7857-4acf-9dae-2c876381a904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feaf0be-879a-4bf5-a2a1-845bf5c991c5",
        "cursor": {
          "ref": "88bae5d1-1a15-47dc-a814-c6e1af40cad1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f9e77671-4cba-4778-a8c9-4438058afdfe"
        },
        "item": {
          "id": "2feaf0be-879a-4bf5-a2a1-845bf5c991c5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a576ef9b-0c96-423d-9e88-9c566b80cd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d86167-4a79-4f7d-93c8-d7db3031fb52",
        "cursor": {
          "ref": "9bd1c4dc-0f15-4f37-a0be-37e11202f4db",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d30e58b7-3fcd-48c0-a703-73f6f6934de9"
        },
        "item": {
          "id": "60d86167-4a79-4f7d-93c8-d7db3031fb52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6f8e783f-5268-4f6a-bdda-4d79c3d42146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3146c4e-605b-4811-80d7-30829c022c4d",
        "cursor": {
          "ref": "30d56a3c-7fe1-4787-98ac-ac8c6ad3c51b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "94d0b453-7301-4b53-94ba-465f048eb34b"
        },
        "item": {
          "id": "f3146c4e-605b-4811-80d7-30829c022c4d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "607dfb6d-1658-43df-9d84-b0bbc1474937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4009aeb-53a9-4ab9-9634-be14b2138d1e",
        "cursor": {
          "ref": "09ae93f2-3064-4fec-8b27-0b426f04c6a5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c83ac52f-f158-4ed8-be9c-7e3bea560329"
        },
        "item": {
          "id": "f4009aeb-53a9-4ab9-9634-be14b2138d1e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "43e95d6b-2c63-4b95-b839-a3dcfaa843bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b85992-b2cc-445b-9fa7-075b972347a6",
        "cursor": {
          "ref": "777185c8-dbcb-4965-81d9-db23fea2b65a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "29ad585d-fa68-4405-a43b-2648d92a1c55"
        },
        "item": {
          "id": "d8b85992-b2cc-445b-9fa7-075b972347a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8194e2c1-3efb-4846-be9e-b56321640276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ded4aa9-e018-4cda-adbb-92fd718e5740",
        "cursor": {
          "ref": "e6900129-af0f-4b75-b2d6-09f49dc04d01",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c593eea-4913-43cf-bdce-5a5d2fbbbce9"
        },
        "item": {
          "id": "3ded4aa9-e018-4cda-adbb-92fd718e5740",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d0f131d5-891f-4cdc-acda-966f3dbbeb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d380e9b-fb98-4c92-8c09-e9fff486cfac",
        "cursor": {
          "ref": "1ef062fc-b1ef-4e4d-bb58-d61c39091bf7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b40471b4-eb69-41e1-a940-3868edd1327d"
        },
        "item": {
          "id": "7d380e9b-fb98-4c92-8c09-e9fff486cfac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cedde937-14b9-46cf-bc1d-2d5cbe6ca684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b699fd4c-ce85-4aef-945a-37f83d9ee3ce",
        "cursor": {
          "ref": "c82dd50e-854b-4638-b6f8-c38bce3ba670",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e5afefd0-ed9f-48f8-ae33-1fc982250aa3"
        },
        "item": {
          "id": "b699fd4c-ce85-4aef-945a-37f83d9ee3ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d162aac-5104-4797-b5b8-c423564390fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fbe80c-a0d2-4923-a6aa-73b78a389a64",
        "cursor": {
          "ref": "0ff8bdd5-573b-453c-baee-c372495078c3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d49c1f01-e6fd-428b-9017-df3214d68133"
        },
        "item": {
          "id": "96fbe80c-a0d2-4923-a6aa-73b78a389a64",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "00f59610-7806-4d0e-a389-3b04b4ad6d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28a7d7c-b688-413a-abed-b211a394db89",
        "cursor": {
          "ref": "e25ad0df-b975-4104-add1-8fb256514b85",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "927c2136-abe9-44ac-8916-38ee183444dd"
        },
        "item": {
          "id": "d28a7d7c-b688-413a-abed-b211a394db89",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06d7deda-6d3e-46a1-b3b6-540acfe6c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e12c3-c87b-4099-b192-b926a2bd8016",
        "cursor": {
          "ref": "88ad06d3-ec85-4388-b37e-060054ee6301",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d1507e5d-0a18-4883-9ba2-935189433bb0"
        },
        "item": {
          "id": "746e12c3-c87b-4099-b192-b926a2bd8016",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cecca53-57d5-4b7b-a0c6-d1f028544ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c8af60-0365-4e58-93cf-a3da93539308",
        "cursor": {
          "ref": "eb03cc96-8ab6-4f8a-8eb9-aebbd6f61053",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6ef55478-b788-43b8-9510-3dc4073cd811"
        },
        "item": {
          "id": "e1c8af60-0365-4e58-93cf-a3da93539308",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22d21b35-8b7a-4545-b259-e8845761ccea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c371cd-5bbb-452d-b618-021e352b7131",
        "cursor": {
          "ref": "9d5609cd-b86e-41e6-ba47-0367d4d66828",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b450bfd8-eb1a-4fac-8269-900acc2b8ec9"
        },
        "item": {
          "id": "e5c371cd-5bbb-452d-b618-021e352b7131",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dc529966-2775-44f5-b0c8-efcb002084f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab71d344-4322-4a27-ac86-8bbcde7857e3",
        "cursor": {
          "ref": "f59ba085-904b-44ba-9e0c-0ec45d5235b5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "905d9249-14dc-434d-974a-fad600ebe93f"
        },
        "item": {
          "id": "ab71d344-4322-4a27-ac86-8bbcde7857e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "efe0033d-ca5a-4a17-ad35-e24b71407a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc01861d-508d-4ac7-8837-88cbf18fb702",
        "cursor": {
          "ref": "3a280c05-a49c-4717-a3e8-927c1c422396",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a1dc6552-e6fd-4dfd-8e44-78f21c15bf27"
        },
        "item": {
          "id": "dc01861d-508d-4ac7-8837-88cbf18fb702",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55fef1bf-bbd4-4c13-9d32-0198546d16c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06f72c7-cfaf-457c-b395-7ba796a9d85a",
        "cursor": {
          "ref": "99d10dec-6791-4626-a81a-78d9cc7261e9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4f378865-d5d6-4e9d-a284-78db040c5cc1"
        },
        "item": {
          "id": "c06f72c7-cfaf-457c-b395-7ba796a9d85a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae63292f-4b11-4808-a78a-29a0309830ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfb588b-57bd-4166-a839-c0203f84c653",
        "cursor": {
          "ref": "7eebf034-ad17-4326-bcfd-4aab117b92ed",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5cf357e5-948f-4a7a-a42a-1df023ee67e4"
        },
        "item": {
          "id": "5dfb588b-57bd-4166-a839-c0203f84c653",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9bc8f2e6-2e56-4b5f-b35a-d55424648564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23d73c4-91bb-44f3-ace4-25074e181c64",
        "cursor": {
          "ref": "3eb437b7-83c7-44ca-8dcf-b64a00daca6a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e743060-9246-46cb-a52a-c20cd61bb56e"
        },
        "item": {
          "id": "f23d73c4-91bb-44f3-ace4-25074e181c64",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e28af3e-1d58-4eb7-b998-10939b7a836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a0d3c-12f2-49e7-b357-3d607b9afd20",
        "cursor": {
          "ref": "b86b7b7d-f1e1-4d49-b4fa-bb583cc6803c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b206d761-878b-4040-a469-2d0c898cf64f"
        },
        "item": {
          "id": "909a0d3c-12f2-49e7-b357-3d607b9afd20",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4192fa01-0d19-47c8-8d43-40be65c8a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aeb837-6859-40e7-9b64-b4942bca1618",
        "cursor": {
          "ref": "170c1b03-e0f1-4f40-97b9-39b36320ba76",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4ef2c9bb-0948-4103-9143-d469b4efb708"
        },
        "item": {
          "id": "32aeb837-6859-40e7-9b64-b4942bca1618",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95218dd8-f308-4d5a-bfb1-c4256fc1bedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a2c3e-9989-4c9c-81d8-8b14edbc719a",
        "cursor": {
          "ref": "ac4f627f-fc92-40df-93e9-ee63dc2faa9b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c09b1fba-3ff7-4a7a-b67f-57c3937bc707"
        },
        "item": {
          "id": "445a2c3e-9989-4c9c-81d8-8b14edbc719a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f24c0471-1c91-42e8-99c1-f25233080c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be220f3c-b5ed-4bca-8b82-f7d6426fdd4e",
        "cursor": {
          "ref": "5c350928-789c-48f7-95d5-d9b450b2067f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e33e65ff-bda2-4934-beff-115a13da6911"
        },
        "item": {
          "id": "be220f3c-b5ed-4bca-8b82-f7d6426fdd4e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6dae4068-a49c-4133-bca7-e09c32893bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8adb1d-7b03-4f4e-a6ff-0d56fe608125",
        "cursor": {
          "ref": "21fb6e33-39f5-417c-acbb-352694744e87",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "02a75a63-4b68-46cf-bc6a-add2c30318a3"
        },
        "item": {
          "id": "7c8adb1d-7b03-4f4e-a6ff-0d56fe608125",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "806eea87-adbb-46e1-9e5f-3c12380dd807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab04249d-feac-4365-b82f-f0ca8a3ebba9",
        "cursor": {
          "ref": "b1c1eecf-acac-4847-b722-c70117e47d49",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a1d00804-f70c-4a28-9ef6-f8b7de0cafc5"
        },
        "item": {
          "id": "ab04249d-feac-4365-b82f-f0ca8a3ebba9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dc54fdbb-3ff5-4b28-8c2b-67d2f7218118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9a0014-a02a-48aa-8525-071ae4d5e93a",
        "cursor": {
          "ref": "48f30ad7-12e7-4d3f-95af-a1476e5b9849",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ad6196d-55ed-4b01-8957-7a08b1017da6"
        },
        "item": {
          "id": "aa9a0014-a02a-48aa-8525-071ae4d5e93a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7a628c5c-9895-4aec-ab78-bbb02a2ec6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40adec75-f93e-47f2-af07-48c6a2d836eb",
        "cursor": {
          "ref": "36c91c6f-8907-4c93-b3c3-eed82fe65df1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5f9d0aa8-a860-4fd9-a907-be6ce434a15a"
        },
        "item": {
          "id": "40adec75-f93e-47f2-af07-48c6a2d836eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7cc74b72-01da-4798-9c89-571f2faa7a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d946be2-f815-4f7d-ab4b-b7467f34ae94",
        "cursor": {
          "ref": "00cb9e87-2742-402d-8b0c-a5607672fe22",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb7e26ef-5b36-480b-83a2-4cf8361bd164"
        },
        "item": {
          "id": "0d946be2-f815-4f7d-ab4b-b7467f34ae94",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "790d9269-e927-4d13-95bf-1524b861cd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea12d3-1b95-4f73-a82b-97d162d23df8",
        "cursor": {
          "ref": "055e3d6b-cb75-4a1d-ac71-6a3f55a2a26d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cb57d2c3-4ab7-4c73-96de-94ce5eb54d61"
        },
        "item": {
          "id": "31ea12d3-1b95-4f73-a82b-97d162d23df8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c63734f0-5c7e-41e3-9e5e-b77a3e13fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2d1e8a-3fc0-4a27-9913-f26ac7efff10",
        "cursor": {
          "ref": "5eb2de2a-46d1-44b4-abb1-4fff6f81ebb7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8a3c46f1-66a7-427f-a16f-85e0e8d5d03e"
        },
        "item": {
          "id": "4f2d1e8a-3fc0-4a27-9913-f26ac7efff10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f4c6fd1-04f0-49c9-9a84-c392f553bbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e6fe82-0a3c-42eb-b03d-0e4a39d18a54",
        "cursor": {
          "ref": "ffdadc75-787d-482c-a29a-8ef3f15c69df",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b777b4f5-66bf-4832-bced-c97a3590d1f8"
        },
        "item": {
          "id": "46e6fe82-0a3c-42eb-b03d-0e4a39d18a54",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7183852d-b2bc-4863-ab9d-3881dffe55b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9875d3-f3e4-4829-9a76-d9a28f3e39eb",
        "cursor": {
          "ref": "08c4aec0-b93b-42ba-bffd-219aaed4eb8f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a03c512e-d820-4587-a8ab-8fb4a10c9110"
        },
        "item": {
          "id": "ed9875d3-f3e4-4829-9a76-d9a28f3e39eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6f6bfe8d-b60b-407f-a9e9-236054981d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5944ab2a-bf06-44ae-85b9-c4c3d2081484",
        "cursor": {
          "ref": "22f767e9-c71e-4982-a4e9-821a9d5b955f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "227ebd66-371e-4077-96f0-ec8dee8a2984"
        },
        "item": {
          "id": "5944ab2a-bf06-44ae-85b9-c4c3d2081484",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a6faecc-0c4a-45fe-a915-fb518079658b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e07d7d-4d01-4dc4-989b-7c1dd6e94743",
        "cursor": {
          "ref": "dc55a4bd-1995-4f9c-940a-d1dc62d8381b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e121b83b-773f-4524-a356-34627869d4c2"
        },
        "item": {
          "id": "99e07d7d-4d01-4dc4-989b-7c1dd6e94743",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16199d43-6033-4692-b6da-f933a7ec58e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d627096-29c5-428b-8eef-7c6cedfff5cf",
        "cursor": {
          "ref": "a80024ea-0377-46b0-ab0c-9a24fe63ca77",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "38726356-e310-4ad7-ac89-40cf73e18ede"
        },
        "item": {
          "id": "1d627096-29c5-428b-8eef-7c6cedfff5cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f07424b4-2b7c-4872-8a5f-d499b85fa188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d06bd7-d3c7-4f11-a863-18fdca345045",
        "cursor": {
          "ref": "de3dace5-6270-4ab5-ba6c-cd9fa4ee1c0f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "706383fc-e81c-4c27-9dfd-31f8f136a4d0"
        },
        "item": {
          "id": "90d06bd7-d3c7-4f11-a863-18fdca345045",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8784c187-f0c3-457c-a8c7-f807409d33c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eb953b-dbdf-44cd-9aaf-a05fcf42d43e",
        "cursor": {
          "ref": "98fc8b26-2f53-4d22-9163-0f69378dfc2e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "59b81d23-eb9a-4357-850d-00b7d3303f7d"
        },
        "item": {
          "id": "d2eb953b-dbdf-44cd-9aaf-a05fcf42d43e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2a614328-3e2a-436c-b79e-0445cde46d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110aa81a-04ce-47b7-ae30-dbad15973783",
        "cursor": {
          "ref": "00fa1209-2727-43ed-8fb7-80a586fa01ef",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "387fd1bd-2567-4b70-9b67-0d6f29c19bc0"
        },
        "item": {
          "id": "110aa81a-04ce-47b7-ae30-dbad15973783",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86fd72f0-ec1f-4b46-a312-f3dbf2dd73ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458c4cef-8916-4d19-b840-a6b0dc0381cc",
        "cursor": {
          "ref": "ac7adaf8-f814-416a-8604-323d249ba51b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70afc1f0-021a-4ebd-9594-b198bc0e1df6"
        },
        "item": {
          "id": "458c4cef-8916-4d19-b840-a6b0dc0381cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91be38bb-5836-4a79-b703-4545f3c5d21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b99020c-5ecb-4567-af53-193007370076",
        "cursor": {
          "ref": "f53d3142-c2df-489b-ab24-d9f7b31381a7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1cd5e82-9e04-4b1a-92ea-0499437b996e"
        },
        "item": {
          "id": "3b99020c-5ecb-4567-af53-193007370076",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0a8eb23e-2f3a-4471-a759-1b12c9b9f854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79db2f-f86e-4675-a01b-8b06a102d0c6",
        "cursor": {
          "ref": "c116ef9c-2b1b-4fdf-9aee-7c6d67b9b4b6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "52380f48-17cf-4fbf-bf45-396448297b23"
        },
        "item": {
          "id": "ad79db2f-f86e-4675-a01b-8b06a102d0c6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5c66c1c8-a9a2-41e3-a865-e1e5cb8ef285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc41bff-e6c9-4395-9e08-f68b50b73bbc",
        "cursor": {
          "ref": "d3a11d8c-e0ca-44d1-a8ff-120daf81194f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d9a20641-3e12-4eee-bf59-2f0525da394a"
        },
        "item": {
          "id": "fcc41bff-e6c9-4395-9e08-f68b50b73bbc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bf402f26-7d53-4c27-b4a1-42529697b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212560d8-6e3c-42ad-8e7b-6947419f2e50",
        "cursor": {
          "ref": "7c5dc402-2729-4f20-9c12-307baaed27b2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8dc4d918-8148-4d4d-a915-fefd2c16cc48"
        },
        "item": {
          "id": "212560d8-6e3c-42ad-8e7b-6947419f2e50",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "24ac2be9-e839-4358-b4f8-6072eff41b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826852a-6b43-42de-8b4f-46f7e48e8399",
        "cursor": {
          "ref": "0b7d94fd-e79f-4044-84f1-1be47adb4075",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f7feee7f-9228-4759-885d-aca5cd85e506"
        },
        "item": {
          "id": "1826852a-6b43-42de-8b4f-46f7e48e8399",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0396a7e1-49c8-4020-9274-a9c62fcfb811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8af84e-4ace-45ac-a493-29171a48a992",
        "cursor": {
          "ref": "82ed1be7-9517-4d25-a31a-3326b352eb71",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d3d76a9d-f96b-4321-8b5f-1e581eb0e68f"
        },
        "item": {
          "id": "1d8af84e-4ace-45ac-a493-29171a48a992",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bcf2f26b-011a-4ea8-94e0-ad8a73a6118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2856e8-2df5-4511-abd8-d53af5ffa112",
        "cursor": {
          "ref": "27dba1ed-1c98-4cd9-8a6e-620e5cea29c2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "be5792ed-b6ae-4009-aa98-5aad0c2d7a65"
        },
        "item": {
          "id": "dc2856e8-2df5-4511-abd8-d53af5ffa112",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b6fa42f9-da53-47f8-8b71-405ee97b04c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0437fd45-b9e4-4efd-b680-257e1d8e8f28",
        "cursor": {
          "ref": "b1e6d639-6d02-4e44-bf5e-eb66cbb68553",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "112a61e0-1743-4367-ad81-5995373c610e"
        },
        "item": {
          "id": "0437fd45-b9e4-4efd-b680-257e1d8e8f28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d1199af0-9cc2-4e97-a816-fa7ad575744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2794c4-9f26-4a5e-b8f3-704edf3d55ab",
        "cursor": {
          "ref": "87573c01-dd7c-44d6-9c49-b21d28f86618",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "797c5b54-7e1a-408e-897e-7482dce08356"
        },
        "item": {
          "id": "fd2794c4-9f26-4a5e-b8f3-704edf3d55ab",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3ca4204-8951-4776-87f4-ca3821cbfd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a30e531-9b63-4abb-aaad-10b10c6f94a9",
        "cursor": {
          "ref": "6a245a24-dd1b-46f2-96ed-d065348fbd58",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b4cedd8-be6e-4f58-a766-c8092275a1c5"
        },
        "item": {
          "id": "2a30e531-9b63-4abb-aaad-10b10c6f94a9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "87a718a4-a224-4d0d-904e-be8010dac045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f557b-59e6-4df2-8762-ecaf4cd4deea",
        "cursor": {
          "ref": "a6cd55ec-2012-4ce0-a1ad-1ff0a3d8d139",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f380ed3-c182-4fba-98c0-723e8ed7bae3"
        },
        "item": {
          "id": "ac9f557b-59e6-4df2-8762-ecaf4cd4deea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf0e9fe4-73ca-44cb-b1bf-c1e9cc2a0de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034fb827-9a4f-4784-b419-bcb7c8342ec9",
        "cursor": {
          "ref": "ab902dc6-a7a5-4ef1-91d5-5b4f22558f57",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cadf649b-10bb-4606-8858-4b3f96ae9a0b"
        },
        "item": {
          "id": "034fb827-9a4f-4784-b419-bcb7c8342ec9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "228a6b7d-7839-4c11-9017-10b9cbfe9cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71b88eb-e145-411f-9f1b-cfc2cd464082",
        "cursor": {
          "ref": "6ddbd981-8874-4a76-8ad8-db34b0535120",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "05763318-ab4a-4a30-ad8a-903cf8575c6f"
        },
        "item": {
          "id": "d71b88eb-e145-411f-9f1b-cfc2cd464082",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2b3e90e2-1515-4b9c-8b57-bbd759089c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ed8d5-23da-40d7-9749-d851d1588967",
        "cursor": {
          "ref": "23d7bcc8-202a-4cf3-8b34-d10110bb249e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eac2d332-9e9c-4f05-b85d-38199a2ecc02"
        },
        "item": {
          "id": "1f4ed8d5-23da-40d7-9749-d851d1588967",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "16ab55b3-638b-4ccd-8b8b-76bb89d787d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a6187c-b45b-4c7e-8e23-e0e719bdb369",
        "cursor": {
          "ref": "5d29618a-9aaf-4f0c-8c4d-25823ef0e52e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "170eca45-70a5-4f56-b909-3bbdc1eb8dc0"
        },
        "item": {
          "id": "f6a6187c-b45b-4c7e-8e23-e0e719bdb369",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3fd62ed9-406d-440a-9f51-c08927fff154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8315dd-13e1-4141-a4cb-fd951939d801",
        "cursor": {
          "ref": "67d8c4be-a1ca-4050-894b-35db718b4cdd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "402f34a7-45fe-4735-b47d-93defd65ddc1"
        },
        "item": {
          "id": "5d8315dd-13e1-4141-a4cb-fd951939d801",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "95424db8-5eca-4cb5-b1a0-92c6d92aa491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19235609-b2f3-4b8f-8d78-106b08cea63c",
        "cursor": {
          "ref": "fb8e95f4-5e86-4769-8eb0-f48a0781d1c0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf3e40e9-31c4-4298-9b29-cf8dc68b8937"
        },
        "item": {
          "id": "19235609-b2f3-4b8f-8d78-106b08cea63c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ccf6097b-8559-4085-ae5a-36dd8fddec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eed91d-46ef-4094-b134-2bb939bfb3f8",
        "cursor": {
          "ref": "79c3443b-87ac-4a6d-977c-079afd88a240",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "21474831-89f0-4b49-ba69-cbf62410bb63"
        },
        "item": {
          "id": "a4eed91d-46ef-4094-b134-2bb939bfb3f8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d48c7ec-fa07-4883-857c-b4d7c77732ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65400621-9395-4c92-ae3d-747f3440e5a7",
        "cursor": {
          "ref": "b1491f7f-c47b-43b1-8341-cf33290f6508",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b08cad2f-95e7-4c79-a2b3-8bf4095c1145"
        },
        "item": {
          "id": "65400621-9395-4c92-ae3d-747f3440e5a7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5dba048-1bd5-45b3-878e-b577d013f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7743fc48-1fd2-4857-b292-bc6c3fe234f6",
        "cursor": {
          "ref": "8ee34592-5a0a-4a15-8dcd-2574b7a3db52",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "862ee7d0-7a4c-4fc9-9e8f-13bff1639b8f"
        },
        "item": {
          "id": "7743fc48-1fd2-4857-b292-bc6c3fe234f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bfd03d0a-7504-436b-bd0e-39bcd80290ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f93a8-aca9-4671-963e-0ef3ad399c70",
        "cursor": {
          "ref": "263f0002-19f5-410a-bcc7-2c7a17a12c51",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "01495534-b2ad-43f3-b3cc-00ebd39e12f6"
        },
        "item": {
          "id": "f07f93a8-aca9-4671-963e-0ef3ad399c70",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc077f45-e544-4324-af0d-9cd9d515b898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2338c8-3c52-4120-af6d-1d4381aabe95",
        "cursor": {
          "ref": "d49a2ef8-4721-4459-89a3-85876e6c114d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1739f6a7-8cd8-45d7-b3ef-399dcb3d1e2b"
        },
        "item": {
          "id": "fb2338c8-3c52-4120-af6d-1d4381aabe95",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "590dc248-2c2b-4874-9d82-a34ec7f05951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66391ba1-7796-4636-b5ea-5a6716c6e2d4",
        "cursor": {
          "ref": "fcd82c83-7cd2-416d-8642-470e7f0b05bd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "80131c86-ff91-4320-9a9b-ee54ca005bbe"
        },
        "item": {
          "id": "66391ba1-7796-4636-b5ea-5a6716c6e2d4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "42c784b4-ab1b-447d-8cf9-b958ef2d1532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1542035d-8844-4ebd-bdb0-a725cbe0c42b",
        "cursor": {
          "ref": "c71a2ac4-8772-42a8-92f6-974e416c4c1c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a61561a-a332-47cc-8143-7b7ecedba7d7"
        },
        "item": {
          "id": "1542035d-8844-4ebd-bdb0-a725cbe0c42b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "38b2674a-06ec-418c-8163-00323b823fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b47334-2bcb-4847-8481-0fe330affda5",
        "cursor": {
          "ref": "77afdd5b-d171-4c5e-b4d2-cfc0f9249fdd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fbf0348b-dc9e-4d95-89df-4ecb80dbbc06"
        },
        "item": {
          "id": "17b47334-2bcb-4847-8481-0fe330affda5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "07679c11-2148-4a84-9c01-0cb615ff9f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df45fa0-7d62-49ae-b341-e7771abc5f4c",
        "cursor": {
          "ref": "648ba2e2-52d8-48c0-9572-5dc45cd0d126",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "64364e1d-ef96-483e-a13c-f18dfa55c89c"
        },
        "item": {
          "id": "9df45fa0-7d62-49ae-b341-e7771abc5f4c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4bb9adfa-2764-4f60-9b43-196f35205309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee2836-e125-4212-8dc8-64b1def4a95d",
        "cursor": {
          "ref": "d9244d7f-7d4c-49bd-843a-625a3e1d3d8f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7fa56436-147c-4766-ba26-a2beaed24f9c"
        },
        "item": {
          "id": "eaee2836-e125-4212-8dc8-64b1def4a95d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c0fca69d-297e-4ea4-ae1b-b1849e2f6410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6934e3e-0247-4901-b0bf-dbacc551ab48",
        "cursor": {
          "ref": "815b6441-08d7-4ed9-9b46-2b606c163380",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ea0783ae-93ec-494d-ae46-52e515703f34"
        },
        "item": {
          "id": "f6934e3e-0247-4901-b0bf-dbacc551ab48",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "54cc9ba3-4d67-458b-a05b-c5449c8293a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2947697-22b0-43c9-83ad-530ddc9167ee",
        "cursor": {
          "ref": "e5972329-e9dd-43b6-b0d2-c3007af99190",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e59b75f-8c3b-4a06-8b5a-df0e67976c03"
        },
        "item": {
          "id": "e2947697-22b0-43c9-83ad-530ddc9167ee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "812a1e00-ed14-4543-899b-7f8c740486a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9083f0-d459-4b2a-a900-f0f7dd0730b7",
        "cursor": {
          "ref": "72600c6a-f171-4eef-91e6-81f90fac7e88",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2c286fb8-70b8-4354-a69f-018781c54a17"
        },
        "item": {
          "id": "1b9083f0-d459-4b2a-a900-f0f7dd0730b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ac203f50-afcb-4655-982c-5883691ca443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca34fba-423c-478b-8816-4618a321471c",
        "cursor": {
          "ref": "1c0fd3e6-e83e-463a-91d4-e37d6f9afa91",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4bf2ef3b-6031-47eb-8cc8-61d0caab656d"
        },
        "item": {
          "id": "4ca34fba-423c-478b-8816-4618a321471c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d3c8d91d-be99-4b3d-a568-96562f2a023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c728a2eb-0e86-4f2b-a6fe-4b2377ac2d7e",
        "cursor": {
          "ref": "2bd97bdd-41fa-49d2-8f73-d1f934ce2c2e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad456717-a1ed-4c28-a3b4-70973e490d52"
        },
        "item": {
          "id": "c728a2eb-0e86-4f2b-a6fe-4b2377ac2d7e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3fa4234d-9b92-47d5-ac33-a79a04d50a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b576f3-99aa-487a-a1fa-275e6ab41c27",
        "cursor": {
          "ref": "566e60ba-64a3-4dc3-b1c5-89a350003c2a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "400b606e-a3c5-47cb-a094-757590c67adf"
        },
        "item": {
          "id": "72b576f3-99aa-487a-a1fa-275e6ab41c27",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "50980d27-86ad-4e40-840d-952cfd863f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683bfba-9a10-4887-b627-035339da3cf1",
        "cursor": {
          "ref": "3feecb61-d602-435a-b3cb-3904a1cb4cd0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0012e0f8-03d4-4609-b4fc-f13db97d09a7"
        },
        "item": {
          "id": "9683bfba-9a10-4887-b627-035339da3cf1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "51a4bed7-d66a-4263-beec-4dbd83d41531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08e327-db87-4b4b-881d-8326dee38d7a",
        "cursor": {
          "ref": "a4f6b427-66da-46db-bc6d-4cd270359194",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "69bffa74-c74b-443b-9f37-74161cab9989"
        },
        "item": {
          "id": "1e08e327-db87-4b4b-881d-8326dee38d7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5f3d9144-d0a1-40bf-b8ae-24ff73875e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf47587-f342-4129-9340-64a4db66e853",
        "cursor": {
          "ref": "622bc784-614d-4ad1-9e88-a97a4d4f569c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69ea55cf-5a90-4a41-8c88-d2f4f250bd76"
        },
        "item": {
          "id": "2cf47587-f342-4129-9340-64a4db66e853",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "499cc01c-f94a-4a66-9eda-3e9add55d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e4113c-178e-4953-a8c5-b4193b7f3f8c",
        "cursor": {
          "ref": "14917945-b336-4880-9628-f52458bbc0df",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f6f3390b-9c33-445b-80f6-e3c0db1504c2"
        },
        "item": {
          "id": "82e4113c-178e-4953-a8c5-b4193b7f3f8c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4d416eeb-c954-4b7f-be5c-32b13865079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3d50d-2935-4069-83f4-e9747cdd8890",
        "cursor": {
          "ref": "0bc32df9-ef42-44f4-8ec5-b4fd5b484b71",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3012f6cc-96f2-4940-ae99-0ed24220574e"
        },
        "item": {
          "id": "e4f3d50d-2935-4069-83f4-e9747cdd8890",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cbe8a8c1-6f5d-4ec8-9b3f-8f7d24126bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd809c6-d377-4121-ab5e-80b81cfcb2ec",
        "cursor": {
          "ref": "b31e7727-9e5c-40c1-b9ed-635ff7de71c5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dd608dc8-1624-43f4-8709-2af03ddc454e"
        },
        "item": {
          "id": "6bd809c6-d377-4121-ab5e-80b81cfcb2ec",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4ece6f08-86f0-48ac-aa10-308aef01d1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8b15ea-3e50-4fc4-81fa-3b875ac04bde",
        "cursor": {
          "ref": "eedf4d27-c5fc-4490-93cd-8fe46f308e99",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "96c17b30-1d89-4353-aa9e-d425af421ad8"
        },
        "item": {
          "id": "8a8b15ea-3e50-4fc4-81fa-3b875ac04bde",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6b27b369-f514-43e5-a801-4d0aa979610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361e525d-fb3c-40a2-bbf0-194132fea97a",
        "cursor": {
          "ref": "1485a642-4586-4aff-82e0-588681ead990",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4cd660ab-7ff2-4c18-b5b8-65da334d444a"
        },
        "item": {
          "id": "361e525d-fb3c-40a2-bbf0-194132fea97a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fa8db498-63c2-4389-a5b8-dc2b6dc4fea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f61241-61c8-4d6f-a5d8-1f390d240756",
        "cursor": {
          "ref": "d46d9076-46ef-456d-a8d5-361cb1a682fc",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f2cec368-2a99-4a21-b241-d78cbf6f6a81"
        },
        "item": {
          "id": "a6f61241-61c8-4d6f-a5d8-1f390d240756",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a976cb87-cc59-40c8-a646-62b20bbdeb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23c349e-eded-418a-95c4-20cd0a033942",
        "cursor": {
          "ref": "20d74067-9ce7-48a0-b466-4c85f2db691b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad1e8004-28ff-4bed-af11-aabb4555db46"
        },
        "item": {
          "id": "b23c349e-eded-418a-95c4-20cd0a033942",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5d32e05-6413-4418-ab3b-ab9221f4e057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16cc9c6-2f56-4641-9d51-d8bf91512518",
        "cursor": {
          "ref": "7ee334b3-1335-42ab-8626-9438631a1f66",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c1f43a63-4caf-469f-a514-563c2b4e776d"
        },
        "item": {
          "id": "e16cc9c6-2f56-4641-9d51-d8bf91512518",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f0228f3b-f104-4eaa-8e4d-059545f81cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4392f0a5-367b-498b-b391-1996b5f27f7a",
        "cursor": {
          "ref": "f7b8cbb5-24c7-4d33-ae55-d5c0e54af11c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c54f25b-6fde-4e60-8180-ac44ec716109"
        },
        "item": {
          "id": "4392f0a5-367b-498b-b391-1996b5f27f7a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "29193557-8e6c-4e4a-bbf5-1e2845403f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92fefc-bc2a-4704-8b1c-2434c2c19ac2",
        "cursor": {
          "ref": "4f7325fe-0262-4d3d-af94-72bf42fa17e9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b1b28298-1004-466a-9843-7468ecb4db16"
        },
        "item": {
          "id": "5f92fefc-bc2a-4704-8b1c-2434c2c19ac2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a540769-e1ca-471b-9900-0a7317e35709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cded4d6f-408b-4d2a-94ff-86f33227a3ba",
        "cursor": {
          "ref": "25106016-5e1f-4617-8837-b5596cdef318",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44f23652-4f45-4ca3-93a0-71085dc5e652"
        },
        "item": {
          "id": "cded4d6f-408b-4d2a-94ff-86f33227a3ba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b930bb48-1d66-49cb-acf8-3f842874f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2f2caf-b006-44bb-9ad1-91d47acb56e0",
        "cursor": {
          "ref": "c7b50bec-9898-484a-b8bd-bb1868ec6806",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d0d4e5a2-7154-4a2c-9caf-70a4073426b0"
        },
        "item": {
          "id": "5d2f2caf-b006-44bb-9ad1-91d47acb56e0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8dadd717-5c83-414e-ba50-d934f23aa359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e297192-e2a0-48c5-81ec-449f8589f025",
        "cursor": {
          "ref": "18bc4958-271c-4ca0-b95a-42a6008e3448",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "398ac1dd-e27e-424a-8288-28925ca7e947"
        },
        "item": {
          "id": "9e297192-e2a0-48c5-81ec-449f8589f025",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f725a604-1b94-458c-ba13-e72171b717f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e11383-5b77-40dd-9ba6-0c57eb09a470",
        "cursor": {
          "ref": "8f5af4ae-bb56-455a-b4de-6757a91c044e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "19ca530a-8a05-4d92-87b7-b3c0f955e2a7"
        },
        "item": {
          "id": "46e11383-5b77-40dd-9ba6-0c57eb09a470",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6239a1ed-625f-4f4a-be80-36fe82b55c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950c021-759d-4088-a6bf-fadb7d99854e",
        "cursor": {
          "ref": "32637eb9-afad-4c21-a16e-1be166dbdd12",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4547875f-4a66-4920-8792-64b89e32362b"
        },
        "item": {
          "id": "a950c021-759d-4088-a6bf-fadb7d99854e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1e35777-301c-4944-9af0-758865fbc02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2b361-f405-4fc9-b3f0-102074499f0e",
        "cursor": {
          "ref": "59f2b21f-1ea0-4013-bc28-956a96a2b743",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a943711b-58d1-4cd4-a17d-7f7c89443adc"
        },
        "item": {
          "id": "fcb2b361-f405-4fc9-b3f0-102074499f0e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f9a04559-614b-498c-b4a6-ee36148edefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3f5cc2-9f6a-4515-80ec-ee4120d8edfc",
        "cursor": {
          "ref": "4e6d13d8-878d-4fad-9be2-7c41c59e3343",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6d90f150-2647-4b61-9e6c-6d3f07843f22"
        },
        "item": {
          "id": "ab3f5cc2-9f6a-4515-80ec-ee4120d8edfc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "416abac0-cece-4776-8b67-f0419a7cf482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e89bd91-8eb1-400a-8715-0d4cd6e17b0d",
        "cursor": {
          "ref": "a201e8b0-6598-43b3-b1b9-8dc694d467f9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d9d403a-02e7-4a14-8311-dc054cf8cc4c"
        },
        "item": {
          "id": "6e89bd91-8eb1-400a-8715-0d4cd6e17b0d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "97aa4e98-2b6d-45f9-9039-96c6b5ef6d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a2b387-c5be-4704-be71-2d0c33f39224",
        "cursor": {
          "ref": "1848a660-d212-4876-beef-304fd1a219fe",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cd097362-2a92-430c-8f72-dda37b8d4824"
        },
        "item": {
          "id": "52a2b387-c5be-4704-be71-2d0c33f39224",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b8c7938a-814e-4cf2-908f-872ee4afdb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d71344-0b28-42e9-91ec-715e46779b49",
        "cursor": {
          "ref": "aabed3a2-977f-48d9-81e6-aec27d1fbf22",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cf771585-53d1-437e-9e58-3e75ab87de89"
        },
        "item": {
          "id": "83d71344-0b28-42e9-91ec-715e46779b49",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "95a38ddf-6ad4-4470-bf06-ea9b5fc963b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa852404-8d39-420f-8f1f-bf54c75e771b",
        "cursor": {
          "ref": "36665c83-60be-41db-a2b9-133e4620fcb5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1ce1101-86ad-4f9f-a15d-ec2603bb2b9c"
        },
        "item": {
          "id": "fa852404-8d39-420f-8f1f-bf54c75e771b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1ed6eac0-ed29-4325-95b2-07ecc7e52c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ecf6fc-0954-4894-9940-af123a2c7b0e",
        "cursor": {
          "ref": "7a9975b2-7566-43ad-9817-590814735c39",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3803c0d6-1318-43fa-bcb8-0613bcb00dd6"
        },
        "item": {
          "id": "17ecf6fc-0954-4894-9940-af123a2c7b0e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e4afb1d7-f843-489b-89ab-a889680231d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9508384-6c1d-445e-a077-c81e755bc387",
        "cursor": {
          "ref": "58a8514b-0bc5-4939-a7dc-cfb7787d3b76",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0de8af4c-fac4-4946-8ca6-bd38664b74fc"
        },
        "item": {
          "id": "e9508384-6c1d-445e-a077-c81e755bc387",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "18c3be26-0923-4312-9b04-993ab5080132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f88fbb-be6c-4e20-81b7-6e3712d3c70d",
        "cursor": {
          "ref": "617e4703-caa3-4609-8b40-b419282ed205",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "24e02dc4-5edf-4af2-98b0-8467bd98d3dc"
        },
        "item": {
          "id": "58f88fbb-be6c-4e20-81b7-6e3712d3c70d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "348870eb-b71c-4885-a87d-2382020de707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e582933a-3be7-4d1d-a583-305f77717256",
        "cursor": {
          "ref": "6453a59d-9203-4dfa-9b74-496a3f3b7fa1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5365f567-7349-487f-9cdc-a056f389e3c3"
        },
        "item": {
          "id": "e582933a-3be7-4d1d-a583-305f77717256",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d50be65e-044e-41e0-9e1f-d2f2b0d71f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dceef3-b750-4f6d-b862-725ffba4d7e1",
        "cursor": {
          "ref": "399cc00e-c6af-4c6a-98ed-593b8e239df3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a899ae08-ce27-4c72-b612-3f57df1b7b06"
        },
        "item": {
          "id": "a3dceef3-b750-4f6d-b862-725ffba4d7e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6400cece-5d17-4cbb-bd6e-0491922a1704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fe8403-213e-4aed-8391-db0e02ef4e72",
        "cursor": {
          "ref": "40eb2f93-d995-4195-9b62-af080df83a15",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6a94600-dfc7-4a98-bc61-a3f878b24557"
        },
        "item": {
          "id": "24fe8403-213e-4aed-8391-db0e02ef4e72",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4c4ea540-0ade-4c86-b69c-6983f0338cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ec4e57-7cd6-46e2-b0d5-c4febaa4b06a",
        "cursor": {
          "ref": "78dab110-2849-43d2-8198-20df5b3245e3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "416630ec-1a2e-41ba-9aa4-744f74194314"
        },
        "item": {
          "id": "22ec4e57-7cd6-46e2-b0d5-c4febaa4b06a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e6103fdd-d0fc-4f6d-8968-f80402ff6fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba7eb93-794d-476f-aff3-0f6aaf86045c",
        "cursor": {
          "ref": "e99664f0-6a49-4354-9394-cc4e031def6d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "10ab4ce1-8614-424e-a8b3-9c9f703c73a5"
        },
        "item": {
          "id": "3ba7eb93-794d-476f-aff3-0f6aaf86045c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "11497305-a821-47ad-8b10-da966a705c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d639d2c7-dec2-4bf9-a7ef-a732f36a1f35",
        "cursor": {
          "ref": "ed793fce-2e71-425b-bd36-99a59cf8be9e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0268c348-6ab9-4429-815f-68c25f7f3d29"
        },
        "item": {
          "id": "d639d2c7-dec2-4bf9-a7ef-a732f36a1f35",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fecadb95-e71e-4e28-a56d-fe035961b2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93022c-1a26-4bfe-938c-26c11e212ce1",
        "cursor": {
          "ref": "fb008d69-52bc-4a2c-b7c9-b0131a93ac89",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2dd3f89a-d169-4ef6-b3f0-812b8ec0944b"
        },
        "item": {
          "id": "8d93022c-1a26-4bfe-938c-26c11e212ce1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9279782e-cd33-4785-b1ff-9bdebceac65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ddfcf-ccb7-4fab-a449-bce80ac8ed79",
        "cursor": {
          "ref": "2ec9d5c9-9106-4f6c-92fc-314c0e293998",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "507402dd-8270-45e9-a207-5a751261fc46"
        },
        "item": {
          "id": "5a8ddfcf-ccb7-4fab-a449-bce80ac8ed79",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b2f0666c-b8c3-4828-8a7a-718219ba8e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9796be31-08ee-46c4-8f95-b37e60dfe8ee",
        "cursor": {
          "ref": "3b78fc3e-2e3d-4c37-b0d9-675c87c28400",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "35dc8370-1e12-49ae-b330-c1de1f572f55"
        },
        "item": {
          "id": "9796be31-08ee-46c4-8f95-b37e60dfe8ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "be98ccc4-cf59-47d4-87d3-d01bfb43f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5618f939-7a85-472a-98b5-cb1a293a0328",
        "cursor": {
          "ref": "c342525f-2f5c-4d48-a722-c2412990c9cd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8d8263a3-2203-4fb6-8285-a9b70e258fdb"
        },
        "item": {
          "id": "5618f939-7a85-472a-98b5-cb1a293a0328",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "13dfd1cd-cadc-4d8c-b213-6b30bf5bb788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deef9d6e-e519-4876-b236-d00380e4c61f",
        "cursor": {
          "ref": "83802394-6e41-47b6-a50b-c1a4d8d1179e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b46734c8-271f-4403-816f-f3512c295719"
        },
        "item": {
          "id": "deef9d6e-e519-4876-b236-d00380e4c61f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9983f750-a7c9-47fe-bdb7-f0e6bbf302ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d2a147-dbde-403c-8530-54280540dc1b",
        "cursor": {
          "ref": "424c393a-af91-44ad-9811-0a76b140aa87",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4859ef3-562a-4277-af76-9e6ce038c33e"
        },
        "item": {
          "id": "70d2a147-dbde-403c-8530-54280540dc1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "79c440ef-fea1-4434-9fea-1863fcc7259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebfa107-5dfe-40b7-9c13-8badbb988a36",
        "cursor": {
          "ref": "ca5c9688-3f20-46e6-ab75-af0c877aee04",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "15cd70ee-fb0b-4556-a8ec-91438f77ea24"
        },
        "item": {
          "id": "bebfa107-5dfe-40b7-9c13-8badbb988a36",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9da99d1e-c6c7-4bad-b4a0-1f95246dea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b93904-70a0-49ab-9fa9-7c7d8220b404",
        "cursor": {
          "ref": "5a6c0b2b-779d-4b8a-bc1a-79223f0470a0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "877f9267-28d0-40b0-8247-22f964271a19"
        },
        "item": {
          "id": "71b93904-70a0-49ab-9fa9-7c7d8220b404",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "efdc27da-b16a-4afd-90de-39296605bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19668954-dcc3-4c98-881a-8861b49215c4",
        "cursor": {
          "ref": "674dd208-ec46-4e12-8e2e-fcd38a3bfbb4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5778a238-2908-4c9b-be9c-160b6c5701e9"
        },
        "item": {
          "id": "19668954-dcc3-4c98-881a-8861b49215c4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c0e258d-2596-484a-9913-915021c38c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795aef23-cd46-41cd-a0a9-1ece0133b399",
        "cursor": {
          "ref": "a69e79b8-91ce-4822-902f-d0ef433d72bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0d679f1f-05fd-45f2-a0c7-11c6ce8d9d2d"
        },
        "item": {
          "id": "795aef23-cd46-41cd-a0a9-1ece0133b399",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dc0b6c22-d7c9-4ae4-88e3-36826fed9548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9643b7-8850-4628-940f-01f595e3a42b",
        "cursor": {
          "ref": "d8a495de-638e-4ce2-b3d7-bfc2be3399c0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0a493321-21e8-40cf-a1bb-f6bf50ddfd9c"
        },
        "item": {
          "id": "ba9643b7-8850-4628-940f-01f595e3a42b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b876e8d6-ebf2-4a26-8552-d5c30283e853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e570251-3af0-4226-a43b-087149676b92",
        "cursor": {
          "ref": "f7eda696-45a1-4f27-9c30-d717197070ab",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e3fa2249-dce2-4947-a6b2-81cbb76e7cda"
        },
        "item": {
          "id": "8e570251-3af0-4226-a43b-087149676b92",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe5841f9-4861-4913-9125-ea89dc7cc1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6c5e3-dd2a-4a09-980a-0d8eab4ce842",
        "cursor": {
          "ref": "86ecd4c6-f978-4757-b54b-cc678ff6be89",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "98f05eea-0fcb-439e-987a-70ca0a0ab82d"
        },
        "item": {
          "id": "7ea6c5e3-dd2a-4a09-980a-0d8eab4ce842",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d0fe343d-c27d-4c27-be5c-7e87175c4ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6fbff3-da82-483d-b685-23da698acf19",
        "cursor": {
          "ref": "3ec4c668-b3dc-4dcb-99cc-bfa923dfcc7d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f18fab95-6dd4-4e31-be26-30cb1eb446f4"
        },
        "item": {
          "id": "af6fbff3-da82-483d-b685-23da698acf19",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "91628a45-c8d9-4e38-9f58-24fd2c7720fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646f91c-66b7-40bd-ab7d-221fe62e3055",
        "cursor": {
          "ref": "c1258853-a2ac-4c24-9422-41e887fedfc6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c6b88e48-7024-4a3a-82cb-d416ce7f9160"
        },
        "item": {
          "id": "c646f91c-66b7-40bd-ab7d-221fe62e3055",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "87e52ed4-e700-4b2d-a6a3-ee84673774d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bdea86-2e1b-4f76-b1ca-100d074e80cd",
        "cursor": {
          "ref": "854a3e82-88d4-4797-862f-77a926b9d31d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b996cc5b-3c9a-4e51-8554-6418996347bf"
        },
        "item": {
          "id": "62bdea86-2e1b-4f76-b1ca-100d074e80cd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d3f32b46-5003-4c83-8925-e48399d13491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245d8ea2-d0af-4fd8-af38-574e7e946ca7",
        "cursor": {
          "ref": "7bb6307a-d64e-43e8-b3c7-ee8c87db01eb",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "17df428a-5d0d-49a9-8f05-8bb8a620d387"
        },
        "item": {
          "id": "245d8ea2-d0af-4fd8-af38-574e7e946ca7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cdf73604-ee5a-4248-9e8b-6714478f53bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a40007e-a8ba-4daf-b6e5-76cd3e7257fe",
        "cursor": {
          "ref": "4429bed2-94a5-46f0-a5c4-d6870a3a94c6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b27b2a74-e602-4552-b853-fe45f822d517"
        },
        "item": {
          "id": "7a40007e-a8ba-4daf-b6e5-76cd3e7257fe",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b49c1dab-f214-48eb-ba9d-41b61e0c5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9623a0-b391-4883-9487-a783669263eb",
        "cursor": {
          "ref": "daabf3a1-b13a-4c10-9929-7539eb9ad020",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c3db18cd-fae5-4143-a90d-9a7d6f5a7e12"
        },
        "item": {
          "id": "0b9623a0-b391-4883-9487-a783669263eb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "df07e49b-ace8-4f5f-9c76-563bce9e5b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b38d1b-9f1e-4517-9ee0-ea2fd2e3bdeb",
        "cursor": {
          "ref": "f516128d-17f5-4e49-842e-25b0268930f9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "18998878-518e-47b8-a8df-dd5d338ad6b1"
        },
        "item": {
          "id": "91b38d1b-9f1e-4517-9ee0-ea2fd2e3bdeb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b1114e62-d941-458c-9305-3d97125da03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e46df-4d4c-4d67-a251-51a477d4ad84",
        "cursor": {
          "ref": "4990353b-8d5c-4de3-9b10-09aa9f8c9964",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "679c318b-cda9-4e74-852a-2a1d156c02e4"
        },
        "item": {
          "id": "258e46df-4d4c-4d67-a251-51a477d4ad84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "07dd40a4-e7d7-4664-afcf-2709191b1035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b793b2-5670-48d0-988f-635ccc8497d4",
        "cursor": {
          "ref": "82bb0968-404a-44ee-92e5-e3b7f286b80c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "06ee53b2-544a-4be7-a6b3-343839c4283f"
        },
        "item": {
          "id": "88b793b2-5670-48d0-988f-635ccc8497d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "117d31d2-4ba6-474e-81f5-2e5bb89d41a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e75759-e920-4afc-a26c-f8330c4d9faf",
        "cursor": {
          "ref": "8c2f640c-7486-48dd-87d1-e20c1f1082c3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "64f09431-1043-420a-a6aa-8ded7c280c69"
        },
        "item": {
          "id": "40e75759-e920-4afc-a26c-f8330c4d9faf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "16e31526-5d56-4183-a7e7-32a766be81f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee314d7-3f8a-44c9-9a86-246d8d71a1c0",
        "cursor": {
          "ref": "06eb2af7-bab3-45fd-8f07-62a0988a59b8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "df3964d2-b52f-40e7-bb0c-c0fc01ad64b1"
        },
        "item": {
          "id": "3ee314d7-3f8a-44c9-9a86-246d8d71a1c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "43b12c86-d9c7-4ac5-b0e6-3be0bed2e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0ce680-1cc1-4779-8f89-49f69778e269",
        "cursor": {
          "ref": "9ee9d55f-1577-4b9f-bee2-382cdc12fc5b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a146334c-f789-4b71-b779-06c1e413717b"
        },
        "item": {
          "id": "5d0ce680-1cc1-4779-8f89-49f69778e269",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "65a2fb37-af0b-4423-bc70-d7f5fc8475b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbc393a-d56d-449b-b0a3-fbb9879fe0db",
        "cursor": {
          "ref": "71d6f58b-edf9-4fed-a996-b722f68a6b5f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d860d213-25f2-4cb5-adf0-b1faa092f75f"
        },
        "item": {
          "id": "3cbc393a-d56d-449b-b0a3-fbb9879fe0db",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f568119c-8aab-4263-8a8b-50aaf5f94c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc51790-ccbb-4de7-b6e9-77d851891368",
        "cursor": {
          "ref": "00597bf4-63a4-41d1-94a5-f1b432a7877a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "14df2e73-0af0-4321-a79f-8ef6fe7a8788"
        },
        "item": {
          "id": "ffc51790-ccbb-4de7-b6e9-77d851891368",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d27b6b22-a20c-4f4c-a022-556d7bfe0634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2172f2d4-d04a-4f5f-941d-f0ee96bf2e28",
        "cursor": {
          "ref": "2b8cea74-6040-4066-b9a1-ce91964f0468",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7db63dd7-bb3f-4f81-a1f9-59c2f7d13bf8"
        },
        "item": {
          "id": "2172f2d4-d04a-4f5f-941d-f0ee96bf2e28",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "187b9f82-586b-4615-88b0-3f387ed7ec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc14f25-8937-4b9f-853a-a7be38867c16",
        "cursor": {
          "ref": "0a686417-cda3-4220-ae47-e84a7de3237a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4324bc95-fbb5-4b78-b133-b63dd8ad65d3"
        },
        "item": {
          "id": "fdc14f25-8937-4b9f-853a-a7be38867c16",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1040c768-5a26-4d5f-9c88-37fa201aa773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20bc4c9-d1b1-4885-9a82-36ce0b0d1010",
        "cursor": {
          "ref": "4e21b71e-0e7b-497e-97b2-6944922d628a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "69e203b1-555e-4a7a-b0dd-3cb402ab2ed7"
        },
        "item": {
          "id": "d20bc4c9-d1b1-4885-9a82-36ce0b0d1010",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e5e5eaf8-9a4a-4aa6-b1b2-de48ada2318d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e18b50-fa9d-45ad-bf43-881e610dc335",
        "cursor": {
          "ref": "b60f4938-336e-4311-9a26-bb8b98e6cd6f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c96c3e24-ce7c-43c5-b564-113e3fd582cb"
        },
        "item": {
          "id": "17e18b50-fa9d-45ad-bf43-881e610dc335",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5c2ab4d7-0979-4903-86fb-c476c37cbac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229077d0-186a-4340-be69-b65b05f5c77b",
        "cursor": {
          "ref": "e53d8db7-7963-4049-bd73-d1ca9ba554cc",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfdce8e8-7f93-444f-9812-35c24ea4abaa"
        },
        "item": {
          "id": "229077d0-186a-4340-be69-b65b05f5c77b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "96d47a48-bf4f-41be-8750-cadf28a9da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e0facc-ea08-47da-970e-ad743b18f44e",
        "cursor": {
          "ref": "05023a97-e66f-4ce8-a7dc-c1e6c85dfa4e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "89e23908-e4ed-4051-bea4-12e5d09a62f6"
        },
        "item": {
          "id": "88e0facc-ea08-47da-970e-ad743b18f44e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3899f76d-f266-492e-a0fd-148e454f1005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b1add1-2943-44eb-8045-9c4554b7402a",
        "cursor": {
          "ref": "d35b1ea0-bd15-49ba-b9e0-eda7cd0c7305",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f72924bb-dca5-408a-874b-e676e983a859"
        },
        "item": {
          "id": "35b1add1-2943-44eb-8045-9c4554b7402a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8646ed07-1360-4c98-8310-6464d1afb87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa0ab5-ebdb-4613-8202-2589178f4c36",
        "cursor": {
          "ref": "71af3048-d56e-43b6-a9e2-4267a39e9633",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "714830a8-be8f-4e49-81bd-25df529d8171"
        },
        "item": {
          "id": "37aa0ab5-ebdb-4613-8202-2589178f4c36",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8b693db7-3d63-4715-adc1-2ff4e287cf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1953a645-ce98-4bf0-a7c9-5426f87a447b",
        "cursor": {
          "ref": "2f55ff1a-65e7-45c5-895c-82e7eaeeae56",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d132aa5-4563-44f5-90b1-349aca3ffecd"
        },
        "item": {
          "id": "1953a645-ce98-4bf0-a7c9-5426f87a447b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e21749c4-5867-4d81-bbe5-77a64f1c7312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb38eec-5241-460b-95b0-fc870365b067",
        "cursor": {
          "ref": "c35eeb95-80bc-4cb0-a01a-ca68694e00e2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4ddb0dc6-e7a9-4882-bb3d-5ed842e889db"
        },
        "item": {
          "id": "3fb38eec-5241-460b-95b0-fc870365b067",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d663a197-c7c3-4d1b-8551-462709845aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0d6545-ca21-4d37-9efd-627556e7fbf0",
        "cursor": {
          "ref": "bdd1ffdb-7c32-4994-9153-bd4c9f19019a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0ba3a794-0468-4f74-ba77-8bc87fed68eb"
        },
        "item": {
          "id": "6f0d6545-ca21-4d37-9efd-627556e7fbf0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "05253cd3-a87a-4cb5-8408-ce5caf9af77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6bf8d9-c0fa-4b49-bd0b-bbc6391c0de4",
        "cursor": {
          "ref": "9dbfe895-4890-44d4-ba59-8ff5a104eee4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f51ce3d7-5932-41be-83e7-5aba180828a6"
        },
        "item": {
          "id": "7b6bf8d9-c0fa-4b49-bd0b-bbc6391c0de4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b760413-a16b-4a69-a4d4-f43b082eaa1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a976ade-331a-4b43-9532-ef8d9749d4c0",
        "cursor": {
          "ref": "0bd90167-5d2a-4461-9814-7d0a045c7d74",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e28e8e61-38ef-49c8-861d-cd176c6f965e"
        },
        "item": {
          "id": "6a976ade-331a-4b43-9532-ef8d9749d4c0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "09cad466-f4ce-40d2-84dc-284c18de42b8",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15847007-559a-41b7-ac03-7eb713afdf4a",
        "cursor": {
          "ref": "cf0eb5a6-4d1b-4477-b452-ab5139b3ced8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "30b402cf-4fa2-4683-a482-afbba442e9e0"
        },
        "item": {
          "id": "15847007-559a-41b7-ac03-7eb713afdf4a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5514151-430e-4f50-88df-bd5382ecfc1a",
          "status": "OK",
          "code": 200,
          "responseTime": 1458,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1badd290-3dc6-4e94-bc0f-d94e3bb7ef08",
        "cursor": {
          "ref": "9268ebaa-05be-42bb-bb7b-3b183edb5a46",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d085c4ad-acc3-4d1e-a7c8-62e4351bef31"
        },
        "item": {
          "id": "1badd290-3dc6-4e94-bc0f-d94e3bb7ef08",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "98eb8328-34ed-4bcc-9677-e4f293b52fe1",
          "status": "OK",
          "code": 200,
          "responseTime": 1534,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1246b-fca6-48b9-bc17-73c048fbb31c",
        "cursor": {
          "ref": "c1f2ae29-47a7-4933-af24-73dd17ca3394",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6fd85c4e-217f-47a5-be10-724da519c84d"
        },
        "item": {
          "id": "11f1246b-fca6-48b9-bc17-73c048fbb31c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4662171d-7fb2-40e5-88bf-89582d1a16b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1246b-fca6-48b9-bc17-73c048fbb31c",
        "cursor": {
          "ref": "c1f2ae29-47a7-4933-af24-73dd17ca3394",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6fd85c4e-217f-47a5-be10-724da519c84d"
        },
        "item": {
          "id": "11f1246b-fca6-48b9-bc17-73c048fbb31c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4662171d-7fb2-40e5-88bf-89582d1a16b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283d551-8e36-484c-880f-bb4a124a251b",
        "cursor": {
          "ref": "897e485d-ca1d-449d-8d67-8b0134fdfbe8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "56a72b64-45e2-4e30-b60e-7404625f852b"
        },
        "item": {
          "id": "f283d551-8e36-484c-880f-bb4a124a251b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e87f8ca2-bacc-4701-a145-095164cb93b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7665064-d6b3-436c-8efe-48e3d10bc762",
        "cursor": {
          "ref": "e10cfa2a-c93c-4ede-9ba4-1a941488d73b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5891dde1-5867-4c1a-a742-81058eb5bb11"
        },
        "item": {
          "id": "b7665064-d6b3-436c-8efe-48e3d10bc762",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b98147f-8d4d-4f15-941b-f3192faf9b28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}